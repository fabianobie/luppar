Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

CONTROLE DE TRAJETÓRIA DE UM ROBÔ MÓVEL OMNI-DIRECIONAL UTILIZANDO UMA
TÉCNICA DE CONTROLE PREDITIVO MULTIVARIÁVEL NÃO-LINEAR
MARILIA C. ANDRADE , ADHEMAR DE B. FONTES E AUGUSTO C. L. DA COSTA
Departamento de Engenharia Elétrica, Universidade Federal da Bahia
Rua Aristides Novis, 02  Bairro Federação - CEP 40.210-630  Salvador - BA
E-mails  mariliacandrade@yahoo.com.br adhemar@ufba.br augusto.loureiro@ufba.br

Abstract
 This paper presents a non-linear, multivariable model predictive control (MPC) performance in a simulated omnidirectional
mobile robot. The non-linear multivariable predictive controller used is based on local linear models technique, considering that a process
can be represented by a finite number of models. This technique has been implemented to solve control problems in processes with severe
nonlinearity or with large operation ranges. Models are identified in a near region of a defined operation point and a GPC (Generalized
Predictive Control) is tuned for each point. A metric based on the distance between the current operation point and the selected operation
point of each model is used to obtain the control output signal as a weighting sum of each controller contributions.
Keywords
 Model Predictive Control (MPC), multi-models, mobile robot.
Resumo
 Este artigo apresenta uma avaliação_de_desempenho de um controlador_preditivo multivariável não-linear em um robô_móvel
omni-direcional. O controlador_preditivo multivariável não-linear utilizado baseia-se na técnica de multi-modelos lineares, que tem como
pressuposto a premissa de que um processo pode ser representado por um número finito de modelos. A proposta de multi-modelo vem sendo
utilizada para resolver problemas de controle em sistemas que apresentam fortes não-linearidades ou que trabalham em uma larga faixa de
operação. Modelos são identificados em torno de pontos de operação, criteriosamente escolhidos, e um controlador_preditivo do tipo GPC
(Controle Preditivo Generalizado) é sintonizado para cada ponto. Uma métrica, baseada na distância entre o ponto de operação atual e o
ponto de operação escolhido para cada modelo, é utilizada para ponderar as ações de controle individualmente calculadas por cada
controlador, obtendo-se assim a ação de controle que é enviada ao processo.
Palavras-chave
 .

1

Introdução

Na área de robótica_móvel, a capacidade de prever as
ações de controle futuras tornou-se uma ferramenta
extremamente atraente para o rastreamento da
trajetória de robôs_móveis, pois estes robôs estão
cada vez mais inseridos em ambientes dinâmicos.
O bom desempenho da robótica_móvel depende
fundamentalmente do sistema_de_controle adotado
Inúmeras e variadas estratégias de controle_preditivo,
aplicadas a robôs_móveis, podem ser encontradas na
literatura. Dentre outros, pode-se citar Ramirez et al.
(1999), no qual foi implementado um MPC (Model
Predictive Controller) para navegação de robôs com
algoritmos_genéticos Xianhua et al. (2005) que
apresenta um método para seguimento de trajetória
na qual combina controle_preditivo e lógica_fuzzy e
um esquema para seguimento de trajetória, baseado
em controle_preditivo com redes_neurais, é
apresentado em Gu, Hu (2002).
O robô_móvel AxeBot é um robô_móvel omnidirecional, cujo sistema possui características
dinâmicas fortemente não-linear ao longo da faixa de
operação, com múltiplas entradas e múltiplas saídas
(MIMO  Multiple Input Multiple Output),
acoplamento entre as variáveis e restrições de
operação.
O controle_preditivo pertence a uma classe de
controladores
que,
baseados
em
modelos
matemáticos (Model Predictive Control - MPC) do

ISBN 978-85-8001-069-5

processo a controlar e uma função objetivo,
determina um conjunto de ações de controle de forma
a tornar ótimo o comportamento futuro da variável
controlada.
As técnicas de controle_preditivo ganharam destaque
em relação s outras técnicas, conforme Almeida et
al. (2000) por serem robustas a erros_de_modelagem
possuírem fácil extensão para o caso multivariável
serem aplicáveis em processos de fase não mínima,
instáveis em malha_aberta e com atraso_de_transporte
e permitirem incorporar o tratamento_de_restrições.
O Controle Preditivo Multi-modelo é uma estratégia
de controle que, utilizando um número finito de
modelos, possibilita representar o sistema real em
uma determinada faixa de operação. A proposta de
multi-modelos vem sendo utilizada para resolver
problemas de controle em sistemas que apresentam
fortes não_linearidades ou que trabalham em uma
larga faixa de operação. Neste caso, a utilização de
um único modelo_linear não apresenta resultados
satisfatórios de acordo com Arslan et al. (2004) e
Fontes et al. (2007).
Neste trabalho, aplica-se o controlador_preditivo
multivariável, multi-modelo para o controle de
velocidade das rodas de um robô_móvel omnidirecional, AxeBot, simulado no MATLAB 
Simulink , modelo desenvolvido por Nascimento et
al (2009).
Para implementar a estratégia de controle multimodelo, modelos lineares foram identificados na
vizinhança de pontos de operação, previamente
definidos dentro da faixa de operação do sistema.

680

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

Para cada ponto de operação, projetou-se um
controlador_preditivo do tipo Generalized Predictive
Control (GPC), com os parâmetros de sintonia
escolhidos de forma que todos atendam aos mesmos
objetivos de controle. Obtém-se a ação de controle,
enviada ao processo, por meio da métrica da
distância (Cavalcanti, 2008 Fontes et al., 2007), que
avalia a distância entre o modelo no ponto de
operação atual e no ponto de operação definido, para
ponderar as ações de controle, individualmente
calculadas por cada controlador.
2

Modelos lineares são obtidos nas vizinhanças de
pontos de operação, utilizando-se um método de
estimação_de_parâmetros adequado. A modelagem
consiste em calcular os parâmetros, coeficientes das
equações (2), (3) e (4), do modelo ARIMAX de uma
planta de múltiplas entradas e múltiplas saídas
(MIMO).
2.2 Algoritmo de Controle GPC

Controle Preditivo Generalizado
Multivariável Multi-modelo

Para processos_não-lineares e que operam em uma
larga faixa de operação, a técnica de controle
preditivo multi-modelo tem apresentado resultados
satisfatórios. Esta abordagem consiste basicamente
em selecionar, na faixa de operação de interesse,
alguns pontos de operação do processo e identificar
vários modelos válidos para as vizinhanças de cada
ponto de operação. Para cada modelo, desenvolve-se
um controlador, sintonizado separadamente.
Utilizam-se métodos que avaliam a distância entre os
modelos para a obtenção da ação de controle_global.
A seguir será apresentado o desenvolvimento teórico
da modelagem, do algoritmo de controle e da métrica
utilizada.

Para o caso MIMO, temos matrizes polinomiais, em
que a matriz A(q-1)  Rqxq, B(q-1)  Rpxq e C(q-1) 
Rqxq. Neste artigo, a matriz A(q-1)  Rqxq é diagonal,
pois considerou-se que não há interferências entre as
saídas do processo.
Algumas manipulações matemáticas são utilizadas
para simplificar a obtenção do controlador GPC,
 1 .
como a utilização do C (q 1 )  1 e  q . A(q 1 )  A
(q )
Com estas modificações a equação (1) é representada
como segue

A(q 1 ) y (k )  q  d B(q 1 ) p u (k  1) + e(k )

O controlador desenvolvido baseia-se em múltiplos
modelos lineares do tipo ARIMAX (Auto-regressive
Integrated, Moving Average with Exogenous Signal),
com p-entradas e q-saídas. Obtém-se o modelo
ARIMAX a partir do modelo ARMAX, com a
inclusão de uma ação integral no controlador. O
modelo ARIMAX é representado pela equação (1).
(1)

Em que
q-1 representa o operador de atraso (z-1)
y(k)  Rq é o vetor de saída do processo
d é o retardo, em múltiplos do período de
amostragem (d  0)
u(k)  Rp é o vetor de entrada do processo
e(k)  Rq é o vetor de ruído branco média zero e
variância 2
  1  q  1 é a ação integral no controlador.

(5)

Assim a saída predita j-passos  frente, com j  d, é
dada por

A(q 1 ).y(k + j)  B(q 1 ). p u(k  d + j 1) + e(k + j)

2.1 Modelagem

A(q1).q .y(k)  qd .B(q1).p .u(k 1) + C(q1)e(k)

em que na, nb e nc são os graus dos polinômios
A(q-1), B(q-1) e C(q-1), respectivamente.

(6)

A equação (7), Diofantina matricial, permite separar
as informações passadas e futuras, conforme
Camacho (2004).

E j(q 1 )Ã(q1 )  I qxq  q  j F j(q 1 )

(7)

Pré-multiplicando a equação (6) por E(q-1), e
substituído os valores da equação (7), obtêm-se os
vetores da resposta livre (yl) e resposta forçada,
conforme equação (8).


y ( k + j )  H 1 ( q 1 )  u 1 ( k + j  d  1) +
H 2 ( q 1 )  u 2 ( k + j  d  1) +
H 3 ( q 1 )  u 3 ( k + j  d  1) +

(8)

yl q ( k )

Em que H (q 1 )  E j (q 1 ).B (q 1 )  yl  F j ( q 1 ) y (k ) e


Representam-se as matrizes polinomiais A(q-1), B(q-1)
e C(q-1) pelas equações (2), (3) e (4).

A( q 1 )  I qxq + A1.q 1 + A2 .q 2 + ... + Ana .q  na

(2)

B(q 1 )  B0 + B1 .q 1 + B2 .q 2 + ... + Bnb1 .q  ( nb1)

(3)

C (q 1 )  I qxq + C1 .q 1 + C2 .q 2 + ... + C nc .q  nc

(4)

ISBN 978-85-8001-069-5

y  H .u + yl .
O Controlador GPC calcula uma sequência de ações
de controle de forma a minimizar uma função
objetivo multi-passos, conforme equação (9).

681

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

J

Ny

2



y (k + j )  r (k + j ) +  u (k + j  1)

j  N1

R

NU
j1

2

(9)
Q

wi 

i

 i  1, 2 ,..., NOP

NOP





(14)

j

j 1

em que
(k+j) é a predição j-passos  frente da saída do
sistema, baseada em informações disponíveis até o
instante k
N1 representa o horizonte mínimo de predição
NY representa o horizonte máximo de predição
NU representa o horizonte de controle
R e Q são matrizes positivas definidas de ponderação
sobre o sinal de erro e de controle, respectivamente
r(k+j) é a trajetória de referência futura.
A lei de controle, no caso sem restrições, é obtida a
partir da minimização da função objetivo, conforme
equação (10).

Quanto mais próximo o valor atual do sistema (yCOP)
estiver do ponto de operação (yi), maior o fator de
ponderação para este ponto de operação (wi). O
somatório dos fatores de ponderação é sempre igual a
um. Para o caso multivariável, existem pxNOP saídas
de controle computadas. Convém observar que nesta
estratégia de controle não há chaveamento entre os
controladores. A nova lei de controle é uma
combinação de ponderações das ações de controle,
calculadas por cada controlador (i), utilizando a
equação (15).
NOP

u j 



w i , j  u i , j  j  1, 2 ,..., p

(15)

i 1

 u  ( H T H + Q ) 1 H T ( r  y l )

(10)
3

O sinal de controle enviado ao processo são os três
primeiros elementos do vetor e é obtido pela equação
(11).

u  G( r  yl )

(11)

sendo G as três primeiras linhas da matriz
( H T H + Q ) 1 H T , dado que cada linha se refere a uma
entrada do sistema.
2.3 Métrica da distância
A métrica da distância, apresentada por Cavalcanti,
2008) e Fontes et al. (2007), calcula a distância entre
o ponto de operação atual e o ponto de operação
(PO) definido. A distância entre o primeiro e o
último ponto de operação é calculada pela equação
(12).
d 1 , NOP  y NOP  y 1

2

O Robô AxeBot

O robô_móvel, AxeBot, foi desenvolvido pelo grupo
de robótica do departamento de Engenharia Elétrica
da Universidade Federal da Bahia (UFBA), com o
intuito de participar de competições de Futebol de
Robôs. Ele é composto de três rodas omnidirecionais dispostas 120 entre si. A Figura 1
apresenta vista superior do robô, modelado no Solid
Edge. A utilização de rodas omni-direcionais permite
que o robô se movimente em qualquer direção sem a
necessidade de se reorientar. O sistema de atuação do
Axebot é composto por motores de corrente contínua
(CC), controlados por duas placas BrainStem Moto
1.0. Sensores de rotação, encoders, acoplados a estes
motores, medem a velocidade_angular de cada motor
(em rpm), que é convertida no programa em
velocidade das rodas (rads).

(12)

Em que NOP é o número de pontos de operação.
Para cada ponto de operação, um modelo é
identificado e um controlador é desenvolvido e
sintonizado.
Calcula-se a distância  i a partir da relação entre a
distância total d1,NOP, equação (12), e a norma
quadrática da diferença entre o valor atual (COP) e o
valor do i-ésimo ponto de operação, conforme
equação (13).
i 

d 1 , NOP
y COP  y i

 i  1, 2 ,..., NOP

(13)

2

Para cada ponto de operação, obtém-se um fator de
ponderação (wi), conforme equação (14).

ISBN 978-85-8001-069-5

Figura 1. Modelo em Solid Edge - vista superior

4

Resultados Simulados AxeBot

As variáveis manipuladas e as variáveis de processo
escolhidas para obtenção dos modelos deste robô são

682

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

as tensões dos três motores de CC, e as velocidades
angulares das três rodas.
A partir das velocidades angulares das rodas do robô,
o controlador_preditivo determina as ações de
controle u1(k), u2(k) e u3(k) que acionam as três rodas
do Robô AxeBot. A Figura 2 representa um diagrama
de blocos do controle baseado na dinâmica, ou seja,
fechando a malha nas velocidades angulares das
rodas.

(PRS) adequados, não-correlacionados. Estes sinais
do tipo PRS são sinais de amplitude variável em
torno do ponto de operação e largura variável, entre 2
e 36*Ta. Estes sinais permitem que seja possível
excitar tanto as dinâmicas rápidas quanto as
dinâmicas lentas do sistema a ser modelado.
Para cada ponto de operação foi obtido um modelo
polinomial que melhor representa o sistema.
4.3

Validação dos Modelos

Obteve-se a validação dos modelos por meio da
comparação gráfica das respostas a um novo sinal
PRS e ao degrau, aplicados nas entradas do robô.
Aplicando-se um degrau de tensão nas três entradas
do robô, e, após estabilização deste, aplica-se um
novo degrau de 10 da tensão de entrada. Em
seguida, compara-se a resposta do robô simulado
com a resposta do modelo, conforme Figura 3.
Figura 2. Diagrama de Blocos - Controlador GPC MIMO

Os itens seguintes apresentam a sequência para
obtenção do controlador_preditivo multi-modelo.
4.1 Pontos de Operação Escolhidos
O Robô utilizado pode operar com tensões de -6V a
6V. Dentro desta faixa, foram escolhidos quatro
pontos de operação, conforme mostrado na Tabela 1.
Tabela 1. Quatro pontos de operação do robô AxeBot.

u1u2u3

Saída (velocidade
angular das rodas)
1 2 3

2,4V
3V
4V
5V

63,15 rads
152,85 rads
302,35 rads
451,85 rads

Entrada

PO
1
2
3
4

Figura 3. Comparação da resposta simulada da roda 1 ao degrau
aplicado na entrada, com a resposta do modelo

A Figura 4 apresenta a resposta das rodas, do sistema
real (robô simulado) e do modelo, aos sinais PRS
descorrelacionados, aplicados s três rodas do robô.

4.2 Identificação dos Modelos
A partir das respostas ao degrau, com desvios de
10 após acomodação do sistema, obtém-se o
Tempo de Resposta (Tr) do sistema em malha_aberta.
A Tabela 2 representa a relação de Tr máximo e
mínimo obtidos, em função do seu ponto de operação
(PO).
Tabela 2. Tempo de Resposta para cada ponto de operação

PO

Tr máx (ms)

Tr mín (ms)

1
2
3
4

103,00
82,00
68,00
66,00

74,00
66,00
58,00
54,00

O período de amostragem (Ta) foi escolhido,
baseando-se no menor Tempo de Resposta (Tr)
obtido, dentre os pontos de operação escolhidos.
Para a modelagem paramétrica do sistema em malha
aberta, utilizou-se Ta  Tr30 5430  1,8ms e
aplicou-se, simultaneamente nas três entradas do
sistema, sinais do tipo Pseudo Random Signal
ISBN 978-85-8001-069-5

Figura 4. Comparação da resposta simulada das rodas aos sinais
PRS aplicados nas entradas, com a resposta do modelo

A Tabela 3 relaciona os erros médios quadráticos
para a resposta ao degrau e para a resposta ao sinal
PRS em cada ponto de operação do robô AxeBot.
Tabela 3. Relação dos erros médios quadráticos normalizados.

m Degrau
PO
1

Roda 1, 2 e 3
0,220

m PRS
Roda 1
0,039

Roda 2
0,052

Roda 3
0,032

683

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

2
3
4

0,177
0,182
0,178

0,019
0,029
0,02

0,011
0,015
0,014

0,021
0,023
0,026

velocidades geram, avaliando o segmento da
trajetória pelo robô.

4.4 Sintonia dos Controladores

Trajetória Retilínea

Cada controlador foi sintonizado individualmente. A
sintonia consistiu em encontrar os valores dos
elementos da matriz Q (fator de ponderação da ação
de controle) de forma que o sistema atinja o valor
final desejado em NY passos, definido como
horizonte de predição. Para todos os modelos, foi
utilizado o NY10 que proporciona uma resposta três
vezes mais rápida quando comparada com a resposta
em malha_aberta. Os valores de sintonia estão
representados pela Tabela 4.

Neste caso, fez-se 1ref variar de 0 até o 500rads
negativos, permitindo passar por todos os pontos de
operação. Da mesma forma, o 2ref variou de 0 até
500rads positivos. Mantendo-se o valor da
velocidade 3ref igual a zero, gerou-se uma trajetória
retilínea, com um ângulo de 60 em relação ao eixo
X.
Pela Figura 6, é possível perceber que o controlador
rastreia o degrau em um tempo de aproximadamente
18 segundos, o que representa 10 vezes o tempo de
amostragem e 13 do tempo de resposta do sistema
em malha_aberta, valores esperados para o
controlador GPC desenvolvido.

Tabela 4. Sintonia da ponderação de controle  matriz Q

PO
1
2
3
4

U1

U2

U3

4000

4000

4000

4000

4000

4000

4000

4000

4000

4000

4000

4000

4.5 Rastreamento de Trajetórias
Para o teste do controlador multi-modelo, foram
geradas velocidades angulares de referência com uma
larga faixa de operação, passando por todos os
pontos de operação.
Neste trabalho foi utilizado o gerador de trajetória
baseado em uma técnica de geração de trajetórias por
meio de funções parametrizadas, denominadas de
comportamentos. Cada comportamento define um
trecho de trajetória. São quatro os tipos de trajetórias
geradas no plano Trajetórias do tipo linear,
trajetórias de caminho livre, trajetórias elipsoidais e
trajetórias baseadas em comportamentos elipsoidais e
lineares (Franco, 2007).
Este gerador fornece as componentes da posição de
referência do robô no plano XY. A partir destes
valores de referência de X, Y e , bem como do
conhecimento prévio das características cinemáticas
do robô, foram geradas as velocidades angulares de
referência (ref). Estes valores de referência de  são
então
enviados
ao
controlador
preditivo
multivariável, multi-modelo, conforme representado
no diagrama_de_blocos da Figura 5.

Figura 6. Controle das velocidades angulares das rodas trajetória
retilínea

A Figura 7 mostra que a trajetória retilínea foi
rastreada com um erro pequeno em relação 
trajetória de referência.

Figura 7. Rastreamento da trajetória retilínea ( esquerda) e
esforço de controle ( direita)
Figura 5. Diagrama de blocos da geração de trajetória e aplicação
do controle

Desta maneira, apesar de ser um controlador de
velocidade, pode-se analisar a trajetória que estas

ISBN 978-85-8001-069-5

Trajetória Elíptica
Neste teste, gerou-se uma trajetória elíptica cujas
velocidades angulares variavam entre os pontos PO1,

684

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

PO2 e PO3 e comparou-se esta mesma trajetória
rastreada pelo controlador multi-modelo (MM) e pelo
controlador com um único modelo (MU),
escolhendo-se o modelo no PO1 para representar um
modelo único para o sistema em questão. Os
resultados podem ser vistos nas figuras a seguir.

uma trajetória com um tempo 6 vezes menor que o do
primeiro teste. Os resultados podem ser analisados
nas figuras a seguir.

Figura 12. Controle de 1 trajetória em 8 teste 1 ( esquerda) e
teste 2 ( direita)
Figura 8.Controle de 1 trajetória elíptica MM ( esquerda) e MU
( direita)

Figura 9. Controle de 2 trajetória em elíptica MM ( esquerda) e
MU ( direita)

A Figura 12, assim como foi também observado para
as velocidades angulares da roda 2 (2) e da roda 3
(3), mostra que, para o segundo teste, como o
tempo para percorrer a trajetória é muito curto, as
variações dos degraus também são curtos. Por este
motivo, o tempo que o degrau se mantém constante é
menor que o tempo de respostaacomodação do
controlador. O controlador GPC habilita a malha para
rastrear degraus e nesse caso, o valor de setpoint do
controlador é modificado antes de estabilizar o
sistema, com isso seria necessário uma nova sintonia,
para que o controlador tenha um tempo de resposta
mais adequado. Percebe-se que, para tempos mais
longos entre um degrau e outro, teste 1, o controlador
consegue acompanhar bem o valor de referência.
O controle das velocidades angulares das rodas do
robô em estudo possibilitou o rastreamento da
trajetória em oito para os casos de tempo longo e
tempo curto para percorrê-la. Como o controlador é
baseado na dinâmica do robô, para o teste 2, houve
desvios pequenos na trajetória devido s variações
bruscas de velocidade.

Figura 10. Controle de 3 trajetória em elíptica MM ( esquerda)
e MU ( direita)

Figura 11. Rastreamento de trajetória elíptica MM ( esquerda) e
MU ( direita)

Trajetória em Oito
Para a trajetória em oito, também foram realizados
dois testes, porém ambos iniciando com velocidade
constante em torno de um dado valor para,
posteriormente, variar as velocidades em torno deste
ponto de operação. A diferença entre os dois testes
está no tempo para percorrer a trajetória. No primeiro
teste, ao gerar a trajetória, escolheu-se o tempo bem
longo para percorrê-la, em torno de 600 vezes o
tempo de amostragem. No segundo teste, gerou-se
ISBN 978-85-8001-069-5

Figura 13. Rastreamento de trajetória em oito com tempo longo
para percorrer a trajetória ( esquerda) e tempo curto para
percorrer toda a trajetória ( direita)

Trajetória Livre
O gerador de trajetória utilizado permite elaborar
trajetórias livres a partir de pontos X e Y no espaço.
Foram feitos os mesmos testes realizados para a
trajetória em oito. Os gráficos das trajetórias estão
representados a seguir e as mesmas análises
realizadas para a trajetória em oito podem ser
consideradas para este caso.

685

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

Cavalcanti,
A.L.O.
(2008).
Análise
e
Desenvolvimento de Controladores Preditivos
Multivariáveis Baseados em Multi-modelo
Bilineares. Tese de Doutorado em Engenharia
Elétrica, UFRN, Natal, RN, Brasil.

Figura 14. Rastreamento de trajetória livre com tempo longo para
percorrer a trajetória ( esquerda) e tempo curto para percorrer
toda a trajetória ( direita)

Conclusões
Este artigo apresentou uma abordagem do
controlador multi-modelo para controle de
velocidade de um robô omni-direcional, com larga
faixa de operação. Resultados de simulações
mostraram que o robô seguiu trajetórias previamente
definidas, com baixo esforço de controle.
Entretanto, o controlador baseado na dinâmica do
robô, para rastreamento_de_trajetória, gera erros em
regime estacionário quando a velocidade é não nula
ou quando ocorrem mudanças bruscas de posição
como pode ser verificado nas trajetórias em oito e
livre apresentadas anteriormente, podendo ser um
grande empecilho para aplicações práticas. Para
eliminar este erro, torna-se necessário fechar a malha
na postura do robô, utilizando controladores
baseados na cinemática e na dinâmica, em cascata.
Outra técnica interessante a ser implantada é a
utilização de um sistema de visão, informando a
posição do robô no espaço. A partir destas
informações e do conhecimento prévio das
características cinemáticas do robô, propõe-se um
modelo paramétrico não-linear para o mesmo.

Fontes A. B. (2002). Desenvolvimento e Avaliação
de Controladores Preditivos Baseados em
Modelos Bilineares, PhD Thesis, UFRN, Natal.
Fontes, A. B., Maitelli, A. L. and Cavalcanti, A. L.
O. (2007). Generalized Predictive Control Based
In Multivariable Bilinear Multimodel, Proc. of
8th IFAC Symposium on Dynamics and Control
of Process Systems.
Franco, A.C.S. (2007). Geração e Controle de
Trajetória de Robôs Móveis Omnidirecionais.
Dissertação de Mestrado em Mecatrônica,
UFBA, Salvador, BA, Brasil.
Gu, D. and Hu, H. (2002), Neural predictive control
for a car-like mobile robot, Robotics and
Autonomous Systems.
Nascimento, T.P., Paim, C.C., Costa, A.C.P.L.,
(2009) Controle De Trajetória De Robôs Móveis
OmniDirecionais
Uma
Abordagem
Multivariável, Dissertação de Mestrado, UFBA,
Bahia.
Ramirez, D. R., Limon, D., Gomez-Ortega, J. and
Camacho, E. F. (1999). Nonlinear MBPC for
mobile robot navigation using genetic
algorithms,
International
Conference
on
Robotics  Automation, Detroit, Michigan.
Xianhua, J., Motai, Y. and Xingquan, Z. (2005).
Predictive fuzzy control for a mobile robot with
nonholonomic constraints, 12th International
Conference on Advanced Robotics, ICAR 05.

Agradecimentos
Os autores agradecem ao Programa de Pós
Graduação de Engenharia Elétrica da Universidade
Federal da Bahia.
Referências Bibliográficas
Almeida, E. Rodrigues, M.A.  Odloak, D. (2000).
Robust Predictive Control of a Gasoline
Debutanizer Column. Brazilian Journal of
Chemical Engineering, São Paulo.
Arslan, E. Çamurdan, M. C. Palazoglu, A.  Arkun,
Y (2004). Multi-Model Control of Nonlinear
Systems Using Closed-Loop Gap Metric.
Proceedings of the 2004 American Control
Conference, Boston.
Camacho, E. F. and Bordons, C. (2004). Model
Predictive Control, Springer-Verlag Limited.

ISBN 978-85-8001-069-5

686