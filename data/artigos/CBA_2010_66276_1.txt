XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

ANÁLISE TEMPORAL DE CONEXÕES COM TECNOLOGIAS WEB APLICADAS NA SUPERVISÃO
DE UM ESQUEMA REGIONAL DE ALÍVIO DE CARGA - ERAC
LÁZARO E. SILVA, JULIANO C. MIRANDA, DENIS V. COURY
Laboratório de Sistemas de Energia Elétrica - LSEE, Escola de Engenharia de São Carlos - EESC,
Universidade de São Paulo - USP
Av. Trabalhador São Carlense, 400 13.566-590 São Carlos-SP Brasil
E-mails lazaro@usp.br, coelhojm@sel.eesc.usp.br, coury@sc.usp.br
Abstract This article reports an analysis of a web application for the supervision of a Load Relief Scheme as a way to investigate the use of Internet protocols to access equipment of a Electric Power System. The monitoring system uses free web tools
such as PHP, Ajax, Jquery and MySQL to access protective relays and check the open or closed status of the equipment, recording historical information of events regarding a Load Relief Scheme. The system was implemented on an intranet, and the interface is portable to different browsers. To analyze the connection, tests were carried out concerning the equipment, measuring the
time between the sending and receiving messages and the traffic generated by this access. Another important research point is in
the time between requests for equipment, which allowed measuring the use of the system by observing the criticality of the application. The tests indicate the importance of developing web applications with results within the time required for that kind of
application.
Keywords ERAC, Digital Relay Protection, Time Intelligence System, Web Monitoring
Resumo O presente artigo relata uma análise das conexões realizadas em uma aplicação Web de supervisão de um Esquema
Regional de Alívio de Carga como forma de investigar o uso de protocolos da Internet para acesso a equipamentos do Sistema
Elétrico de Potência. O sistema de supervisão utiliza ferramentas Web gratuitas como PHP, Ajax, Jquery e MySQL para acessar
relés_de_proteção e verificar o estado aberto ou fechado de equipamentos, registro de informações históricas da operação e anunciação de eventos no que tange a um Esquema Regional de Alívio de Carga. O sistema foi aplicado sobre uma rede Intranet,
sendo que a interface é portável para diversos browsers. Para análise das conexões foram realizados testes de acesso aos equipamentos, medição do tempo entre o envio e retorno das mensagens e o tráfego gerado por estes acessos. Outro fato importante
da pesquisa está no tempo entre as requisições aos equipamentos, o qual possibilitou medir o emprego do sistema observando a
criticidade da aplicação. Os testes realizados indicam a pertinência do desenvolvimento de sistemas Web com resultados dentro
das necessidades de tempo para este tipo de aplicação.
Palavras-chave 

1

equipamentos. Para tal, utiliza-se de conexões socket
e Ajax com protocolos HTTP e Telnet.
O presente artigo relata uma análise_temporal das
conexões realizadas a relés digitais do SEP como
forma de avaliar a influência desses sistemas sobre o
tráfego na rede, bem como, o tempo de resposta das
requisições geradas por um sistema de supervisão de
um Esquema Regional de Alívio de Carga (ERAC).
Os testes realizados permitem pronunciar, quanto 
capacidade, dos sistemas Web, de atender a requisitos
de tempo e tráfego para atuarem no SEP.

Introdução

A World Wide Web (WWW) se tornou uma via conveniente para acesso s informações devido ao fato
dos browsers serem capazes de integrar diferentes
serviços de rede em uma única e amigável interface
com o usuário. Sua utilização no Sistema Elétrico de
Potência (SEP) tem crescido. QIU  GOOI (1998) e
QIU B. , GOOI, LIU,  CHAN (2002) relatam o
desenvolvimento de um sistema Web como facilitador do acesso s informações aquisitadas por um
sistema SCADA (Supervisory Control and Data Aquisition). O artigo descreve que as necessidades
operacionais e comerciais da indústria podem ser
simplificadas pela implementação de sistemas de
informação, que direcionem o acesso  informação.
AYDOGMUS  AYDOGMUS (2009) descreve um
sistema Web desenvolvido para oportunizar o acesso
a um motor localizado no laboratório da Universidade de Firat na Turkia por intermédio de um sistema
SCADA. Em continuidade s pesquisas relatadas
SILVA, MIRANDA, CHEMIN NETO, COURY, 
OLESKOVICZ (2008), SILVA, MIRANDA,
CHEMIN NETO, COURY,  OLESKOVICZ
(2008) desenvolvem sistemas que acessam relés
utilizando
os
protocolos
presentes
nestes

2 Ferramentas Web Utilizadas
Para o desenvolvimento de conteúdo para a Web é
necessário um servidor que implemente o protocolo
utilizado pela WWW, o HTTP (HyperText Transfer
Protocol). Este servidor deve ser capaz de receber
requisições, processá-las e responder com o conteúdo
solicitado.
2.1 HTTP
O HTTP, atualmente na versão 1.1, foi reestruturado
para atender a grande demanda de conteúdo que a
Internet necessita. Na maneira mais comum de operação do HTTP, o cliente estabelece uma conexão
1287

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

TCP1 com o servidor aguardando conexões na porta
80. Estabelecida a conexão, o cliente envia uma mensagem composta da operação a ser realizada, argumentos e parâmetros. Recebida a requisição, o servidor a processa e gera uma mensagem de resposta que
é enviada pela mesma conexão e, dependendo dos
parâmetros da requisição, encerra a conexão
(FOROUZAN, 2008).
A requisição e resposta mais comum trocada entre cliente e servidor é o método GET. Este método
solicita ao servidor que envie uma página HTML.
Um cliente que deseja acessar uma página Web
precisa de seu endereço URL. A URL (Uniform Resource Locator) é um padrão para especificação de
informação na Internet.

O JavaScript é uma linguagem que permite utilizar programação no navegador. Criada pela Netscape
em 1995, com o objetivo de atender principalmente a
validação de formulários e interação com o site, são
scripts interpretados no browser do cliente com
grande versatilidade e utilidade ao lidar com ambientes em árvore, como o HTML (TANENBAUM,
2003).
2.5 Hypertext Preprocessor - PHP
Um servidor Web, além de responder as requisições
dos clientes, oferece diversos recursos para capacitar
a construção de conteúdo para Internet. Dentre os
recursos de compatibilidade com o servidor Apache,
destaca-se o PHP. O PHP é uma linguagem de script
Open Source de ampla utilização, interpretada e que
é especialmente interessante no desenvolvimento
para a Web e pode ser mesclada dentro do código
HTML. O objetivo principal da linguagem é permitir
a desenvolvedores escrever páginas que serão geradas dinamicamente no servidor formatando seus retornos em código inteligível pelo navegador.
Trata-se de uma linguagem extremamente modularizada, o que a torna ideal para instalação e uso em
servidores Web. Além disso, destaca-se a extrema
facilidade com que o PHP lida com servidores de
base de dados como MySQL, PostgreSQL, Microsoft
SQL Server e Oracle (SICA, 2006).
Entre as principais características da linguagem
PHP, merecem destaque
 código aberto
 software_livre
 multiplataforma
 eficiência - consome poucos recursos
 acesso a bancos de dados - acesso nativo aos
principais bancos de dados
 processamento_de_imagens.

2.2 Servidor Apache
O Servidor Apache se destaca como um dos principais servidores Web livre, com suporte a Perl, PHP
(Hypertext Preprocessor), CGI (Common Gateway
Interface), SSL (Secure Sockets Layer) entre outros.
O servidor Apache é o responsável por mais de
uma dezena de projetos envolvendo tecnologias de
transmissão via Web, processamento de dados e execução de aplicativos distribuídos. Suas funcionalidades são mantidas através de uma estrutura de módulos com versões para os sistemas_operacionais Windows, Novell Netware, OS2 e diversos outros do
padrão POSIX2 (Unix, Linux, FreeBSD) (TIBET,
2001).
2.3 SSL
A Internet, quando chegou ao público era utilizada
apenas para distribuir conteúdo estático. Porém, em
pouco tempo, surgiu a necessidade de empregá-la em
transações financeiras, como a compra de mercadorias por cartões de crédito, transações bancárias online
e para o mercado de capital eletrônico. O SSL (Secure Socket Layer) emergiu para garantir segurança na
Web usando de algoritmos de compactação, criptografia de chave pública e chave simétrica para imprimir
sigilo,
integridade
e
autenticação
(FOROUZAN, 2008).

2.6 Mysql
O sistema gerenciador de banco_de_dados MySQL é
um servidor robusto que utiliza a linguagem SQL
(Structured Query Language). Pode ser usado em
sistemas de produção com alta carga e missão crítica
e também ser embutido em programa de uso em massa (AB, 2003).
O programa MySQL é de licença dupla. Os usuários podem escolher entre usar o programa MySQL
como um produto OpensourceFree Software ou
comprar uma licença comercial padrão da MySQL
AB. É mandatória a aquisição de uma licença quando
a utilização do software possuir um propósito comercial. As principais características do MySQL são
 portabilidade
 compatibilidade
 excelente desempenho e estabilidade
 pouca exigência quanto a recursos de hardware

2.4 HTML e JavaScript
Para ter acesso aos recursos publicados na Internet, o
cliente utiliza um browser que interpreta a linguagem
HTML (HiperText Mark-up Language). Esta linguagem se organiza em formato de árvore e utiliza de
hipertextos para dispor o seu conteúdo, permitindo a
publicação de imagens, sons, vídeos, animações e
links que ligam uma página a diversas outras.
1

Transmission Control Protocol - Protocolo de transporte orientado a conexão (FOROUZAN, 2008).
2
Portable Operating System Interface - que pode ser traduzido
como Interface Portável entre Sistemas Operacionais

1288

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.





riscos devido s contingências de perda de geração e
déficit de geração na região.
Atendendo s recomendações do Operador Nacional do Sistema Elétrico (ONS), são definidas filosofias de operação do ERAC, adotando cortes de
acordo com estágios de rejeição de cargas segundo a
frequência atingida e o tempo de instabilidade gerado. A Tabela 1 demonstra os estágios de rejeição de
cargas proposto por KINDERMANN (2007).

facilidade de uso
software_livre
suporte a vários tipos de tabelas (como
MyISAM e InnoDB).

2.7 Ajax
Com o crescimento da Web e o avanço da tecnologia,
muito se discute sobre o que é publicado na Internet
que tenha usabilidade, para que o usuário não passe a
maior parte do tempo esperando seu navegador carregar a página solicitada. Ajax (Asynchronous JavaScript and XML) é o uso sistemático de tecnologias
providas por navegadores, como JavaScript e XML
(eXtensible Markup Language). É uma iniciativa na
construção de aplicações Web mais dinâmicas, criativas e interativas, utilizando-se de solicitações assíncronas de informações, onde apenas o local solicitado
pelo usuário sofrerá modificação. Seu funcionamento
permite solicitações freqentes de dados, porém,
mais leves, pois o conteúdo de retorno não é mais a
página inteira (CABRERA, 2009).

Tabela 1. Filosofia do ERAC

ESTÁGIO

FREQUÊNCIA
AJUSTADA
(HZ)

TEMPORIZAÇÃO
(S)

1
2
3
4
5

58,5
58,2
57,9
57,6
57,3

0,35
0,35
0,35
0,35
0,35

CORTE DE
CARGAS EM 
DA CARGA
TOTAL

7,5
7,5
10
15
15

Fonte KINDERMANN (2007)

Os procedimentos de restabelecimento, quando
da atuação do ERAC, aplicado nas cargas desligadas
deverão ocorrer após a estabilização da frequência
em torno da fundamental por um tempo mínimo de
um minuto.
A lógica do ERAC pode ser efetuada conforme
os blocos funcionais ilustrados na Figura 1.

2.8 JQuery
O Ajax, bem como o Cascading Style Sheets (CSS),
HTML e demais ferramentas interpretadas no browser requerem uma série de compatibilidades, pois o
desenvolvimento dessas aplicações necessita da evolução dos navegadores. Com isso, frameworks estão
disponíveis para ajudar desenvolvedores a se concentrarem na lógica dos sistemas Web e não nos problemas de incompatibilidade dos navegadores atuais
(RESIG, 2009). Suas principais funcionalidades são
 resolução da incompatibilidade entre os navegadores
 redução de código
 reusabilidade do código através de plugins
 utilização de uma vasta quantidade de plugins
 trabalha com Ajax e Document Object Model (DOM)
 implementação segura de recursos do CSS.

Figura 1. Implementação do ERAC

Descrição dos blocos funcionais
1. Constituído de um relé com os vários estágios, ajustes de frequência, de acordo com a
Tabela 1.
2. Lógica do ERAC para atuar abrindo os disjuntores na sequência dos estágios, ajustes de
frequência, através do bloco de controle dos
equipamentos biestáveis.
3. Lógica para controle e supervisão dos equipamentos biestáveis.
4. Esta aplicação foi totalmente desenvolvida em
ambiente laboratorial, sendo que, para o momento, os equipamentos de pátio, disjuntores,
não estavam disponíveis para receber os comandos de abertura ou fechamento e fornecer
as informações de estado. A solução encontrada foi utilizar um relé digital para simular
os equipamentos supracitados, conforme descreve
MIRANDA,
CHEMIN
NETO,
OLESKOVICZ,  COURY (2007).

3 O Caso em Estudo
Da prática, tem-se que o SEP opera em estado de
equilíbrio de potência gerada e consumida, estabelecendo sua operação em regime_permanente para uma
dada frequência. Porém, este sistema está comumente
sujeito a distúrbios onde, para alguns casos, faz-se
necessário o corte de cargas para se restabelecer o
equilíbrio do SEP. Para a realização deste, implementam-se lógicas de controle, visando o corte de
cargas e restabelecimento do sistema, denominada
por ERAC. O corte de cargas deverá ser o menor
possível, e deve atender a critérios de priorização,

1289

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

5. Restabelecido o equilíbrio de carga e geração,
isto é, a normalidade do SEP, as recomposições das cargas podem ocorrer manualmente
(bloco 3) ou por processo automatizado.

1 do fabricante A. Analisando o tráfego na rede em
uma conexão remota com o software proprietário,
notou-se que o fabricante A possui um WebServer
implementado no relé, o qual disponibiliza relatórios
em HTML de informações de suporte ao usuário,
informações do equipamento, um mapeamento da
memória do protocolo ModBus, relatório de faltas,
registro de eventos e os estados dos operadores lógicos. Com este relatório, foi possível obter os dados
através de uma requisição Ajax, demonstrando a variação de frequência do sistema.
Para a leitura dos estados simulados no relé do
fabricante B, analisou-se o software proprietário e
seus programas de configuração e constatou-se que
este equipamento mantém a porta 23 do serviço Telnet aguardando conexões. Através de um socket foi
possível estabelecer conexões, autenticar e enviar
comandos via HTTP.
Neste ínterim, toda conexão HTTP, possui a característica de abrir um canal de comunicação, trafegar os dados solicitados e fechá-lo. Testando a comunicação desta forma, observou-se que a utilização
do sistema proposto fica impraticável, tamanha a
demora no estabelecer da comunicação, autenticação
e envio de comandos, sempre que uma nova solicitação se faz necessária. Para resolver este impasse, a
solução foi manter o socket aberto enquanto o usuário estiver conectado ao sistema. Tal estratégia apresentou resultados interessantes que serão abordados
no item 5.

3.1 Sistema Analisado
A implementação do ERAC, bem como a rede
de comunicação, permitiram o acesso_remoto aos
relés e o desenvolvimento de um sistema de supervisão. A Figura 2 ilustra o funcionamento do sistema
analisado.

Figura 2. Sistema analisado

A função 81, proteção por subfrequência, habilitada no relé digital 1 recebe do simulador de sistemas
de potência, a frequência exemplificando a ligação
do ERAC com o SEP. Neste relé estão configurados
os ajustes dos estágios de subfrequência, sua função é
verificar se algum estágio foi acionado ou restabelecido, que em caso positivo irá comunicar com o relé
2 informando-o da alteração do estágio. No relé 2
estão implementadas as lógicas de corte de cargas e
recomposição do sistema, as quais estarão processando o sinal recebido do relé 1. Executadas as lógicas,
o estado do sistema será atualizado no relé 3, simulador de equipamentos biestáveis, que receberá comandos de abertura ou fechamento de disjuntores simulando a retirada ou a recomposição de cargas das
regiões definidas na lógica do ERAC.
Toda a comunicação entre os relés é realizada
com o envio de mensagens GOOSE3 (Generic Object
Oriented Substation Event) através de uma rede de
comunicação de dados, garantindo a criticidade da
transmissão dessas informações.
Para a implementação do sistema_web_de_supervisão, observaram-se as maneiras de acesso_remoto
que os relés oportunizam. Como são relés de fabricantes diferentes, os quais o sistema deveria realizar
o acesso, inicialmente examinou-se como obter a
leitura da frequência realizada pela função 81 do relé

3.2 Tela do sistema implementado
O sistema analisado está implementado em um servidor Web e de banco_de_dados esperando conexões
HTTP. O cliente requisita o acesso, através de um
browser padrão, digitando a URL do sistema utilizando HTTPS. A página utiliza o protocolo SSL para
criptografar o HTTP, garantindo sigilo na troca de
informações clienteservidor. O usuário previamente
cadastrado e com permissão de acesso faz a autenticação ficando liberado para uso do sistema. A Figura
3 ilustra a tela inicial do sistema.

Figura 3. Interface Inicial do Sistema

A tela inicial apresenta 1 - a frequência do sistema 2 - a região da subestação 3 - um mapa representando as áreas de atuação do ERAC controladas

3

Mensagens de alta prioridade do padrão IEC-61850 capazes de
trafegar dados de alteração de estados e o instante da alteração
MIRANDA (2008) e CHEMIN NETTO (2008).

1290

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

3.3 Esquema de Ensaio Implementado

pela subestação 4 - tem-se uma tabela que demonstra
os estágios de rejeição de cargas, a frequência ajustada, sua temporização e respectivas porcentagens de
corte no atingir dos estágios de rejeição das cargas 5
- encontra-se uma legenda indicando a representatividade dos balões no mapa 6 - está descrita uma
tabela, onde estão as três regiões configuradas e suas
respectivas cidades, que representam os cortes realizados ao atingir os estágios de rejeição 7 - está o
menu principal do sistema.
O ícone inicial carrega as informações necessárias para entender o funcionamento do sistema conforme descrito em 4, 5 e 6. Na opção configurar é
possível cadastrar ou alterar um usuário e cadastrar
uma mensagem, que será enviada ao atingir os estágios de rejeição de cargas ao operador responsável.
Por esta opção, também se discriminam os operadores e administradores do sistema. Para o operador,
reservam-se as funções de visualizar os eventos ocorridos no ERAC e receber a alteração de estado do
disjuntor. O administrador é capaz de executar todas
as atividades desenvolvidas pelo operador, além de
cadastrar novos usuários e definir mensagens de alarme para o operador (Figura 4).

Para o caso em estudo, fez-se a interligação dos
relés 1, 2 e 3 através de uma rede Local Area Network (LAN), utilizando cabeamento de par trançado
Unshielded Twisted Pair (UTP), uma switch
10100Mbps e endereçamento lógico, conforme Figura 6.

Figura 6. Enlace para acesso_remoto em rede Ethernet

Para validar o funcionamento do sistema, este foi
submetido a testes conforme Tabela 2.
Tabela 2. Testes realizados
SITUAÇÃO
CRIAR UM DEFEITO

RESULTADO ESPERADO

ANTES DE COLOCAR
O SISTEMA EM
OPERAÇÃO

DISJUNTOR MANTÉM

FECHAR O
DISJUNTOR 1
MANUALMENTE

SEU ESTADO ABERTO.

RESULTADO
ÊXITO

VERIFICAR O
RECEBIMENTO DO SEU
ESTADO NO SISTEMA
WEB DESENVOLVIDO

ÊXITO

CRIAR UM DEFEITO
SUSTENTADO QUE
SENSIBILIZE O
ESTÁGIO 1

O DISJUNTOR 1 DEVE
SER ABERTO

ÊXITO

RECOMPOSIÇÃO

Figura 4. Tela de cadastro de usuário

RETIRADA DO
DEFEITO

No que tange a elaboração de relatórios de operação do ERAC, o sistema apresenta uma tela de histórico, que possibilita vislumbrar a região desligada,
a frequência do sistema no momento da atuação, seu
estágio, bem como data e hora do evento em ordem
decrescente (Figura 5).

SENSIBILIZAR
TODOS OS ESTÁGIOS
DO ERAC

AUTOMÁTICA
(FECHAMENTO
DISJUNTOR)

ÊXITO

VERIFICAR O
RECEBIMENTO DO SEU
ESTADO NO SISTEMA
WEB DESENVOLVIDO

ÊXITO

Os resultados da Tabela 2 sugerem que o disjuntor 1 seja o equipamento responsável por controlar a
região sobre efeito do estágio 1 do ERAC, o disjuntor
2 do segundo estágio e assim sucessivamente. Cada
situação descrita deve ter como efeito o resultado
esperado, a última coluna descreve o êxito ou fracasso do teste.
Quanto ao funcionamento do sistema, os testes
apontam que se obteve êxito, porém, observa-se na
filosofia do ERAC que a temporização necessária
para sensibilizar os estágios de rejeição de cargas é
de 0,35 segundos. O tempo de atualização da frequência na interface do sistema é de 1,5 segundos
excedendo este tempo, porém, não prejudica a supervisão do sistema, pois a atualização dos estados dos
equipamentos biestáveis é de 0,2 segundos.

Figura 5. Histórico de atuação do ERAC

As atuações dos estágios de rejeição de cargas,
são reportadas, via correio eletrônico, para um ou
mais operadores previamente cadastrados.

1291

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

Neste ínterim torna-se importante a realização de
uma análise das conexões realizadas, pois são equipamentos que estarão atuando no SE em situações
críticas de funcionamento da proteção. Esta análise
permite pronunciar quanto s limitações de tempo de
resposta e tráfego na rede que um sistema web aplicado ao ERAC provoca.

servadas as requisições Ajax para determinar sua
periodicidade. Após os testes foi possível concluir
que o tempo de 1,5 segundos garantia, com margem
de segurança, que toda mensagem enviada teria seu
retorno. A Figura 8 ilustra a medição de tempo_realizada nas 1000 requisições.

5 A Análise Temporal Realizada
5.1 O Ambiente de Teste
O ambiente de teste é composto por um servidor o
qual está instalado o serviço Web apache com módulo para programação em PHP e criptografia SSL.
Neste mesmo servidor encontra-se o banco_de_dados
MySQL. O microcomputador está conectado a um
switch gerenciável4 que se conecta aos relés digitais,
através de uma rede Intranet.

Figura 8. Gráfico das requisições HTTP com Ajax em 1,5s

A média das 1000 requisições realizadas foi de
0,311 segundos, porém, fica evidente no gráfico alguns picos de tempo em torno de 1,3 segundos sem
parâmetro determinado, o que impossibilita diminuir
o tempo entre essas requisições.
O segundo teste realizado explora a conexão
Telnet no relé simulador de equipamentos biestáveis.
Através de um socket é realizado a conexão no relé,
onde comandos de autenticação e posteriormente de
leitura das interfaces de saída são enviados. Para
manter o mesmo parâmetro de comparação, foi utilizado um atraso de 1,5 segundos entre os comandos
enviados ao relé. A Figura 9 ilustra a medição de
tempo_realizada.

Figura 7. Ambiente de Teste

Cabe ressaltar que o relé utilizado para medir a
frequência do sistema se comunica a 10 Mbps, e o
simulador de estado dos equipamentos a 100 Mbps.
5.2 Caracterização dos testes
Para a realização da análise_temporal inicialmente
observou-se o cenário da aplicação, a qual vislumbra
dois tipos de conexão socket e Ajax.
A conexão Ajax requisita a frequência do sistema no relé que implementa a função 81. Esta requisição é realizada pelo acesso a uma página HTML,
onde do retorno se utiliza a frequência do sistema.
A conexão socket acessa o simulador de equipamentos biestáveis e envia comandos s interfaces de
saída do relé, verificando a abertura ou fechamento
dos equipamentos simulados. Para realização da análise foi medido o tempo entre o envio e recebimento
de 1000 mensagens enviadas aos relés.

Figura 9. Gráfico da conexão Telnet com Socket em 1,5s

A média das 1000 requisições realizadas foi de
0,000312 segundos. Observa-se no gráfico que a
maioria dos tempos medidos estão abaixo de 1 milissegundo.
Observado a discrepância de tempo entre conexões Ajax e Socket propôs-se a testar os citados tipos
de conexão em situações inversas. Na realização do
acesso por Ajax no relé via Telnet, estaria utilizando
o HTTP na sua característica de abrir o canal de comunicação, trafegar os dados e fechá-lo. Quando
desenvolvido o sistema, esta alternativa foi
despresada pela demora no estabelecer da
comunicação, autenticação e envio de comandos,
sempre que uma nova solicitação se fizer necessária.

5.3 Testes realizados
O primeiro teste realizado mediu o tempo de saída e
retorno da mensagem Ajax que contém a frequência
do sistema. Esta requisição é composta por uma conexão socket ao relé e o envio do comando GET do
protocolo HTTP, solicitando a página HTML que
contém a frequência do sistema. Para tal, foram ob4

Equipamento em conformidade com a IEC-61850-3 para condições mecânicas, climáticas e imunidade a EMC (Compatibilidade
Eletromagnética), equipamento classe C em conformidade com a
IEC-870-2-2. MIRANDA (2008)

1292

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

Já a conexão socket com HTTP foi possível de
implementar, conforme realizado com o Telnet,
mudando somente a porta de comunicação. Neste
caso, a aplicação mantem uma conexão socket aberta
entre a aplicação e o relé, e envia comandos GET
para obter as informações de frequência do sistema.
Os parâmetros de atraso e número de requisições
foram mantidos, conforme testes anteriores. A Figura
10 ilustra a medição de tempo_realizada.

figuração replica o tráfego de uma porta do switch
em outra. Na porta espelhada conectou-se um microcomputador e ativou-se o software Network Monitoring que construiu o gráfico do tráfego de saída da
interface de rede em que o relé está conectado.
6.2 Medições realizadas
O primeiro teste foi da conexão Ajax com requisições
HTTP. A Figura 12 ilustra o tráfego para esta situação.

Figura 10. Gráfico das requisições HTTP com Socket em 1,5s

A média das 1000 requisições realizadas foi de
0,000555 segundos. Observa-se no gráfico que o
tempo da primeira requisição, que corresponde 
conexão socket ao equipamento, está em torno de
0,257 segundos, ou seja, próxima do tempo da maioria das requisições realizadas com Ajax. As demais
estão abaixo de 1 milissegundo conforme aconteceu
com o Telnet. Os resultados obtidos até o momento
demonstram que a conexão socket possibilita a diminuição dos 1,5 segundos de espaço entre as requisições. Observado tal fato, outro teste foi realizado
utilizando socket e HTTP diminuindo o tempo entre
as requisições para 0,10 segundos (Figura 11).

Figura 12. Tráfego das requisições HTTP com Ajax

Observa-se na Figura 13 que o tráfego gerado ficou entre 190 e 550 bytes dos 10 Mbps do canal de
comunicação, ocupando cerca de 0,044 do meio de
transmissão.
O segundo teste medido foi da conexão socket
com Telnet. O tráfego gerado pode ser observado na
Figura 13.

Figura 13. Tráfego da conexão Telnet com Socket

Observa-se na Figura 13 que existe uma tendência do tráfego se estabilizar em 133 bytes, porém
ocorrem alguns picos em torno de 220 bytes sem
frequência determinada. Como neste caso, os equipamentos se comunicam  100 Mbps, a ocupação do
canal de comunicação está em torno de 0,002.
No terceiro teste considerado, analisou-se o tráfego das requisições HTTP com socket. O tráfego
gerado pode ser observado na Figura 14.

Figura 11. Gráfico das requisições HTTP com Socket em 0,10s

A média das 1000 requisições realizadas foi de
0,000102 segundos, diminuindo ainda mais o tempo
de resposta. Outra análise a ser realizada é do tráfego
gerado. Este, não deve influenciar na troca de mensagens entre os relés.
6 A Análise do Tráfego Gerado
6.1 Estrutura de medição
Para a análise do tráfego gerado pelos testes, utilizouse da configuração Port Mirror do switch. Esta con-

1293

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

mento de Engenharia Elétrica da Escola de Engenharia de São Carlos, Universidade de São Paulo (EESC
- USP), pelas facilidades proporcionadas quando do
desenvolvimento deste trabalho.
Referências Bibliográficas
AB, M. (2003). Manual de Referência do MySQL 4.1.
Retrieved
Agosto
9,
2009,
from
httpdev.mysql.comdocrefman4.1ptintroduction.h
tml
AYDOGMUS, Z.,  AYDOGMUS, O. (2009). A WebBased Remote Access Laboratory Using SCADA.
IEEE Journal or Magazine , 52.
CABRERA, E. B. (2009). AJAX  Visão Conceitual.
Retrieved Novembro 5, 2009, from PortalJava
httpsportaljava.dev.java.netfilesdocuments35336
081AJAXvisaoConceitual.pdf
CHEMIN NETTO, U. (2008). Aplicações de Controle e
Supervisão Distribuídas em Subestações de Energia
Elétrica Através do Uso de Relés Digitais de
Proteção. São Carlos.
FOROUZAN, B. A. (2008). Comunicação de Dados e
Redes de Computadores. São Paulo McGrawHill.
KINDERMANN, G. (2007). Proteção de Sistemas
Elétricos (Vol. II). Edição do Autor.
MIRANDA, J. C. (2008). IEC 61850 Interoperabilidade e
Intercambialidade
entre
Equipamentos
de
Supervisão, Controle e Proteção Através das Redes
de Comunicação de Dados. São Carlos.
MIRANDA, J. C., CHEMIN NETO, U., OLESKOVICZ,
M.,  COURY, D. V. (2007). Uma Lógica para
Controle de Bay Dispondo de Relés Digitais
Comerciais e Meios de Comunicação Adequados.
Seventh CLAGTEE Latin-American Congress on
Electricity Generation and Transmission .
QIU, B.,  GOOI, H. B. (1998). Web-Based SCADA
Display Systems (WSDS) for Access via Internet.
IEEE Conference Proceeding , 2.
QIU, B., GOOI, H. B., LIU, Y.,  CHAN, E. K. (2002).
Internet-Based SCADA Display System. IEEE
Journal or Magazine , 15.
RESIG, J. (2009). Documentation. (jQuery Team)
Retrieved Novembro 5, 2009, from Jquery
httpdocs.jquery.comMainPage
SICA, C. (2006). PHP Orientado a Objetos Fale a
Linguagem da Internet. Rio de Janeiro Ciência
Moderna.
SILVA, L. E., CHEMIN NETO, U., MIRANDA, J. C.,
OLESKOVICZ, M.,  COURY, D. V. (2008). O
Desenvolvimento de um Sistema Web Aplicado ao
Controle e Supervisão de um Bay de Saída de Linha
como Elemento Motivador para a Graduação em
Engenharia Elétrica. COBENGE - Congresso
Brasileiro de Educação em Engenharia , XXXVI.
SILVA, L. E., MIRANDA, J. C., CHEMIN NETO, U.,
COURY, D. V.,  OLESKOVICZ, M. (2008). A
Utilização de Ferramentas Web para a Supervisão e
Controle de Equipamentos do Sistema Elétrico de
Potência. CBA - Congresso Brasileiro de Automática
, XVII.
TANENBAUM, A. S. (2003). Redes de computadores (4
Edição ed.). Vrije Universiteit, Amsterdam, Holanda
Editora Campus.
TIBET, C. V. (2001). LINUX Administração e Suporte.
São Paulo Novatec.

Figura 14. Gráfico das requisições HTTP com Socket

Na Figura 14 observa-se um pico de 400 bytes
gerados logo no início da conexão. Este pico corresponde a conexão do socket ao equipamento. Os demais tempos tendem-se a estabilizar com tráfego de
no máximo 70 bytes dos 10 Mbps do canal de comunicação, sendo que 0,032 do canal de comunicação
é ocupado no pico e nas demais mensagens o tráfego
chega a 0,006 do canal. O tráfego dos testes realizados para requisições espaçadas por 1,5 segundos e
0,10 segundos é idêntico.
7 Conclusão
O presente artigo relata uma análise das conexões
realizadas em uma aplicação web na supervisão de
um ERAC. A filosofia da aplicação supervisionada
atribui 0,35 segundos de temporização da subfrequência ajustada, para realizar o corte de cargas. Dos
testes realizados, as conexões socket, tanto em HTTP
como em Telnet, obtiveram valores de tempo abaixo
de 0,26 segundos. Por conseguinte, nas conexões
supracitadas, os tempos encontrados foram compatíveis com a aplicação pretendida. A utilização da rede
de comunicação, em todos os testes, ficou abaixo dos
0,05 do canal de comunicação não interferindo no
tráfego da aplicação.
Os valores obtidos ficaram dentro dos parâmetros necessários para que o operador tenha, no ambiente web, a situação real do ambiente supervisionado.
Cabe ressaltar que os resultados obtidos são aplicáveis ao ambiente de teste descrito no item 5.
A presente análise vem corroborar com a linha
de pesquisa sobre a pertinência de utilização da Web
aplicada aos SEPs. Ela demonstra que existem ferramentas disponíveis, capazes de atender aos requisitos
de tempo necessário s aplicações consideradas, bem
como para o desenvolvimento de aplicações para
supervisão de novas situações do sistema, possibilitando a construção de aplicativos que irão contribuir
para uma maior utilização da Web nos SEPs.
Agradecimentos
Os autores gostariam de agradecer ao Laboratório de
Sistemas de Energia Elétrica (LSEE) e ao Departa-

1294