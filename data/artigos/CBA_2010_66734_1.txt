XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

UM ALGORITMO GENETICO ADAPTATIVO PARA O PROBLEMA DE
SEQUENCIAMENTO  COM PENALIDADES POR
ANTECIPACAO E ATRASO DA PRODUCAO
Fabio Fernandes Ribeiro, Marcone Jamilson Freitas Souza, Sergio Ricardo de Souza


Centro Federal de Educacao Tecnologica de Minas Gerais
CEFETMG  Campus II
CEP 30.510-000  Belo Horizonte  MG  Brasil


Universidade Federal de Ouro Preto - ICEB
Campus Universitario  UFOP
CEP 35.400-000  Ouro Preto  MG  Brasil
Emails fabiobh@gmail.com, marcone@iceb.ufop.br, sergio@dppg.cefetmg.br
Abstract This paper deals with the Single Machine Scheduling Problem with Earliness and Tardiness Penalties, considering distinct due windows and sequence-dependent setup time. Due to the complexity of this problem,
an adaptive evolutive method is proposed for solving it. This method is based on classical Genetic Algorithm
being the crossover operator chosen according to the success among five operators in a previous search. Three
variants of the Adaptive Genetic Algorithm were submitted to computational tests using three set of instances
found in the literature. The results show significant improvement in the quality of the solutions when it is
compared with another one found in the literature.
Keywords

Genetic Algorithm, GRASP, Metaheuristics, Path Relinking, Single Machine Scheduling

Resumo Este trabalho trata do problema de sequenciamento  com penalidades por antecipacao e atraso da producao, considerando janelas de entrega e tempo de preparacao de maquina dependente da
sequencia de producao. Em vista da complexidade combinatoria do problema, um algoritmo_genetico adaptativo
e proposto para resolve-lo. Este metodo baseia-se nos princpios do Algoritmo Genetico Classico, sendo que o
operador de cruzamento e escolhido dentre cinco operadores implementados, em funcao da qualidade das solucoes produzidas em buscas pregressas. Tres variacoes deste algoritmo foram submetidas a testes computacional
utilizando tres conjuntos de testes encontrados na literatura. Os resultados mostram uma melhora significativa
na qualidade das solucoes quando comparadas com outras encontradas na literatura.
Palavras-chave


1

Algoritmos Geneticos, GRASP, Metaheursticas, Reconexao por caminhos, Sequenciamento

(LPT). Para cada construcao (GRASP+Regra de
Despacho) sao gerados 200 indivduos. O cruzamento utiliza um metodo adaptativo baseado na
qualidade dos indivduos gerados por cada operador crossover ao longo da evolucao, ou seja, apos
um certo numero de geracoes, o fator de escolha
do operador a ser aplicado e atualizado de acordo
com a qualidade dos indivduos formados por cada
um deles nas geracoes anteriores. Durante a evolucao da populacao, e formado um grupo Elite,
constitudo por indivduos de qualidade e diferentes entre si. Periodicamente, as solucoes deste
grupo sao submetidas a busca local. A melhor
solucao produzida pelo metodo ate entao e conectada as solucoes resultantes desta busca local por
meio da Reconexao por Caminhos (Glover, 1996),
que e aplicada apos os procedimentos de busca local, e foi implementada caminhando-se da melhor
solucao encontrada ate entao para cada um dos indivduos constantes do grupo elite refinados, ate
que pelo menos 75 dos atributos da solucao guia
estejam inseridos na solucao base. A populacao
sobrevivente e composta por indivduos selecionados por elitismo e pelos indivduos constantes do
grupo Elite. A populacao evolui ate que o criterio
de parada seja atingido.

Introducao

O problema de programacao da producao, objeto
de estudo deste trabalho, e relativo ao sequenciamento  com minimizacao das
penalidades por antecipacao e atraso da producao (Single Machine Scheduling for Minimizing
Earliness and Tardiness Penalties), denominado
PSUMAA. No problema abordado, considera-se a
existencia de janelas de entrega e tempos de preparacao de maquina dependentes da sequencia de
producao. O objetivo e determinar a sequencia na
qual as tarefas serao processadas numa determinada maquina, durante um perodo de tempo, e o
momento em que elas serao processadas, de modo
a minimizar os custos por antecipacao ou atraso
na entrega.
Para a resolucao deste problema, um Algoritmo Genetico Adaptativo e proposto. A populacao inicial deste algoritmo e gerada aplicando-se
a fase de construcao GRASP (Feo and Resende,
1995), tendo como funcao guia cinco regras de despacho (Montevechi et al., 2002) Tardiness Due
Date (TDD), Earliest Due Date (EDD), Shortest
Processing Time (SPT), Weight Shortest Processing Time (WSPT) e Longest Processing Time

3591

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

O restante deste trabalho esta estruturado
como segue. As caractersticas do problema estudado sao detalhadas na Secao 2. Na Secao 3 e descrito o Algoritmo Genetico Adaptativo desenvolvido para resolucao do PSUMAA abordado. Na
Secao 4 sao apresentados e discutidos os resultados computacionais. A Secao 5 conclui o trabalho
e aponta perspectivas futuras para melhoramento
do algoritmo proposto.

2

3.1

Um indivduo (sequencia de tarefas) e representado por um vetor v de n genes (tarefas). A posicao de cada gene indica sua ordem de producao.
Por exemplo, no indivduo v  7, 1, 5, 6, 4, 3, 2,
a tarefa 7 e a primeira a ser processada e a tarefa
2, a ultima.
3.2

Avaliacao dos indivduos

Todos os indivduos da populacao sao avaliados
pela propria funcao objetivo do problema, dada
pela equacao (1), onde sao considerados mais
adaptados aqueles que obtiverem o menor valor.
n
X
min Z 
(i ei + i ti ) 
(1)

O problema de sequenciamento
abordado

O problema objeto deste trabalho e o de sequenciamento  (PSUMAA), com tempo
de preparacao dependente da sequencia de producao e janelas de entrega. Neste problema,
considera-se que uma maquina deve processar um
conjunto de n tarefas. Considera-se que cada tarefa possui um tempo de processamento Pi , uma
data inicial Ei e uma data final Ti , desejadas para
o termino do processamento. Alem disso, a maquina executa no maximo uma tarefa por vez e,
uma vez iniciado o processamento de uma tarefa,
a mesma devera ser finalizada, nao sendo permitida a interrupcao do processamento. Admitese que todas as tarefas estejam disponveis para
processamento na data 0. Considera-se tambem
que quando uma tarefa j e sequenciada imediatamente apos uma tarefa i, sendo estes pertencentes
a diferentes familias de produtos, e necessario um
tempo Sij para a preparacao da maquina. Tempos de preparacao de maquina nulos (Sij  0)
implicam em produtos da mesma famlia.
Considera-se, ainda, que a maquina nao necessita de tempo de preparacao inicial. Permitese, neste trabalho, tempo ocioso entre a execucao de duas tarefas consecutivas. Considera-se,
alem disso, que tarefas devem ser finalizadas dentro da janela de tempo Ei , Ti , denominada janela
de entrega. Caso a tarefa seja finalizada antes de
Ei , ha, entao, uma penalizacao por antecipacao.
Caso a tarefa seja finalizada apos Ti , entao ocorrera uma penalizacao por atraso. As tarefas que
forem finalizadas dentro da janela de entrega nao
proporcionarao nenhum custo. Por fim, admite-se
que custos unitarios por antecipacao e atraso da
producao sejam dependentes das tarefas, ou seja,
cada tarefa i possui um custo unitario de antecipacao i e um custo unitario de atraso i . O objetivo do problema e a minimizacao do somatorio
dos custos de antecipacao e atraso da producao.

3

Representacao de um indivduo

i1

3.3

Construcao de uma populacao inicial

A populacao inicial do Algoritmo Genetico Adaptativo (AGA) proposto e gerada aplicando-se a
fase de construcao GRASP (Feo and Resende,
1995), tendo, como funcao guia, cinco regras de
despacho (EDD, TDD, SPT, WSPT e LPT). Para
cada construcao (GRASP + Regra de despacho)
sao gerados 200 indivduos. Em seguida, estes sao
ordenados, do melhor para o pior segundo a funcao de avaliacao. A populacao inicial e, entao,
composta pelos 100 melhores indivduos gerados.
3.3.1

Regras de despacho

Na regra de despacho EDD, as tarefas sao ordenadas tendo em vista a data de incio da janela de
entrega. As tarefas com datas de incio mais proximas sao processadas antes daquelas com datas
de incio maiores. Pela regra de despacho TDD, as
tarefas tambem sao ordenadas com base na data
de incio da janela de entrega, porem aquelas com
datas de incio mais tardias sao processadas antes
daquelas com datas de incio mais cedo. A regra
de despacho SPT constroi a sequencia de tarefas
ordenando-as de tal forma que a tarefa com tempo
de processamento mais curto seja processada antes
daquela com tempo de processamento mais longo.
Na regra WSPT utiliza-se basicamente a mesma
logica do SPT, porem levando-se em consideracao
um peso que e atribudo a cada tarefa, em funcao
da sua prioridade de atendimento. As tarefas sao
entao ordenadas a partir da ordem crescente ponderada da razao entre os tempos de processamento
e a sua prioridade de processamento. Finalmente,
a regra de despacho LPT elabora a sequencia de
tarefas criando uma ordem tal que a tarefa com
tempo de processamento mais longo seja processada antes daquela com o tempo de processamento
mais curto, ou seja, as tarefas com processamento
mais longo sao as primeiros a serem processadas.
A escolha dessas regras e justificada pois de acordo
com (Montevechi et al., 2002), elas apresentam
baixo_custo_computacional.

Metodologia heurstica

Nesta secao descreve-se o Algoritmo Genetico
Adaptativo proposto para resolver o PSUMAA
abordado.

3592

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

3.3.2

funcao linear decrescente com relacao a funcao de
avaliacao.

Fase de construcao GRASP

O procedimento de construcao segue as ideias da
fase de construcao do algoritmo GRASP (Feo and
Resende, 1995). Neste procedimento, um indivduo e formado gene a gene, de acordo com um
criterio g de selecao.

Cruzamento Apos a avaliacao de toda a populacao, os indivduos sao selecionados para reproducao atraves do metodo de selecao de indivduos ja descrito. Os operadores crossover utilizados sao o One Point Crossover (OX), o Similar Job Order Crossover (SJOX), o Relative Job
3.4 Algoritmo genetico adaptativo aplicado ao
Order Crossover (RRX), o Based Order Uniform
PSUMAA
Crossover (BOUX) e o Partially Mapped Crossover (PMX) por apresentarem alta eficiencia para
A Figura 1 apresenta o pseudocodigo do Algoo PSUMAA (Lee and Choi, 1995). A probabiliritmo Genetico Adaptativo (AGA) proposto. As
dade de escolha de um operador crossover espefases desse algoritmo sao, a seguir, detalhadas.
cfico varia de acordo com a qualidade das solucoes produzidas em geracoes passadas. Mais preAlgoritmo AGA(germax , nind , pc , pm , freq)
cisamente, sejam Oi , com i  1,    , 5, os cinco
1 t  0
operadores crossover. Inicialmente, cada opera2 Gere a Populacao Inicial P (t)
dor
crossover Oi tem a mesma probabilidade de
3 Avalie P (t)
ser
escolhido,
no caso, p(Oi )  15. Seja f (s) a
4 enquanto (t < germax ) faca
melhor solucao encontrada ate entao e Ai o valor
5
t  t + 1
medio das solucoes encontradas por cada operador
6
P (t)  P (t  1)
Oi desde a ultima atualizacao. Caso o operador
7
i  0  numero de novos indivduos 
nao tenha sido escolhido nas ultimas cinco gera8
enquanto (i < nind ) faca
coes, faz-se Ai  0. Entao, calcule qk  f (s )Ak
9
Selecione dois indivduos de P (t  1)
P5
10
cross  Numero aleatorio entre 1 e 100 e p(Ok )  qk  j1 qj for all k  1,    , 5. Observe que quanto melhor a solucao, maior o valor
11
Se (cross  pc ) entao
12
Escolha um operador Crossover Ok  de qi e, consequentemente, maior a probabilidade
p(Oi ) de se escolher o operador Oi . Portanto, du13
Aplique o operador selecionado
rante a evolucao do algoritmo, o melhor operador
14
fim-se
tem sua chance de escolha incrementada. Este
15
i  i + 2
procedimento foi inspirado no algoritmo Reactive
16
Incorpore os novos indivduos a P (t)
GRASP,
proposto por (Prais and Ribeiro, 2000).
17
fim-enquanto
18
19
20

Avalie P (t)
Defina nind sobreviventes
Aplique mutacao com probabilidade pm
a todos os membros da populacao P (t)
21
Se (t mod freq  0) faca
22
Atualize a probabilidade de selecao
de cada operador crossover (p(Ok ) )
23
Execute Busca Local
24
Aplique Path Relinking
25
fim-se
26 fim-enquanto
fim AGA
Figura 1 Pseudocodigo do Algoritmo Genetico
Adaptativo

Busca Local O metodo de busca local aplicado
e a Descida Randomica, que utiliza dois tipos de
movimento para explorar o espaco de busca a
troca da ordem de processamento de duas tarefas
da sequencia de producao e a realocacao de uma
tarefa para outra posicao na sequencia de producao. O metodo funciona como segue. Para uma
dada solucao, seleciona-se aleatoriamente duas tarefas, trocando-as de posicao. Se esse novo vizinho for melhor que o anterior segundo a funcao
de avaliacao, ele e aceito e passa a ser a solucao
corrente caso contrario, outro vizinho e escolhido
aleatoriamente.
Reconexao por Caminhos A Reconexao por
Caminhos (Path Relinking) e um procedimento
que integra estrategias de intensificacao e diversificacao durante o processo de busca (Rossetti,
2003). Ele gera novas solucoes explorando trajetorias que ligam solucoes de alta qualidade.
No problema em questao, durante o processo
evolutivo forma-se um grupo de indivduos, chamado conjunto elite, cuja quantidade depende
da variante desenvolvida do algoritmo. Periodicamente, aciona-se o mecanismo de Reconexao
por Caminhos tendo-se como solucao base o melhor indivduo encontrado pelo algoritmo ate en-

Metodo de selecao de indivduos Os indivduos sao selecionados (linha 8 da Figura 1) para
reproducao atraves do metodo do torneio. Na estrategia implementada, apenas um unico torneio
envolvendo toda a populacao e realizado. O vencedor deste torneio, que sera um dos indivduos
mais adaptados da populacao, e selecionado para
cruzamento com um indivduo escolhido aleatoriamente da populacao corrente.
Para este problema, cujo objetivo e minimizacao, a aptidao dos indivduos (fitness) e uma

3593

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

tao e como solucao guia, cada um dos indivduos do conjunto elite. O procedimento aplicado
e a Reconexao por Caminhos Regressiva Truncada (Truncated Backward Path Relinking), no
qual interrompe-se a busca quando 75 dos atributos da solucao guia forem inseridos na solucao
base. A escolha deste metodo justifica-se pois, segundo (Rossetti, 2003), trata-se de uma abordagem altamente eficiente da Reconexao por Caminhos, alem de apresentar um baixo_custo_computacional. Considera-se como atributo a posicao
da tarefa na sequencia de producao. Para cada
tarefa candidata a insercao, aplica-se o modulo
de Busca Local descrito anteriormente, nao permitindo a movimentacao da tarefa candidata. A
tarefa efetivamente inserida e aquela que produzir
o melhor valor para a funcao de avaliacao.

geracoes nao se enquadre no criterio apresentado,
a segunda melhor solucao e entao analisada e caso
tambem nao se adeque aos criterios apresentados
os testes serao realizados nas proximas solucoes da
sequencia ate que uma seja selecionada. O quinto
indivduo e escolhido a partir da selecao aleatoria de um indivduo do conjunto dos dez melhores
indivduos produzidos ao longo das dez geracoes
anteriores. O ndice de diversidade aplicado neste
metodo e gerado a partir do somatorio do numero
de genes diferentes nas mesmas posicoes das duas
solucoes comparadas dividido pelo total de posicoes da solucao.
4

Resultados computacionais

O Algoritmo Genetico Adaptativo proposto foi
implementado em linguagem C, utilizando o ambiente C++ Builder 5. Seus parametros sao apresentados na Tabela 1.

Sobrevivencia de indivduos A sobrevivencia
de indivduos da populacao determina quais deles
permanecerao na populacao na proxima geracao
durante a evolucao do algoritmo. No algoritmo
proposto, sobrevivem os indivduos mais adaptados, no caso, os integrantes do grupo elite, bem
como os melhores indivduos da populacao corrente.

Tabela 1 Parametros do Algoritmo Genetico
Adaptativo
Parametros
Parametro  construcao GRASP

Criterio de parada Como criterio_de_parada,
adota-se o numero maximo de geracoes.

Iteracoes da Busca Local (RDMmax )

Numero maximo de geracoes AGA (germax )
Probabilidade de cruzamento (pc )
Taxa de mutacao (pm )

Variantes do Algoritmo Genetico Adaptativo Foram implementadas tres variantes do Algoritmo Genetico Adaptativo (AGA), as quais se
diferem basicamente na formacao do grupo elite.
Na variante 1, chamada AGA 1, ha atualizacao
da probabilidade de selecao do operador crossover a cada cinco geracoes. Apos essa quantidade
de geracoes, todos os integrantes do grupo elite sao
submetidos a uma busca local e, em seguida, a Reconexao por Caminhos. Este algoritmo tambem
diferencia-se dos demais por ter o grupo elite composto pelo melhor indivduo produzido por cada
operador crossover ao longo dessas cinco geracoes.
A variante 2, chamada AGA 2, tambem promove a
atualizacao do parametro de selecao do operador
crossover a ser utilizado, a submissao do grupo
elite a busca local e a Reconexao por Caminhos
a cada cinco geracoes. Ele se diferencia do AGA
1 pela composicao do grupo elite, formado pelas
cinco melhores solucoes construdas pelo metodo
globalmente e nao apenas nas ultimas cinco geracoes. Na variante AGA 3, a atualizacao do parametro de selecao do operador crossover a ser
utilizado, a submissao do grupo elite a busca local
e a Reconexao por Caminhos acontece a cada dez
geracoes. Ja o grupo elite e composto pelas tres
melhores solucoes produzidas pelo metodo ate entao, acrescidos da melhor solucao produzida pelo
metodo nas ultimas dez geracoes e desde que tenha
ndice de diversidade superior a 30 em relacao as
demais solucoes ja inseridas no grupo. Caso a melhor solucao produzida ao longo das dez ultimas

Valores
0.20
7n
100
80
5

Os testes computacionais foram realizados em
um computador Pentium Core 2 Duo 2,1 GHz,
com 4 GB de memoria RAM, sob plataforma
Windows Vista. Foram utilizados tres conjuntos
de problemas-teste. O primeiro conjunto foi o
mesmo utilizado por Gomes Jr. et al. (2007).
Estes autores se inspiraram nos trabalhos de
(Wan and Yen, 2002), (Liaw, 1999) e (Mazzini
and Armentano, 2001), e geraram problemas com
numero de tarefas n igual a 6, 7, 8, 9, 10, 11, 12,
15, 20, 25, 30, 40, 50 e 75. O segundo conjunto de
problemas-teste foi gerado por (Rosa et al., 2009),
baseando-se nos trabalhos de (Rabadi et al., 2004)
e (Wan and Yen, 2002) e com numero de tarefas
iguais a 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,
17, 18, 19 e 20. Todos os problemas desta base
de dados satisfazem a desigualdade triangular
com relacao aos tempos de preparacao.
O
terceiro conjunto de problemas-teste, tambem
gerado por (Rosa et al., 2009), considera um
numero de tarefas n igual a 6, 7, 8, 9, 10, 11,
12, 15, 20, 30, 40, 50, 75 e 100. Este terceiro
conjunto e mais generico e nao satisfaz a uma
propriedade em particular. Os tres conjuntos
de problemas-teste utilizados neste trabalho
encontram-se disponveis no endereco http
www.iceb.ufop.brdecomprofmarcone
projectsschedulinginstances.htm.

3594

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

4.1

Primeira bateria de testes - BAT 1

AGA 3, que apresentou um valor de 3,19 segundos, contra 6,17 segundos do AGA 1.
Para este grupo de problemas-teste, o unico
resultado encontrado na literatura foi o de (Rosa
et al., 2009), que resolveu estes problemas de 6 ate
12 tarefas, utilizando um modelo exato de programacao_linear inteira indexado no tempo. Embora
nao possamos realizar uma comparacao direta de
resultados, visto que existe um gap computacional
entre os equipamentos utilizados para a execucao
dos testes deste trabalho e daquele utilizado por
(Rosa et al., 2009), existe uma diferenca muito
grande em relacao ao tempo computacional. Enquanto o algoritmo exato de (Rosa et al., 2009)
necessitou de 845,25 segundos em media para encontrar as solucoes otimas para os problemas envolvendo 12 tarefas, o AGA 1 precisou de apenas
3,88 segundos para encontrar tais solucoes.
A tabela 5 exibe a comparacao dos resultados
da variante AGA1 e a formulacao de programacao
matematica MPLIM-IT, de (Rosa et al., 2009). O
algoritmo de (Rosa et al., 2009) apresentou tambem um gap de 0,38 em relacao a solucao media,
ao passo que o AGA 1 foi capaz de encontrar a melhor solucao conhecida para o problema em todas
as execucoes.

A primeira bateria de testes utilizou os problemasteste propostos por (Gomes Jr. et al., 2007). Cada
problema-teste foi resolvido 30 vezes pelo metodo
proposto. A Tabela 2 mostra os resultados obtidos
na primeira bateria de testes para os algoritmos
AGA 1, AGA 2 e AGA 3.
Ao analisar a Tabela 2, podemos perceber que o
AGA 1 obteve melhor comportamento nesta bateria de testes. Esta variante foi a que proporcionou
um menor desvio em relacao a solucao media. O
AGA 1 apresentou, tambem, uma pequena melhoria de 0,011 em relacao ao melhor resultado
conhecido na literatura para esta instancia de problemas, enquanto as demais variantes nao tiveram este mesmo desempenho. Embora o tempo
computacional nao tenha sido o menor dentre as
variantes consideradas, o AGA 1 apresentou um
tempo computacional satisfatorio.
Na Tabela 3 sao comparados os resultados obtidos pelo AGA 1 e aqueles alcancados pelo algoritmo GTSPR, proposto por (Penna, 2009). Conforme pode ser observado na Tabela 3, os valores medios obtidos pelo AGA 1 apresentaram uma
grande melhoria em comparacao aos de GTSPR.
O AGA 1 atingiu valores medios menores do que
os de GTSPR na maioria dos problemas-teste.
Este fato mostra a robustez do metodo adaptativo proposto, uma vez que ele produz solucoes
finais com uma menor variabilidade.
Para os problemas-teste envolvendo 40, 50 e
75 tarefas, o AGA 1 foi capaz de produzir as melhores solucoes conhecidas ate entao. Como desempenho global dos metodos, o GTSPR apresentou uma media dos desvios em relacao a solucao
media de 2,01, ao passo que o AGA 1 apresentou 1,46 nesta media. Em relacao a melhor solucao, o AGA 1 apresentou uma melhoria media de
0,011 enquanto o GTSPR, uma piora de 0,40.
Finalmente, o tempo computacional medio obtido
pelo metodo proposto foi de 285,85 segundos e o
GTSPR de 324,20 segundos.
4.2

4.3

Terceira bateria de testes - BAT 3

A terceira e ultima bateria de testes utilizou os
problemas de (Rosa et al., 2009). Cada problemateste foi resolvido 30 vezes pelo metodo proposto,
com excecao daqueles envolvendo 75 e 100 tarefas, os quais foram resolvidos apenas 10 vezes,
por demandar um tempo computacional mais elevado. Para os problemas-teste de 75 e 100 tarefas
adotou-se, tambem, o valor MRDmax  2  n
como numero maximo de iteracoes sem melhora
da busca local para reduzir o tempo de processamento do algoritmo. Este conjunto de problemasteste foi resolvido pelas tres variantes implementadas AGA 1, AGA 2 e AGA 3.
A Tabela 6 mostra os resultados obtidos na
terceira bateria. Para esta classe de problemas
a variante AGA 1 apresentou a menor variacao
tanto em relacao aos resultados medios quanto em
relacao ao desvio da melhor solucao encontrada.
O tempo computacional mais elevado foi apresentado pelo AGA 2 e o menor pelo AGA 3.

Segunda bateria de testes - BAT 2

A segunda bateria de testes foi realizada com
os problemas-teste de (Rosa et al., 2009). Cada
problema-teste foi resolvido 30 vezes pelo metodo
proposto. Este conjunto de problemas-teste foi resolvido pelas tres variantes implementadas AGA
1, AGA 2 e AGA 3.

5

Conclusoes

Este artigo teve seu foco no PSUMAA considerando janelas de entrega e tempo de preparacao da maquina dependente da sequencia de
producao. Para resolve-lo foi proposto um Algoritmo Genetico Adaptativo, onde a populacao
inicial foi gerada por um procedimento GRASP,
utilizando como funcao guia as regras de despacho EDD, TDD, SPT, WSPT e LPT. Durante
o processo evolutivo, a populacao passa pelas fases de selecao, cruzamento e mutacao. No cru-

A Tabela 4 mostra os resultados obtidos na segunda bateria. Novamente a variante AGA 1
apresentou os menores desvios tanto para a solucao media quanto para as melhores solucoes encontradas. O tempo computacional, no entanto,
foi maior do que aquele despendido pela variante

3595

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

Tabela 2 Resultados da primeira bateria de testes - BAT 1

Tarefas
8
9
10
11
12
15
20
25
30
40
50
75
Media

Desvio sol. media
AGA 1 AGA 2 AGA 3
0,00
0,00
0,00
0,15
0,16
0,24
0,24
0,25
0,41
0,03
0,05
0,10
0,07
0,08
0,21
0,76
0,80
1,16
0,73
0,75
0,85
1,02
1,08
1,42
1,60
1,82
2,64
2,33
2,34
3,56
4,06
4,37
6,32
6,52
9,48 11,86
1,46 1,77 2,40

Desvio melhor solucao
AGA 1
AGA 2
AGA 3
0,00
0,00
0,00
0,00
0,00
0,00
0,00
0,00
0,00
0,00
0,00
0,00
0,00
0,00
0,00
0,00
0,00
0,00
0,00
0,00
0,00
0,00
0,00
0,00
0,00
0,00
0,00
0,08
-0,08
-0,09
0,02
-0,31
-1,11
0,04
-4,40
-1,76
0,011 -0,399 -0,246

AGA 1
0,94
1,26
1,6
2,21
2,81
6,02
20,6
45,72
112,06
335,88
896,1
2000,05
285,85

Tempo (s)
AGA 2
0,93
1,25
1,59
2,20
2,80
5,98
20,47
45,44
111,38
333,81
890,60
1992,73
284,10

AGA 3
0,70
0,78
0,99
1,64
2,44
6,09
17,87
39,65
41,65
41,61
222,04
1242,06
134,79

Tabela 3 Comparacao AGA 1  GTSPR

Tarefas
8
9
10
11
12
15
20
25
30
40
50
75
Media

Desvio sol. media
AGA 1 GTPRS  Melhora
0,00
0,00
0,00
0,15
0,00
-15,00
0,24
0,00
-24,00
0,03
0,00
-3,00
0,07
0,00
-7,00
0,76
1,25
64,08
0,73
1,11
51,87
1,02
1,60
56,53
1,60
2,57
60,61
2,33
3,77
61,84
4,06
5,58
37,64
6,52
7,41
13,69
1,46 2,01
2,27

Desvio melhor solucao
AGA 1 GTPRS  Melhora
0,00
0,00
0,00
0,00
0,00
0,00
0,00
0,00
0,00
0,00
0,00
0,00
0,00
0,00
0,00
0,00
0,00
0,00
0,00
0,00
0,00
0,00
0,00
0,00
0,00
0,00
0,00
0,08
0,00
8,00
0,02
0,00
2,00
0,04
0,00
4,00
0,011 -0,40
-0,25

Tempo (s)
AGA 1 GTSPR
0,94
0,06
1,26
0,09
1,60
0,15
2,21
0,25
2,81
0,36
6,02
0,46
20,60
2,05
45,72
6,62
112,06
18,66
335,88
84,16
896,10
305,28
2005,05 3.472,26
285,85 324,20

zamento, cinco operadores crossover, OX (One
Point Crossover ), SJOX (Similar Job Order Crossover ), BOUX (Based Order Uniform Crossover ),
PMX (Partially Mapped Crossover ) e RRX (Relative Job Order Crossover ), sao utilizados, sendo
que a escolha de qual operador sera empregado
depende da qualidade das solucoes produzidas em
geracoes passadas. Periodicamente, as melhores
solucoes produzidas por cada operador crossover
sao submetidas a busca local e a Reconexao por
Caminhos. O procedimento de Reconexao liga a
melhor solucao produzidas ate entao a cada uma
das melhores solucoes de cada operador.

Os tempos computacionais obtidos pelas variantes do algoritmo heurstico proposto foram razoavelmente pequenos se comparados ao horizonte
de planejamento que, tipicamente, e de uma semana. Os problemas de pequenas dimensoes (6
ate 20 tarefas) foram resolvidos rapidamente em
todos os conjuntos de problemas-teste. Os problemas de medio porte (30 a 50 tarefas) exigiram um
tempo maior, de ate 1,5 horas. Ja os problemas
maiores exigiram um esforco computacional bem
maior, de aproximadamente 21 horas de processamento e um esforco no sentido de diminuir tais
tempos deve ser feito.

Foram desenvolvidas tres variantes do algoritmo, denominadas AGA 1, AGA2 e AGA 3. Essas variantes diferem entre si pela composicao dos
indivduos do grupo elite. No AGA 1, o grupo
elite e formado pelas melhores solucoes geradas
nas ultimas 5 geracoes por cada um dos operadores enquanto no AGA 2, esse grupo contem os
melhores indivduos formados ate entao por cada
operador. Ja no AGA 3, o grupo elite mescla melhores indivduos formados nas ultimas 10 geracoes com outros que satisfazem a um determinado
ndice de diversidade. Para testar estas variantes,
foram realizadas tres baterias de testes, cada uma
delas usando um conjunto de problemas-teste que
se diferenciavam basicamente na forma de geracao
dos tempos de preparacao da maquina.

Agradecimentos
Os autores agradecem ao CEFET-MG, CAPES
e FAPERJ pelo apoio ao desenvolvimento deste
trabalho.
Referencias
Feo, T. A. and Resende, M. G. C. (1995). Greedy randomized adaptive search procedures,
Journal of Global Optimization 6 109133.
Glover, F. (1996). Tabu search and adaptive memory programming - advances, applications
and challenges, in R. S. Barr, R. V. Helgason and J. L. Kennington (eds), Computing
Tools for Modeling, Optimization and Simulation Interfaces in Computer Science and

3596

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

Tabela 4 Resultados da segunda bateria de testes - BAT 2

Tarefas
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
Media

Desvio sol. media
AGA 1 AGA 2 AGA 3
0,00
0,00
0,00
0,00
0,00
0,00
0,00
0,00
0,00
0,00
0,01
0,00
0,00
0,00
0,03
0,00
0,07
0,12
0,00
0,03
0,04
0,00
0,10
0,20
0,00
0,06
0,14
0,02
0,19
0,27
0,06
0,20
0,20
0,00
0,31
0,31
0,00
0,42
0,42
0,04
0,23
0,23
0,02
0,43
0,44
0,01 0,14 0,16

Desvio
AGA 1
0,00
0,00
0,00
0,00
0,00
0,00
0,00
0,00
0,00
0,19
0,06
0,00
0,00
0,04
0,02
0,02

melhor solucao
AGA 2 AGA 3
0,00
0,00
0,00
0,00
0,00
0,00
0,01
0,00
0,00
0,03
0,07
0,12
0,03
0,04
0,10
0,20
0,06
0,14
0,19
0,27
0,20
0,20
0,31
0,31
0,42
0,42
0,23
0,25
0,43
0,44
0,14 0,16

AGA 1
0,65
0,86
1,13
1,47
1,78
2,37
3,88
4,87
5,75
8,50
11,64
0,61
0,61
18,17
30,32
6,17

Tempo (s)
AGA 2 AGA 3
0,71
0,65
1,33
0,82
1,22
1,01
1,76
1,26
2,21
1,53
2,81
1,91
3,80
2,44
5,37
3,09
6,14
3,47
7,99
4,43
8,97
2,69
10,88
3,26
15,23
4,57
19,09
5,73
17,63
10,95
7,01
3,19

Tabela 5 Comparacao AGA 1  MPLIM-IT

Tarefas
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20

Desvio sol. media
AGA 1 MPLIM-IT
0,00
0,00
0,00
0,00
0,00
0,00
0,00
0,00
0,00
0,00
0,00
0,00
0,00
0,38
0,00
ND
0,00
ND
0,02
ND
0,06
ND
0,00
ND
0,00
ND
0,04
ND
0,02
ND

Desvio melhor solucao
AGA 1
MPLIM-IT
0,00
0,00
0,00
0,00
0,00
0,00
0,00
0,00
0,00
0,00
0,00
0,00
0,00
6,25
0,00
ND
0,00
ND
0,19
ND
0,06
ND
0,00
ND
0,00
ND
0,04
ND
0,02
ND

Operations Research, Kluwer Academic Publishers, pp. 175.

Tempo (s)
AGA 1 MPLIM-IT
0,65
8,77
0,86
20,96
1,13
34,67
1,47
79,24
1,78
196,17
2,37
453,88
3,88
845,25
4,87
ND
5,75
ND
8,50
ND
11,64
ND
0,61
ND
0,61
ND
18,17
ND
30,32
ND

Montevechi, J. A., Turrioni, J. B., Almeida, A. D.,
Mergulhao, R. C. and Leal, F. (2002). Analise comparativa entre regras heursticas de
sequenciamento da producao aplicada em Job
Shop, Produto e Producao 6(2) 1218.

Gomes Jr., A. C., Carvalho, C. R. V., Munhoz, P.
L. A. and Souza, M. J. F. (2007). Um metodo
heurstico hbrido para a resolucao do problema de sequenciamento 
com penalidades por antecipacao e atraso da
producao, Anais do XXXIX Simposio Brasileiro de Pesquisa Operacional  XXXIX
SBPO, Fortaleza, Brazil, pp. 16491660.

Penna, P. H. V. (2009). Um algoritmo heurstico
hbrido para minimizar os custos com a antecipacao e o atraso da producao em ambientes com janelas de entrega e tempos_de_preparacao_dependentes_da_sequencia de producao, Dissertacao de mestrado, Programa de
Pos-Graduacao em Engenharia Mineral, Escola de Minas, UFOP, Ouro Preto.

Lee, C. Y. and Choi, J. Y. (1995). A genetic algorithm for job sequencing problems with distinct due dates and general early-tardy penalty weights, Computers and Operations Research 22 857869.

Prais, M. and Ribeiro, C. C. (2000). An application to a matrix decomposition problem in
tdma traffic assignment, INFORMS - Journal on Computing 12 164176.

Liaw, C. F. (1999). A branch-and-bound algorithm for the single machine earliness
and tardiness scheduling problem, Computers and Operations Research 26 679693.

Rabadi, G., Mollaghasemi, M. and Anagnostopoulos, G. C. (2004). A branch-and-bound
algorithm for the earlytardy machine scheduling problem with a common due-date and
sequence-dependent setup time, Computers
and Operations Research 31 17271751.

Mazzini, R. and Armentano, V. A. (2001). A heuristic for single machine scheduling with early
and tardy costs, European Journal of Operational Research 128 129146.

3597

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.


Tarefas
6
7
8
9
10
11
12
15
20
30
40
50
75
100
Media

Tabela 6 Resultados da terceira bateria de testes - BAT 3

Desvio sol. media
AGA 1 AGA 2 AGA 3
0,00
0,00
0,00
0,00
0,00
0,00
0,00
0,00
0,00
0,00
0,13
0,20
0,00
0,03
0,06
0,00
0,11
0,17
0,00
0,01
0,11
0,01
0,14
0,37
0,30
0,64
0,81
1,20
1,19
1,35
0,98
1,21
0,98
1,14
1,46
1,14
0,00
1,26
2,36
0,25
2,50
1,10
0,28 0,62 0,62

Desvio
AGA 1
0,00
0,00
0,00
0,00
0,00
5,97
0,00
0,01
0,30
1,36
1,03
1,26
0,09
0,25
0,73

melhor solucao
AGA 2 AGA 3
0,00
0,00
0,00
0,00
0,00
0,00
0,13
0,20
0,03
0,06
0,11
6,16
0,01
0,11
0,14
0,37
0,64
0,81
1,51
1,50
1,42
2,34
2,24
2,58
1,67
3,60
3,14
2,41
0,79 1,44

Rosa, B. F., Souza, M. J. F. and Souza, S. R.
(2009). Formulacoes de programacao matematica para o problema de sequenciamento
 com janelas de entrega distintas e tempo de preparacao dependentes
da sequencia de producao, Anais do XXXII
Congresso Nacional de Matematica Aplicada
e Computacional  CNMAC 2009, Cuiaba.
Rossetti, I. C. M. (2003). Estrategias sequenciais
e paralelas de grasp com reconexao por caminhos para o problema de sntese de redes
a 2 caminhos, Tese de doutorado, Programa
de Pos-Graduacao em Informatica, PUC-RJ,
Rio de Janeiro, Brasil.
Wan, G. and Yen, B. P. C. (2002). Tabu search for
single machine scheduling with distinct due
windows and weighted earlinesstardiness penalties, European Journal of Operational Research 142 271281.

3598

AGA 1
0,76
0,76
1,03
1,35
1,61
2,20
3,32
7,49
23,88
172,51
801,67
1575,11
4978,02
18107,72
1834,10

Tempo (s)
AGA 2
AGA 3
0,61
0,65
0,94
0,81
1,21
1,00
1,53
1,26
1,88
1,65
0,73
1,92
3,09
2,37
5,60
4,38
10,18
10,61
64,19
47,13
155,05
98,05
529,11
416,78
3381,58
1398,82
23209,42 15853,97
1954,82 1274,24