Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

MINERAÇÃO DE PROCESSOS PARA A IDENTIFICAÇÃO DE PADRÕES DE FALHAS PARA A
RACIONALIZAÇÃO DE ALARMES
RICARDO E. KONDO, EDUARDO A. P. SANTOS, EDUARDO F. R. LOURES
Programa de Pós-Graduação em Engenharia de Produção e Sistemas - PPGEPS, PUC-PR
Rua Imaculada Conceição, 1155 - Parque Tecnológico - Bloco 3, Curitiba - PR, CEP 80.215-901
E-mails ricardo.e.kondo@gmail.com, eduardo.portela@pucpr.br,
eduardo.loures@pucpr.br
CARMELA M. P. BRAGA
Departamento de Engenharia Eletrônica - DELT, UFMG
Avenida Antônio Carlos, 6627, Belo Horizonte - MG, CEP 31270-901
E-mails carmela@cpdee.ufmg.br
Abstract  In general the industries have been affected by anomalies arising from the manufacturing process. Therefore, they
need a reliable system for fault identification for operators to perform quick and effective actions to minimize losses and reestablish the normal condition of the process. A study of alarm rationalization is presented, according to the alarm management
lifecycle model suggested by ANSIISA-18 standard. It is investigated the applicability of the process mining techniques for the
identification of abnormal behavior in order to improve an alarm system through the rationalization, which allows better organization of data for a better understanding of the process. Results of a simulation study of a hydraulic press, developed in CPN
Tools software, are presented and discussed. The results show that the use of these techniques can help in the identification and
classification of alarms, which is fundamental to an effective rationalization.
Keywords  Alarm rationalization, process mining, alarm management, fault identification, ANSIISA-18, EEMUA.
Resumo  As indústrias de um modo geral são afetadas por anomalias decorrentes do processo de fabricação. Sendo assim, elas
necessitam de um sistema confiável para a identificação das falhas a fim de que os operadores realizem ações rápidas e efetivas
visando  minimização_de_perdas e ao restabelecimento das condições normais do processo. Apresenta-se um estudo de racionalização_de_alarmes, de acordo com o modelo de gerenciamento do ciclo de vida de alarmes sugerido pela norma ANSIISA-18.
Investiga-se a aplicabilidade de técnicas de mineração de processo para a identificação de comportamentos anormais, com o intuito de aperfeiçoar um sistema de alarmes por meio de sua racionalização, o que permite uma melhor organização dos dados para uma melhor compreensão do processo. Resultados de estudos simulados com o modelo de uma prensa hidráulica, desenvolvido no software CPN Tools, são apresentados e discutidos. Os resultados mostram que o uso destas técnicas pode auxiliar na identificação e classificação de alarmes, o que é fundamental para uma racionalização eficaz.
Palavras-chave  18, EEMUA.

1 Introdução
Com os avanços da tecnologia da informação,
tornou-se possível coletar, monitorar e supervisionar
os processos produtivos de forma mais eficiente. No
entanto, estes fatores não induzem, necessariamente,
a uma melhor operação de tais processos, sem que as
intervenções e melhorias sejam realizadas nos lugares e equipamentos adequados. Neste contexto, os
alarmes possuem um papel fundamental para que as
condições anormais do processo sejam informadas
no momento adequado e de forma clara e compreensível para as pessoas responsáveis pela sua operação.
O desenvolvimento dos sistemas SCADA
(Supervisory Control and Data Acquisition) permitiram um melhor monitoramento e controle das plantas
industriais, tornando mais simples o processo de
identificação de anomalias. No entanto, os alarmes
são frequentemente configurados e habilitados com
base em procedimentos padrão resultando em um
número excessivo de alarmes pela inadaptabilidade 
planta industrial sob supervisão. Em muitas salas de
controle, os operadores são autorizados a alterar

ISBN 978-85-8001-069-5

configurações de alarmes de acordo com sua necessidade e sem nenhuma documentação ou consideração de projeto adequado, o que geralmente não é
percebido como um problema, para grande parte das
indústrias (Habibi, 2006).
A tarefa de diagnosticar uma falha é dificultada
pelo fato de que as medições de processo muitas
vezes podem ser insuficientes, incompletas e não
confiáveis, em função da quantidade de variáveis
envolvidas. Desta forma, é comum que os operadores
tomem decisões erradas e realizem ações tornando os
problemas ainda maiores, como relatado em diversos
artigos sobre o tema (Habibi, 2006 Stauffer et al.,
2010 Venkatasubramanian et al., 2003).
Segundo a norma ANSIISA-18 (2009), um alarme é um anúncio para o operador, iniciado por
uma condição de mau funcionamento de equipamento, desvio de processo ou condição anormal que
requer uma ação. Este anúncio pode ser feito por
meio de sons audíveis, indicações visuais como piscar de luzes e textos, mudança de cor de fundo ou
texto, mudanças gráficas e de figuras ou ainda por
mensagens. Um alarme é uma representação por
meio da qual uma das características do processo é
2958

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

identificada e configurada em uma representação
binária para caracterizar o estado "em alarme" ou
"normal" (Rothenberg, 2009).
Um sistema de alarme confiável é uma ferramenta vital para a gestão de controle_de_processos
industriais. Trata-se de uma forma muito importante
de monitorar automaticamente as condições da planta
e atrair a atenção do operador do processo para mudanças significativas, que requerem avaliações e
ações rápidas e assertivas, a fim de garantir a integridade do processo (EEMUA, 2007).
De acordo com a norma ANSIISA-18 (2009),
uma das principais métricas para um sistema de alarmes eficaz é a quantidade de alarmes que é apresentada ao operador. Para que o operador possua
tempo hábil para interpretar e tomar as ações adequadas, a norma recomenda que o sistema de alarmes
sinalize somente um ou dois alarmes a cada 10 minutos. Outra recomendação está relacionada  distribuição das prioridades dos alarmes, que não devem
ultrapassar mais do que quatro níveis. Além disso,
para que o operador saiba quais alarmes são os mais
importantes, sugere-se que no máximo 5 dos alarmes sejam configurados com prioridade alta. Estas e
outras métricas podem ser visualizadas na Tabela 1.
Tabela 1. Métricas de desempenho de um sistema de alarmes.
Adaptado da norma ANSIISA18-2 (2009).
Métrica

Objetivo

Alarmes anunciados por
tempo

Satisfatório

Máximo
gerenciável

Dia

 150

 300

Hora

 6 (média)

 12 (média)

10 minutos

 1 (média)

 2 (média)

Porcentagem de horas
contendo mais de 30 alarmes

 < 1

Número máximo de alarmes
no período de 10 minutos

< 10

Porcentagem de tempo com
enxurrada de alarmes

 < 1

Porcentagem de contribuição dos 10 alarmes mais
frequentes

 < 1 a 5

Quantidade de alarmes
incômodos

Zero (planos de ações corretivas)

Alarmes contínuos

< 5 por dia, (planos de ações
corretivas)

Distribuição de prioridades
(alto  médio  baixo)
(muito alto  alto  média 
baixo)

3 prioridades - 5580
4 prioridades - <151580

ISBN 978-85-8001-069-5

Supressão de alarmes não
autorizada

Zero (metodologia de controle)

Alteração de atributos de
alarmes não autorizada

Zero (gerenciamento de
mudanças)

Para que a implementação destes requisitos seja
possível, os alarmes devem ser configurados para
informar somente os eventos necessários, evitando
informações que possam confundir os operadores.
Isto pode ser realizado pela racionalização dos alarmes, que consiste na investigação sistemática da base
de dados de alarmes para assegurar que seus parâmetros estão devidamente configurados (Koene e Vedam, 2000). Segundo a norma EEMUA (2007), o
objetivo da identificação e racionalização é encontrar
o conjunto mínimo de alarmes necessário para manter o processo seguro e sob controle. A racionalização envolve também a classificação, limites, causas,
consequências e ações corretivas na base de dados de
alarmes.
O presente artigo propõe a técnica de mineração
de processos para o suporte a etapa de racionalização
de alarmes. De acordo com Aalst (2004), a mineração_de_processos é uma método de extração da descrição de um processo (e de diversas outras perspectivas deste), estruturado em função de um conjunto
de eventos reais. Isto é obtido por meio da análise do
comportamento da execução das instâncias do processo, capturadas no formato de logs (Medeiros,
2006). A mineração_de_processos possui técnicas que
possibilitam a identificação e classificação de eventos do processo e que podem ser aplicadas para avaliação do comportamento da planta e como ferramenta de suporte para racionalização_de_alarmes.
O artigo está organizado da seguinte forma. A
Seção e apresenta a abordagem proposta para racionalização_de_alarmes utilizando técnicas de mineração_de_processos. A Seção 3 realiza uma introdução
sobre a racionalização_de_alarmes, enquanto a Seção
4 apresenta conceitos de mineração_de_processos e da
ferramenta ProM (Process Mining Framework). A
Seção 5 discute um estudo de caso, por meio de estudo simulado, em que são utilizadas técnicas de mineração de processo associadas a conceitos de racionalização em um modelo de uma prensa hidráulica. A
Seção 6 apresenta as conclusões do trabalho e as
perspectivas de trabalhos futuros.
2 Abordagem proposta
Neste trabalho pretende-se analisar a aplicabilidade de técnicas de mineração_de_processos como
ferramenta de suporte para a identificação de comportamentos anormais em processos_industriais, com
o intuito de aperfeiçoar um sistema de alarmes através da racionalização dos alarmes desnecessários.
De acordo com a norma ANSIISA-18 (2009), a
racionalização é uma etapa fundamental no ciclo de
vida do gerenciamento de alarme, pois é a base para

2959

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

a implementação de uma configuração de alarmes
funcional e de alto_desempenho. Desta forma, esta
etapa da racionalização se torna mais eficaz uma vez
que são identificados os eventos que ocasionaram os
alarmes de acordo com suas características. Porém, a
análise dos dados não é uma tarefa simples, pois uma
planta industrial pode gerar milhares de registros em
um dia de produção. Assim, torna-se necessária a
utilização de técnicas que permitam que o grande
volume de dados seja transformado em informações
úteis para a interpretação e tomada de decisão pelo
operador.
Neste sentido a mineração_de_processos encontra
motivação, buscando descobrir, monitorar e otimizar
processos reais, através da extração do conhecimento
existente nos registros de eventos do processo, gerados pelos sistemas de informação. Em acréscimo, a
mineração_de_processos também pode ser utilizada
para monitorar sistemas ou processos operacionais,
como descritos em Medeiros et al. (2007). Dentre as
diversas técnicas existentes parar a mineração de
processos, algumas delas são capazes de agrupar
sequências de eventos em função de sua similaridade classificar eventos pela frequência, identificar
eventos anormais se comparado a um modelo de
referência analisar a duração de eventos analisar a
probabilidade entre eventos sequenciados, entre
outros.
Sendo assim, este artigo busca explorar algumas
técnicas de mineração_de_processos, visando extrair
informações que estejam relacionadas a algumas
métricas de desempenho de um sistema de alarmes,
conforme sugerido pela norma ANSIISA-18 (2009).
Estas informações podem servir como referência
para racionalização_de_alarmes desnecessários e, por
consequência, para aperfeiçoar o sistema de supervisão e monitoramento de alarmes.

terísticas semelhantes (por exemplo, ambiental ou
segurança) e requisitos comuns para o treinamento,
testes, documentação ou retenção de dados (Stauffer
et al., 2010).
Desta forma, a racionalização implica na redução de alarmes desnecessários, o que pode ser obtido
por meio do ajuste_de_parâmetros no sistema de alarmes como redefinição do grau de severidade,
diminuição de eventos de sinalização, supressão de
alarmes redundantes, priorização em casos de alarmes sequenciados, eliminação de alarmes com frequência e prioridade baixíssima, entre outros.
A priorização é uma das mais importantes atividades na etapa de racionalização. A norma EEMUA
(2007) apresenta três níveis de prioridades - baixo,
médio e alto - para uma eficiente caracterização da
condição normal de alarmes. A priorização eficaz
preconiza que a maioria dos alarmes seja atribuída
com baixa prioridade (menos importante) e o menor
número de alarmes com prioridade alta (mais importante). Além disso, as prioridades devem estar alinhadas com o tempo de resposta permitido, bem
como o nível de consequência, de tal forma que os
alarmes com prioridades mais baixas possuem consequências menos graves e tempos de resposta mais
longos. Já os alarmes com prioridades mais altas
possuem consequências mais sérias e com o tempo
de resposta mais baixo (ANSIISA-18, 2009).
Filosofia de
alarmes

Identificação

Racionalização

Gerenciamento
de mudanças

3 Racionalização de alarmes
Projeto

De acordo com o modelo de ciclo de vida do gerenciamento_de_alarmes mostrado na Figura 1
(ANSIISA-18, 2009), após definida a filosofia de
alarmes, a identificação e a racionalização são as
próximas etapas a serem analisadas. Segundo Dunn e
Sands (2005), a identificação de possíveis alarmes
pode ser feita por vários métodos, como uma análise
de risco de processo ou investigações sobre os incidentes. No entanto, estes métodos não são detalhados, com exceção de problemas em alarmes de monitoramento rotineiros.
Na fase de racionalização cada potencial alarme
é testado baseado nos critérios da filosofia de alarme.
Visa-se comprovar se o mesmo atende aos requisitos
e, assim, ser efetivamente considerado um alarme e
poder sinalizar uma condição de anomalia. Os alarmes são analisados para definir seus atributos (como
limite, prioridade, classificação e tipo). A prioridade
de um alarme deve ser definida com base na gravidade das consequências e no tempo de resposta. Já a
classificação identifica grupos de alarmes com carac-

ISBN 978-85-8001-069-5

Implementação
Monitoramento
Operação
Manutenção
Auditoria

Figura 1. Ciclo de vida do gerenciamento_de_alarmes. Adaptado da
norma ANSIISA-18 (2009).

No entanto, a tarefa de lidar com eventos anormais e emergenciais tornou-se cada vez mais difícil,
devido  complexidade das plantas industriais. Segundo Bailey (1984), em processos de grande porte
podem existir até 1500 variáveis de processo sendo

2960

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

monitoradas em frações de segundos, levando a sobrecarga de informações.
Tendo em vista tais condições, ações indevidas
ou mal interpretadas por parte dos operadores, podem aumentar exponencialmente as dimensões do
problema. Estatísticas mostram que cerca de 70
dos acidentes industriais são causados por erro humano, impactando diretamente na economia, segurança e meio_ambiente (Venkatasubramanian, 2003).
Através da racionalização é esperado um número
menor de ativação dos alarmes bem como a redução
dos alarmes de avisos, transitórios e obsoletos. Sendo
assim, a resposta dos operadores poderá ser mais
eficaz, uma vez que os alarmes serão mais confiáveis
sem que haja uma sobrecarga de alarmes desnecessários e muitas vezes redundantes.
4 Mineração de processos
Atualmente as organizações têm se mostrado extremamente eficientes para capturar, organizar e
armazenar grandes quantidades de dados, obtidos de
suas operações diárias. Porém, a maioria ainda não
utiliza adequadamente essa quantidade de dados para
transformá-la em conhecimento que possa ser utilizado em suas próprias atividades (Song et al., 2009).
A mineração_de_dados, ou data mining, consiste
no uso de técnicas automáticas de exploração de
grandes quantidades de dados de forma a descobrir
novos padrões de associações, mudanças, anomalias
e estruturas significativas, que não seriam possíveis
de entender ou analisar devido  complexidade e
dimensão da base de dados. A mineração_de_dados
envolve a integração de técnicas multidisciplinares
como banco_de_dados, estatística, aprendizado de
máquina, alto_desempenho computacional, reconhecimento_de_padrões, redes_neurais, visualização de
dados, recuperação de informações, entre outros
(Zhang et al., 2009).
A mineração_de_processos (process mining), é
uma disciplina localizada entre o aprendizado de
máquina e mineração_de_dados, e a modelagem de
processos e análise. Um dos elementos-chave da
mineração_de_processos é a ênfase no estabelecimento de uma relação entre um modelo de processo e a
realidade, capturada sob a forma de registros de eventos. Com isso, esta técnica busca descobrir, monitorar e otimizar processos através dos dados extraídos dos sistemas atuais.
A mineração_de_processos pode ser classificada
em três grupos, sendo o primeiro o da descoberta.
Esta técnica leva em consideração um registro de
eventos e produz um modelo, sem que haja a necessidade de qualquer informação adicional. O segundo
tipo é o de conformidade, onde o modelo do processo
existente é comparado com um registro de eventos.
Assim, através da verificação de conformidade podese analisar se os acontecimentos estão de acordo com
os registros armazenados, sendo possível detectar,
localizar e explicar os desvios existentes no processo.
O terceiro tipo de mineração é o de aprimoramento.
ISBN 978-85-8001-069-5

Neste caso, esta técnica busca estender ou aperfeiçoar o modelo do processo, através das informações
geradas no decorrer dos eventos (Aalst, 2010).
Na última década, as técnicas de mineração de
processos foram implementadas em diferentes perspectivas e diversos níveis de hierarquia, seja para a
identificação do fluxo de processos de negócios (Aalst et al., 2007 Mans et al., 2008 Agrawal et al.,
1998), para a verificação de conformidade e otimização de máquinas (Rozinat et al, 2009 Gnther et al.,
2008), para o monitoramento do desempenho de
sistemas (Kannan et al., 2008 Aalst et al., 2011),
entre outros.
4.1 ProM
No decorrer dos últimos anos, diversas plataformas de mineração foram desenvolvidas, sejam elas
acadêmicas (EMiT, Little Thumb, InWoLvE, Process
Miner e MinSoN) ou comerciais (ARIS PPM, HP
BPI e ILOG JViews), com o objetivo de extrair informações dos processos através de registros de eventos (Dongen, et al., 2005). No entanto, cada plataforma utiliza diferentes formatos para a geração e
interpretação dos arquivos de registros, além de apresentar seus resultados de maneiras distintas.
Segundo Bezerra et al. (2009), o ProM possui
uma plataforma aberta e baseada em plug-ins, para a
mineração_de_processos. Sua estrutura é flexível
quando se trata do formato de entrada_e_saída das
informações, além de permitir a fácil reutilização de
código durante a execução de novas técnicas de mineração do processo. Atualmente, a versão 5.2 do
ProM possui mais de 280 plug-ins, distribuídos em
mineração_de_processos, análise, importação, exportação, conversão e filtros (Aalst, 2010).
Por meio da análise dos plug-ins busca-se identificar sua aplicabilidade em processos_industriais para
a extração de informações pertinentes  racionalização_de_alarmes, uma vez que inicialmente os plug-ins
foram concebidos para a descoberta, conformidade e
o aprimoramento de processos de negócios (Aalst,
2010).
5 Aplicação da abordagem proposta
Para o presente trabalho, inicialmente desenvolveu-se o modelo simplificado de uma máquina industrial. Este modelo é capaz de gerar registros de eventos com condições normais e anormais de operação.
Algumas técnicas de mineração_de_processos foram
utilizadas sobre estes dados para a descoberta e agrupamento de padrões comportamentais da sequência
dos eventos.
Na fase de modelagem, utilizou-se o CPN Tools
(Ratzer et al., 2003) para a concepção do modelo de
uma prensa hidráulica industrial (representada esquematicamente na Figura 3), conforme indicado na
Figura 2. Este é o exemplo a ser explorado no presente artigo. Apesar de simplificado, seu conceito de
funcionamento é semelhante a diversos tipos de má-

2961

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

quinas, uma vez que ela inicia, executa e finaliza seu
ciclo de operação.
3

Figura 2. Modelo simplificado de uma prensa industrial.

Figura 3. Representação esquemática da prensa industrial.

O modelo é composto por um cilindro trava e
um cilindro de prensagem. Assim, uma vez que a
peça é alimentada na máquina, o primeiro cilindro
trava a peça e o segundo realiza a prensagem. Após
isso, os cilindros retornam a sua posição inicial e ao
retirar a peça, o ciclo é finalizado. A Tabela 2 apresenta exemplos de traces1 gerados pela simulação.

Alimentar máquina (Normal), Iniciar ciclo (Normal),
Avançar cilindro trava (Pressão baixa P2), Pressão
restabelecida (Pressão baixa P2), Reset falha (Pressão
baixa P2), Recuar cilindro prensagem (Sobercorrente
motor P0), Reset falha (Sobrecorrente motor P0), Recuar
cilindro prensagem (Normal), Recuar cilindro trava
(Normal), Peça rejeitada (Normal), Peça retirada (Normal)

Durante a atuação dos cilindros podem ocorrer
condições anormais identificadas como sobre corrente no motor da unidade hidráulica (prioridade alta
- 0), falha nos cilindros (prioridade média - 1) e pressão baixa (prioridade baixa - 2).
Para o presente experimento, considerou-se que
cada peça representa um case2 (instância do processo), inicializado no momento em que a peça é colocada na máquina e finalizada quando a mesma é
retirada. Dessa forma, o ciclo de vida de uma instância coincide com o ciclo de operação da prensa hidráulica. Cada transição possui uma função de escrita
em um registro, sendo armazenada a identificação do
case, atividade, tipo de evento e timestamp, conforme indicado na Tabela 3.
Através da simulação, gerou-se uma amostra de
1000 traces para a análise. Em seguida utilizou-se a
ferramenta ProM Import para agrupar estes registros
em um arquivo único, no formato MXML conforme
descrito por Medeiros e Gnther (2006). Este registro
de eventos foi então utilizado no ProM para a fase de
mineração_de_processos. A fim de priorizar a análise,
primeiramente aplicou-se um filtro de eventos, separando somente o tipo de evento Normal e o de
prioridade mais alta, sem envolvimento com outros
alarmes, neste caso, indicado por Sobre corrente no
motor da unidade hidráulica.
Após a utilização do filtro, dos 1000 traces iniciais, permaneceram 869 traces. Em seguida aplicouse o plug-in Trace Clustering. Baseado em um conjunto de características, este plug-in calcula a distância relativa entre os cases, agrupando-os em subconjuntos de acordo com sua similaridade. Estes subconjuntos podem ser analisados independentemente uns
dos outros, simplificando a análise e melhorando a
qualidade dos resultados (Song et al., 2008).

Tabela 2. Exemplos de traces da simulação.
Tabela 3. Exemplo de logs em um mesmo case.
Id

1

2

Traces
Alimentar máquina (Normal), Iniciar ciclo (Normal),
Avançar cilindro trava (Normal), Avançar cilindro
prensagem (Normal), Recuar cilindro prensagem (Normal), Recuar cilindro trava (Normal), Peça aprovada
(Normal), Peça retirada (Normal)
Alimentar máquina (Normal), Iniciar ciclo (Normal),
Avançar cilindro trava (Normal), Avançar cilindro
prensagem (Sobrecorrente motor P0), Reset falha (Sobrecorrente motor P0), Recuar cilindro prensagem (Normal), Recuar cilindro trava (Normal), Peça aprovada
(Normal), Peça retirada (Normal)

1

Trace sequencia de eventos em uma instância do processo 
(Song, 2009).

ISBN 978-85-8001-069-5

Case

Atividade

Tipo de
evento

1

Alimentar máquina

Normal

1

Iniciar ciclo

Normal

1

Avançar cilindro trava

Normal

1

Avançar cilindro prensagem

1

Reset falha

Falha
cilindro
Falha
cilindro

Timestamp
2012-03-06
012421.000
2012-03-06
012530.000
2012-03-06
012555.000
2012-03-06
012612.000
2012-03-06
012646.000

2
Case identificador ou instância do processo (Aalst, 2008),
utilizado para distinguir diferentes execuções em um mesmo
processo.

2962

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

1

Recuar cilindro prensagem

Normal

1

Recuar cilindro trava

Normal

1

Peça reprovada

Normal

1

Peça retirada

Normal

2012-03-06
012658.000
2012-03-06
012708.000
2012-03-06
012714.000
2012-03-06
012730.000

Para o cálculo da similaridade entre os traces, utilizou-se a medida da distância Euclidiana (Duda et
al., 2000), também conhecida como distância métrica
(Bortolossi, 2003), representada pela equação 1

(

)

n

Dist . Euclid . c j , ck   i jl  ikl

2

l 1

(1)

Considerando um espaço n-dimensional, n corresponde ao número de itens extraídos do registro do
processo, o case cj representa o vetor (ij1, ij2, ..., ijn),
sendo que cada ijk corresponde ao número de aparições do item k no case j (Song et al., 2009).
Para identificar os clusters, utilizou-se o algoritmo Quality Threshold, que define o diâmetro máximo de cada cluster em função do limite de qualidade. Este método é considerado do tipo previsível,
uma vez que sempre gera o mesmo resultado quando
executado por diversas vezes, além de não ser necessário especificar inicialmente a quantidade de clusters desejada (Song et al., 2009). A Tabela 4 indica a
classificação dos clusters em função da frequência
com que os traces se repetiram.
Tabela 4. Principais clusters e seus respectivos traces.
Cluster

Trace

Frequência

0

46,5

1

46,5

266

1,5

89

1,2

Alimentar máquina (Normal), Iniciar
ciclo (Normal), Avançar cilindro trava
(Normal), Avançar cilindro prensagem
(Normal), Recuar cilindro prensagem
(Normal), Recuar cilindro trava (Normal), Peça rejeitada (Normal), Peça
retirada (Normal)
Alimentar máquina (Normal), Iniciar
ciclo (Normal), Avançar cilindro trava
(Normal), Avançar cilindro prensagem
(Normal), Recuar cilindro prensagem
(Normal), Recuar cilindro trava (Normal), Peça aprovada (Normal), Peça
retirada (Normal)
Alimentar máquina (Normal), Iniciar
ciclo (Normal), Avançar cilindro trava
(Sobrecorrente motor), Reset falha
(Sobrecorrente motor), Recuar cilindro
prensagem (Normal), Recuar cilindro
trava (Normal), Peça aprovada (Normal), Peça retirada (Normal)
Alimentar máquina (Normal), Iniciar
ciclo (Normal), Avançar cilindro trava
(Sobrecorrente motor), Reset falha
(Sobrecorrente motor), Recuar cilindro
prensagem (Normal), Recuar cilindro
trava (Normal), Peça rejeitada (Normal), Peça retirada (Normal)

ISBN 978-85-8001-069-5

57

1,0

Alimentar máquina (Normal), Iniciar
ciclo (Normal), Avançar cilindro trava
(Normal), Avançar cilindro prensagem
(Sobrecorrente motor), Reset falha
(Sobrecorrente motor), Recuar cilindro
prensagem (Normal), Recuar cilindro
trava (Normal), Peça rejeitada (Normal), Peça retirada (Normal)

Os clusters 0 e 1 ocorreram com a maior frequência, totalizando 46,5 cada um, pois são as
condições normais de operação, ou seja, sem condições de falha. Os demais clusters apresentam condições de falhas que totalizam 7,0, sendo que o cluster 266 representa que 1,5 das falhas relacionadas 
Sobrecorrente do motor possuíram o mesmo comportamento. Para identificar as frequências das falhas
com prioridade média e baixa, a mesma metodologia
pode ser aplicada.
Conforme descrito por Bezerra et al. (2009), o
plug-in Conformance Checker pode ser aplicado para
verificar a conformidade de um trace em relação a
um modelo_de_referência. Esta conformidade é apresentada através de um índice, conhecido como fitness, que representa a capacidade do modelo de reproduzir o registro, sendo assim, um fitness de 1.0
indica que o modelo é compatível com cada trace do
registro. A reprodução de cada trace inicia-se pelo
registro do ponto inicial no modelo e, em seguida, as
transições pertencentes aos eventos de um trace são
disparados um após o outro. Enquanto isso se realiza
a contagem dos tokens que deveriam ter sido criados
artificialmente e o número de tokens que foram deixados no modelo, indicando que o processo foi não
devidamente completado.
Para este caso, o modelo_de_referência foi obtido
pelo agrupamento dos clusters 0 e 1, pois representam as condições normais de operação da máquina.
Ao aplicar o plug-in do modelo_de_referência em
relação ao cluster 266 e 1, obteve-se um fitness de
0,85714287 e 1,0 respectivamente. Neste último, o
fitness não poderia ser diferente deste valor, uma vez
que este cluster fez parte da criação do modelo de
referência.
O plug-in Performance Sequence Diagram Analysis fornece meios para acessar o desempenho de
um sistema (Kannan et al., 2008). Este plug-in é
capaz de gerar informações sobre comportamentos
comuns no registro de eventos, agrupando-os conforme sua sequencia, além de identificar o tempo de
atravessamento entre os mesmos.
Dados estatísticos relacionados ao tempo de atravessamento para cada padrão são apresentados,
podendo ser utilizados para determinar quais padrões
possuem um comportamento semelhante, quais são
raros e quais resultam em um alto tempo de atravessamento, possibilitando a análise das ocorrências e o
impacto no desempenho do sistema. Neste caso,
selecionaram-se somente os eventos da falha Sobrecorrente do motor. A Tabela 5 apresenta a frequência com que estes alarmes específicos foram disparados, além de mostrar a duração mínima e máxima
com que este padrão de alarme permaneceu ativo.

2963

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

Por meio destas informações obtidas através dos
métodos de mineração_de_processos, pode-se estabelecer uma relação com as métricas recomendadas
pela norma ANSIISA-18-2 (2009), para um sistema
de alarmes eficaz. Para a identificação da frequência
dos alarmes em intervalos pré-definidos (dia, hora,
10 minutos, número máximo, etc.) os registros podem ser tratados, inicialmente, e então minerados
para fornecer as informações dentro dos intervalos
desejados. Já as métricas relacionadas  duração
podem ser contabilizadas conforme o período com
que um ou mais alarmes permaneceram ativos. Além
disso, de acordo com a prioridade, os alarmes também podem ser classificados e analisados individualmente, conforme o nível de criticidade de cada um.
Tabela 5. Principais eventos causadores de alarmes.
Pattern

Evento

Frequência

Duração
mínima

Duração
máxima

0

Avançar
cilindro trava

37,3

1 min.

3 min.

1

Avançar
cilindro prensagem

22,4

4 min.

7 min.

2

Recuar cilindro prensagem

19,4

2 min.

5 min.

Para o exemplo em análise, em função da identificação das falhas, através da criticidade, frequência,
sequencia de eventos e duração, é possível estabelecer um plano de ações a fim de racionalizar alguns
alarmes por meio de sua diminuição ou eliminação,
seja pela melhoria no processo ou mesmo pelo ajuste
de parâmetros no sistema de alarmes.
6 Conclusões
O artigo aborda técnicas de mineração_de_processos como ferramenta de associação e análise para
a identificação de padrões comportamentais de operação normal e de falhas. Os resultados podem ser
utilizados como parâmetros para a racionalização de
alarmes, conforme sugerido pelas normas ANSIISA18 e EEMUA, uma vez que a sequência dos eventos
é identificada, seja pela frequência das ocorrências,
nível de severidade ou mesmo através do fitness.
Neste caso, a racionalização é realizada objetivando a melhoria do processo. Uma vez identificado
o comportamento da condição anormal, é possível
eliminar ou reajustar os parâmetros do sistema de
alarme. Desta forma, é possível reduzir  quantidade
de alarmes, eliminando aqueles que não desempenham a função efetiva de alarme, tornando mais clara
a visualização em casos de falha e diminuindo os
erros de interpretação por parte dos operadores.
Neste artigo, como os registros de eventos foram
gerados por meio de simulação, não foi possível
ISBN 978-85-8001-069-5

representar algumas condições. É necessário um
estudo de caso para uma análise mais aprofundada,
com mais condições de falhas e diferentes variáveis.
Assim, será possível avaliar com mais clareza os
resultados desta técnica para a racionalização de
alarmes.
Entretanto, os resultados obtidos são promissores no sentido do levantamento comportamental do
processo_industrial, por meio da base de dados de um
sistema de alarmes. A compreensão do comportamento dos eventos no processo torna a racionalização
mais eficaz, uma vez que os eventos originadores dos
alarmes podem ser identificados e analisados individualmente.
Como sugestão de trabalhos futuros, recomendase um estudo de caso em uma planta industrial real,
com diversas variantes a fim de validar os conceitos
abordados neste artigo. Outras técnicas de mineração
de processos também deverão ser analisadas, em
função do nível de abstração necessário para o caso
em estudo, como o Frequency Abstraction Miner e
Heuristic Miner. Além disso, o plug-in Conformance
Checker pode ser explorado para a verificação da
conformidade, onde se leva em consideração não
somente o fitness, mas também parâmetros como o
behavioral appropriateness e structural appropriateness para apresentar o grau de precisão que o modelo descreve o comportamento observado, em conjunto com o grau de clareza representado pelo modelo (Rozinat e Aalst, 2006).
Referências bibliográficas
Aalst, W.M.P. and Weijters, A.J.M.M. (2004).
Process mining a research agenda. Computers in
Industry, vol. 53, pp. 231-244.
Aalst, W.M.P. Reijers, H.A. Weijters, A.J.M.M.
Dongen, B.F. Medeiros, A.K.A. Song, M. and
Verbeek H.M.W. (2007). Business Process
Mining An Industrial Application. Journal
Information Systems, vol. 32, Issue 5, UK.
Aalst, W.M.P. and Verbeek, H.M.W. (2008). Process
Mining in Web Services TheWebSphere Case.
Bulletin of the IEEE Computer Society
Technical
Committee
on
Data
Engineering, 31(3), pp. 45-48.
Aalst, W.M.P. (2010). Process Mining  Discovery,
conformance and enhancement of business
processes. Springer.
Aalst, W.M.P. Schonenberg, M.H. and Song, M.
(2011). Time prediction based on process
mining. Journal Information Systems, vol. 36
Issue 2, UK.
Agrawal, R. Gunopulos, D. and Leymann, F. (1998).
Mining Process Models from Workflow Logs.
EDBT 98 Proceedings of the 6th International
Conference on Extending Database Technology
Advances in Database Technology, SpringerVerlag London, UK.

2964

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

ANSIISA-18.00.02 (2009). Management of Alarm
Systems for the Process Industries. ISA,
Research Triangle Park.
Bailey, S. J. (1984). From desktop to plant floor, a
CRT is the control operators window on the
process. Control Engineering 31 (6), pp. 86-90.
Bezerra, F. Wainer, J. and Aalst, W.M.P. (2009).
Anomaly Detection Using Process Mining.
Enterprise Business Process and Information
Systems Modeling.
Bortolossi, H. J. (2003). Cálculo diferencial a várias
variáveis Uma introdução  teoria de
otimização. Loyola, pp. 619.
Cortes S., Porcaro M. R. e Lifschitz S. (2002).
Mineração de dados - Funcionalidades, técnicas
e abordagens. PUC-Rio Inf. MMC.
Dongen, B.F. Medeiros, A.K.A. Verbeek, H.M.W.
Weijters, A.J.M.M. and Aalst, W.M.P., June
2005. The ProM framework A new era in
process mining tool support.
International
Conference, ICATPN 2005, Miami, USA.
Duda, R.O. Hart, P.E. and Stork, D.G. (2000).
Pattern Classification. Wiley-Interscience, New
York, NY, USA.
Dunn, D.G. and Sands, N.P., October 2005. ISASP18 - Alarm Systems Management and Design
Guide. ISA EXPO.
EEMUA (2007). Alarm Systems A Guide to
Design, Management and Procurement, The
Engineering Equipment and Materials Users
Association. Publication 191, 2nd , London.
Gnther, C.W. Rozinat, A. Aalst, W.M.P. and
Uden, K. (2008). Monitoring deployed
Application Usage with Process Mining. BPM
Center Report BPM-08-11, BPMcenter.org.
Habibi, E. and Hollifield, B., September 2006. Alarm
systems greatly affect offshore facilities amid
high oil process. World Oil Magazine, vol. 227,
No. 9.
Kannan, V. Aalst, W. and Voorhoeve, M. (2008).
Formal Modeling and Analysis by Simulation of
Data Paths in Digital Document Printers.
Proceedings of the Nineth Workshop on the
Practical Use of Coloured Petri Nets and CPN
Tools (CPN 2008), vol. 588 of DAIMI, pp. 2746, Aarhus, Denmark.
Koene, J. and Vedam, H. (2000). Alarm
Management and
Rationalization. Third
International Conference on Loss Prevention.
Magalhães, G. (2006). Introdução  metodologia da
pesquisa, caminhos da ciência e tecnologia.
Ática, São Paulo.
Mans, R.S. Schonenberg, M.H. Song, M. Aalst,
W.M.P. and Bakker, P.J.M. (2008). Process
Mining In Healthcare. BIOSTEC 2008, CCIS
25, pp. 425438.
Medeiros, A.K.A. (2006). Genetic Process Mining.
PhD
thesis,
Eindhoven
University
of
Technology, NL.
Medeiros, A.K.A. and Gnther, C.W. (2006).
Process Mining Using CPN Tools to Create
Test Logs for Mining Algorithms. Proceedings

ISBN 978-85-8001-069-5

of the Sixth Workshop and Tutorial on Practical
Use of Coloured Petri Nets and the CPN Tools.
Medeiros, A.K.A. Guzzo, A. Greco, G. Aalst,
W.M.P. Weijters, A.J.M.M. Dongen, B. and
Sacc, D. (2007). Process Mining Based on
Clustering A Quest for Precision. In
Proceedings of Business Process Management
Workshops.
Ratzer, A. V. Wells, L. Lassen, H. M. Laursen, M.
Qvortrup, J. F. Stissing, M. S. Westergaard,
M. Christensen, S. and Jensen, K. (2003). CPN
Tools for Editing, Simulating, and Analysing
Coloured Petri Nets. Applications and Theory of
Petri Nets 2003 24th International Conference,
ICATPN 2003.
Rothenberg, D.H. (2009). Alarm Management for
Process Control  A Best Practice Guide for
Design. Implementation, and Use of Industrial
Alarm Systems, Momentum Press, New York.
Rozinat, A. and Aalst, W.M.P. (2006). Conformance
Testing Measuring the Fit and Appropriateness
of Event Logs and Process Models. BPM 2005
Workshops (Workshop on Business Process
Intelligence).
Rozinat, A. Jong, I.S.M. Gnther, C.W. and Aalst,
W.M.P. (2009). Process Mining Applied to the
Test Process of Wafer Steppers in ASML. IEEE
Transactions on Systems, Man, and Cybernetics
- Part C Applications and Reviews, vol. 39, No.
4, pp. 474479.
Song, M. Gnther C. and Aalst, W.M.P., September
2008. Trace clustering in process mining.
Proceedings of the 4th Workshop on Business
Process Intelligence (BPI08).
Stauffer, T. Sands, N.P. and Dunn, D.G. (2010).
Alarm Management and ISA-18  A Journey,
Not A Destination. Texas AM Instrumentation
Symposium.
Venkatasubramanian, V. Rengaswamy, R. Yin, K.
and Kavuri, S.N. (2003). A review of process
fault detection and diagnosis Part I Quantitative
model-based methods. Computers and Chemical
Engineering, pp. 293-311.
Zhang, Y. Zhang, J. Ma, J. and Wang, Z. (2009).
Fault Detection Based on Data Mining Theory.
IEEE.

2965