XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

FERRAMENTA PARA CONSTRUÇÃO DE CENÁRIOS DE TREINAMENTO EM REDES DE PETRI COLORIDA
1

ADEMAR V.S. NETTO, 1DANIEL SCHERER, 1JOSÉ A. DO N. NETO, 1ABRAÃO DE M. M. DOS SANTOS, 1J. W.
ANDRADE, 1RODRIGO P. DE ALMEIDA, 1,2 MARIA DE F. Q. VIEIRA

1

2

Laboratório de Interfaces Homem-Máquina, Unidade Acadêmica de Engenharia Elétrica, Universidade
Federal de Campina Grande
Caixa Postal 10105 - Campina Grande - Paraíba - Brasil,
E-mails ademar.netto, daniel.scherer, alves@ee.ufcg.edu.br, abraao.morais, wilsonufcg,
rpaufcg@gmail.com, fatima@dee.ufcg.edu.br

Centre for Excellence in Signal  Image Processing, Dept of Electronic  Electrical Engineering, University
of Strathclyde - Scotland, UK

Abstract This paper presents a graphic tool to support the construction of Color Petri Net (CPN) models. The aim of the tool
is to simplify the task of adapting the simulating engine of an operator training system (OTS) that was built based on a library of
CPN models. The engine adaptation is necessary in order to represent different training scenarios in the OTS, and must be done
by engineers who are not familiar with the CPN formalism and thus would benefit from a graphic tool to support this task.
Keywords Colored Petri Nets, scenarios, training, tutor, electrical substation
Resumo  Este artigo apresenta uma ferramenta gráfica que foi desenvolvida para apoiar a construção de modelos em Redes de
Petri Coloridas. O objetivo da ferramenta foi facilitar a adaptação do motor_de_simulação de um ambiente para treinamento de
operadores (OTS), o qual foi construído a partir de uma biblioteca de modelos. A adaptação do motor_de_simulação é necessária
para representar os cenários de treinamento no simulador, a qual deve ser feita por engenheiros que não estão familiarizados com
o formalismo CPN, e portanto podem se beneficiar de uma ferramenta gráfica que os apóie nesta tarefa.
Palavras-chave .

1.

sável pela lógica do funcionamento dos objetos da
subestação.
Após os instrutores elaborarem os cenários de
treinamento, é necessário configurar o simulador o
que inclui o motor_de_simulação. Porém os instrutores não necessariamente possuem o conhecimento do
formalismo CPN. Este trabalho apresenta um frontend que oferece uma interface_gráfica para o instrutor
montar um cenário de treinamento em um ambiente
de subestação (SE), gerando automaticamente a rede
de Petri que o representa.

Introdução

Ambientes de simulação em realidade_virtual são
cada vez mais utilizados no treinamento_de_operadores de sistemas_industriais. No setor de energia_elétrica, um ambiente que simule de maneira realista a
operação do sistema é essencial para o treinamento
dos operadores. Tipicamente, o treinamento dos
operadores é elaborado por engenheiros da própria
empresa os quais possuem experiência na operação
do sistema e assumem o papel de tutores (ou instrutores). Neste setor o treinamento é baseado em aulas
teóricas e, quando possível, na utilização dos equipamentos no sistema real (Leite et al, 2007), o que
pode colocar em risco o sistema ou a vida dos operadores. Ao preparar os cenários idealizados e reproduzi-los no ambiente real, um erro de iteração com um
objeto energizado no pátio da subestação pode resultar em um acidente.
Na tentativa de superar o risco potencial do treinamento no ambiente real, o qual é proibitivo dado
suas conseqências, o Laboratório de Interfaces Homem-Máquina (LIHM) da Universidade Federal de
Campina Grande (UFCG) está desenvolvendo um
simulador para treinamento_de_operadores em subestações_elétricas (SE) (Netto et al, 2009). O simulador
consiste em uma interface desenvolvida em realidade
virtual e em um motor_de_simulação desenvolvido
em Redes de Petri Colorida (CPN), o qual é respon-

Estado da Arte
O projeto do front-end foi inspirado em ferramentas que permitem criar modelos de forma gráfica,
exigindo do usuário apenas o conhecimento dos
objetos disponíveis em bibliotecas e do sistema a ser
modelado (Simulink (Simulink, 2010) e o AnyLogic (AnyLogic,2010)).
O Simulink é uma ferramenta desenvolvida pela Mathworks que consiste em um ambiente para
construção e simulação de modelos. Esta ferramenta
fornece um ambiente gráfico, interativo e um conjunto personalizável de bibliotecas de blocos que permitem projetar, simular, implementar e testar sistemas
variantes no tempo, incluindo comunicações, controle, processamento_de_sinais, processamento_de_vídeo,
e processamento_de_imagem.
O AnyLogic também apóia a construção e simulação de modelos . Esta ferramenta permite ao
3553

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

 Página de Declarações declarações de todos
os tipos de informações (cores, variáveis e funções)
presentes no modelo.
 Página IHMindustrial apresenta uma visão
de alto nível do modelo, representando a conexão
entre as transições Painéis e Dispositivos (ver
Figura 1).

usuário capturar a complexidade e heterogeneidade
dos modelos em diferentes níveis de abstração. A
interface_gráfica, ferramentas e objetos de sua biblioteca permitem a rápida modelagem_de_sistemas, para
contextos como manufatura e logística, processos de
negócios, recursos humanos, entre outros.
Outro exemplo de ferramenta foi desenvolvido
no Centro de Informática (CIN  UFPE) para a construção de hiperdocumentos educacionais baseados
em grafos conceituais. Nesta ferramenta o usuário
constrói o grafo em um ambiente gráfico, converte
para XML e depois o utiliza na elaboração de hiperdocumentos educacionais (Lincon et al, 2002).
Estas ferramentas utilizam uma interface_gráfica
para modelar sistemas, no entanto, na bibliografia
consultada não foi encontrada ferramenta para gerar
automaticamente modelos em Redes de Petri Coloridas (CPN), o que se propõe a fazer o front-end de
subestação.
Este artigo está organizado em quatro seções, incluindo esta introdução. A próxima seção apresenta a
biblioteca de componentes, a terceira apresenta a
ferramenta de modelagem, e um exemplo de aplicação e por fim são tecidas as considerações sobre os
resultados preliminares e sugeridos os próximos
passos deste trabalho.
2.

Figura 1. Rede  IHMindustrial.

A transição Painéis é uma transição de substituição
para a sub-página apresentada na Figura 2, que modela a interação entre o operador e os painéis. A
transição Dispositivos é uma transição de substituição para a sub-página apresentada na Figura 3.
No lugar IHM encontra-se a ficha que modela o
painel disponível para manipulação dos dispositivos
de interação. É importante destacar que toda ficha
inserida neste lugar simboliza o painel ativo. A cor
da ficha (Operacao) presente neste lugar é formada
por uma dupla que determina o painel ativo e seu
estado. Todas as sub-páginas do modelo, que representam as funcionalidades do sistema, têm em comum o lugar IHM, como soquete (porta de comunicação entre os modelos).
 Página Painéis nesta página é apresentado o
painel ativo em um determinado instante da interação
(Indica qual é o painel que o operador irá atuar).

Motor de simulação

O motor_de_simulação do ambiente em desenvolvimento no LIHM foi construído no formalismo Rede
de Petri Colorida (CPN), dado que este formalismo
possui representação gráfica e matemática aplicável a
sistemas concorrentes e aplicações em tempo_real. Os
modelos consistem em um conjunto de arcos direcionais, que conectam lugares e transições, e de fichas
que contém as informações do modelo (Jensen,
1992).
O motor_de_simulação se apóia na biblioteca de
modelos construída por Nascimento (Nascimento,
2003) que representa o modo de funcionamento dos
componentes da IHM dos painéis de uma SE. O
modelo CPN da IHM consiste de dois componentes
Navegação e Funcionalidades.
 Navegação modela a navegação do operador através dos painéis de uma subestação, durante a
realização de uma tarefa, por meio da conexão entre
a representação da IHM e as funcionalidades dos
objetos que podem ser operados a partir dela (componentes).
 Funcionalidades modela o comportamento
dos componentes do sistema elétrico da subestação.

Figura 2. Rede  Painéis

 Página Dispositivos nesta página (Figura
3), há várias transições de substituição, cada uma
correspondendo a uma sub-rede. Nestas sub-redes
são modelados os componentes de interação que
compõem os painéis da subestação, os quais por sua
vez, compõem a sala de comando de uma subestação.

2.1. Estrutura do modelo
Os componentes da biblioteca são integrados para representar a IHM através da página de hierarquia.
As páginas presentes no modelo são
Figura 3. Rede  Dispositivos.

Os componentes modelados na biblioteca foram
3554

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.








Chaves dos tipos Punho, Giro-PressãoGiro, Giro-Giro, de seleção de Tensão de
três ou quatro posições, local  telecomando,
Religamento Automático
Quadro de Eventos
Chave seletora de quatro posições temperatura, miliamperímetro
Chave de Transferência de duas e três posições
Botoeira de reset de Proteção (botreset) e
de comando.

A associação entre dispositivos da biblioteca para representar um cenário em construção está sujeita
 regras oriundas do contexto modelado. Por exemplo, a associação de chaves e mostradores a painéis
de controle não é independente. Assim, uma chave
do tipo localtelecomando, só pode ser associada s
chaves do tipo punho, Giro-Giro ou Giro-PressãoGiro.
A Figura 4 ilustra a rede da chave tipo punho,
com a discussão do seu funcionamento e os pontos
de interconexão entre redes.

Figura 4. Rede da chave do tipo punho.

Na rede do tipo punho está presente o lugar
IHM que é a porta de comunicação e, contém a
ficha do o painel ativo. Os lugares Aberto e Fechado, indicam o estado da chave. Os lugares
LocTel e Normbloq são lugares de fusão com
outras redes (redes loctel e botreset, respectivamente) e podem representar a dependência no painel
entre a chave do tipo punho, a chave do tipo localtelecomando e a botoeira do tipo reset. O lugar
EstCampoP indica o estado da chave no campo.
A rede também possui duas transições que representam as ações de fechar (COMFECHA) ou abrir
(COMABERT) a chave do tipo punho.
Desta forma, para exemplificar a construção de
do motor_de_simulação, será criado um painel (nome
LT02J5) que contenha uma chave do tipo punho
(nome DJ1205), cujo estado no campo e no painel
seja Aberto, é adicionado ao painel uma chave
localtelecomando (na posição Local) e uma botoeira de Reset (no estado Normal). Para instanciar
esta rede, é necessário inserir as fichas ilustradas na
Tabela 1.

Tabela 1. Instância da rede do tipo punho

Nome do Lugar
Aberto
Fechado
NormBloq
LocTel
EstCampoP

Conteúdo
1(LT02J5,DJ1205)
Vazio
1(LT02J5, Normal)
1(LT02J5, Local)
1(LT02J5,DJ1205,Aberto)

As redes modeladas foram construídas utilizando
a ferramenta DesignCPN (DesignCPN, 2009), a
qual permite construir, editar, analisar e simular
CPNs. Além disso, a ferramenta permite importarexportar as redes construídas no formato XML
como será descrito a seguir.
2.2. Descrição do cenário em XML
A linguagem eXtensible Markup Language
(XML), consiste em uma linguagem de marcação
que permite apresentar informações através de tags
(Harold, 2004). Tipicamente os arquivos XML são
compostos de elementos e atributos e, seu formato
facilita a edição e interoperabilidade entre ferramentas e plataformas.

3555

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

Para configurar a rede de modo a representar
uma subestação, é necessário um conhecimento aprofundado das CPN e da ferramenta DesignCPN. Como o DesignCPN exporta e importa os modelos no
formato XML, este trabalho apresenta uma ferramenta que oferece uma interface_gráfica a qual permite a
construção de modelos CPN gerando uma representação XML destes modelos, a qual pode ser importada pela ferramenta DesignCPN. Assim, o tutor responsável pela construção de cenários é dispensado do
conhecimento do formalismo CPN, necessitando
apenas conhecer o conteúdo da biblioteca de modelos
e as regras do contexto modelado.
A representação da rede CPN em código XML,
demandou um estudo do XML reconhecido pela
ferramenta DesignCPN. No Quadro 1 é apresentado
um trecho de código XML, do exemplo apresentado
na Tabela 1. Neste trecho é apresentado o lugar Aberto que é do tipo OpcoesPunho (onde a cor
OpcoesPunho representa a dupla o Nome do Painel
e Nome da Chave), instanciado com a ficha
1(LT02J5,DJ1205).

interface, assim como dos cenários construídos a
partir da ferramenta.
Os arquivos XML passarão a compor o motor de
simulação.

Figura 5. Arquitetura utilizada

3.2. Funcionalidades do ambiente de edição
Na Figura 6 é ilustrada a tela principal da ferramenta, que teve os ícones enumerados de 1 a 12 para
facilitar sua descrição, a seguir
1. Botão Exportar XML permite exportar um
documento XML da modelagem atual em formato
compatível com a ferramenta DesignCPN
2. Botão Salvar permite salvar a modelagem atual,
em formato próprio da ferramenta, para edição posterior (extensão .mod)
3. Botão Adicionar Comp permite adicionar o
componente que estiver selecionado na Biblioteca de
Componentes (é necessário ter adicionado um painel
para utilizar este botão)
4. Botão Excluir Comp permite excluir um componente da modelagem atual
5. Botão Comp. Principal permite definir qual
dentre os componentes de um determinado tipo é o
principal
6. Botão Adicionar Painel permite adicionar um
painel  modelagem
7. Botão Excluir Painel permite excluir um painel
da modelagem
8. Botão Ativar Painel permite especificar qual
painel será o principal. O padrão é que o primeiro
painel inserido é o painel principal. Para que outro
painel seja o principal, deve-se selecioná-lo e utilizar
este botão para ativá-lo
9. Botão Declarações permite consultar a declaração de fichas e funções
10. Biblioteca de Componentes contém os componentes que podem ser inseridos em uma modelagem.
É possível inserir um componente em um painel
arrastando-o da biblioteca e soltando-o sobre um
painel representado na interface_gráfica
11. Painéis permite alternar entre os painéis da modelagem
12. Área de modelagem nela são visualizados os
painéis com seus respectivos componentes.
Além das funções apresentadas é possível re-nomear
a subestação, através do menu principal em Subes-

<!-- Region 1 of node -->
<name id"id175">
<flags mask"false" omit"false" nobound"false"
nosizing"true"
visible"true">

<text>Aberta <text>
<name>
<!-- Region 2 of node -->
<type id"id176">

<text>OpcoesPunho<text>
<type>
<!-- Region 3 of region -->
<mark id"id177">

<!-- 0 regions(s) were found -->
<text>1(LT02J5,DJ12D5)<text>
<mark>
<text>1<text>
<mark-key>
Quadro 1. Trecho de código XML da rede tipo punho.

3.

Ferramenta

A ferramenta foi desenvolvida em Java (Java,
2010), para ambiente Windows.
3.1. Arquitetura
A arquitetura da ferramenta, ilustrada na Figura
5, consiste de três níveis
 Interface interface_gráfica para a interação
com o usuário.
 Lógica relaciona a biblioteca de objetos
armazenados em disco, com a interface armazena
em disco (em formato próprio) os projetos desenvolvidos e converte-os, através de um parser XML,
para o formato XML CPN.
 Persistência contém os descritores de cada
componente da biblioteca de objetos apresentado na

3556

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

tação. A subestação pode ser composta de um ou
mais painéis.

Na ferramenta, a opção adicionar novo componente
a biblioteca de objetos, é de uso exclusivo dos seus
desenvolvedores.

Figura 6. Tela da ferramenta.

Figura 7. Inserindo chave do tipo Punho

3.3. Exemplo de aplicação





A seguir é apresentado um exemplo de uso da ferramenta para o caso representado na Tabela 1, o qual
consiste na inserção de uma chave do tipo punho e de
suas dependências (Figura 6). Os passos realizados
no exemplo são listados a seguir



3557

Criar uma nova subestação
Adicionar um painel rotulado LT02J5
Adicionar o componente CHPunho, que é
uma chave do tipo punho, como apresentado
na Figura 7
Inserir as dependências que são a chave de
bloqueio e uma chave local telecomando,
como apresentado na Figura 8

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

cas. O arquivo XML exportado pela ferramenta pode
ser executado pelo DesignCPN funcionando como
motor_de_simulação para um simulador de treinamento_de_operadores. Uma vez que a ferramenta não
demanda conhecimentos de CPN para a criação dos
modelos, permite que qualquer engenheiro capacitado para ser tutor, possa criar os cenários de treinamento no simulador.
Com a disponibilização de ambientes virtuais
para treinamento, os operadores são imersos no ambiente real ao mesmo tempo em que são evitados
acidentes decorrentes de imperícia ou desconhecimento da instalação.
Ao longo do projeto, um dos maiores desafios
foi identificar em XML a página de hierarquia de um
modelo. A solução para este problema foi utilizar um
arquivo XML base, como citado e excluir as partes
que não eram utilizadas no modelo em construção.
Uma limitação da versão atual da ferramenta é
ainda não ser possível importar arquivos XML da
ferramenta Design CPN, embora seja possível armazenar os projetos criados em uma extensão própria e
exportá-los para o formato XML aceito pelo DesignCPN. Outra limitação desta versão é ainda não
ser possível editar a biblioteca de objetos, no ambiente da ferramenta. Estas limitações são desafios que
estão sendo colocados para a equipe de desenvolvimento como trabalhos em andamento.
Na versão inicial a ferramenta alvo para execução das redes foi DesignCPN, porém na versão em
desenvolvimento o código XML das redes geradas
está sendo mapeado para o XML da ferramenta CPN
Tools (CPN Tools, 2009), expandindo a funcionalidade da ferramenta para exportar arquivos XML
aceitos tanto por CPN Tools, quanto por DesignCPN. Este trabalho é necessário dado as dificuldades atuais de migrar um modelo entre estas duas
ferramentas de forma eficaz.

Figura 8. Inserindo chaves dependentes.

Após inserir as informações necessárias é possível
salvar o projeto e exportá-lo, gerando o arquivo
XML o qual irá compor o motor_de_simulação. O
conjunto de modelos denominado motor_de_simulação é executado na ferramenta DesignCPN.
3.4. Requisitos mínimosda ferramenta
Software 



Microsoft Windows XP ou superior
A máquina virtual Java da Sun, JDK
6.0 ou superior

Hardware 

Processador de 1Ghz ou superior

512 MB de memória RAM ou superior
 No mínimo, 100 MB de espaço livre em
disco.
3.5. Validação da ferramenta
A ferramenta foi validada a partir da construção
dos modelos que representam um cenário de treinamento. O ambiente modelado é composto por um
conjunto de dez painéis e cada painel contém um
conjunto de chaves. Uma vez construídos os modelos, o arquivo XML foi exportado para ferramenta
DesignCPN, onde a rede gerada foi compilada e
simulada. Como resultado deste processo constatouse que a rede gerada é funcional e corretamente instanciada.
Outro teste de validação consistiu em instanciar
um novo estado inicial para o cenário concebido
anteriormente. Em seguida, o cenário foi exportado
para o formato XML, do DesignCPN, e testado.
Enquanto o primeiro teste comprovou as funcionalidades da ferramenta, o segundo demonstrou a
facilidade de instanciar novos estados iniciais. Além
disto, foi possível alterar componentes, de modo a se
obter novos cenários.
Dado que esta validação é preliminar, como trabalho futuro pretende-se aplicar a ferramenta no
ambiente real, utilizando com usuários reais (os tutores), responsáveis pelo treinamento.
4.

Agradecimentos
Os autores agradecem s agências CNPq e CAPES
pelo apoio financeiro na forma de bolsa de pósgraduação para dois dos autores deste artigo.
Referências Bibliográficas
AnyLogic. Disponível em httpwww.xjtek.com.
Acessado em Janeiro de 2010.
CPN Tools, Computer Tool for Coloured Petri Nets.
httpwiki.daimi.au.dkcpntools. Acessado em
Fevereiro 2009.
DesignCPN, Computer Tool for Coloured Petri
Nets.
httpwww.daimi.au.dkdesignCPN.
Acessado em Fevereiro de 2009.
Harold, E.R.. XML 1.1 Bible. Wiley Publishing Inc.
2004.
Java. Disponível em httpjava.sun.com. Acessado
em Janeiro 2010.

Considerações finais

O front-end construído, consiste em uma ferramenta gráfica que permite construir modelos CPN a
partir de uma biblioteca de modelos de modo a representar cenários de treinamento em subestações elétri-

3558

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

Leite, R. R. C., Oliveira, J. J. R., Gomes, J. O., O uso
de simuladores no treinamento_de_operadores na
CHESF como ferramenta para disseminação de
conhecimentos na operação do sistema elétrico.
II Seminário internacional Reestruturação e
Regulação do setor de energia_elétrica e gás
natural, 2007.
Nascimento, J. A.N.  Turnell, M. F. Q. V.  Scaico,
A. . Modelando Componentes da IHM de
Sistemas Industriais em Redes de Petri
Coloridas. In VI Simpósio Brasileiro de
Automação Inteligente, 2003, Bauru. Anais do 6
SBAI - Simpósio Brasileiro de Automação
Inteligente, 2003. v. 1. p. 150-156.
Netto, A. V. S.  Nascimento Neto, J. A.  Queiroz,
M. F. V. . Realidade virtual aplicada a
instalações elétricas. In IX Simposio Brasileiro
de Automação Inteligente, 2009, Brasília. Anais
do IX Simposio Brasileiro de Automação
Inteligente, 2009.
Rincon, a. M.  fagundes, Fabiano  Lima, Carlos
Eduardo de . Uma Ferramenta Gráfica para
Construção de Hiperdocumentos Educacionais
Baseados em Grafos Conceituais e sua
Conversão para o Formato XML. In IADIS
Conf. Ibero-Americana WWWInternet 2005,
2005, Lisboa - Portugal, 2002.
Simulink. Disponível em httpwww.mathworks.
com productssimulink. Acessado em Janeiro
de 2010.

3559