Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

AUTOMACAO DE EXECUCAO DE CASOS DE TESTE PARA SISTEMA DE
CONTROLE DE ATITUDE E ORBITA DE SATELITES
Andre Rodrigues Simoes, Fabrcio Galende Marques de Carvalho


Fundacao de Ciencia, Aplicacoes e Tecnologias Espaciais
Av. Dr. Joao Guilhermino, 429
Sao Jose dos Campos, Sao Paulo, Brasil


Instituto Nacional de Pesquisas Espaciais
Av. dos Astronautas, 1758
Sao Jose dos Campos, Sao Paulo, Brasil

Emails andre.simoes@inpe.br, fabricio.galende@inpe.br
Abstract In the development of attitude and orbit control subsystem (AOCS) of artificial satellites periodic
testing tasks are required to confirm that all system functionalities meets project requirements. In this context,
the planning of creation and execution of tests has similar importance to the product planning step. AOCS
development requires time the final product is complex. Test automation is a mechanism to increase product
quality and reduce time spent in such activity. However, particularities not found in comercial software testing
must be taken into account for control system products due to its non-deterministic response characteristic and
the large amount of inputoutput data representing signals. Based on these observations, this article states about
analysis and application of two automated test execution techniques tipically stated on commercial software in
AOCS development context. From the analysis, tailorable approaches suited to our case study were identified
and two automatic test execution solutions stimulated by small textual descriptions capable to provide modular
refactoring and reuse of test functions were created in order to fasten product test cycles.
Keywords AOCS, artificial satellite validation and verification, automated test execution, control system
test, SW test, functional decomposition, keyword driven test
Resumo O desenvolvimento de um subsistema_de_controle_de_atitude e orbita (AOCS) de um satelite
artificial requer tarefas periodicas de teste para garantir que as funcionalidades atendam requisitos de projeto.
Neste contexto, planejar a producao e execucao dos testes tem importancia similar ao planejamento do produto
a ser desenvolvido. Desenvolver o AOCS requer tempo, o produto final e complexo. Automatizar a execucao
dos testes e uma forma de reduzir o tempo gasto na atividade e aumentar a qualidade do produto. Mas em um
sistema_de_controle, a caracterstica estocastica das respostas bem como o grande volume de dados estocasticos
amostrados nos testes exigem cuidados diferenciados nao encontrados em testes de produtos de outra natureza.
Baseado nestas observacoes, este artigo analisa a aplicacao de duas tecnicas de automacao de execucao de testes
no contexto de desenvolvimento de AOCS. A partir da analise, abordagens adaptaveis foram identificadas para
o estudo de caso e duas solucoes de execucao_automatica_de_testes foram geradas para agilizar os ciclos de teste
do produto excitadas por pequenas descricoes textuais que permitem reuso e atualizacao de funcoes de teste.
Palavras-chave 

1

Introducao

O papel do teste e o de determinar se o produto se comporta de acordo com os requisitos de
projeto (Sommerville, 2011). Testar exige tempo
em analise das necessidades e criacao, adaptacao e
atualizacao de codigo de teste ao longo do desenvolvimento do produto. Tarefa que pode ser facilitada por tecnicas de automatizacao de execucao
de teste ja conhecidas. Em se tratando de SW
comercial, (Song et al., 2010), (Xing et al., 2009),
(Nagowah and Doorgah, 2012) e (Fewster and
Graham, 1999) mencionam tpicos exemplos desta
abordagem de execucao automatizada de testes.
Contudo, devido ao contexto em que foram engendradas, suas metricas de validacao tipicamente
baseiam-se em dados determinsticos sem a presenca de comportamento dinamico. No SW de
AOCS, por exemplo, um sinal constante como entrada incita respostas distintas nas sadas, que podem se modicar ao longo do tempo, de acordo
com o estado em que o satelite se encontra.
Observando estas consideracoes, este trabalho

O projeto do sistema_de_controle_de_atitude e orbita e uma importante etapa relacionada ao desenvolvimento de satelites articiais. Nesta etapa,
tipicamente designa-se por AOCS (Attitude and
Orbit Control Subsystem) o subsistema responsavel por controlar a direcao do satelite no espaco
ou alterar sua orbita conforme os comandos que
partem de solo. O desenvolvimento do AOCS resulta em um equipamento eletronicamente conectado e um software (SW) embarcado expecco
para controle caracterizado por equacoes representativas de dinamica, fenomenos fsicos e por uma
serie de restricoes impostas por requisitos funcionais e nao funcionais do satelite. Estas restricoes
e exigencias tornam o AOCS altamente complexo
e, por este motivo, e comum encontrar varias fases de teste do satelite no cronograma de agencias
espaciais (Wertz and Larson, 2010) para garantir
alto grau de qualidade.

4187

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

analisa a aplicacao de duas tecnicas de automatizacao de execucao de testes em um sistema de
controle de satelite simplicado. No contexto de
projeto de AOCS, esta analise tem como objetivo
 Vericar a aplicabilidade das tecnicas
 Automatizar totalmente ou parcialmente as
atividades de teste
Figura 1 Modelo de sistema_de_controle simplicado de um satelite

 Facilitar o processo de atualizacao dos testes
 Viabilizar o reuso de funcoes de teste.

Variavel
JSAT

Este trabalho esta estruturado da seguinte
forma A secao 2 descreve o sistema_de_controle de
atitude simplicado que foi submetido aos testes
(System Under Test - SUT) automaticamente executados pelas solucoes obtidas. A secao 3 disserta
sobre as duas tecnicas de teste escolhidas para a
analise. A secao 4 detalha a viabilidade de aplicacao das tecnicas para a geracao das ferramentas
que aplicam automaticamente os testes. A secao
5 mostra resultados obtidos pelas execucoes das
ferramentas de teste geradas a partir de cada tenica. A secao 6 traz as conclusoes obtidas perante
a analise efetuda.

2

JRW

VM AXRW

TM AXRW

Descricao fsica
momento de inercia do satelite
momento de inercia da roda de reacao
Velocidade
maxima da roda de
reacao
Torque maximo
gerado pela roda
de reacao

Valor
184.1176 kg.m2
0.0028 kg.m2
 5000 rpm
 0.11 N.m

Tabela 1 Conguracoes usadas nas simulacoes

Sistema em Teste

3

A gura 1 descreve um modelo simplicado de
controle e dinamica de um (1) eixo para um satelite que utiliza uma roda de reacao contendo saturacao mas sem zona_morta e atrito para controle
de atitude. O tipo de orbita adotado para este
satelite e circular.
Neste sistema, o sinal de controle indica a roda
de reacao o valor de torque necessario para que
o Satelite assuma a orientacao. A roda de reacao, respeitando sua limitacao de velocidade maxima, acelera ou desacelera para gerar um torque
no corpo do satelite. O bloco Satelite recebe o
torque da roda e modica sua atitude de forma a
se aproximar ao valor de referencia no decorrer do
tempo. O bloco sensores usa giroscopios para medir a velocidade e magnetometros junto a sensores
solares (coarse sun sensors) para medir a direcao
angular do satelite. O bloco determinacao_de_atitude e o algoritmo determinstico TRIAD (Shuster
and Oh, 1981) que calcula a posicao_angular atraves dos resultados de funcoes de determinacao de
direcao do sol e do campo magnetico baseados na
leitura dos sensores. O bloco filtro de atitude tem
a funcao de um ltro das medicoes que, logo em
seguida, sao realimentadas. As conguracoes fsicas deste modelo sao descritas na Tabela 1. A
descricao do funcionamento dos sensores e da roda
de reacao e dada por (Wertz, 2002).

Tecnicas de execucao automatica de
teste

Tipicamente, o AOCS e um sistema desenvolvido
atraves de um processo evolutivo. Por questoes nanceiras ou de negocio, ele pode sofrer alteracoes
arquiteturais ao longo do projeto. No ambiente
em que o produto pode mudar de forma suave ou
drastica, o teste de funcionalidades deve ser orientada por parametros comuns as diferentes arquiteturas (e.g. precisao de apontamento). Os casos de
teste poderiam ser descritos em linguagem de alto
nvel, poupando detalhes de testes subsistemicos e
deixando que os mesmos possam ser tratados por
subrotinas de teste mais especcas. Neste cenario, tambem se faz necessario o reuso de codigo
de teste mediante a evolucao do sistema. Nao seria interessante refazer toda a solucao de teste se
apenas uma parte isolada do produto sofreu alteracaoreconguracao.
As tecnicas de decomposicao_funcional e de
teste_dirigido_por_palavras_chaves exigempermitem estruturacao modular do codigo de teste e
viabilizam reuso. Nestas abordagens os casos de
teste sao feitos em pseudocodigo em artefatos distintos ao codigo de teste. Com estas caractersticas, ambas as tecnicas sao candidatas a auxiliar
no desenvolvimento de AOCS, e serao analisadas
logo a seguir.

4188

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

3.1

Decomposicao funcional

Na decomposicao_funcional, as funcionalidades de
um produto sao decompostas e invocadas em funcoes e sub-funcoes que se correlacionam de forma
hierarquicamente organizada. Tais funcoes (ou
scripts) sao usadas de forma isolada para formar
casos de teste de submodulos ou para compor casos de teste de nvel sistemico ao serem chamados
pelas funcoes de teste que atuam neste ultimo nvel. Os valores de entrada permanecem em arquivos separados.
Nesta abordagem, do ponto de vista computacional, o reaproveitamento das funcoes de teste
em outras funcoes ou algoritmos de teste de nvel
sistemico mais alto gera uma pilha de chamada
de funcoes de teste. O diagrama de atividades
simplicado da gura 2 descreve o processo de geracao das funcoes de teste e a correlacao entre as
funcoes hierarquicamente vizinhas que geram esta
caracterstica.
Em carater especial, a acao Gerar funcao de
teste para o requisito especfico, que tem seu comportamento descrito na gura 3, devera ser chamada mais vezes se existir a necessidade de gerar diferentes funcoes para atingir os objetivos de
teste. O diagrama de atividades da gura 3 tambem observa que, nem todas as funcoes de teste de
requisitos lhos devem ser utilizadas em funcoes
de teste de requisito de nvel mais alto de acordo
com o escopo de atividades da funcao. Adicionalmente, funcoes utilitarias (e.g. delays, geradores
de relatorios, etc) tambem podem ser disponibilizadas para diminuir o trabalho de desenvolvimento dos casos de teste.
3.2

Figura 3 Geracao de funcao de teste para um
requisito especco

vras sao processadas por um script diretor para
executar outros scripts que invocam funcionalidades especcas do produto em teste. A gura 4
descreve um modelo de processo simplicado que
gera funcoes de teste e as palavras chaves correlacionadas. A identicacao de subfuncoes e iteracao
do codigo caracterizam reuso e organizacaosimplicacao ao longo do desenvolvimento da solucao.
Funcoes de teste subsistemico podem ser reutilizados por testes sistemicos. Adicionalmente, funcoes
de teste desenvolvidas por outras tecnicas, como
a decomposicao_funcional, podem ser adaptadas e
reusadas neste contexto.
4
4.1

Teste dirigido por palavras chaves

Estudo de caso

Decomposicao funcional

O teste_dirigido_por_palavras_chaves (Keyword
Driven Test) e uma tecnica que utiliza palavras
chaves, acompanhadas ou nao por dados, para
descricao em alto nvel dos testes. Estas pala-

Esta tecnica tem maior aplicabilidade em funcionalidades do AOCS que nao apresentam comportamento dinamico devido a organizacao estrutural
formada entre as funcoes de teste. Ao aplica-la diretamente aos blocos do sistema em malha_fechada

Figura 2 Descricao da mecanica para a geracao
das funcoes de teste para o sistema

Figura 4 Atividade que processa um requisito
para gerar a funcao de teste

4189

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

observou-se a necessidade de uma analise de comportamento dinamico adicional para a geracao de
valores de entrada as funcoes de nvel subsistemico
quando as mesmas eram chamadas em funcoes de
nvel sistemico (e.g. teste da roda de reacao chamada em teste do sistema_de_controle). Observouse tambem a necessidade adicional de substituicao
das conexoes de entrada e sada dos blocos testados pelos resultados das funcoes de teste subsistemicas invocadas em testes de nvel sistemicos.
Devido a tais observacoes, preferiu-se utilizar apenas os componentes de determinacao_de_atitude,
determinacao da direcao do Sol e componentes de
simulacao de sensores solares como SUT na aplicacao da decomposicao_funcional. O determinador
do campo magnetico juntamente com os dados dos
manetometros foram substitudos por vetores de
campo magnetico informados diretamente como
dados de entrada. Considerou-se como requisitos
de projeto a correta implementacao das funcionalidades supracitadas.
Feita a analise, um algoritmo orientado a linguagem objeto em C++ foi gerado para testar
cada nvel das funcionalidades. No lugar de gerar
funcoes de teste, classes foram estruturadas para
a execucao dos testes e para tratamento especco
das informacoes de entradasada e de metrica de
teste de cada comportamento. Ao observar a presenca de atributos e metodos comuns no codigo,
uma classe pai foi gerada para denir comportamentos mnimos necessarios para criacao dos testes e facilitar as operacoes de execucao e impressao
de resultados obtidos.
Nesta solucao, a comunicacao das informacoes
entre os varios nveis de teste foi feita atraves de
um metodo na classe sistemica que tem como argumento de entrada um ponteiro para o objeto
da classe subsitemica. Inicialmente, atributos que
nao dependem de atualizacao sao acessados e seu
ponteiro e armazenado internamente ao novo teste
nesta mesma operacao. Apos a execucao dos testes subsistemicos, o teste de nvel sistemico acessa
novamente o ponteiro para adquirir os resultados
(valores atualizados) ao executar o teste.
Os dados de entrada e os valores esperados
dos casos de teste foram organizados em arquivos
de texto. Funcoes de leitura foram criadas para
a ler estes arquivos e criar um objeto da classe
de teste correspondente. Funcoes de geracao de
teste por parametros de entrada diretamente em
codigo tambem foram geradas para testes que exigem poucas informacoes.
A gura 5 exemplica um codigo de teste feito
para testar a determinacao_de_atitude. Para o algoritmo TRIAD sao necessarios quatro (4) componentes vetoriais para o calculo da posicao_angular.
A direcao do Sol e do campo magnetico observados
em Terra e a direcao do campo magnetico observado via Satelite sao informados em um arquivo
texto. A direcao do Sol computada pelo satelite

Figura 5 Codigo de teste gerado atraves da solucao baseada em decomposicao_funcional

e informada pelo resultado do caso de teste de
determinacao de direcao do Sol. Este ultimo faz
uso dos resultado de dois (2) testes de sensores
solares para realizar seu calculo. Nesta arquitetura, problemas detectados em etapas subsistemicas sao reportadas antes da execucao do teste de
nvel sistemico. Se os testes sao especcos para
um componente subsistemico (teste isolado de sensores solares) este mesmo codigo diretor (driver de
teste) devera ser gerado especicamente para tal.
4.2

Teste dirigido por palavras chaves

Considerando o comportamento dinamico em malha_fechada e em blocos de controle isolados, o
metodo de comparacao entre os valores obtidos e
esperados e a maneira como os dados dos testes
sao informados sao os principais pontos a serem
observados na implementacao da tecnica. Para
torna-la viavel, pontos que descrevem o valor incial e nal da referencia de entrada foram correlacionados com valores de tempo na descricao dos
casos de teste. A partir deles, funcoes especcas
da ferramenta de teste sao encarregadas de gerar
todos os valores intermediarios que compoem o sinal ao longo da simulacao. Geradores de sinais do
tipo degrau ou rampa foram usados nesta abordagem de acordo com o tipo do caso de teste.
Os valores esperados podem ser informados
de duas formas 1) com um valor constante usado
para vericar se a resposta tende a este valor 2)
com valores retornados por uma funcao externa
para descrever o comportamento esperado do sistema. Ambas as formas sao acompanhadas de
uma segunda variavel que dene a faixa de tempo
da simulacao que permite a comparacao total dos
resultados ou a comparacao parcial dos dados da
simulacao (e.g analise de precisao em regime estacionario ou transiente).
Uma margem de erro tambem foi adicionada
para a execucao das comparacoes. Etapas iniciais do ciclo de desenvolvimento do SW de AOCS
tendem inicialmente a utilizar modelos simplicados ou ideiais a titulo de analise de viabilidade

4190

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

Palavra-chave
SetMinError
SetSimTime
rw.ApplyStepTorque
SetSimTime
sat.changeDirectionTo

sat.changeDirectionTo

Dados de entrada
Resultados Esperados
0.01
80
startTime 0 30 
externCall rwBehavior( 5000, 0.11,
inputTorque  0.11 -0.11 
0.0028, rwInputTorque, 80, 0.1 )
7200
checkTime  200 7180 
angularPosition  0 360 
externCall rampFunction(
startTime  0 7200 
360, 7200, 0.1, 7200 )
signalType Ramp
maxRwSpeed 5000
angularPosition  6 
checkTime 40
startTime  0 
angularPosition 6
signalType Step

Tabela 2 Exemplo de caso de teste feito em tabela com palavras chaves
com renamento e melhorias ao longo dos novos
ciclos. Uma margem de erro, neste caso, e fatalmente esperada. Alem disso, o sistema_de_controle
tipicamente oferece resultados que tendem a um
determinado valor e a metrica de comparacao utilizada em SW comerciais puramente determsticos nao seria adequada para vericar os resultados
dos testes.
Uma outra necessidade que foge aos SW de
outra natureza e o uso de constantes fsicas (vide
Tabela 1). A solucao foi designar um artefato especco para informar a ferramenta de teste sobre
estes valores e evitar repeticao destas informacoes
nos casos de teste.
A Tabela 2 exemplica uma especicacao baseada na tecnica de execucao_automatica_de_testes dirigido por palavras chaves. Nela, cada linha representa um caso de teste ou uma alteracao nas conguracoes do teste. SetSimTime dene o tempo total em segundos usado na simulacao. SetMinError congura o erro entre os valores esperados e obtidos. Nesta solucao, testes de
componentes determinsticos de SW nao foram
considerados.
Casos de testes isolados na roda de reacao podem ser invocados pela palavra chave
rw.ApplyStepTorque dados em inputTorque e
StartTime indicam o valor de torque e seu perodo
de estimulacao. Os valores esperados sao gerados
por uma funcao externa denida pelo usuario atraves de externCall  quando o parametro e omitido,
a ferramenta utiliza uma funcao interna de geracao dos valores esperados.
Casos de teste no sistema em malha_fechada
sao invocados por sat.changeDirectionTo a tripla ( angularPosition, startTime, signalType ) indica a posicao_angular que o satelite deve apontar, os instantes em que estes valores sao colocados na entrada e o tipo sinal que sera gerado
entre os instantes, respectivamente. Em Expected Results, checkTime aliada a angularPosition
ou externCall denem os dados esperados e o intervalor de comparacao com os resultados. Adi-

cionalmente, maxRwSpeed permite vericar se a
roda se mantem dentro da velocidade especicada
ao longo do teste. O apontamento do satelite para
o Sol (modo de contingencia) e feito com entradas
degrau (Sol em posicao xa) apontar o satelite
para a Terra exige manutencao da sua velocidade
de referencia. No caso de uma orbita circular a velocidade tende a um valor constante e uma rampa
pode ser utilizada na entrada para o teste.
5
5.1

Resultados Obtidos

Decomposicao Funcional

Inicialmente, variacoes foram aplicadas aos valores
dos arquivos lidos pelo driver de teste descrito pela
gura 5 para vericar se a ferramenta orientada a
decomposicao_funcional detectava corretamente as
alteracoes de parametros. Desconsiderando os algoritmos de determinacao, teste de valores limites
foram aplicados com relacao a deteccao de raios
solares na borda do campo de visao dos sensores e
tambem com relacao a maxima incidencia de luz
solar.
Para validar o determinador de atitude e direcao solar, dois sensores foram congurados em
posicoes que permitiam a computacao do Sol. Casos de teste para identicar a correta operacao dos
algoritmos foram denidos e aplicados. Erros propositais foram adicionados aos codigos para avaliar a deteccao dos mesmos. Foram testados os
cenarios que permitem o calculo da atitude e cenarios de singularidade (paralelismo entre a vetor
da direcao do Sol e do campo magnetico que inviabiliza o uso do TRIAD). Os sensores utilizados
eram livres de incertezas e rudos.
As guras 6a, 6b, 7a e 7b, exemplicam um
cenario de paralelismo testado em um algoritmo
determinador de atitude que foi submetido a mutacao. Ambos os sensores foram congurados com
um campo de visao (fov ) de 180 graus e fornecimento de corrente maxima de incidencia solar
(maxCurrent) de 15mA. O primeiro sensor se en-

4191

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014
minError 0.00001

minError 0.00001

fov 180
normal  0 1 
maxCurrent 15
expectedOutput 15

fov 180
normal  0.03489949 0.99939082 
maxCurrent 15
expectedOutput 14.99086

(a) tc01-sunSensor01.txt

Call geramos sadas em rampa e tambem descrevemos o comportamento do torque e da velocidade
da roda atraves de integracao numerica. Ambas
as abordagens demonstraram que a ferramenta foi
ecaz na deteccao de anomalias e na correta operacao do sistema_de_controle.
Nos resultados que se seguem, juntamente
com as especicacoes descritas na tabela 2, um
erro de conguracao foi simulado atraves da substituicao do valor real de JRW utilizado pelo SUT
por um valor 10 vezes menor do que o especicado
inicialmente.
O primeiro teste avaliou a geracao de torque
pelo atuador bem como seu comportamento em
saturacao perante uma entrada degrau. As guras
9-12 sao suas sadas gracas. Elas evidenciam que
os valores obtidos sao bem dispares dos valores
esperados especicados.
O segundo teste avaliou o apontamento para
o Sol considerando este em uma posicao_angular
xa a 30 graus da atitude inicial do satelite. Neste
caso o satelite nao consegue acompanhar a variacao angular exigida em regime transiente e alcanca
o regime estacionario minutos apos o instante previsto no teste (guras 13 e 14). A gura 15 mostra
que a roda de reacao nao fornece torque necessario
e satura logo de incio, permanecendo neste estado
devido ao erro retornado ao controlador PD que

(b) tc01-sunSensor02.txt

Figura 6 Fragmento dos arquivos que denem a
conguracao dos dois sensores usados no teste
minError 0.001
refSunDir  0 1 
refMagDir  0 1 
bodyMagDir  0 1 

minError 0.0001
expectedSunVector  0 1 

expectedDegreeRotation -1

(a) tc01-attitude.txt

(b) tc01-sunVector.txt

Figura 7 Arquivos de entrada dos testes de determinacao_de_atitude e determinacao do vetor Sol
contra apontado para cima (normal ), exatamente
a 90 graus do eixo-x. O segundo sensor foi direcionado a 88 graus. A direcao dos raios solares que
partiram do vetor (0,1) foram informados como
entrada dos sensores e como sada esperada (expectedSunVector ) do algoritmo de determinacao
da direcao do Sol.
Para o determinador de atitude foram informados as direcoes do Sol e do campo magnetico
vistas de Terra (refSunDir e refMagDir ) e a direcao do campo magnetico vista pelo satelite (bodyMagDir ). Em cenarios de nao paralelismo dos vetores o algoritmo deve retornar rotacoes entre 0
e 360 graus. Como o calculo e impossvel, a resposta esperada (expectedDegreeRotation) especicada para o algoritmo e o valor -1. A gura 8
mostra a identicacao de um erro no tratamento
da singularidade pela solucao.
5.2

Teste dirigido por palavras chaves

Para comprovar a ecacia dos testes, a ferramenta
solucao foi congurada com os parametros fsicos descritos na tabela 1. Testes foram aplicados na conguracao original do SUT seguidos dos
mesmos testes em versoes alteradas do SUT (erro
em conexoes ou alteracoes de parametros fsicos).
Para as funcoes externas permitidas por extern-

Figura 9 Velocidade esperada e obtida da roda
de reacao
rpm
500
Erro entre a velocidade
obtida e esperada

expected sun sensor current  15
obtained sun sensor current  15
VEREDICT PASSED
expected sun sensor current  14.99086
obtained sun sensor current  14.990862
VEREDICT PASSED
Expected sun vector   0 1 
Obtained sun vector   -3.870875e-015 1 
VEREDICT PASSED
expected angular rotation (degrees)  -1
obtained angular rotation (degrees)  0
VEREDICT FAILED

0

500

1000
0

20

40

60

80
tempo (s)

Figura 8 Resultados do teste de singularidade no
codigo com mutacao

Figura 10 Erro computado na velocidade da roda
de reacao

4192

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014
N.m
Torque obtido
Torque esperado

0.1

0.05

0

0.05

0.1
0

20

40

60

80
tempo (s)

Figura 14 Erro de apontamento para o Sol do
satelite

Figura 11 Torque esperado e obtido da roda de
reacao

Figura 15 Velocidade gerada pela roda de reacao
em malha_fechada (apontamento para o Sol)

Figura 12 Erro computado no torque de sada da
roda de reacao

com JRW alterado recebeu o mesmo teste. As guras 16, 17 evidenciam que o satelite nao alcanca
a velocidade necessaria para atender a especicacao. A gura 18 mostra que a roda satura logo no
incio do teste.

continua a exigir mais torque da roda.
O terceiro teste utilizou a mesma palavra
chave do teste de apontamento para a Terra para
observar uma manobra de atitude (o tipo de sinal
de entrada exigido nos dois casos e uma rampa).
Anteriormente ao teste, foi vericado que o SUT
original atendia a especicacao de velocidade_angular mnima de 0.05 s para girar o satelite
exemplo descrito em (Wertz and Larson, 2010)
completamente em torno de si proprio em aproximadamente 2 horas. Logo em seguida o SUT

6

Conclusoes

Este estudo conclui que e possvel utilizar a tecnica
de teste dirigo por palavras chaves para agilizar as
atividades de teste do AOCS tanto no contexto de
desenvolvimento do sistema_de_controle bem como

Figura 13 Apontamento para o sol esperado e
obtida do satelite

Figura 16 Apontamento (sinal rampa) esperado
e obtida do satelite

4193

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014
graus
0

Agradecimentos
Erro entre a posição
angular esperada e
obtida

5

Os autores agradecem ao Dr. Adenilson Roberto
da Silva e ao Conselho Nacional de Pesquisa e
Desenvolvimento Tecnologico (CNPq), por parte
do apoio dado atraves do projeto do CNPq No
5601312010-0 , intitulado CAPACITACAO EM
PROJETO DO SISTEMA DE CONTROLE DE
ORBITA E ATITUDE DE SATELITES ESTABILIZADOS EM 3 EIXOS, VIABILIZANDO O
ACDH COMPLETO DO SATELITE LATTES1.

10
15
20
25
30
0

2000

4000

6000

8000
tempo (s)

Figura 17 Erro de resposta a rampa de entrada
no satelite

Referencias
Fewster, M. and Graham, D. (1999). Software
Test Automation, ACM Press books.
Nagowah, L. and Doorgah, K. (2012). Improving
test data management in record and playback
testing tools, Computer Information Science
(ICCIS), 2012 International Conference on,
Vol. 2, pp. 931937.
Shuster, M. D. and Oh, S. D. (1981). Threeaxis attitude determination from vector observations, Journal of Guidance and Control
4(1) 7077.
Sommerville, I. (2011). Engenharia de Software,
Pearson Education.

Figura 18 Velocidade gerada pela roda de reacao
em malha_fechada (entrada rampa)

Song, M., Yin, G., Wang, H. and Ni, J. (2010).
Eect-oriented function analysis and testing
method, Internet Computing for Science and
Engineering (ICICSE), 2010 Fifth International Conference on, pp. 3438.

no contexto de desenvolvimento do SW. A correta modularizacao das funcionalidades de teste
permite a adaptacao e reuso de funcoes de teste especcas. Se um bloco do sistema em teste for atualizado, as funcoes de teste correlacionadas tambem poderao ser atualizadas sem a necessidade de
alterar a estrutura dos demais casos de teste desde
a sua especicacao ate o codigo de teste propriamente dito. A especicacao dos testes em tabelas
permite uma visualizacao mais clara dos testes e
nao exige do testador conhecimentos de codicacao da ferramenta. Contudo, ainda e necessario
o conhecimento de uma pseudo-linguagem para a
denicao dos casos de teste.

Wertz, J. R. (ed.) (2002). Spacecraft Attitude Determination and Control, Kluwer Academic
Publishers.
Wertz, J. R. and Larson, W. J. (2010). Space
Mission Analysis and Design, 3rd edn, Microcosm Inc.
Xing, L., Yan, L., Mian, C. and Ying, G. (2009).
The testing and evaluating system for the security operating system based on the mechanism of keyword-driven, Information Assurance and Security, 2009. IAS 09. Fifth International Conference on, Vol. 2, pp. 471
474.

Tambem cou claro que a tecnica de decomposicao_funcional permite automatizacao dos testes
do sistema_de_controle. De acordo com nosso estudo, esta e mais indicada no contexto de SW de
AOCS e congura uma automacao parcial da execucao dos testes como um todo. Ao longo do desenvolvimento tipicamente incremental eou iterativo deste tipo de sistema_de_controle, as funcoes
de transferencia podem se tornar complexas. O
custo de analize necessario para reaproveitar testes de nvel subsistemico em testes de nvel sistemico pode afetar a usabilidade da tecnica.

4194