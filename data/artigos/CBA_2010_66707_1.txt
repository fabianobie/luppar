ON ITERATIVE FEEDBACK TUNING FOR SYSTEMS WITH NONSMOOTH

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro
2010, Bonito-MS.
NONLINEARITIES

Manoel Fabricio Flores da Cunha, Alexandre Sanfelice Bazanella


Departamento de Engenharia Eletrica
Escola de Engenharia
Universidade Federal do Rio Grande do Sul
Av. Osvaldo Aranha, 103 CEP 90035-190
Porto Alegre, RS, Brazil
Emails floresdacunha@mandic.com.br, bazanela@ece.ufrgs.br
Abstract Iterative Feedback Tuning (IFT) is a controller tuning method that minimizes a performance
criterion with no process model information, based only on experimental data. Extensive theoretical developments of IFT are available for linear systems, but the literature lacks formal results for the nonlinear case.
This paper presents evidence that the method is suitable for tuning systems that exhibit some classes of hard
(nondierentiable) nonlinearities such as saturation, backlash and dead zone.
Keywords

Data Based Control, Iterative Feedback Tuning, dead zone, backlash, saturation.

Resumo Iterative Feedback Tuning (IFT) e um metodo de sintonia de controladores que minimiza um
criterio de desempenho utilizando apenas dados experimentais do processo, dispensando assim o conhecimento
de um modelo do mesmo. O desenvolvimento teorico do IFT para sistemas_lineares e bem estabelecido, o que
nao ocorre quando trata-se de sistemas_nao_lineares poucos resultados estao disponveis na literatura e com
baixo formalismo. Este artigo apresenta indcios da aplicabilidade do metodo em sistemas que apresentam certas
classes de nao-linearidades do tipo dura (nao-diferenciaveis) tais como a folga, a zona-morta e a saturacao.
Palavras-chave

.

Introduction

Control performance criteria are a key element in
control systems theory. Not only are they fundamental from a conceptual point of view but this
concept also leads to a large variety of control design methods, which are formulated as optimization problems. The solution of these optimization
problems usually relies on full knowledge of the
process to be controlled and of the characteristics of its disturbances. Often it is also required
that the controllers transfer function can be freely
chosen. These conditions are usually not fullled
in practice, which motivates the development of
methods for the design of xed structure regulators with partial or even conceivably no a priori
modeling of the process. The minimization of the
performance criterion, in these methods, is performed directly from data collected from the system, which motivates the designation data-based
control design. (Bazanella et al., 2008)One such
method is Iterative Feedback Tuning (IFT), originally described by Hjalmarsson et al. (1994) and
discussed in depth in Hjalmarsson et al. (1998).
IFTs application on nonlinear_systems have been
studied by Bruyne et al. (1997) and Hjalmarsson (1998). The latter presents conditions that
are apparently too restrictive for the method to
work on nonlinear_systems, somewhat dismissed
by the authors as being too conservative. The paper presents a practical application to a system
This work supported by CNPq, Conselho Nacional de
Desenvolvimento Cientco e Tecnologico - Brazil

exhibiting backlash, but, other than that, there
seems to be nothing in the literature concerning
IFT and nonlinearities like dead zone and saturation, the focus of this paper.
2
2.1

Preliminaries

System definitions and notation

Consider a linear time-invariant discrete-time
single-input single-output process
y(t)  G(z)u(t) + (t),

(1)

where z is the forward time-shift operator, G(z)
is the process transfer function, assumed rational
and proper, u(t) is the control input and (t) is
the process noise. The noise is a quasi-stationary
process which can be written as (t)  H(z)e(t),
where e(t) is white noise with variance e2 . This
process is controlled by a linear time-invariant
controller C(z, ) which is assumed to have a parametric structure as specied below.
Assumption 1 Linear Parametrization
C(z, )  T C(z),
where   D  Rp and C(z) is a column vector
of fixed rational functions.
It is further assumed that C(z, )G(z) has
positive relative degree for all   D . Some of
the most common controller structures are linearly

5276

parameterized, PID with xed derivative pole be-

2.3

Iterative Feedback Tuning

XVIIIing
Congresso
Brasileiro
de Automática
a 16 Setembro 2010, Bonito-MS.
the most
popular.
One such 12
parameterization

can be written as

C(z, )  Kp Ki

Kd



1

1
z1

z1
z

T

.

The control action u(t) is given by
u(t)  C(z, )(r(t)  y(t)),

Iterative Feedback Tuning is based on the gradient method, in order to minimize the performance
criterion described in 4. The minimum of the criterion is determined by

(2)

where r(t) is the reference signal, which is assumed
to be quasi-stationary and uncorrelated with the
noise, that is
E r(t)e(s)  0 t, s
(3)

N
where Ef (t)  limN  N1
t1 Ef (t) and E
denotes expectation (Ljung, 1999). The system
(1)-(2) in closed-loop becomes
y(t, )  T (z, )r(t) + S(z, )(t)
C(z, )G(z)
 C(z, )G(z)S(z, )
1 + C(z, )G(z)
where we have now made the dependence on the
controller parameters  explicit in the output signal y(t, ).
T (z, ) 

0

N
J
1 
 y
() 
y(t, ) (t, )

N t1


(6)

Since y(t, ) is a known quantity, theres only
the need to estimate y (t, ). The biggest contribution of the IFT method is to show that such
estimate can be obtained by performing two experiments in the closed-loop system rst, data is
taken during normal operation, that is, with the
desired reference as input. The second experiment
then uses the error in the rst experiment (system output subtracted from the reference input)
as the reference and, from the signals obtained in
that experiment, the aforementioned quantity can
be estimated by a ltering operation


2.2


 yt
1 C
est
() 
(i )y 2 (i )

C(i ) 

The Model Reference Control Problem

We want the closed-loop to achieve a given performance which is specied by a desired closed-loop
transfer function
yd (t)  Td (z)r(t),
called reference model in the literature. We thus
search for the controller parameters that make the
output of the system the closest to the desired one,
by solving the following optimization problem.
min J()






J()  E (y(t, )  yd (t))2  E y(t, )2 . (4)
Under the hypothesis (3), the cost function
(4) can be divided into two terms
J()  Jy () + Je ()

(5)

where each term represents a conceptually dierent control objective
 reference tracking


Jy ()  E ((Td (z)  T (z, ))r(t))2 
 noise rejection


Je ()  E (S(z)(t))2 .
Of the several data-based tuning methods,
such as Frequency Domain Tuning (FDT), Correlation based Tuning (CbT), Virtual Reference
Feedback Tuning (VRFT) and Iterative Feedback
Tuning (IFT), IFT is the only one that can minimize both the tracking error Jy and the noise rejection criterion Je . This is achieved by using data
from two closed-loop experiments to obtain an estimate to the gradient of J(), so reference tracking and noise rejection are taken into account.

(7)

Where the superscript denotes that data is
obtained from the second experiment. With an
estimate of the gradient, the parameters vector
can be iteratively updated in a cost-minimizing
direction,
i+1  i  i Ri1 est J(i )

(8)

Where  is the step size, a positive quantity,
and R is a positive denite matrix that determines
the search direction. If the identity matrix is used,
for a small enough step size, we are always moving
in a gradient descent direction. R is typically a
Gauss-Newton approximation of the Hessian of J,
as it usually yields a faster convergence, and all
results in this paper are obtained with this setup.
2.4

Nonlinearities

Graphical and analytical models of the three
nonlinearities discussed in the paper, saturation,
backlash and dead zone, are presented next.
2.4.1

Saturation

Saturation is a condition in which a quantity no
longer responds to an external stimulation. It directly represents the limits of rate or amplitude
in actuators or states of a system, as in gure 1.
More fundamentally, it represents the physical impossibility to supply a system with innite energy
(Kapila and Grigoriadis, 2002). It can be modeled
by equation 9 (Tao and Kokotovic, 1996).

5277

y

2.4.3

Dead Zone

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

The dead zone is a nonlinearity that models the
blocking of a small magnitude signal, represented, on gure 3, when the signal is between
bl and br . The dead zone model is described in 11
(Tao and Kokotovic, 1996).

ymax

u

y

ymin
-mlbl

bl

Figure 1 Saturation model.

mr

u

br

ml



u(t)
y(t)  satu  ymax


ymin

2.4.2

if ymax < u(t) < ymin ,
if u(t)  ymax ,
if u(t)  ymin
(9)

Backlash

Backlash is the spacing in mechanical connections,
which leads to loss of movement of the driven part
when theres a direction reversal of the driver, until contact is reestablished (Khalil, 2001). It can
be modeled by equation 10 (Ahmad and Khorrami, 1999).

-mrbr

Figure 3 Dead Zone model.


mr (u(t)  br ) if u(t)  br ,
y(t)  Zu  0
if bl < u(t) < br ,


ml (u(t)  bl ) if u(t)  bl
(11)
3
3.1

Results

Simulations

For the simulated examples a rst-order discrete
time system was chosen, described by
G(z) 

876.32
z  0.7261

(12)

The system is controlled by a PI controller
parameterized as
C(z) 

Kp  z + Ki  Kp
z1

(13)

The reference model used in the IFT algorithm is given by equation 14.
Td (z) 

Figure 2 Backlash model.


m(u  B)






y  Bu  m(u + B)






y(t)

if u(t) > 0 and
y(t)  m(u(t)  B),
if u(t) < 0 and
y(t)  m(u(t) + B),
otherwise
(10)

1
z

(14)

The initial step size was 0  0.1 (whenever
the cost rose compared to the last iteration the
step size was halved and the controller parameters,
reverted to the ones calculated on i  1) and one
hundred iterations were performed, with 51 data
samples at each iteration. The initial vector of
controller parameters was
0 

5278



0.0001 0.0001



(15)

The ideal parameters, that is, the ones that

4.5

XVIIImake
Congresso
Brasileiro de system
Automática
 12 a exactly
16 Setembro
2010, Bonito-MS.
the closed-loop
behave
as the

dead zone  0
dead zone  0.8

4

desired reference model in 14 are

3.5

d 



0.001141135 0.000312557



3

(16)

2.5
X 0.5
Y 1.7377

2

3.1.1

1.5

Dead Zone

X 0.5
Y 0.93767

1

An input dead zone was applied to the previously
linear system and its value bl  br changed from
zero to 0.8 in 0.05 increments so that seventeen
runs of the IFT algorithm were performed. Figure 4 shows, in a logarithmic scale on y, how the
performance criterion evolves at each iteration, for
dierent values of the dead zone. It is easy to see
that even though the rate of convergence is not
the same, the criterion is always heading for the
global minimum. This holds true even for larger
values of the dead zone, not shown here.

0.5

0

0.2

0.4

0.6

0.8

1

Figure 5 System input with and without dead
zone.
3

1.5

x 10

1.45
1.4
1.35
1.3

6

10

dead zone  0
dead zone  0.8

1.25

4

10

1.2
2

10

1.15
1.1

0

10

0

0.1

0.2

0.3

0.4
0.5
dead zone size

0.6

0.7

0.8

2

10

4

10

0

10

20

30

40

50

60

70

80

90

100

Figure 6 Linear relation between dead zone size
and proportional gain.
4

x 10

Figure 4 Cost value at each iteration for dierent
dead zone values.
Figure 5 compares the input of the linear system and the non-linear system with maximum
dead zone, both systems having being tuned with
the IFT algorithm. It is remarkable that the input in the non-linear case is exactly the same as
the one in the linear case, shifted up to match the
dead zones value this is the textbook procedure
for dead zone cancellation and, of course, requires
knowledge of the dead zone limits - an information
which was not fed to the IFT algorithm.
Figures 6 and 7 show the linear relation between the dead zone size and the gains calculated
by the algorithm. It is important to notice that
even though perfect dead zone cancellation was
achieved, it is only valid for the reference level
that was used to excite the system during tuning
(in this example, a step change with amplitude of
3000). If the reference is changed, the system no
longer tracks the reference model without a new
tuning, as can be seen on gure 8, where the setpoint was changed to 300 units of the original
value.

5

4

3

0

0.1

0.2

0.3

0.4
0.5
dead zone size

0.6

0.7

0.8

Figure 7 Linear relation between dead zone size
and integral gain.

3.1.2

Backlash

An input backlash was applied to the previously
linear system and its value B changed from zero
to 0.4 in 0.025 increments so that seventeen runs
of the IFT algorithm were performed. Figure 9
shows, in a logarithmic scale on y, how the performance criterion evolves at each iteration, for

5279

3

3500

1.25

x 10

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.
3000

1.2

2500
1.15
2000
1.1
1500
1.05
1000
1

500

0

0

0.2

0.4

0.6

0.8

0.95

1

0

0.05

0.1

0.15

time (s)

Figure 8 System output for three dierent setpoint levels tuning was performed with the intermediate reference.

0.2
0.25
backlash size

0.3

0.35

0.4

Figure 10 Relation between backlash size and
proportional gain.
4

3.2

dierent values of the backlash. Contrary to the
dead zone case, the system does not always evolve
to the global minimum in fact, for backlash values larger than B  0.2, the algorithm gets stuck
in local minima.

x 10

3
2.8
2.6
2.4
2.2
2

6

10

backlash  0
backlash  0.2
backlash  0.4

1.8

4

10

1.6
1.4

2

10

1.2

0

0.05

0.1

0

10

2

0.2
0.25
backlash size

0.3

0.35

0.4

Figure 11 Relation between backlash size and integral gain.

10

0

10

20

30

40

50

60

70

80

90

100

Figure 9 Cost value at each iteration for dierent
backlash values.
Figures 10 and 11 show the relation between
the backlash size and the gains calculated by the
algorithm. Theres a linear relation up until the
point the system cannot overcome the backlash
eects (B  0.2).
3.1.3

0.15

Saturation

An input saturation bounded by umin  0 and
umax  1 was applied to the previously linear
system. Two methods of dealing with integral
windup were studied. First, a back calculation
and tracking scheme is tested with dierent gain
choices. The second method involves conditional
integration.
Back Calculation and Tracking One might
realize that, since the tracking gain appears in
the controller parameterization for a back calculation and tracking scheme, it could be possible
to tune this parameter with the IFT algorithm,

in a similar manner as the proportional, integral
and derivative gains. There are two issues that
prevent us from doing that rst, the controller is
now non-linear (and worse, non-smooth). Even if
it were to be approximated by a smooth function,
we could not estimate an unbiased gradient for
the IFT method to work properly unless we were
to ensure that saturation was present in each iteration in order to give us useful data (that is,
suciently informative).
With that in mind, two approaches were chosen. First, we implemented a back calculation
tracking scheme using the largely accepted tracking time (or gain) on equation 17 and, at each iteration, used the gains calculated on the previous
iteration to update the tracking gain.

Tt 

Ti Td .. . Kt 

1
Kd
Ki

(17)

Of course, now the controller is parameterized
in the PID form, as in

5280

3000

XVIII Congresso Brasileiro de Automática
 12 a 16 Setembro 2010, Bonito-MS.
2

(Kp + Kd )  z + (Ki  Kp  2Kd )  z + Kd
C(z) 
z2  z
(18)
With initial proportional and integral gains
as in 15 and derivative gain starting at zero. As
can be seen on gure 12, the algorithm rapidly
converges to a local minimum not far from the
initial conditions, and the output response, as seen
on gure 14, does not improve much as compared
to the initial response. It seems that coupling the
tracking gains choice with the gains tuned by the
IFT algorithm does not yield very good results,
at least for this example. The evolution of the
tracking gain with the number of iterations can
be seen on gure 13.

2500

2000

1500

1000

500

0

0

0.2

0.4

0.6

0.8

1

time (s)

Figure 14 Comparison between desired response
(solid), response with initial parameters (dashed)
and response after optimization (dotted).

5

1.4

x 10

out anti-windup compensation. Even though settling time is the same in both cases, rise time is
noticeably faster without anti-windup compensation, whereas overshoot is greatly reduced (practically eliminated) in the case anti-windup was implemented. It is up to the designer to determine
which situation is preferable and act accordingly.

1.3
1.2
1.1
1
0.9
0.8

4

0.7
0.6

4.4

0

20

40

60

80

100

x 10

4.3

iteration

4.2
final cost

Figure 12 Evolution of cost function with the
number of iterations.

4.1

4
1.6
3.9
1.5
3.8

1.4

0

5

10
tracking gain

15

20

tracking gain

1.3
1.2

Figure 15 Final cost as a function of the tracking
gain.

1.1
1
0.9
0.8
0.7

0

20

40

60

80

100

iteration

Figure 13 Evolution of the tracking gain parameter with the number of iterations.
Lastly, we resorted to a brute force technique
and ran the IFT algorithm several times (notice
the dierence between one iteration and one run),
varying the tracking gain from zero to 20 in 0.5
increments and comparing the results for each
gain. Figure 15 shows the nal cost (local minimum) as the tracking gain is increased and gure
16 compares the system output with and with-

Conditional Integration (for a PI controller) In this case, a simple test to check
whether the actuator is saturated is performed
and, if positive, integration is stopped. Cost progression is shown on gure 17 and a comparison
of the system response before and after the optimization can be seen on gure 18.
3.2

A Practical Example

The IFT algorithm was written in LabVIEW and
used to tune a controller for a permanent magnet
DC motor. The motor operates on 10V and has
a 1V deadband. Backlash is present but not detectable, as the sensor measures the motors shaft

5281

3000

0.1
z  0.9
The initial parameters vector is

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.
2500

Td (z) 

2000

0 



5

1

(19)



(20)

1500

1000

500

0

0

0.2

0.4

0.6

0.8

1

time (s)

Figure 16 Comparison between desired response
(solid), response without anti-windup compensation (dashed) and with tracking gain Kt  20
(dotted).

Figure 19 shows how the cost is reduced to
practically zero (noise and the motors neglected
electric pole preventing perfect tracking). The
system output, shown on gure 21, demonstrates
how the system closely tracks the desired reference model, and the system input, on gure 20,
depicts how the algorithm led the system from a
state where the controls were partially saturated
to a much more comfortable operating point.
0.25

0.2
5

3

x 10

0.15

2.5

0.1

2

0.05

1.5

0

1

5

10

15

20

25

30

Figure 19 Evolution of cost function with the
number of iterations.

0.5

0

0

0

10

20

30

40

50
iterations

60

70

80

90

100

10

Figure 17 Evolution of cost function with the
number of iterations.

9

8

7

3000

6

2500
5

2000

4

3

1500

2

0

0.2

0.4

0.6

0.8

1

1.2

1.4

1.6

1000

Figure 20 Comparison between the system input
for the initial controller (dashed-dotted) and after
the optimization (dashed).

500

0

0

0.2

0.4

0.6

0.8

1

time (s)

Figure 18 Comparison between desired response
(solid), response with initial parameters (dashed)
and response after optimization (dotted).

The nal controller, after 30 iterations, is
given by
C(z) 

speed and the backlash is on an output gearbox.
We used a sample time of 20 ms and collected 80
data points. 30 iterations were performed with an
initial step size 0  0.2. The chosen reference
model is described on equation 19, even though it
is known to not be on the class.

5282

1.706z  1.563
z1

(21)

4

Hjalmarsson, H. (1998). Control of nonlinear sysusing iterative_feedback_tuning, American Control Conference, 1998. Proceedings of
the 1998, Vol. 4, pp. 20832087 vol.4.

3.5
XVIII Congresso
Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.
tems
3

2.5

2

Hjalmarsson, H., Gevers, M., Gunnarsson, S. and
Lequin, O. (1998). Iterative feedback tuning theory and applications, Control Systems Magazine, IEEE 18(4) 2641.

1.5

1

0.5

0

0.5

0

0.2

0.4

0.6

0.8

1

1.2

1.4

1.6

Figure 21 Comparison between desired response
(solid), response with initial parameters (dasheddotted) and response after optimization (dotted).

Hjalmarsson, H., Gunnarsson, S. and Gevers, M.
(1994). A convergent iterative restricted complexity control design scheme, Decision and
Control, 1994., Proceedings of the 33rd IEEE
Conference on, Vol. 2, pp. 17351740 vol.2.
Kapila, V. and Grigoriadis, K. (2002). Actuator
Saturation Control, 1 edn, CRC.

4

Conclusion

We have presented simulated and practical evidence on the suitability of using Iterative Feedback Tuning on systems with hard nonlinearities such as dead-zone, saturation and backlash.
When saturation is considered and a back calculation and tracking scheme is used to prevent integral anti-windup, IFT gives the designer an interesting opportunity to choose between faster rise
times with somewhat oscillatory behavior or perfect tracking (no overshoot) and slightly slower
rise time, two options that should be weighted
considering the control objective of a particular
system. We demonstrated in a non-formal manner that IFT can be used to tune systems with
input dead zone, with the end result being a controller that completely cancels such dead zone for
a particular reference input - probably the biggest
contribution of this paper. As far as backlash is
concerned, the IFT algorithm is able to cancel
its eects in some cases, but it is still not clear
when, or on what conditions, the system misbehaves. Further investigation is necessary.

Khalil, H. K. (2001). Nonlinear Systems, 3 edn,
Prentice Hall.
Ljung, L. (1999). System Identification Theory
for the User, 2 edn, Prentice Hall PTR.
Tao, G. and Kokotovic, P. V. (1996). Adaptive
Control of Systems with Actuator and Sensor
Nonlinearities, 1 edn, Wiley-Interscience.

References
Ahmad, N. and Khorrami, F. (1999). Adaptive control of systems with backlash hysteresis at the input, American Control Conference, 1999. Proceedings of the 1999, Vol. 5,
pp. 30183022 vol.5.
Bazanella, A. S., Gevers, M., Miskovic, L. and Anderson, B. D. (2008). Iterative minimization
of h2 control performance criteria, Automatica 44(10) 25492559.
Bruyne, F. D., Anderson, B., Gevers, M. and
Linard, N. (1997). Iterative controller optimization for nonlinear_systems, Decision and
Control, 1997., Proceedings of the 36th IEEE
Conference on, Vol. 4, pp. 37493754 vol.4.

5283