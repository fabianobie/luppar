Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

AVALIAÇÃO DO LIMITE OPERACIONAL DE UM SIMULADOR PARA TREINAMENTO DE
OPERADORES EM AMBIENTE DISTRIBUÍDO
1
1

JORGE F. A. COSTA, 2,3MARIA DE FÁTIMA Q. VIEIRA, 2,4EDMAR CANDEIA GURJÃO

Mestrando do Programa de Pós-graduação em Engenharia Elétrica da UFCG - COPELE, Departamento de
Engenharia Elétrica, Universidade Federal de Campina Grande
2

Departamento de Engenharia Elétrica da UFCG, Universidade Federal de Campina Grande
1,2

Caixa Postal 10105, 58.109-970 Campina Grande, PB, Brasil
E-mails jorge.costa@ee.ufcg.edu.br, fatima,edmar@dee.ufcg.edu.br
3

Centre for Excellence in Signal  Image Processing, Dept of Electronic  Electrical Engineering, University
of Strathclyde - Scotland, UK
4

Bolsista CAPES - Proc. no 382611-2

Abstract  SimuLIHM is a simulator built with virtual reality features for training purposes. It recreates the operating environment of a substation of an electric system and it was designed to support individual and team training, using a distributed network environment. Its event-driven architecture aims to reduce the demand on network resources however there is a need to determine the boundary conditions of using this system based on the number of simultaneously connected client machines and
from the point of view of the realism perceived by its users. The study presented in this paper concerns assessing the network requirements for a typical use case of SimuLIHM, which involves a tutor, two operators and two observers. The study relied on
the use of tools for the injection of controlled traffic into the network, and enabled to verify the effect of increasing network load
on the simulator performance.
Keywords  Network Performance, Usability, simulation in virtual environment, Operator Training, Electrical Power Systems.
Resumo  SimuLIHM é um simulador construído em realidade_virtual para o treinamento_de_operadores, que recria o ambiente
operacional de uma subestação de um sistema elétrico. O simulador foi concebido para apoiar treinamentos individuais e em equipe, a partir de um ambiente de rede distribuído. Sua arquitetura orientada a eventos visa reduzir a demanda sobre os recursos
de rede no entanto há a necessidade de determinar as condições-limite de utilização deste sistema com base no número de máquinas cliente simultaneamente conectadas e do ponto de vista do realismo percebido pelo usuário. O estudo aqui apresentado
consiste na avaliação dos requisitos de rede para um caso de uso típico do SimuLIHM, envolvendo um tutor, dois operadores e
dois observadores. O estudo se apoiou no uso de ferramentas para a injeção de tráfego controlado, e possibilitou verificar o efeito
do aumento de carga na rede sobre o desempenho do simulador.
Palavras-chave  .

1 Introdução
Vários são os ambientes de simulação encontrados na literatura, no entanto estes ambientes tipicamente não são voltados para o treinamento em rede
de uma equipe de operadores de sistemas. O Laboratório de Interfaces Homem-Máquina (LIHM) da
Universidade Federal de Campina Grande (UFCG)
encontra-se desenvolvendo um simulador (SimuLIHM), cujo objetivo é recriar o ambiente operacional de uma Subestação de Energia (SE) Elétrica
utilizando Realidade Virtual (RV) para fins de treinamento. O SimuLIHM representa o ambiente de
uma subestação, permitindo que os treinandos (operadores da SE) possam manipular o sistema, indistintamente, tanto através de painéis quanto através de
um ambiente supervisório, ambos simulados no
Ambiente Virtual (AV).
Ao longo do projeto do SimuLIHM foram realizados
testes de usabilidade com o objetivo de avaliá-lo
quanto  fidelidade de representação e do comportamento do ambiente e dos equipamentos durante a
realização de tarefas típicas (manobras) nos equipa-

ISBN 978-85-8001-069-5

mentos das subestações. Além da qualidade da representação foi também avaliada a facilidade de navegação no Ambiente Virtual (AV). Contudo, ainda não
foi determinado o limite de funcionamento do SimuLIHM, do ponto de vista do número máximo de
usuários capazes de se conectar simultaneamente
durante um treinamento sem que haja degradação do
desempenho e da usabilidade do simulador.
Neste artigo é feita a caracterização do tráfego de
rede gerado pelo SimuLIHM, em um cenário típico
de treinamento. No ambiente_virtual de treinamento
interagem um tutor, responsável pelo monitoramento do treinamento e sua avaliação, um ou mais operadores que compõem a equipe que executa as tarefas
prescritas no cenário e um conjunto de observadores, outros operadores também em treinamento, os
quais apenas visualizam as ações sendo executadas,
sem acesso  operação e sem representação no ambiente_virtual. Isto é, não podem ser vistos pelos operadores atuantes sobre o sistema.
Uma vez determinado o modelo de tráfego_de_rede
para uma sessão de treinamento, como descrito acima, é possível extrapolar esse modelo para n sessões
paralelas, até alcançar o limite de funcionamento do
3642

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

sistema. O limite esperado é aproximadamente igual
 banda de transmissão da rede na qual o simulador
esteja sendo executado. Complementarmente, a caracterização do modelo de tráfego permite mensurar
o impacto provocado pelo SimuLIHM no enlace de
comunicação.
Outro objetivo deste trabalho foi caracterizar o comportamento do simulador, utilizado em rede, quando
esta é submetida a uma carga. Neste experimento, a
carga foi induzida artificialmente, a fim de verificar
como o tráfego adicional afeta o desempenho e a
usabilidade do SimuLIHM, levando em conta o nível
de experiência do usuário. Este tráfego adicional
permite caracterizar a situação na qual o SimuLIHM
estaria sendo executado em uma rede corporativa ou
de automação_industrial, compartilhando os recursos
com as demais aplicações existentes.
Este artigo está organizado em cinco seções. Na
Seção 2, é descrita a arquitetura do simulador e suas
principais funcionalidades na Seção 3 é apresentado
o conceito de Sistemas distribuídos, e as métricas de
desempenho_de_redes adotadas neste trabalho a 4
Seção descreve os testes projetados para avaliação do
SimuLIHM de acordo com os propósitos deste trabalho e por fim, na Seção 5 são apresentados e discutidos os resultados dos testes preliminares e as propostas de continuidade.
2 Simulador para Treinamento de Operadores
O ambiente do simulador foi concebido para apoiar o treinamento_de_operadores de sistemas_elétricos, de modo a facilitar sua execução  distância em
relação aos centros de treinamento das empresas do
setor_elétrico, semelhantemente aos sistemas de Educação a Distância (EaD). Com esta característica,
pretende-se superar as dificuldades de deslocamento
dos tutores existentes nestas empresas, possibilitando
que um mesmo tutor acompanhe vários grupos de
treinandos, em diferentes localidades.
Segundo Vieira (Vieira, et al., 2009), a segurança
exigida na operação dos ambientes industriais torna
impraticável um treinamento com o sistema em funcionamento, ao mesmo tempo em que a parada do
sistema é economicamente inviável (Netto, 2010).
Nestas instalações, um erro humano poderia causar
acidentes de grande impacto para o sistema e para
seus operadores. Uma das opções adotadas neste
contexto é a simulação de atividades realizadas no
ambiente real. No entanto, persiste o risco de operadores desatentos, imperitos ou imprudentes executarem comandos sobre o sistema real, comprometendo
seu funcionamento. Portanto, este trabalho se propõe
a explorar as limitações do treinamento a distância,
quando utilizando o sistema SimuLIHM.

treinamento_de_operadores, a exemplo do SIMULOP1
e do ASTRO2. Dentre as funcionalidades que seguem apenas a primeira é comum aos ambientes de
treinamento o módulo de integração e o módulo de
avaliação oferecem características próprias do SimuLIHM
 Edição de Cenários permite ao Tutor criar
cenários de treinamento e analisar o histórico
do treinamento
 Módulo de Integração oferece um canal de
comunicação entre um sistema_supervisório
(SAGE, Intouch, etc) e o SimuLIHM. Assim,
uma ação executada nos painéis repercute na
tela do supervisório, e vice-versa
 Módulo para Avaliação do Treinamento
oferece recursos para armazenar o histórico,
das sessões de treinamento, em um banco de
dados. Este módulo, ainda em desenvolvimento oferecerá recursos para que o tutor
realize um playback da sessão, fornece um
diagnóstico dos erros cometidos, identificando sua natureza, frequência e criticidade. Esta
característica auxiliará o Tutor na identificação dos pontos fracos do treinando e apoiará
o projeto de novos treinamentos.
2.2 A Arquitetura do SimuLIHM
Em sua versão mais recente, o simulador possui
a arquitetura ilustrada na Figura 1 (Torres Filho, et
al., 2011). Sua interface_gráfica, consiste de um ambiente_virtual construído utilizando-se a tecnologia
Java3D, por meio da Application Programming Interface (API) X3D. Uma captura de tela do sistema
em funcionamento pode ser visualizada na Figura 2.
Seu motor_de_simulação foi construído a partir de
métodos formais (Turnell, et al., 2001), utilizando
redes de Petri (Murata, 1989), devido  sua capacidade de modelar sistemas síncronos e concorrentes.
Os modelos foram construidos utilizando o
formalismo de redes de Petri Coloridas (CPN
(Jensen, 1992), apoiado pela ferramenta CPN Tools3.

Figura 1. Arquitetura do SimuLIHM

2.1 Características
Atualmente, o SimuLIHM oferece um conjunto
de funcionalidades semelhantes quelas encontradas
em outros simuladores também desenvolvidos para

ISBN 978-85-8001-069-5

1

Simulador desenvolvido pelo CEPEL, em parceria com o Electric Power Research Institute.
2
Ambiente Simulado para TReinamento de Operadores desenvolvido também pelo CEPEL, em parceria com a ELETROSUL.
3
Disponível em httpwww.cpntools.org

3643

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

Figura 2. Ambiente Virtual de uma Sala de Controle

Dado que o SimuLIHM foi codificado na linguagem
Java, foi utilizada uma biblioteca para comunicação
com o aplicativo CPN Tools, a CommsCPN. Esta
biblioteca recebe os eventos gerados no Mundo Virtual e os repassa ao motor_de_simulação, que é constituído por um conjunto de modelos CPN que representam os objetos encontrados na sala de comando
de uma subestação (SE) tanto nos painéis de controle (Netto, et al., 2009), quanto nas telas do sistema
supervisório, além daqueles encontrados na planta do
sistema elétrico (Torres Filho  Vieira, 2010). A
interface_gráfica do ambiente_virtual foi construída
com o auxílio da tecnologia Java3D, e uma captura
de tela do sistema em funcionamento pode ser visualizada na Figura 2.
3 Ambiente Distribuído
Uma dos principais requisitos do simulador em
desenvolvimento no LIHM é permitir o treinamento
de vários usuários em paralelo além de dispensá-los
de estarem fisicamente na mesma localidade. Esta
característica de ambiente distribuído demanda a
investigação de soluções que, de um lado não onerem
a rede industrial disponível ao treinamento, e por
outro não comprometam a qualidade do treinamento
devido a atrasos ou perda de dados.
Para atender este requisito o SimuLIHM foi projetado como um sistema_distribuído, no modelo clienteservidor, portanto dependendo fortemente da qualidade dos serviços de rede.
Segundo Kurose e Ross (Kurose Rose, 2007), as
Redes de Computadores são compostas por diversos
dispositivos de hardware e software, tais como roteadores, switches, cabos e fibras óticas. Por outro
lado, Tanenbaum (Tanembaum, 2003) as define
como ... um grande número de computadores separados, mas interconectados. Ainda segundo Tanenbaum (op. cit.), um Sistema Distribuído é formado
por um conjunto de computadores4 independentes
que se apresentam para seus usuários clientes, como
um sistema único, sendo o software de rede o responsável pelo fornecimento dos serviços.
Os modelos OSIISO (Zimmermann, 1980) e o
TCPIP são, respectivamente, os padrões de jure e de
4

Neste caso, trata-se do sentido lato qualquer dispositivo que
realize operações computacionais.

ISBN 978-85-8001-069-5

facto na área de redes. Foram projetados com base no
conceito de camadas, nas quais é necessário conhecer
apenas seus parâmetros de entrada e de saída, obtendo dessa forma um baixo nível de acoplamento entre
elas. Na camada de transporte do modelo TCPIP,
destacam-se os dois protocolos mais comuns o TCP
(Transmission
Control Protocol)  orientado a
conexão  e o UDP (User Datagram Protocol)  não
orientado a conexão, especificados por Braden (Braden, 1989) na RFC 1122.
Conforme se observa na Figura 1, a conexão entre
módulos do simulador é do tipo ponto-a-ponto, estando concentrada no Módulo Tutor. Este, por sua
vez, está diretamente ligado ao Motor de Simulação,
responsável por executar o comportamento da planta
em respostas aos comandos enviados seja através de
painéis ou do supervisório.
Com o objetivo de alcançar maior eficiência no uso
dos recursos computacionais e de rede, a arquitetura
do SimuLIHM é orientada a eventos na comunicação
entre módulos entre o Tutor e o Motor de Simulação
(CommsCPN) e entre os Operadores e o Tutor. Nestas situações descritas, a transferência de dados é
efetivada por meio do protocolo TCP, que é orientado a conexão, e cujo controle_de_fluxo e de erros
assegura que todos os clientes receberão integralmente, e na ordem correta, os pacotes transmitidos
pelo enlace de rede.
A abordagem de conexão adotada entre módulos que
compõem a arquitetura do SimuLIHM implica no
envio de dados pela infraestrutura de comunicação
apenas quando ocorrerem mudanças de estados.
Nestas situações, é gerado um evento contendo as
informações referentes ao dispositivo que sofreu a
alteração do estado como resultado da execução de
comandos do tipo abrir  fechar um disjuntor, comutar as chaves local  telecomando, dentre outros.
Uma vez que está previsto o acoplamento do simulador a sistemas de Educação  Distância, ele estará
compartilhando os recursos de rede com outras aplicativos que transferem áudio e vídeo de forma síncrona e assíncrona. Portanto, é desejável que o SimuLIHM não represente uma carga excessiva no
barramento de dados, preservando a banda para os
demais sistemas que dela dependem.
3.1 Métricas de Desempenho
Considerando a complexidade atual das redes,
nas quais estão conectados equipamentos de diversos
tipos, conjugada  variedade de serviços providos,
faz-se necessário estabelecer uma política para gerenciamento dos recursos que são, em geral, compartilhados por todos os dispositivos ligados  rede
(Rose, 1994).
A norma ISOIEC 7498-4 define o modelo FCAPS
(Fault, Configuration, Accounting, Performance,
Security) o qual abrange as cinco principais áreas do
gerenciamento_de_redes. Esta norma incentivou a
criação, por parte do Internet Engineering Task Force (IETF) do protocolo Simple Network Management

3644

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

Protocol (SNMP) que engloba os itens Falha e Performance (desempenho) do modelo FCAPS, sendo
este último item o objeto de análise deste artigo.
O desempenho de uma rede é analisado com base em
métricas, embora em alguns casos, não seja possível
medir as grandezas diretamente. Segundo Paxson
(Paxson Vern, 1996) as métricas devem ser bem
definidas (sem ambigidade), e as classifica em métricas analíticas e empíricas.
As métricas analíticas em geral são especificadas de
forma direta, a partir das propriedades matemáticas
(abstratas) das grandezas a serem medidas, sendo
assim modeláveis através de fórmulas e equações.
Um exemplo destas métricas é o tempo de propagação em um enlace, o qual pode ser expresso por
(1)
Tp  L  P
Por outro lado, a especificação de métricas empíricas
depende da metodologia aplicada  medição, e sua
obtenção é quase sempre apoiada por ferramentas de
software. Paxson (op. cit.) exemplifica estas ferramentas com o software traceroute, que se utiliza dos
campos TTL das PDUs e do protocolo IGMP, para
calcular o tempo decorrido para um pacote percorrer
a rota entre dois pontos de uma rede. Outro exemplo
de métrica empírica é a quantidade média de pacotes
no buffer de um roteador. Devido  sua natureza, esta
métrica só pode ser obtida a partir de dados históricos e, no caso de sistemas de gerenciamento_de_rede,
através de consultas via protocolo SNMP.
Neste trabalho, serão utilizadas as métricas empíricas
apresentadas na próxima seção.

pelo SimuLIHM sem que ocorra degradação na experiência dos usuários. Ainda neste teste, será introduzido tráfego no enlace de comunicação, utilizando-se
ferramentas para injeção de pacotes. Pretende-se,
com isto, determinar a banda mínima necessária para
que os módulos Tutor e Operador  um único par 
consigam se comunicar sem que haja um aumento na
quantidade de pacotes perdidos, o que necessariamente refletiria na usabilidade do simulador.
Em ambos os cenários descritos (com e sem injeção
de carga) procura-se verificar as condições de operação que levam a uma perda mínima, tanto em termos
das métricas de rede, quanto no desempenho do sistema sob a ótica do seu usuário.
As métricas que serão objeto de mensuração e análise nos testes de desempenho do simuLIHM estão
listadas na Tabela 1, assim como a metodologia correspondente que será adotada na obtenção.
Tabela 1. Métricas adotadas nos Testes de Desempenho.
Métrica

Descrição

Metodologia

One-Way
Delay
(OWD)

Tempo gasto para
um pacote ir do
host A até o B.

Round-Trip
Time (RTT)

Tempo gasto para
um pacote percorrer o caminho
ABA.

Packet Loss

Percentual de pacotes des-cartados
antes de chegarem
ao destino.

- Via programa
WireShark
- Inclusão de etiqueta de tempo
(timestamp)
no
campo de dados
dos pacotes enviados
- Via WireShark
- Inclusão de timestamp
- O pacote de
retorno,
também
com time-stamp, é
a resposta ao processamento do que
foi enviado,
- Análise dos logs
do WireShark.

4 Avaliação de Desempenho
O SimuLIHM foi concebido para consumir poucos recursos computacionais das máquinas nas quais
é executado. Porém, como sua arquitetura é baseada
no modelo cliente-servidor, o gargalo no desempenho global provavelmente estará concentrado na
estrutura subjacente de comunicação de dados.
Assim, faz-se necessário determinar sua condiçãolimite de operação. Ou seja, pretende-se com este
trabalho determinar a partir de quais condições da
rede o desempenho do sistema, percebido pelo usuário fica degradado e, por conseguinte afeta seu próprio desempenho no processo de treinamento. Também é necessário verificar quais são as exigências
mínimas de rede para que o SimuLIHM opere, de
forma que atenda os critérios de usabilidade e desempenho citados. Para investigar estes aspectos foi
projetada uma bateria de testes os quais serão descritos nesta seção.
Inicialmente é necessário caracterizar a rede, a partir
de parâmetros relativos  sua estrutura. Será então
mensurado o desempenho do SimuLIHM, do ponto
de vista de rede. Assim, o primeiro teste consiste em
utilizando uma rede_local dedicada, caracterizar e
modelar o tráfego por ele gerado. Em seguida, deseja-se verificar sua capacidade, em termos do número
máximo de conexões simultâneas que suportadas

ISBN 978-85-8001-069-5

A literatura pesquisada enfatiza a importância da
primeira métrica listada na Tabela 1  One-Way
Delay  em virtude da sua correlação direta com a
latência da rede. Sendo esta, considerada por Holleczek (Holleczek, 2008) como a métrica mais representativa de desempenho. Porém, para este trabalho,
considera-se que as mais importantes são as medições de RTT e a taxa de perda_de_pacotes. Do ponto
de vista da usabilidade, o impacto gerado por um
evento que não é entregue a todos os clientes, ou de
um comando que sofre um atraso para ser confirmado, tende a ser muito maior do que apenas o atraso
em uma das duas direções. Nos próximos itens, estão
descritos os testes realizados neste trabalho.
4.1 Teste I  Modelo de Tráfego
Neste primeiro teste, foram realizadas medições
para caracterizar o tráfego gerado pelo SimuLIHM,
no caso base quando existe apenas um módulo Tutor

3645

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

servidor e um Operador cliente. Essas medições
foram feitas em uma rede_local isolada, conforme
ilustrado na Figura 3. O objetivo foi determinar o
impacto causado pelo uso deste sistema nas redes nas
quais será utilizado.

Figura 3. Esquema do Teste I (em rede isolada)

4.2 Teste II  Banda Mínima de Operação
Nesta etapa, foi necessária a utilização dos geradores de tráfego, para simular uma rede congestionada ou, de baixa velocidade. O objetivo foi alcançar o
estado de pior caso, no qual a rede está próxima da
saturação. O esquema do teste, também voltado para
o caso de uma rede isolada, encontra-se ilustrado na
Figura 4.
Switch
Sniffer

Módulo
Tutor

Gerador
de Carga
na Rede

BD

Operador

nível de frustração, em resposta a eventos que lhes
geraram irritação.
Estes estudos motivaram a realização de uma Avaliação de Usabilidade com a participação de Usuários, a
qual será realizada em paralelo com o Teste II, cujo
objetivo é verificar se existe uma correlação entre o
número de incidentes durante a realização das tarefas
e a taxa de congestionamento da rede.
O procedimento que será adotado na avaliação de
usabilidade está descrito no Protocolo Experimental
para Observação da Interação (PEOI), desenvolvido
no LIHM (Aguiar Vieira, 2009). O PEOI se fundamenta nas práticas adotadas na avaliação da usabilidade no LIHM e naquelas citadas na literatura por
vários autores, dentre os quais se destacam Nielsen
(Nielsen, 1994) e Mayhew (Mayhew et Mantei,
1994).
Durante o teste de usabilidade, que ocorrerá em conjunto com o Teste II, será utilizado um programa
para geração de tráfego IP. Durante este teste, a taxa
de injeção de pacotes na rede será aumentada progressivamente, até alcançar o estado de saturação.
Para cada passo do incremento na geração de tráfego,
será registrada e analisada a reação dos usuários, e
serão coletadas as métricas listadas na Tabela 1.
Os resultados desta avaliação servirão de base para o
cálculo do número máximo de clientes, objetivo do
Teste III.
4.4 Testes Preliminares

Figura 4. Esquema do Teste II (em rede isolada)

4.3 Teste III  Número Máximo de Clientes
Uma vez mensurada a carga gerada na rede por
uma única instância do par operador - tutor no SimuLIHM, realizada no Teste I, é possível extrapolar
esse impacto para n pares de Operador-Tutor. O
objetivo é determinar o limite de operação do simulador, o qual dependerá dos resultados das avaliações
com usuários, abordadas na próxima subseção.
4.4 Avaliação de Usabilidade
Experimentos conduzidos por Ceaparu (Ceaparu
et al., 2004) revelaram que problemas inerentes a
congestionamentos, ou atrasos excessivos na rede,
podem gerar frustração nos usuários dos sistemas de
informação, produzindo erros durante a operação.
Por sua vez, Miller (Miller et al., 2011) encontrou
resultados similares, explorando os motivos que mais
causaram insatisfação nos usuários. A sua pesquisa
foi apoiada por uma metodologia e uma biblioteca de
software de autoria própria, SoylentLogger. Este
software captura as informações fornecidas pelos
participantes do teste, em uma escala que registra o

ISBN 978-85-8001-069-5

Em caráter preliminar foi realizado um teste piloto durante o qual participaram alunos da gradução
e pós-graduação em engenharia elétrica na UFCG.
Neste teste foi adotado um modelo misto que combinou os propósitos dos Testes I e II, como ilustrado na
Figura 4.
Nestes testes, houve a participação de apenas dois
usuários, um atuando como o Tutor do treinamento, e
o outro como o Operador sob treinamento. Em uma
rede_local isolada, e conectadas via um switch dedicado, estavam conectadas as máquinas dos dois usuários, o servidor do banco_de_dados e o motor_de_simulação do SimuLIHM que é constituído dos modelos e da ferramenta CPN Tools.
Foi solicitado aos usuários participantes do teste que
executassem uma sequência de tarefas, denominada
(nas empresas do setor_elétrico) Roteiro de Manobras
(RTM). Estas tarefas foram executadas no SimuLIHM. O percentual de acertos alcançado pelo treinando (operador) foi adotado como o indicativo de
sucesso ou fracasso da tarefa.
O RTM selecionado consiste de duas sequências de
manobras, cada uma composta de uma série de subtarefas. Como forma de verificar a correlação entre o
congestionamento da rede e a usabilidade do Simulador, foi injetado tráfego UDP no barramento de comunicação, utilizando a ferramenta IPLoad, seguindo
a distribuição ilustrada no gráfico da Figura 5.

3646

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

5 Apresentação dos Resultados
Os testes preliminares consistiram na realização
de três sessões de avaliação, com a participação de
três pares de usuários e com duração média de trinta
minutos. Seus resultados são apresentados na Tabela
2, em valores medianos, e na Tabela 3, em percentuais relativos  distribuição do tamanho dos pacotes.
Os dados obtidos permitem concluir que o tráfego
introduzido na rede pelo SimuLIHM é de fato reduzido, isto é, a quantidade total de pacotes e bytes
envolvidos na transmissão de mensagens entre todos
os equipamentos é muito baixa, podendo ser considerada insignificante numa rede de 100 Mbits, dada a
duração da sessão de avaliação. Um trecho reduzido,
de aproximadamente três minutos, é representado no
gráfico exibido na Figura 6.
Foi constatado que o tamanho médio das mensagens
trocadas entre os módulos do SimuLIHM é irrisório,
em sua maioria necessitando de apenas um quadro
Ethernet para serem transmitidas, reduzindo também
a sobrecarga de mensagens de confirmação do protocolo TCP.
É importante também observar a taxa de transmissão
dos pacotes, cujo maior valor registrado foi de aproximadamente 178 bytess. Esta medida serve como
base para delimitar a largura de banda mínima para o
correto funcionamento do Simulador.

Figura 5. Distribuição de Carga durante o Teste com Usuários

Para a realização do experimento, foi instalado na
máquina do Tutor o programa wireshark, com a
função de interceptação e registro dos pacotes IP
para análises posteriores.
Ao final do teste, os usuários foram solicitados a
responder um questionário, cujo propósito foi determinar o grau de satisfação (ou frustração) dos participantes durante o teste e determinar sua percepção
da influência do trafego sobre a usabilidade do simulador.
Tabela 2. Resultados do Teste preliminar (média)
Caminho de Rede

Qtde. de Pacotes

Tutor  Operador

Pacotes por segundo

Tamanho Médio dos
Pacotes (bytes)

Bytes por segundo

0,177
0,084
0,514
0,775

61,045
64,586
347,339
472,97

10,785
5,419
178,495
194,699

179
70
892
1.141

Tutor  CPN Tools
Tutor  BD

Total

Bytes transmitidos

10.927
4.521
309.826
325.274

Tabela 3. Resultados do Teste preliminar (percentual)
Tamanho dos Pacotes (bytes)
Caminho de Rede
Tutor  Operador
Tutor  CPN Tools
Tutor  BD

Total

< 40

0,00
0,00
0,00
0,00

40 - 79

96,65
100,00
37,44
0,775

80 - 159

3,35
0,00
2,13
2,19

Para identificar uma possível correlação entre o congestionamento na rede e a diminuição ou no grau de
satisfação com o Simulador, os participantes foram
questionados sobre sua percepção do desempenho do
SimuLIHM antes e durante a execução da Tarefa 2 e
suas subtarefas. E, para averiguar a relação entre o
congestionamento da rede e um aumento no percentual de tarefas executadas com erro, foi analisado o
número de subtarefas finalizadas corretamente para
cada participante, em particular antes e durante a
Tarefa 2 do RTM.

ISBN 978-85-8001-069-5

160 - 319

0,00
0,00
28,70
28,70

320 - 639

0,00
0,00
20,40
20,40

640 - 2559

0,00
0,00
11,33
11,33

> 2560

0,00
0,00
0,00
0,00

Contudo, apesar da injeção de tráfego no decorrer
dos testes, apenas um dos três usuários participantes
(que atuaram como operadores) percebeu atrasos nas
mensagens de retorno, em resposta aos comandos
executados no ambiente_virtual do SimuLIHM. Apesar da injeção de tráfego, não foi registrado aumento
na taxa de erros cometidos pelos usuários.

3647

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

Figura 6 - Amostra Temporal do Tráfego de Rede do SimuLIHM

6 Conclusões e Trabalhos Futuros
Os resultados verificados no caso base avaliado
ainda não refletem o cenário típico de treinamento,
composto de um tutor e no mínimo dois operadores
(treinandos) além de um ou mais observadores do
treinamento, cada um deles em uma máquina conectada  rede.
Para se aproximar da situação real de uso, antes de
realizar os testes planejados algumas modificações
ainda estão sendo realizadas no código do Simulador,
com destaque para
 Permitir o gerenciamento de múltiplos usuários conectados ao módulo Tutor
 Atualizar a posição do Avatar que representa
o operador no mundo virtual, em todas as
máquinas clientes conectadas ao Tutor
 Acoplar um módulo de avaliação do treinamento que será usado pelo tutor, capturando
e analisando as ações executadas durante o
treinamento.
Estas novas funcionalidades aumentarão a troca de
mensagens entre os módulos do SimuLIHM, incrementando o volume do tráfego de dados entre o Tutor e os demais clientes (operadores e observadores).
Assim, espera-se um impacto maior do SimuLIHM
no enlace de comunicação, elevando seus requisitos
mínimos de banda. A saturação imposta  rede, seja
de forma espontânea ou forçada, também deve impactar na percepção do usuário durante a condução
dos testes de usabilidade.
A continuidade deste trabalho implica, portanto na
realização dos testes descritos, com um número significativo de usuários. Atualmente, está em andamento a realização de casos de teste, de acordo com
os modelos de Testes I e II, com múltiplos clientes
conectados ao Módulo Tutor, além da realização do
Teste III apoiado por simulação.
É importante ressaltar que o reduzido universo amostral não permite resultados conclusivos, oferecendo
apenas um indicativo de tendência. Apesar disto, os
resultados preliminares são promissores, e sugerem o
efeito esperado da arquitetura do SimuLIHM, baseada em eventos (Netto, 2010).

ISBN 978-85-8001-069-5

Esta reflexão apoiou a decisão de manter a estratégia
de comunicação dos módulos, ao expandir as funcionalidades de modo a reduzir o impacto no trânsito de
dados e assegurar a escalabilidade do projeto, sem
que isto comprometa a usabilidade do SimuLIHM.

Agradecimentos
Os autores agradecem  empresa CHESF pelas visitas técnicas e pelos esclarecimentos prestados  equipe de projeto sobre a metodologia empregada no
treinamento de seus operadores. Os autores também
agradecem os alunos do DEE  UFCG por participarem dos testes descritos neste artigo.

Referências Bibliográficas
Jensen, K., 1992. Colored Petri Nets  Basic
concepts, analyses methods and practical use.
USA Springer-Verlag.
Aguiar, Y. P. C.  Vieira, M. F. Q., 2009. Proposal
of a protocol to support product usability
evaluation. Proc. of Computers and Advanced
Technology in Education (CATE).
Braden, R., 1989. Requirementes for Internet Hosts Communication Layers RFC 1122. Online
Disponível em httpietf.orgrfcrfc1122.txt
Acesso em 15 04 2012.
Ceaparu, I. et al., 2004. Determining Causes and
Severity of End-User Frustration. International
Journal of Human-Computer Interaction, set,
Volume 17, pp. 333-356.
Holleczek, T., 2008. Statistical Analysis of IP
Performance Metrics in International Research
and Educational Networks, Nuremberg
Friedrich-Alexander-University Nuremberg.
Jensen, K., 1992. Colored Petri Nets  Basic
concepts, analyses methods and practical use.
USA Springer-Verlag.
Kurose, J. F.  Ross, K., 2007. Computer
networking a top-down approach featuring the
Internet. 4 ed. Boston Addison Wesley.

3648

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

Mayhew, D.  Mantei, M., 1994. A basic framework
for cost-justifying usability engineering. In R.
Bias  D. Mayhew, eds. Cost-Justifying
Usability. Orlando (FL) Morgan Kaufmann, pp.
9-43.
Miller, J. S. et al., 2011. Understanding end-user
perception of network problems. New York
(NY), ACM Press.
Murata, T., 1989. Petri Nets Properties, Analysis
and Applications. Proceedings of IEEE, 4(77),
pp. 541-580.
Netto, A. V. d. S., 2010. Arquitetura para um
ambiente de treinamento representado em
Realidade Virtual, Campina Grande UFCG.
Nielsen, J., 1994. Enhancing the explanatory power
of usability heuristics. New York (NY), ACM
Press.
Paxson, V., 1996. Towards a Framework for
Defining Internet Performance Metrics. Proc. of
INET 96.
Rose, M. T., 1994. In The Simple Book an
Introduction to Internet Management. 2 ed.
Upper Saddle River (NJ) Prentice Hall, p. 456.
Tanembaum, A. S., 2003. Redes de Computadores.
4 ed. Rio de Janeiro Ed. Campus.

ISBN 978-85-8001-069-5

Torres Filho, F.  Vieira, M. F. Q., 2010. Motor de
Simulação Baseado em Modelos CPN Aplicado
a um Sistema para Treinamento de Operadores.
Bonito (MS), Anais do XVIII Congresso
Brasileiro de Automática.
Torres Filho, F., Carvalho, R.  Vieira, M. F. Q.,
2011. Ambiente para o Treinamento de
Operadores em Painéis e Supervisório Apoiado
por Módulo Tutor. São João del-Rey (MG),
Anais do X SBAI - Simpósio Brasileiro de
Automação Inteligente.
Turnell, M. F. Q. V., Scaico, A., Souza, M. R. d. 
Perkusich, A., 2001. Industrial User Interface
Evaluation Based on Colored Petri Nets
Modelling and Analysis. Lecture Notes in
Computer Science, Issue 2220, pp. 69-87.
Vieira, M. F. Q. et al., 2009. A Real-time Interface
Simulator for Operator Training A Proposed
Architecture. Transactions Of The Society For
Computer Simulation, 86(1), pp. 53-63.
Zimmermann, H., 1980. OSI Reference Model - The
ISO Model of Architecture for Open Systems
Interconnection.
IEEE
Transactions
on
Communications, 28(4), pp. 425-432.

3649