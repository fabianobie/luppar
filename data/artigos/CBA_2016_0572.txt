XXI Congresso Brasileiro de Autom치tica - CBA2016
UFES, Vit칩ria - ES, 3 a 7 de outubro

INTEGRACAO DAS PLATAFORMAS ANDROID E LEGO MINDSTORMS NXT
PARA CONTROLE DE UM ROBO MOVEL
Guilherme Alvarenga Andrade , Anolan Milanes , Tales Argolo Jesus


Departamento de Computacao - DECOM
Centro Federal de Educacao Tecnologica de Minas Gerais
Avenida Amazonas, n.7675, CEP 30510-000
Belo Horizonte - Minas Gerais, Brasil
Email guilhermeaandrade91@gmail.com, anolan@decom.cefetmg.br,
talesargolo@decom.cefetmg.br
Abstract This work presents the development of an application for mobile devices, inspired by SCADA
Systems, responsible for controlling mobile robot. This application integrates Android and Lego Mindstorms
NXT platforms via Bluetooth communication establishing a distributed client-server architecture. The result is
an application capable of increasing the dynamism and process automation, and therefore suitable for the distributed robotic control. It was found that the test environment configured, even though in a smaller proportion,
reproduces the deployment of this application in a real scenario of specific greater complexity.
Keywords
Systems.

Android Platform. Lego Mindstorms NXT Platform. Bluetooth. SCADA System. Distributed

Resumo Este trabalho apresenta o desenvolvimento de uma aplicacao para dispositivos_moveis, inspirada
no Sistema SCADA, responsavel pelo controle de um robo_movel. Esta aplicacao integra as plataformas Android
e Lego Mindstorms NXT por meio da comunicacao Bluetooth, estabelecendo uma arquitetura distribuda clienteservidor. O resultado e uma aplicacao capaz de aumentar a dinamicidade e automacao_de_processos, sendo,
portanto, adequada para o controle robotico distribudo. Verificou-se que o ambiente de teste configurado,
mesmo sendo em menor proporcao, reproduz a implantacao desta aplicacao em um cenario real especfico de
maior complexidade.
Palavras-chave . Plataforma Lego Mindstorms NXT. Bluetooth. Sistema SCADA.
Sistemas Distribudos.

1

Introducao

Atualmente, o conceito de robotica esta sendo
cada vez mais difundido e se faz presente em uma
sociedade visivelmente evoluda tecnologicamente.
Os robos deixaram de ser utilizados apenas no ambiente industrial e passaram a ser inseridos em
diversas atividades cotidianas. Novos estudos cientficos como a exploracao de ambientes distintos (Dalmarco et al., 2003), o controle_de_trajetoria (de Angelis Cordeiro et al., 2013) e os sistemas_inteligentes autonomos (Cazangi and Figueiredo, 2001) refletem sobre a robotica proporcionando o aprimoramento dos seus conceitos e a
emersao de novas tecnologias que oferecem maior
flexibilidade, autonomia, interacao e agilidade aos
robos.
A robotica, alem de empregar conceituacoes
referentes a mecanica, controle e automacao, inteligencia_artificial, entre outras, passou a explorar
os conceitos de outras disciplinas, como a de sistemas_distribudos. Notoriamente, uma diversidade
de aplicacoes beneficiam-se da acao conjunta de
sistemas com esta classificacao para proporcionar
eficiencia na execucao de tarefas complexas.
A integracao entre a robotica e estas aplicacoes e responsavel por possibilitar que determinadas funcoes sejam efetuadas dinamicamente. Isso
ocorre porque os componentes localizados em diferentes locais estabelecem entre si uma comuni-

ISSN 2525-8311

cacao e, por meio da troca confiavel de mensagens, enviam e recebem informacoes referentes a
realizacao das tarefas. Esta estruturacao permite
independencia fsica entre os componentes atuantes, oferecendo um monitoramento mais especfico
e menos complexo realizado a distancia.
O presente artigo consiste no desenvolvimento
de uma aplicacao movel distribuda centralizada
baseada nos Sistemas SCADA (em portugues,
Controle Supervisorio e Aquisicao de Dados). O
aplicativo se comunica com o kit robotico por
meio do protocolo de comunicacao_sem_fio Bluetooth, unico suportado pela plataforma Lego Mindstorms NXT. Esta comunicacao permite controlalo e monitora-lo por meio de uma interface grafica
interativa. Alem disso, a aplicacao e responsavel
por obter e registrar medicoes e sintetiza-las a fim
de que possam ser exibidas e analisadas pelo usuario. E importante salientar que este trabalho tanto
trata das estrategias_de_controle robotico quanto
das tecnicas de Sistemas Distribudos utilizadas
para melhor resolucao do problema proposto. O
resultado representa o incentivo a combinacao de
conceitos multidisciplinares e assinala o fato que
essa aplicacao movel desenvolvida pode ser utilizada em um ambiente real, definindo-se os componentes atuantes, a forma de comunicacao e a
estrutura estabelecida entre eles.
Este artigo esta organizado da seguinte forma.
A secao 1 introduz o problema abordado. Na se-

2007

XXI Congresso Brasileiro de Autom치tica - CBA2016
UFES, Vit칩ria - ES, 3 a 7 de outubro

cao 2 e exposta a revisao de literatura, descrevendo e apresentando os principais resultados nos
trabalhos correlatos. Na secao 3, tem-se a descricao do desenvolvimento do presente trabalho. Na
secao 4 apresentam-se testes e analises realizadas.
Na secao 5 sao descritos os resultados. Por fim,
na secao 6 apresentam-se as conclusoes.
2

Revisao de Literatura

O interesse por sistemas que se integram e facilitam a realizacao de determinadas tarefas e crescente. Portanto, a aplicabilidade deles e vasta,
seja para o processamento distribudo quanto para
o compartilhamento de recursos. Especificamente
neste trabalho, e estabelecida uma relacao direta
com a robotica.
O trabalho realizado por da Silva Pisco
(2015), propoe o desenvolvimento de uma aplicacao Android que simula o comportamento de um
Sistema SCADA. Esta aplicacao visa o monitoramento e controle da planta de uma linha de producao flexvel composta por cinco modulos interligados com funcionalidades distintas. O aplicativo desenvolvido funciona como MTU1 e oferece
interfaces interativas semelhantes as dos sistemas
SCADA. A simulacao das RTUs2 foi realizada utilizando um simulador da linha de producao e um
programa do Unity Pro XL, responsavel por controlar a producao e movimentacao das pecas entre os modulos citados. Para a comunicacao entre o RTU e MTU utilizou-se o protocolo Modbus
TCPIP.
O trabalho realizado por da Silva Junior et al.
(2013), propoe o desenvolvimento de uma aplicacao Android que se comunica com um unico
robo Lego Mindstorms NXT utilizando o protocolo de comunicacao Bluetooth baseado na arquitetura cliente - servidor, na qual o robo desempenha a funcao de servidor e a aplicacao Android a
de cliente. Este trabalho consiste em um aplicativo que coordena o movimento de um robo nas
quatro direcoes possveis (para direita, para esquerda, para frente e para tras) e define a velocidade na qual essa acao sera executada.
Outro trabalho relevante realizado por Goebel et al. (2011) objetiva apresentar uma discussao
sobre os possveis metodos de conexao (direta via
USB, indireta via Microcontrolador e Bluetooth)
entre o dispositivo movel e robo e expor uma solucao tecnica para modelar uma interface capaz
1 Master Terminal Unit sao computadores que coletam dados provenientes da RTU, armazenam-os, enviamos para interfaces de forma que possam ser exibidos nitidamente e transferem mensagens contendo comandos de
controle para RTU.
2 Remote Terminal Unit sao componentes responsaveis por atuar diretamente sobre o sistema por meio de
atuadores e recolher informacoes advindas dos sensores,
transforma-las em sinais digitais por meio de conversores
analogico-digitais e, por fim, envia-las para as MTUs.

ISSN 2525-8311

de realizar a comunicacao entre o dispositivo Android e o Lego NXT. Neste caso, o aparelho movel e considerado um servico remoto responsavel
por encapsular e controlar a conexao com o robo.
Para isso, implementou-se uma biblioteca orientada a objetos que prove uma API completa para
integracao entre as plataformas.
Outro projeto significativo, proposto por
Silva et al. (2012), refere-se a criacao de um aplicativo movel em Android destinado ao controle
de Sistemas Embarcados utilizando o protocolo de
comunicacao Bluetooth. Esse trabalho consiste no
controle de um Veculo Teleoperado cujos recursos
foram desenvolvidos na Plataforma de Desenvolvimento Open Source Arduino.
Ja o trabalho proposto por Cruz et al. (2011),
apresenta uma aplicacao responsavel pelo controle
de um robo utilizando conexao Wi-Fi e sensores
de movimento. Esta aplicacao capta informacoes
dos movimentos executados pelo celular, mapeiaos em comandos aceitos pelo robo, que sao enviados por meio de uma rede_sem_fio Wi-Fi. A captacao dos movimentos ocorridos e realizada por
acelerometros presentes nos dispositivos_moveis,
que sao sensores responsaveis por coletar dados
que possibilitam a estimacao da sua orientacao no
espaco definido pelos tres eixos cartesianos x, y e
z.
O diferencial do presente trabalho em relacao
aos trabalhos apresentados consiste na combinacao dos conceitos de Robotica, Sistemas SCADA,
Sistemas Distribudos e controle_automatico. Para
que tal objetivo fosse alcancado, desenvolveu-se
uma aplicacao que simula um Sistema SCADA
estruturado em uma arquitetura cliente-servidor
e configurado a partir da integracao das plataformas Android e Lego Mindstorms, utilizando a comunicacao Bluetooth para a troca de mensagens
entre os componentes atuantes.
3
3.1

Desenvolvimento

Modelagem do Problema

O objetivo do trabalho consiste em fazer o robo
com posicao inicial (xi , yi ) descrever uma trajetoria circular de raio R em torno de uma posicao alvo (xa , ya ), como mostra a Figura 1. Alem
disso, o usuario tem autonomia para guia-lo manualmente de modo a faze-lo alcancar a posicao
desejada.
O comportamento do robo com tracao diferencial pode ser matematicamente descrito pelo modelo do uniciclo cinematico (Siciliano et al., 2010),
no qual considera-se que ele se movimenta com
uma velocidade linear v e uma velocidade_angular
, dadas em funcao das velocidades angulares das
rodas, e apresenta uma direcao de orientacao no
plano cartesiano xy especificada pelo angulo  obtido em relacao ao eixo x. Este modelo pode ser

2008

XXI Congresso Brasileiro de Autom치tica - CBA2016
UFES, Vit칩ria - ES, 3 a 7 de outubro

sendo ex o erro de posicionamento no eixo x e ey
o erro de posicionamento no eixo y. A orientacao
desejada do robo d e o erro de orientacao e sao
dados por

Figura 1 Modelagem do problema.
representado pelas seguintes equacoes
x  v cos(),

(1)

y  vsen(),

(2)

  ,

(3)

em que x e a taxa de variacao do da coordenada x
no tempo, y e a taxa de variacao da coordenada y
no tempo e  e a variacao da orientacao do robo
no plano cartesiano.
Como o robo_movel utilizado neste trabalho e
do tipo diferencial de duas rodas, de (1), (2) e (3),
tem-se
r
(4)
x  (r + l ) cos(),
2
y 

r
(r + l )sen(),
2

r
(r  l ),
(6)
L
em que r e a velocidade_angular da roda direita,
l e a velocidade_angular da roda esquerda, r e o
raio da roda e L e o tamanho do eixo das rodas
do robo.
Define-se, portanto
r
(r + l ),
2

(7)

r
(r  l ).
(8)
L
Manipulando-se algebricamente (7) e (8),
tem-se
2v + L
r 
,
(9)
2R


2v  L
.
(10)
2R
A posicao real (xr , yr ) e a orientacao  do robo
se alteram, podendo-se, portanto, para cada nova
posicao do robo, definir o vetor posicao pr , o vetor
posicao desejada pd e o vetor erro ep , dado por

  
xd  xr
e
ep  pd  pr 
 x
(11)
yd  yr
ey
l 

ISSN 2525-8311

(12)

e  d  .

(13)

Para a resolucao do problema foram utilizadas duas malhas_de_controle em cascata e uma
estrategia de navegacao. A malha mais interna
mostrada na Figura 2, e responsavel por controlar
a velocidade das rodas. A entrada de referencia
sao as velocidades angulares desejadas da roda direita e esquerda, (rd , ld ). Os erros obtidos da
diferenca entre as velocidades angulares desejadas
e estimadas sao as entradas para um controlador
PID. Este controlador produz sinais PWM que
sao aplicados aos motores. Por sua vez, velocidades angulares reais, (rr , lr ), sao estimadas
a partir das medidas obtidas pelos encoders 3 do
robo. Estes produzem medicoes para a realimentacao negativa da malha_de_controle II e para a
estrategia de navegacao.

(5)

 

v

d  atan2 (ey , ex ) ,

Figura 2 Malha de controle_de_velocidade do motor.
A malha_de_controle II e a estrategia de navegacao, mostradas na Figura 3, controlam, respectivamente, o direcionamento e o posicionamento
do robo no plano. A estrategia de navegacao recebe como entrada a posicao estimada, (xe , ye ), e
a posicao desejada, (xd , yd ), e produz a orientacao
desejada do robo, d . Este valor sera comparado
com o valor recebido da malha_de_controle I, e ,
e produz um erro, denominado e , aplicado a um
controlador_proporcional-integral, de parametros
Kp e Ki , que, por sua vez, produz a velocidade
angular (). Este valor, bem como a velocidade
linear, sao entradas para o calculo realizado no
bloco assinalado pelo numero 1, em que R e o
raio da roda e L o tamanho do eixo das rodas, resultando nas velocidades angulares desejadas da
roda direita e esquerda, que sao sinais de referencia para a malha_de_controle I.
3 Dispositivos responsaveis pela medicao do movimento
rotacional de um eixo a partir da contagem de pulsos eletricos.

2009

XXI Congresso Brasileiro de Autom치tica - CBA2016
UFES, Vit칩ria - ES, 3 a 7 de outubro

4

Figura 3 Malhas de controle de direcionamento
do robo e estrategia de navegacao.

Os testes apresentados a seguir foram propostos
com objetivo de variar as posicoes inicial e alvo
do robo, assim como os ganhos dos controladores proporcional e integral. Portanto, escolheramse experimentalmente os valores atribudos a esses parametros de tal forma que a execucao nao
apresentasse comportamento oscilatorio. Para o
primeiro teste, os seguintes parametros foram definidos (xi , yi )  (0, 0), (xa , ya )  (0,90 0,90),
R  0,20, Kp  1,35, Ki  0,35 e i   rad. A
Figura 4 ilustra o resultado.

Implementacao

Percurso do rob칪

v  pva + q tanh

q

e2x + e2y ,

(14)

em que p, q  (0, 1) sao fatores de ponderacao.
A implementacao do controle_automatico foi
realizada com base nas equacoes definidas no modelo do uniciclo.

ISSN 2525-8311

1

Regi칚o Circular
Percurso
(xr, yr)

0.8

(xd, yd)

y (m)

A primeira definicao realizada foi estabelecer o
papel desempenhado por cada plataforma na estrutura cliente-servidor configurada entre elas.
Definiu-se que a aplicacao teria o papel de cliente
e o robo a de servidor, visto que ele e responsavel
pelo processamento mais complexo e pelo envio
dos resultados.
A integracao entre as plataformas e realizada
com a transferencia de informacoes pelo canal de
comunicacao criado ao estabelecer entre elas uma
conexao Bluetooth. A aplicacao envia as informacoes sobre os movimentos do controle manual, os
valores dos ganhos dos controladores proporcional e integral inseridos pelo usuario e os valores
dos posicionamentos inicial e do alvo, e recebe do
robo as informacoes atualizadas do processo x, y,
o angulo , a velocidade linear v, a velocidade_angular  e o erro de posicao kep k, que sao exibidas
dinamicamente pelo aplicativo.
Existem tres tipos de comandos que podem
ser recebidos pelo robo, advindos da aplicacao (i)
o de configuracoes, (ii) o de controle_automatico e
(iii) o de controle manual. O comando para configuracoes altera os valores das variaveis (posicoes
inicial e alvo e ganhos dos controladores proporcional e integral) pre-definidos inicialmente para os
novos valores recebidos utilizados no controle do
robo. Os comandos de controle manual e automatico sao responsaveis, respectivamente, por guiar
o robo manualmente definindo a sua nova direcao
a cada instante de tempo e por iniciar os calculos que o conduzam ao ponto alvo para que ele
possa descrever, em torno desta coordenada, uma
trajetoria circular com raio pre-estabelecido.
A velocidade v do robo e dada em funcao da
velocidade do alvo e da margem de correcao que
depende da distancia do robo em relacao a este
alvo, de acordo com a expressao

(xa,ya)

0.6
0.4
0.2
0
0.2

0

0.2

0.4
0.6
x (m)

0.8

1

1.2

Figura 4 Trajetoria seguida pelo robo a partir da
origem do plano cartesiano.
Para o segundo teste, os parametros utilizados
foram (xi , yi )  (-0,1 -0,1), (xa , ya )  (0,9 0,45),
R  0,20, Kp  1,475, Ki  0,385 e i   rad.
O resultado e mostrado na Figura 5.
Percurso do rob칪
0.8

(xa,ya)
Regi칚o Circular
Percurso
(xr, yr)

0.6

(xd, yd)

0.4
y (m)

3.2

Testes

0.2

0

0.2
0.2

0

0.2

0.4
x (m)

0.6

0.8

1

Figura 5 Trajetoria seguida pelo robo a partir do
ponto (-0,1-0,1).
O terceiro teste consistiu em alterar (xa , ya )
e os ganhos dos controladores em tempo de execucao. A princpio, os parametros definidos foram
(xi , yi )  (0 0,9), (xa , ya )  (0,3 0,3), Kp  0,85,
Ki  0,25 e i  0 rad. Decorridos 22s apos incio
da execucao do comando automatico, alterou-se o
valor de (xa , ya ) para (0,9 0), Kp para 1,15 e Ki
para 0,55. A trajetoria realizada nas duas regioes
circulares pode ser verificada pela Figura 6.
A Figura 7 mostra o comportamento do erro
de posicao para o terceiro teste. Este erro e obtido
por meio da distancia Euclidiana entre os pontos atual e alvo, em metros, a cada instante de
tempo. Inicialmente, seu valor, 0,671m, e grande
devido a distancia entre o ponto inicial e o primeiro ponto alvo. Este erro decresce ate atingir
seu menor valor, 0,024m, aos 4,6s de execucao.Em

2010

XXI Congresso Brasileiro de Autom치tica - CBA2016
UFES, Vit칩ria - ES, 3 a 7 de outubro
Percurso do rob칪
(xa,ya)
Regi칚o Circular
Regi칚o Circular 1
Percurso
(x , y )

0.8
0.6

r

r

y (m)

(xd, yd)

0.4
0.2
0
0.2
0

0.2

0.4

0.6
x (m)

0.8

1

1.2

Figura 6 Trajetoria seguida pelo robo a partir do
ponto (0 0,9).

dos de controle apresentandos, respectivamente,
na Figura 9b e Figura 9a. No primeiro caso, o
maior valor do erro, 1,3256m, ocorreu aos 5,18s
de execucao no ponto (-0,0918 0,0205) e decresceu ate atingir o menor valor, 0,059m, aos 33,73s
no ponto (0,9181 0,8459). No segundo caso, o
maior erro, 1,3004m, ocorreu aos 0,719s no ponto
(-0,061 0,0245) e diminuiu ate o valor de 0,023m
aos 10,44s no ponto (0,8813 0,8864) do plano cartesiano.
Erro x Tempo

Erro x Tempo

1.4

1.4
Erro

Erro

1.2

1.2
1
Erro (m)

1
Erro (m)

seguida, o valor do erro cresce de forma oscilatoria por 8s, devido a correcao do posicionamento,
e novamente decai ate atingir o valor de 0,036m.
Aos 62s, alterou-se o ponto alvo para (0,9 0,0) e
novamente o erro apresenta uma oscilacao devido
a mudanca do ponto desejado. Apos os 78s de
execucao o erro diminui ate estabilizar com valor
de 0,035m.

0.8
0.6

0.8
0.6

0.4

0.4

0.2

0.2

0
0

5

10

15

20

25

30

35

0
0

2

t (s)

(a) Controle manual.

4

6
t (s)

8

10

12

(b) Controle automatico.

Erro de Posi칞칚o x Tempo
0.7
Erro
0.6

Figura 9 Erro de posicao do robo.

Erro (m)

0.5
0.4
0.3
0.2
0.1
0
0

20

40

60

80

100

t (s)

Figura 7 Erro de posicao do robo.
Por fim, o ultimo teste consistiu em guiar manualmenter o robo utilizando os seguintes parametros (xi , yi )  (0, 0), (xa , ya )  (0,9 0,9) e i 
 rad. Para comparar a trajetoria configurada ao
final da execucao dos movimentos, plotou-se um
grafico comparativo com a realizacao de um teste
do controle_automatico com os seguintes definicoes mesmos valores para (xi , yi ) e (xa , ya ), Kp
 1,35, Ki  0,25, i   rad. Este grafico pode
ser visto na Figura 8.
Percurso do rob칪
1

Ponto Alvo
Percurso Cont. Manual
Percurso Cont. Autom치tico

y (m)

0.8

0.6

0.4

0.2

0

0.2

0

0.2

0.4
x (m)

0.6

0.8

1

Figura 8 Comparativo entre execucao do controle
manual e automatico.
Nota-se que os percursos realizados pelo robo
tanto para o controle manual quanto automatico
foram similares. Para melhor analise, plotaramse os graficos do erro de posicao para os mo-

ISSN 2525-8311

Ressalta-se que os tempos plotados nos graficos nao sao identicos pelo fato dos testes terem sido realizados separadamente. Alem disso,
destaca-se o formato irregular da curva para o
erro do controle manual, na qual existem especies de degraus em que a parte horizontal indica
o momento no qual o usuario clicou e pressionou
o botao de uma determinada direcao e apos alguns segundos cessou esse movimento. Ja a parte
vertical representa a atualizacao do erro quando
o usuario clicou mais uma vez para movimentar o
robo em uma nova direcao.
5

Resultados

A aplicacao movel desenvolvida de fato baseia-se
em um Sistema SCADA, pois permite controlar,
monitorar e gerenciar as variaveis do processo definidas oferecendo interfaces interativas. Alem disso
apresentou um comportamento esperado, proporcionando visualizacao do estado atual da execucao
e adocao de medidas de prevencao e correcao ao
movimento_realizado pelo robo. Duas de suas telas
sao apresentadas pela Figura 10.
Verificou-se que a implementacao do controle
automatico atingiu um resultado satisfatorio, pois
ao se escolher valores adequados para os ganhos
dos controladores, o robo alcanca o objetivo proposto com um erro de posicao que decresce ao
longo do tempo, tendendo a se anular. Ratificouse o fato de que o comportamento do robo e influenciado diretamente pela escolha dos valores para
os ganhos dos controladores. Obteve-se exito tambem na implementacao e execucao do controle manual, visto que o robo e guiado pelo usuario por

2011

XXI Congresso Brasileiro de Autom치tica - CBA2016
UFES, Vit칩ria - ES, 3 a 7 de outubro

e Windows Phone. Outra medida relevante seria
adaptar o aplicativo para aparelhos com dimensoes distintas, como tablet e outros modelos de
smarthphones.
Referencias

(a) Tela de Informacoes.

(b) Tela de Graficos.

Figura 10 Telas da Aplicacao.

meio aplicacao ate a posicao desejada. Vale ressaltar que o erro de posicao para este ultimo controle varia de acordo com o caminho percorrido
pelo robo. Consequentemente, a escolha do controle deve ser realizada com base no estado atual
do processo e na necessidade do usuario.
6
6.1

Conclusoes e Trabalhos Futuros

Conclusoes

Nesse trabalho propos-se o desenvolvimento de
uma aplicacao movel, espelhada nos Sistemas
SCADA, que integra as plataformas Android e
Lego Mindstorms NXT. A finalidade era simular
a execucao de processos, proporcionando comodidade ao controla-los, uma vez que a aplicacao foi
desenvolvida para uma plataforma movel.
A mobilidade adquirida torna os processos
mais dinamicos a medida que permite o acompanhamento em tempo_real e nao necessariamente
de forma presencial. Para tal objetivo foram combinadas estrategias_de_controle e conceitos de Sistemas Distribudos. Consequemente, constatou-se
que, mesmo em se tratando de uma simulacao em
menor escala, e possvel estabelecer um ambiente
correspondente ao que seria a implantacao deste
software em uma aplicacao real especfica.
6.2

Trabalhos Futuros

A perspectiva que se abre para o futuro e expandir os resultados, inserindo outros componentes
roboticos que possibilitam abranger novos termos
tecnicos, novas tecnologias e diferentes acoes de
controle. Alem disso, e possvel combinar redes
de computadores de alta velocidade e tecnicas de
seguranca para a transmissao confiavel dos dados
entre os componentes para a formacao de uma
rede de robos. Para tanto, seria desejavel uma
plataforma em que a comunicacao pudesse ser realizada via Wi-Fi, como o Lego Mindstorms EV3.
Outra perspectiva e evitar que aplicacao seja
restrita apenas aos usuarios que possuem dispositivos_moveis com sistema operacional Android e
disponibiliza-la para as plataformas moveis iOS

ISSN 2525-8311

Cazangi, R. R. and Figueiredo, M. (2001). Sistema
autonomo inteligente baseado em computacao_evolutiva aplicado a navegacao de robos
moveis, Canela, Parana.
Cruz, B. H. A., Agnese, J. F., Fagundes, B. J.,
Bastos, M. T., Molz, R. F. and Schreiber, J.
N. C. (2011). Desenvolvimento de uma aplicacao embarcada em celular visando controle
de robo via wi-fi, Revista Brasileira de Computacao Aplicada 3(1) 4352.
da Silva Junior, C. G., Borges, I. S., Cherubini,
L. F. and Martins, R. M. (2013). Aplicacao
do sistema operacional android em robotica
movel, XLI Congresso Brasileiro de Educacao em Engenharia .
da Silva Pisco, R. G. P. (2015). Scada em
android, Masters thesis, Universidade do
Porto, Porto, Portugal. Mestrado Integrado
em Engenharia Eletrotecnica e de Computadores.
Dalmarco, G., de Azevedo, D. F. and Lima, J. C.
M. d. (2003). Desenvolvimento de robo para
exploracao de agua subterranea em marte,
Salao de iniciacao Cientfica (15. 2003
Porto Alegre, RS). Livro de resumos. Porto
Alegre UFRGS, 2003 15.
de Angelis Cordeiro, R. et al. (2013). Modelagem
e controle_de_trajetoria de um veculo robotico terrestre de exterior, Masters thesis, Faculdade de Engenharia Mecanica. Universidade Estadual de Campinas, Campinas, Sao
Paulo.
Goebel, S., Jubeh, R., Raesch, S.-L. and Zuendorf, A. (2011). Using the android platform
to control robots, in R. Stelzer and K. Jafarmadar (eds), Proceedings of 2nd International Conference on Robotics in Education
(RiE 2011), INNOC - Austrian Society for
Innovative Computer Sciences, pp. 135142.
Siciliano, B., Sciavicco, L., Villani, L. and Oriolo,
G. (2010). Robotics modelling, planning and
control, Springer Science  Business Media.
Silva, J. F., Santos, D. M., Oliveira, K. D., Texeira, R. G., Rodrigues, T. O., Marques,
V. C. and Silva, F. D. (2012). A study of
bluetooth application for remote controlling
of mobile embedded_systems, Computing System Engineering (SBESC) p. 116.

2012