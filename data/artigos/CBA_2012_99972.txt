Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

ORQUESTRAÇÃO DE SISTEMAS PRODUTIVOS DISPERSOS
SAMIRA SOUIT, FABRÍCIO JUNQUEIRA, DIOLINO J. SANTOS FILHO, PAULO E. MIYAGI
Escola Politécnica da Universidade de São Paulo
Av.Prof. Mello Moraes, 2231
CEP 05508-030, São Paulo, SP, Brasil
E-mails samirasouit@usp.br, fabri@usp.br , diolinos@usp.br, pemiyagi@usp.br

Abstract According to trends in demand for more customized products with less time-to-market possible, it is noticeable the
need for productive systems (PSs) with reconfigurable structures to maintain competitiveness against the increasing challenges of
globalized market. This ability to reconfigure involves not only the internal structure of the PS, but also their participation into an
integrated and coordinated environment for realization of complex productive process in conjunction with other PSs. Thus, this
paper presents a supervisory control architecture that integrates and coordinates a set of physically dispersed PSs, whose features
are made available as services for the execution of productive processes. For the supervision and control of dispersed PS it was
adopted the "orchestration" technique, derived from the approach of SOA (service-oriented architecture) that allows the dynamic
composition (inclusionexclusion) of PSs according to priority policies that best meet the requirements for manufacture of products. Since the dispersed PS can be characterized as a discrete event system, the evaluation of the proposed architecture was conducted through analysis of models based on Petri nets and case studies based on the emulation of a dispersed PS.
Keywords Productive system, manufacturing system, orchestration, service oriented architecture, supervisory control
Resumo De acordo com as tendências de demanda por produtos cada vez mais customizados com menor time-to-market
possível, evidencia-se a necessidade de sistemas_produtivos (SPs) com estruturas reconfiguráveis para manter sua
competitividade frente aos crescentes desafios de um mercado globalizado. Esta capacidade de reconfiguração envolve não só a
estrutura interna do SP, mas também a sua participação na execução de forma integrada e coordenada de processos produtivos
complexos em conjunto com outros SPs. Dessa maneira, neste artigo apresenta-se uma arquitetura de supervisão e controle que
integra e coordena um conjunto de SPs fisicamente dispersos, cujas funcionalidades estão disponibilizadas como serviços para
a realização dos processos produtivos. Para a supervisão e controle do SP disperso adotou-se a técnica de orquestração,
derivada da abordagem da SOA (service-oriented architecture) que permite a composição (inclusãoexclusão) dinâmica de SPs
de acordo com políticas de prioridade que melhor atendem os requisitos para a manufatura dos produtos. Como o SP disperso
pode ser caracterizado como um sistema_a_eventos_discretos, a avaliação da arquitetura proposta foi conduzida por meio da
análise de modelos baseados em rede de Petri e estudos de casos baseado na emulação de um SP disperso.
Palavras-chave .

1 Introdução
Os sistemas_produtivos (SPs) são definidos como
sendo aqueles que realizam um processo utilizando
recursos materiais, equipamentos, recursos humanos
e outras entidades incluindo informações, para a
produção de bens ou serviços (Villani et al., 2007).
Neste sentido, os sistemas de manufatura integram
um grupo especial de SPs que envolvem serviços e
processos de transformação física de matéria-prima
para agregar valor e gerar um produto.
De acordo com a proposta de (Mehrabi et al.,
2000) a evolução histórica desses SPs pode ser
dividida em três períodos distintos do pré-CNC
do CNC e o mais recente, do conhecimento. O
período do Pré-CNC se refere aos SPs existentes
antes da década de 1960, em que a maioria das
máquinas, em especial na área de manufatura, e seu
controle eram manuais. Na produção, utilizavam-se
linhas com transportadores e partes intercambiáveis.
A competição era em sua grande maioria apenas
local, com pouca integração entre diferentes SPs. O
período do CNC, de 1960 a 1990, é marcado com a
disseminação do controle_automático e o surgimento
das máquinas com comando numérico (NC) e, sua
posterior evolução para equipamentos com comando

ISBN 978-85-8001-069-5

numérico computadorizado (CNC). Estes recursos
impactaram diretamente as taxas de produção,
aumentando a qualidade e precisão dos processos de
fabricação, além facilitar a integração lógica e física
entre processos, máquinas e sistemas. No entanto,
como apontado por (Garro and Martin, 1993), para se
ter rápida resposta a um mercado flutuante, era
necessário que os SPs possuíssem uma estrutura
modular com ferramentas que permitissem uma
rápida reorganização de suas tarefas. O terceiro
período, a partir de 1990, definido por como do
conhecimento, é caracterizado pela intensificação
da competição global e evolução da tecnologia de
informação. Esta evolução é observada em novas
soluções de gerenciamento dos sistemas de
informação, no desenvolvimento de softwares para
propósitos diversos, nos avanços significativos nos
sistemas de comunicação (hardware e software), etc.
Dessa maneira, a competição global e a tecnologia da
informação têm sido as forças motoras por trás das
recentes mudanças nos SPs. Assim, atualmente notase tendências de demanda por produtos cada vez
mais customizados com menor time-to-market
possível, evidencia-se a necessidade de SPs com
estruturas reconfiguráveis para manter sua
competitividade frente aos crescentes desafios de um
mercado
globalizado.
Esta
capacidade
de

2627

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

reconfiguração envolve não só a estrutura interna do
SP, mas também a sua participação na execução de
forma integrada e coordenada de processos
produtivos complexos em conjunto com outros SPs,
isto é, instalações que em geral estão dispersos
geograficamente.
Assim, neste trabalho são apresentadas
inicialmente as necessidades dos novos SPs e
tecnologias como service-oriented architecture
(SOA) e web_services (WS) que podem ser
exploradas para os SPs dispersos. A seguir, introduzse uma arquitetura para supervisão e controle de SP
disperso onde a técnica de orquestração é adotada.
A avaliação da arquitetura proposta é realizada com
base em análise de modelos de rede de Petri (já que o
SP disperso pode ser visto com um sistema a eventos
discretos) e estudos de caso conduzidos por meio de
um SP disperso emulado.
2 Arquiteturas de SPs
Necessidades e Tendências
Várias publicações reforçam que cada vez mais as
novas demandas para os SPs relacionados com maior
customização de produtos, maior qualidade, menor
custos, e menor time-to-market. Entretanto, apesar
dos grandes progressos tecnológicos, os SPs ainda
não conseguem atender plenamente a essa demanda.
Os principais problemas ainda são (Cândido et al.,
2009a)
 Longo tempo para o projeto e instalação dos
SPs
 Necessidade de constante reorganização dos
SPs devido a variações de produtos
 Dificuldade de reconfiguração de SPs
devido
 necessidade
de pessoas
especializadas, que conheçam o projeto do
sistema_de_controle e automação de cada SP
envolvido, e o longo tempo necessário para
efetuar esta reconfiguração
 Extrema centralização e hierarquização das
implementações de supervisão e controle de
SPs
 Complexidade
exponencial
da
escalabilidade de sistemas com vários SPs
 Dificuldade de implementar sistemas
tolerantes s falhas e com redundâncias
 Dificuldade de combinar vários SPs devido
 incompatibilidade entre diferentes
fabricantes de dispositivos
 Dificuldade de interoperar vários SPs
devido  falta de um padrão de comunicação
e integração de dispositivos amplamente
aceito.
Outra necessidade evidente para os SPs atenderem
um mercado globalizado é a de que sejam versáteis,
para que se consiga agilmente, isto é, facilmente e
rapidamente adaptá-los para atender a variação de
produtos tanto em tipo como em volume de
produção e que sejam enxutos, para que produzam

ISBN 978-85-8001-069-5

sem desperdícios. Neste contexto, versatilidade e
agilidade para um SP implica em sua capacidade de
ser mais que flexível e enxuto (Lin and Young,
2006).
Por outro lado, uma empresa global pode ser
entendida como um sistema com estrutura de gestão
dividida em camadas (vide Figura 1). Assim, a
reconfiguração, versatilidade e agilidade de todo o
sistema estão sempre limitadas por sua camada
menos reconfigurável, versátil ou ágil, isto é, todas as
camadas da empresa precisam ser reconfiguráveis,
versáteis e ágeis e interagirem de uma maneira
eficiente e sincronizada (Cândido et al., 2009a).
As funcionalidades das camadas de um SP são
definidas pela norma IEC 62264 (Groba et al., 2008),
sendo que, atualmente, observa-se que as camadas 1
e 2 são claramente as menos reconfiguráveis,
versáteis e ágeis devido s limitações dos
dispositivos que as compõem, em comparação com
as demais camadas (Cândido et al., 2009b).

Figura 1 - Estrutura típica de camadas de SPs.
Adaptado de (Groba et al., 2008)

Leitão (2009) destaca ainda que para serem
protagonistas num mercado globalizado, as empresas
não devem atuar independentemente, sendo
necessário reconsiderar a maneira como se
organizam para assegurar sua competitividade. As
empresas têm assim que focar em suas competências
principais e precisam interagir mais com as outras
para prover especialidades complementares e
recursos. A demanda por novas funcionalidades dos
produtos também contribui com a descentralização
da produção, isto é, dispersão física dos SPs,
reforçando ainda mais a necessidade das empresas
colaborarem, umas com as outras, na produção, na
cadeia de suprimentos ou em redes de serviços, em
que cada parceiro contribui para a produção do
produto
final
(Grefen
et
al.,
2009).
Consequentemente, a pesquisa em supervisão e
controle dos SPs tem mudado sua abordagem
tradicional centralizada para uma estrutura em que os

2628

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

SPs ou a maior parte desses SPs estão
geograficamente espalhados de modo a explorar
melhor os recursos e potencialidades locais
(Junqueira et al., 2005), tornando-se um sistema
disperso. O SP disperso evidentemente inclui o
conceito de sistema_distribuído que representa um
tipo de sistema composto por subsistemas
independentes que, para o usuário do sistema, este é
visto como um a única entidade sem a percepção dos
seus subsistemas (Tanenbaum and Steen, 2007).
Neste contexto existem tecnologias que na última
década despontaram como alternativas viáveis a
serem aplicadas em SPs dispersos. Um exemplo é a
Internet que emerge como a base para interconexão
de dispositivos nos mais vastos e diversos domínios
de aplicações (Cândido et al., 2009b). Isto é
resultado de algumas evoluções convergentes como,
por exemplo (Jammes e Smit, 2005)
 Disponibilidade da tecnologia de Internet a
baixo_custo e alto_desempenho
 O protocolo para comunicação entre
computadores, baseados em TCPIP, têm se
tornado o meio padrão para troca de
informações entre dispositivos conectados
Adicionalmente, a SOA (Service-oriented
architecture) originada na área de sistemas
computacionais é uma abordagem que apresenta
perspectivas interessantes para o atual ambiente da
automação_industrial e em especial de SPs dispersos.
SOA estabelece um conjunto de princípios para a
construção de sistemas autônomos e interoperáveis,
que têm por objetivo aumentar a eficiência, agilidade
e produtividade de um sistema explorando o conceito
de serviço. De um modo genérico, um serviço
pode ser definido como a execução de um trabalho
ou uma função de um para outro. Do ponto de
vista computacional, os serviços encapsulam
funcionalidades de uma maneira transparente, de
modo que possam ser descritos, publicados, alocados
e dinamicamente invocados independentemente do
sistema e da linguagem de programação utilizados
(Groba et al., 2008). Dessa maneira, SOA apresentase como uma arquitetura modular que encapsula o
funcionamento, ocultando a heterogeneidade das
partes do sistema, permitindo, desta forma,
características de flexibilidade, confiabilidade, e fácil
implementação de soluções de middleware1 (Groba
et al., 2008). E, para implementar uma aplicação
computacional da SOA, o WS (web service) é a
tecnologia que tem sido mais adotada. O WS é
considerado uma tecnologia padrão que facilita a
interoperabilidade,
integração
e
reuso
de
componentes da aplicação, isto é, serviços. Ao
implementar a SOA usando o WS em todas as
camadas de um SP, isto é, desde os níveis de negócio
(camada 4 da Figura 1) aos dispositivos de campo
(camada 1), tem-se expectativas promissoras para se
superar os desafios anteriormente citados dos SPs

dispersos, tornando-os mais reconfiguráveis,
versáteis e ágeis frente s mudanças de mercado,
além de assegurar a integração e colaboração entre os
SPs. O resumo deste cenário e as tendências para os
SPs podem ser observados na Figura 2.

Figura 2  Cenário, necessidades e tendências dos SPs

Entretanto, para a implementação de um SP
disperso sob a abordagem de SOA, é fundamental
assegurar a supervisão e controle da interação entre
todas as partes envolvidas, isto é, uma
orquestração dos processos produtivos vistos como
serviços. Esta orquestração garante assim a
reconfiguração, versatilidade e agilidade estrutural
considerando as características heterogêneas dos
componentes que tipicamente integram o SP
disperso.
3 Arquitetura para Orquestração de SPs
Arquitetura neste trabalho é vista como a estrutura
lógica que fornece suporte aos elementos do sistema,
neste caso um SP disperso. Por sua vez, orquestração
é aqui entendida como uma abordagem para a
supervisão e controle de um conjunto de lógicas de
processo que permite a interoperabilidade entre duas
ou mais aplicações (Cândido et al., 2009a). Em
Garcia Melo et al. (2010) foi proposta uma
arquitetura de um Sistema Coordenado de
Teleoperação de Sistemas Produtivos (SCTSP) que
adota a abordagem SOA para assegurar um ambiente
de coordenação na execução das atividades dos SPs.
A solução de supervisão e controle adotada coordena
o conjunto de SPs envolvidos, cujas funcionalidades
estão disponibilizadas como serviços para a
realização dos processos produtivos. Entretanto, esta
abordagem não considera a eficiência da composição
de SPs. Assim, apresenta-se aqui uma especificação
detalhada da arquitetura_de_controle para
orquestração de SPs que além de integrar e coordenar
os SPs, permite a composição (inclusãoexclusão)
dinâmica de SPs de acordo com políticas de
prioridade que melhor atendem os requisitos para a
produção. A arquitetura proposta é ilustrada na
Figura 3.

1

Middleware é uma aplicação computacional com ferramentas e
interfaces disponíveis para comunicar-se com outras aplicações em
outras camadas.

ISBN 978-85-8001-069-5

2629

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

A orquestração de SPs é realizada pelo Serviço de
Coordenação e pelo Serviço de Integração e
Descobrimento presentes no nível 2 da Figura 3.

sempre cadastrado de acordo com as suas
funcionalidades oferecidas, expostas como serviços.
3.3 Interface de Integração
A Interface de Integração é um programa
computacional disponibilizado para o Integrador de
SP se comunicar com o Serviço de Integração e
Descobrimento.
Como
os
serviços
são
implementados com WS, esta Interface de Integração
pode ser acessada por meio de web site, PDA
(personal digital assistant), tablets, etc.
3.4 Serviço de Coordenação

Figura 3  Arquitetura de controle para orquestração de SPs
dispersos com orientação  serviços

A seguir é explicado cada um dos componentes
existentes. Destacam-se os elementos e funções
envolvidas para atender aos requisitos de inserção
dinâmica e seleção de SPs de mesma funcionalidade
que caracteriza a capacidade de reconfiguração e a
versatilidade e agilidade do sistema. Assume-se que
a seleção de um SP está de acordo com o critério
predefinido pelo Cliente.

3.1 Cliente  Interface Cliente  Nível 1
Apesar do foco deste texto ser o nível 2, é
necessário definir algumas relações para que seja
possível explicar como se realiza a seleção dinâmica
de SPs. O Cliente, ao realizar um novo pedido (item
a ser produzido), deve também selecionar qual o
critério de prioridade para ser atendido de acordo
com uma lista de opções apresentada pela Interface
Cliente, como por exemplo, menor tempo de
fabricação, maior qualidade, entre outros. Por sua
vez, o Serviço de Gerenciamento de Pedidos deve
processar também esta informação do pedido
realizado que é o critério prioritário. É importante
destacar que este gerenciamento do pedido é apenas
um exemplo de aplicação, sendo possível substituir
esta camada por qualquer outra aplicação que forneça
ao Serviço de Coordenação (no nível 2) as
informações necessárias descritas em seu WSDL
(web service description language)2.
3.2 Integrador de SPs
O Integrador de SPs é o ator responsável por
realizar a inserção de novos SPs no sistema. Um SP é
2

Linguagem utilizada na camada do serviço de descrição de um
WS. Esta camada é responsável pela descrição de uma interface
pública para um determinado WS.

ISBN 978-85-8001-069-5

O Serviço de Coordenação é o responsável por
coordenar os SPs de um determinado processo
produtivo para atender a um pedido. Este serviço
centraliza o know-how do processo produtivo global,
sabendo quais são as funcionalidades (de SPs)
necessárias e qual a sequência de solicitação de SPs
para a fabricação de um determinado produto. O
Serviço de Coordenação recebe as informações sobre
o pedido (produto, quantidade, critério prioritário,
etc.) do Serviço de Gerenciamento de Pedidos. Com
isso, solicita ao Serviço de Integração e
Descobrimento, para cada funcionalidade necessária,
o SP (exposto como um serviço) que melhor atende
ao critério determinado pelo Cliente. Com a
resposta proveniente do Serviço de Integração e
Descobrimento, o Serviço de Coordenação requisita
somente os serviços dos SPs selecionados (indicado
pelas setas tracejadas da Figura 3) a fim de coordenar
os SPs (nível 3) para a execução de todos os
processos produtivos para a fabricação do produto
final.
3.5 Serviço de Integração e Descobrimento
O Serviço de Integração e Descobrimento possui
duas finalidades (i) a integração de novos SPs ao
sistema e, (ii) a busca e descobrimento de SPs para
atender ao critério prioritário. Baseado no próprio
conceito de SOA e WS, este serviço centraliza e
armazena em um banco_de_dados (UDDI  universal
description, discovery and integration) todas as
informações referentes aos SPs existentes,
classificados de acordo com sua funcionalidade. Ao
receber uma requisição para o cadastro de um novo
SP (exposto como serviço), o Serviço de Integração
e Descobrimento compara o WSDL do serviço do
novo SP com o WSDL padrão para os serviços que
apresentam a mesma funcionalidade. Lembrando que
a funcionalidade do novo SP é necessariamente
informada pelo Integrador de Serviço por meio da
Interface de Integração. Dessa maneira, se o Serviço
de Integração e Descobrimento, por meio da
comparação de WSDL, determinar que o serviço do
novo SP atende as especificações para interação
com os demais serviços do sistema (SP disperso),

2630

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

este novo SP é cadastrado no banco_de_dados de
SPs e fica disponível para uso.
O Serviço de Integração e Descobrimento ao
receber uma solicitação do Serviço de Coordenação
deve identificar qual é o SP que melhor atende ao
critério prioritário. O Serviço de Coordenação
informa a funcionalidade do SP que deseja e o
critério prioritário e, com isso, o Serviço de
Integração e Descobrimento busca em seu banco de
dados, quais os SPs que possuem tal funcionalidade.
Para isso, a base de dados de SPs, deve armazenar
para cada SP, o conjunto de suas funcionalidades (já
que um SP pode possui mais de uma funcionalidade),
a sua disponibilidade, a sua localidade (para que o
Serviço de Coordenação consiga invocar os seus
serviços), e também as características necessárias
para a análise do atendimento aos critérios
prioritários. Como os possíveis critérios prioritários a
serem selecionados pelo Cliente já estão prédefinidos (tempo de fabricação, qualidade, etc.), é
possível determinar para cada funcionalidade de SP,
quais características são mais relevantes para o
atendimento do critério. Por exemplo, a velocidade
de execução de operação de um SP é uma
característica relevante para o atendimento do critério
de tempo de fabricação. Este levantamento de
características é feito nas camadas superiores de
MES (manufacturing execution system) e ERP
(enterprise resource planning) (Figura 1).
Para a eficiente orquestração de SPs, é necessário
que o banco_de_dados de SPs possua informações
atualizadas sobre estes. Para isso, baseou-se no
conceito utilizado para dispositivos por meio do
DPWS (device profile for web_services)
(SOCRADES, 2008) e pela especificação WSDiscovery (OASIS, 2009), em que, a fim de se
minimizar a necessidade de polling, cada serviço
oferecido e conectado ao sistema envia um anúncio
toda vez que deseja fazer parte ou se retirar do SP
disperso. Dessa forma, toda vez que um SP alterar
sua disponibilidade ou alguma característica
funcional, ele deve invocar o Serviço de Integração e
Descobrimento para informar o seu novo status, a fim
de que esse atualize o banco_de_dados (setas traçoponto, da Figura 3).
4 Avaliação da Arquitetura
Para a avaliação da arquitetura de orquestração
proposta, foram realizados estudos de caso usando
um sistema flexível e automatizado de montagem
que emula um SP disperso. Na Figura 4 tem-se uma
foto ilustrativa com alguns dispositivos que fazem
parte do sistema emulado. Os testes realizados
confirmaram a viabilidade de implementação da
arquitetura proposta.
Devido s restrições funcionais do sistema
emulado, para avaliar melhor o desempenho da
solução de orquestração, foram desenvolvidos
modelos de novos SPs que são integrados no modelo
do SP disperso e com funcionalidades similares.
Como os SPs podem ser tratados como sistemas a

ISBN 978-85-8001-069-5

eventos_discretos, adotou-se a rede de Petri e suas
extensões como técnica de modelagem e análise
(Villani et al., 2007) (Junqueira et al., 2005). Além
disso, a análise de desempenho e outras propriedades
foram estudadas por meio de ferramentas de edição e
simulação de redes de Petri como o PIPE2 (PIPE2,
2007) e o HPSIM (HPSIM, 2011). As simulações
realizadas confirmaram as principais funcionalidades
da solução de orquestração proposta.

Figura 4  Foto ilustrativa de alguns dispositivos que fazem parte
do sistema flexível e automatizado de montagem que emula um SP
disperso

Observador Pedido

Requisita
Consulta
Estado Pedido

Resposta
Consulta
Estado Pedido

Consulta Estado Pedido

Requisita
Disponibilidade
Subsistemas

Resposta
Disponibilidade
Subsistemas

Disponibilidade Sub-sistemas

Figura 5  Exemplo de modelo em rede de Petri de uma das
atividadesfuncionalidades especificadas pela arquitetura de
orquestração desenvolvida para SP disperso

5 Conclusão
O presente trabalho explora uma solução baseada
na SOA, considerando as características especiais de
SPs dispersos, isto é, sistemas geograficamente
distribuídos que transformam fisicamente matériasprimas em produtos finais e cujos trabalhos devam
ser devidamente coordenados e integrados para a
realização eficiente e eficaz dos processos
produtivos. A SOA foi escolhida como paradigma de
estruturação do sistema devido  sua capacidade de
homogeneizar um ambiente heterogêneo, em virtude
de sua solução de encapsulamento do funcionamento
de cada um de seus componentes.
A supervisão e controle via orquestração permite a
inserção dinâmica de SPs e também a seleção entre

2631

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

SPs com funcionalidades semelhantes, de acordo
com políticas de prioridade. Dessa maneira,
assegura-se maior capacidade de reconfiguração,
versatilidade e agilidade ao conjunto de SPs
envolvidos. Esta capacidade de reconfiguração,
versatilidade e agilidade representam um menor
tempo de resposta do sistema como um todo face a
mudanças no mercado eou condições locais de cada
SP, uma vez que, caso algum SP fique indisponível,
a orquestração seleciona outro SP de mesma
funcionalidade, sem a necessidade de uma
intervenção para reprogramação dos serviços. Ainda
o mecanismo de seleção de SPs (conforme critério
prioritário) existente nesta solução de orquestração,
permite que um processo produtivo global seja
atendido de uma maneira mais eficiente, de acordo
com algum determinado critério, por meio da
coordenação de SPs que atendam a este critério de
forma mais adequada.
Em relação ao trabalho desenvolvido por (Garcia
Melo et al., 2010) este trabalho introduz um meio
efetivo de assegurar a reconfiguração e incrementar a
versatilidade e agilidade do SP disperso. Entretanto,
num SP disperso a movimentação de materiais e o
custo associado são também fatores onde a solução
de orquestração pode ser devidamente explorada.
Agradecimentos
Os autores agradecem o apoio parcial do CNPq,
CAPES e FAPESP para o desenvolvimento deste
trabalho.
Referências Bibliográficas
Bindietrich, A.J., Kirn, S. and Sugumaran, V. (2007).
A service-oriented architecture for mass
customization - a shoe industry case study, IEEE
Transactions on Engineering Management, Vol.
54, No. 1, pp. 190-204.
Cândido, G., Barata, J., Colombo, A.W. and Jammes,
F. (2009a). SOA in reconfigurable supply
chains a research roadmap, Engineering
Applications of Artificial Intelligence, Vol. 22,
No.6, pp. 939-949.
Cândido, G., Jammes, F., Barata, J. and Colombo,
A.W. (2009b). Generic management services for
DPWS-enabled devices, 35th Annual Conf. of
the IEEE Industrial Eletronics Society (IECON
2009), Porto, pp. 3-5.
Ching-Torng Lin, H.C. and Po-Young, C. (2006).
Agility index in the supply chain, International
Journal of Production Economics, Vol. 100, No.
2, pp. 285-299.
Ciancetta, F., DApice, B. and Gallo, D. (2007).
Plug-n-play smart sensor based on web service,
IEEE Journal of Sensor, Vol. 7, No. 5, pp. 882889.
Cobis (2006). EC FP6 STREP CoBis Project,
Online, Available"httpcoindex.html" 08
Sept. 2011.

ISBN 978-85-8001-069-5

Delamer, I.M. and Lastra, J.L.M. (2006). Selforchestration and choreography towards
architecture-agnostic manufacturing systems,
20th Intern. Conf. on Advanced Information
Networking and Applications (AINA 2006),
Vienna, pp. 573-577.
Dominic, S. and Stamatis, K. (2008). Web-service
enabled wireless sensors in SOA environments,
13th
IEEE Intern. Conf. on Emerging
Technologies an Factory Automation (ETFA
2008), Hamburg, pp. 952-958.
Garcia Melo, J.I., Junqueira, F., Morales, R.A. and
Miyagi, P.E. (2010). Towards modular and
coordinated manufacturing systems oriented to
services, Dyna, Vol. 163, pp. 201-210.
Garro, O. and Martin, P. (1993). Towards new
architecture of machine tools, International
Journal of Production Research, Vol. 31, No. 10,
pp. 2403-2414.
Grefen, P., Mehandjiev, N., Kouvas, G., Weichhart,
G. and Eshuis, R. (2009). Dynamic business
network process management in instant virtual
enterprises, Computer in Industry, Vol. 60, No.
2, February, pp. 86-103, ISSN 0166-3615.
Groba, C., Braun, I., Springer, T. and Wollschlaeger,
M. (2008). A service-oriented approach for
increasing flexibility in manufacturing, 7th IEEE
Intern. Workshop on Factory Communication
Systems (WFCS 2008), Dresden, pp. 415-422.
HPSIM (2011). WinPeSim, Avaiable httpwww.
winpesim.deindex.html 24 Apr. 2012.
Holmqvist, M., Durchslag, S. and Brown, J.S.
(2004). Process integration and web_services, a
case of evolutional development in a supply
chain, Scandinavian Journal of Information
Systems, Vol. 16, No. 1, pp. 117-144.
InLife (2007). EC FP6 STREP InLife Project,
Available "httpwww.uninova.otinlife" 08
Sep. 2011.
Jammes, F. and Smit, H. (2005). Service-oriented
paradigms in industrial automation, IEE
Transactions on Industrial Informatics, Vol. 1,
No.1, pp. 62-70.
Junqueira, F., Villani, E. and Miyagi, P.E. (2005). A
platform for distributed modeling and simulation
of productive systems based on Petri nets and
object-orieted paradigm, 10th IEEE Intern. Conf.
on Emerging Technologies and Factory
Automation (ETFA 2005), Catania, pp. 907-914.
Kim, W., Chun, M., Qureshi, K. and Choi, Y. (2006).
WSCPC an architecture using semantic web
services for collaboration product commerce,
Journal of Computers in Industry, Vol. 57, No.
8-9, pp. 787-796.
Kirkhan, T., Savio, D., SMIT, H., Harrison, R.,
Monfared, R.P. and Phaithoonbuathong, P.
(2008). SOA middleware and automation
Services, applications and architectures, 6th IEEE
Intern. Conf. on Industrial Informatics (INDIN
2008), Daejeon, pp. 1419-1424.
Komoda, N. (2006). Service oriented architecture
(SOA) in industrial systems, 5th IEEE Intern.

2632

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

Conf. of Industrial Informatics (INDIN 2006),
Singapore, pp. 23-33.
Kumar, R.S., Yang, Z., Zhang, J.B. and Zhuang, L.
(2005). Virtualization for manufacturing web
services a WS-RF approach, International
Journal of Information Technology, Vol. 11, No.
3, pp. 40-51.
Leitão, P. (2009). Agent-based distributed
manufacturing control a state-of-art survey,
Engineering
Applications
of
Artificial
Intelligence, Vol. 22, pp. 979-991.
Li-Feng, W. and Zhou, B. (2006). Service-oriented
software architecture for flexible manufacturing
control system, IEEE Intern. Conf. on
Automation Science and Engineering (CASE
2006), Shangai, pp. 425-430.
Liu, S., Meng, X., Ma, R., Wu, L. and Zhang, S.
(2006). Design and implementation of a serviceoriented manufacturing grid system, Advanced
Web
and
Network
Technologies
and
Applications, Lecture Notes in Computer
Science, Vol. 3842, pp. 643-647.
Madhusudan, T. (2005). An experience report on
developing an automated web_services platform,
Journal of Information Systems and E-business
Management, Vol. 3, No. 3, pp. 243-263.
Mehrabi, M.G., Ulsoy, A.G. and Koren, Y. (2000).
Reconfigurable manufacturing systems Key to
future manufacturing, Journal of Intelligent
Manufacturing, Vol. 11, No. 4, pp. 409-419,.
Mendes, J.M., Leitão, P., Colombo, W.A. and
Restivo, F. (2008). Service-oriented control
architecture for reconfigurablem production
systems, 6th IEEE International Conference on
Industrial Informatics (INDIN 2008), Daejeon,
pp. 744-749.
Mendes, J., Leitão, P., Restivo, F., Colombo, A. and
Bepperling, A. (2007). Engineering of serviceoriented automation systems a survey, 4th Conf.
on Innovative Production Machines and Virtual
International Systems (IPROMS 2008), pp. 3338.
Meng, L. and Yexin, X. (2005). SOMG a service
orented manufacturing grid system, 5th Intern.
Conf. on Computer and Information Technology
(CIT 2005), Shangai, pp. 1080-1084.
Moreira, L., Spiess, P., Guinard, D., Ohler, M.,
Karnouskos, S. and Domnic, S.D. (2008).
SOCRADES A web service based shop floor
integration infrastructure, Intern. Conf. for
Industry and Academia (Internet of Things
2008) , Zurich, pp. 50-67.
OASIS (2009). OASIS, Available "httpdocs.oasisopen.orgws-dddiscovery1.1wsdd-discovery1.1-spec.html" 08 Sep. 2011.
OPC (2008). OPC Unified Architecture (OPC-UA)
Specifications,
Available
"httpwww.opcfoundation.orgUA" 08 Sep.
2011.
Phaithoonbuathong, P., Harrison, R., West, A.,
Monfared, R. and Kirkhan, T. (2010). Web
services based automation for the control and

ISBN 978-85-8001-069-5

monitoring of production systems, International
Journal of Integrated Manufacturing, Vol. 23,
No. 2, pp. 126-145.
PIPE2 (2007). Platform Independent Petri net Editor
2. Avaiable httppipe2.sourceforge.net 24
Apr. 2012.
Puttonen, J., Lobov, A., Juha, P. and Martinez, L.
(2008). A application of BPEL for service
orchestration in an industrial environment, IEEE
Intern. Conf. on Emerging Technologies and
Factory Automation (ETFA 2008), Hamburg,
pp. 530-537.
RI-MACS (2007). IST NMP-1 RI-MACS Project
website, Available "httpwww.rimacs.org" 08
Sep. 2011.
Sirena (2006). ITEA 02014 SIRENA Project,
Available "httpwww.sirena-itea.org" 08 Sep.
2011.
SOCRADES (2008). EU FP6 IST-5-034116
SOCRADES
Project,
Available
"httpwww.socrades.eu" 08 Sep. 2011.
SODA (2007). ITEA 05022 SODA Project,
Available "httpwww.soda-itea.org" 08 Sep.
2011.
Sua, Y., Guoa, R. and Changb, S. (2005). Virtual fab
an
enabling
framework
and
dynamic
manufacturing service provision mechanism,
Journal of Information  Management, Vol. 42,
pp. 329-348.
Tanenbaum, A.S. and Steen, M.V. (2007).
Distributed Systems Principles and Paradigms,
2nd edition, Amsterdam Pearson Prentice Hall.
Villani, E., Miyagi, P.E. and Vallete, R. (2007).
Modelling and Analysis of Hybrid Supervisory
Systems A Petri Net Approach, London
Springer.
Yan, Y., Liang, Y. and Du, X. (2005). Controlling
remote instruments using web_services for online
experiment systems, 3rd IEEE Intern. Conf. on
Web Services (ICWS 2005), Orlando, FL, pp.
724-732.
Zeeb, E., Bobek, A., Bohn, H. and Golatowski, F.
(2007). Service-oriented architectures for
embedded_systems using device profile for web
services, 21st IEEE Intern. Conf. on Advances
Information Networking an Applications (AINA
2007), Niagara Falls, pp. 956-963.

2633