Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

ORIENTAÇÃO A OBJETOS APLICADA NA SOLUÇÃO DO FLUXO DE POTÊNCIA PARA
SISTEMAS DE DISTRIBUIÇÃO DE E E
JHONI E. SCHULZ, CARLOS R.M. DA ROCHA
Centro de Engenharias e Ciências Exatas, Universidade Estadual do Oeste do Paraná, Foz do Iguaçu-PR
Parque Tecnológico Itaipu - PTI, Av. Tancredo Neves, 6731, CEP 85856-970, Foz do Iguaçu-PR
E-mails jhonieldor@gmail.com, c.rocha@ieee.org

Abstract In this paper is shown the method of modeling and object-oriented programming applied to the solution of the power
flow based on backward forward sweep to simulate and analyze networks of electric power distribution systems. This work is
piece of a larger study focused on modeling and development of a web-based intelligent system for analysis and planning of electric power distribution systems. Here are presented the development of the power flow solution using the Java programming
language by combining the frameworks of Java Enterprise Edition (JEE) platform, and PostgreSQL database module technology.
Keywords Power System Analysis Computer, Power Distribution Lines, Object-Oriented, Computational Intelligence.
Resumo Neste artigo é apresentado o método de modelagem e programação orientada a objetos aplicado na solução do fluxo
de potência baseado no backward forward sweep para simular e analisar redes de sistemas_de_distribuição_de_energia_elétrica. Esse trabalho é parte de uma pesquisa mais ampla centrada na modelagem e no desenvolvimento de um sistema inteligente web para análise e planejamento dos sistemas_de_distribuição_de_energia_elétrica. Aqui são apresentados o desenvolvimento do módulo
de solução do fluxo_de_potência utilizando a linguagem de programação Java com a combinação dos frameworks da plataforma
Java Enterprise Edition (JEE), e a tecnologia de banco_de_dados PostgreSQL.
Palavras-chave .

1

compostos por interligações em malhas enquanto
que, considerando as redes aéreas, os sistemas de
distribuição normalmente são unidirecionais pelo
fato de que as topologias de suas redes são compostas em formato radial. Essas diferenças acabam causando alguns problemas de convergência em métodos consolidados para sistemas_de_transmissão como
Newton Raphson, Gauss Seidel e Desacoplado Rápido quando aplicados na solução do fluxo_de_potência
para análise dos sistemas_de_distribuição (Shirmohammadi et al,1988).
Em conta disso, o backward forward sweep se
consolidou como um método simples e eficiente na
solução do fluxo_de_potência em sistemas_de_distribuição.
Este método é orientado pelas leis de Kirchhoff
e se resume basicamente pelo processamento das
informações da rede através de uma matriz de incidência, executando uma varredura iniciada pela soma
das correntes injetadas a partir dos nós terminais até
a subestação da rede, e onde na sequência, são calculadas as quedas de tensões partindo dos nós mais
próximos da subestação até os nós terminais, seguindo esse procedimento até que se atinge a convergência.
Mas, mesmo neste método são necessários algoritmos de indexação dos nós e das linhas para resolver as equações, com o cuidado de relacionar as
informações corretas conforme os dados da topologia
da rede, como as ramificações entre os nós e seus
dados de demanda.

Introdução

No planejamento dos sistemas_elétricos_de_potência, por meio de análises e estudos de cenários em
regime_permanente, o fluxo_de_potência é empregado
como uma ferramenta para simular o estado dos
sistemas_de_transmissão e distribuição_de_energia
elétrica.
Com essa análise é possível obter informações
que possibilitem a verificação sobre níveis de tensões
e injeções de correntes nos nós, as perdas_elétricas e
a verificação da capacidade relacionada com os limites de carregamento através da análise da corrente e
da potência que passam pelos trechos em redes de
alta, média e baixa tensão, e a partir disso é possível
executar processos de otimização tanto na expansão,
quanto na reconfiguração dessas redes.
O cálculo do fluxo_de_potência é realizado por
meio de métodos_computacionais com capacidade
para resolver sistemas de equações e inequações
algébricas correspondentes s leis de Kirchhoff, onde
a modelagem do sistema é estática e utilizada em
situações nas quais as variações com o tempo são
suficientemente lentas, podendo assim ser desprezados os efeitos transitórios (Monticelli, 1983).
Aplicando os métodos consolidados para resolver o fluxo_de_potência em sistemas_de_transmissão
nos sistemas_de_distribuição, nota-se a diferença
entre os parâmetros da resistência e reatância de
linhas longas de transmissão e as linhas_de_distribuição, além da forma que esses dois segmentos operam, uma vez que os sistemas_de_transmissão são
1911

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

em inteligência_artificial, além de estudos na filosofia
e ciência cognitiva (Booch,1994).
A orientação_a_objetos pode ser definida como
um método de modelar e construir sistemas baseados
em entidades reais abstraindo seus problemas de
algum lugar no mundo real. Essas entidades podem
ser definidas como objetos, onde cada objeto sendo
único em um espaço de memória computacional
possui características e comportamentos diferentes.
Assim, estes objetos quando instanciados, mesmo
que suas informações sejam protegidas dos demais
objetos para evitar que o comportamento de um interfira na integridade de outro, existe a colaboração
entre eles, o que aumenta a confiabilidade e flexibilidade no tratamento de problemas complexos de forma produtiva, enquanto que no paradigma de programação estruturado, adaptar o código s mudanças
dos requisitos de software era sempre um procedimento custoso em conta da dependência entre as
partes implementadas (Sodhi e Sodhi, 1996).
Para obter um modelo que permite imitar os
conceitos do mundo real com a orientação_a_objetos é
necessário que se classifique as entidades normalmente agrupadas por um conjunto de informações
que possuem algo em comum, compondo dessa forma uma estrutura hierárquica entre classes e seus
atributos.
Isso permite expressar os problemas em determinadas áreas de domínio, agrupando os atributos
em objetos que são relacionados e difundidos s
regras de produção, criando então um processo de
raciocínio de um sistema baseado em conhecimento,
ou um sistema_especialista. Em torno disso, linguagens como CLIPS e PROLOG permitem elaborar e
desenvolver modelos para tratamento de regras que
representam uma base de conhecimento (Rezende et
al, 2005).
De acordo com Russel e Norvig (2004), a organização de objetos por meio de classificação é vital
para a representação_do_conhecimento em meios
computacionais, possibilitando criar mecanismos de
percepção e dedução, com a finalidade de realizar
prognósticos baseado nas informações e no comportamento desses objetos.
Do ponto de vista de análise, o que se busca com
a orientação_a_objetos, é obter o domínio de determinado problema com base na descrição e modelagem
dos objetos identificados por meio de notação UML
(Unified Modelling Language), enquanto que, durante o projeto se dá ênfase na definição desses objetos e
na forma como estes colaboram para satisfazer os
requisitos. Assim, o que se espera no desenvolvimento utilizando orientação_a_objetos é a habilidade de
atribuir responsabilidades aos objetos identificados, e
instanciados em soluções computacionais (Larman,
2007).
Porém, para a análise e o desenvolvimento de
um projeto orientado a objetos é necessário saber
quando aplicar os conceitos de herança, encapsulamento e polimorfismo. Além disso, é importante ter
o domínio sobre a notação UML, pois esta, é utilizada como uma ferramenta de modelagem para elabo-

Por outro lado, sabe-se que a orientação_a_objetos é tida como uma metodologia que oferece uma
maior flexibilidade no desenvolvimento de soluções
inteligentes e robustas em diversas áreas de domínio.
Aplicando essa metodologia na solução do fluxo
de potência baseado no backward forward sweep, o
problema de indexação dos nós e das linhas é eliminado, bem como a necessidade de compor e processar a matriz de incidência e a matriz de impedâncias
em sistemas trifásicos.
Neste contexto, baseando-se no backward forward sweep, foi desenvolvida uma solução computacional por meio de modelagem e programação orientada a objetos no intuito de se obter um módulo capaz de solucionar o fluxo_de_potência em qualquer
topologia dos sistemas_de_distribuição operados de
forma radial, com uma interface_gráfica em ambiente
web, e um banco_de_dados para armazenar as informações e os resultados dos sistemas simulados.
Essa modelagem foi obtida por meio de notação
UML, e para o desenvolvimento da solução foi utilizada a linguagem de programação Java com os frameworks da plataforma Java Enterprise Edition,
sendo eles, o Java Server Faces(JSF) para interação
dos objetos com a interface_gráfica a qual foi elaborada com uso do plugin Primefaces, o EJB3 para
injeção de dependências e automatização das transações de banco_de_dados, e o JPA para aplicação do
mapeamento objeto relacional e persistência com o
banco_de_dados, que por sua vez, foi implementado
com o PostgeSQL.
A proposta deste trabalho é apresentar como a
orientação_a_objetos foi aplicada para solucionar o
fluxo_de_potência adequando-a ao backward forward
sweep, e quais são os benefícios que tornam esse
paradigma viável na aplicação das soluções dos problemas relacionados aos sistemas_elétricos_de_potência.
2 Orientação a Objetos
Com o objetivo de tratar os problemas de alta
complexidade e aumentar a produtividade no desenvolvimento de software, de tal maneira que, objetos
representassem componentes de um sistema modularmente decomposto ou unidades modulares da
representação_do_conhecimento, a orientação_a_objetos surgiu baseada na lógica de frames, que foi criada
para alcançar um método de modelagem próxima da
inteligência humana, possibilitando assim, a aplicação dos conceitos de representação_do_conhecimento.
A partir daí, os conceitos de orientação_a_objetos
foram evoluindo com os avanços de arquiteturas de
computadores incluindo o aumento da capacidade
dos sistemas e do suporte ao hardware, dos conceitos
de sistemas_operacionais, das linguagens de programação como Simula, Smaltalk, CLU e Ada, e das
metodologias de programação, introduzindo técnicas
de modularização e encapsulamento de informações,
resultando em contribuições significantes para a
melhoria em modelos de banco_de_dados, pesquisas

1912

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

rar diagramas que compõem a estrutura hierárquica
das classes que definem as características dos objetos
identificados no processo de análise.
Isso significa que para fazer bom uso dos recursos que a orientação_a_objetos propicia, é necessário
entender o problema a ser resolvido, e então modelar
os conceitos desse problema usando técnicas de classificação e aí partir para a programação orientada a
objetos.

3 Método Backward Forward Sweep
O backward forward sweep é um método iterativo e utiliza um esquema de varredura segmentando a
rede em camadas que agrupam os nós mais próximos
da subestação até os mais afastados, conectados pelas
linhas_de_distribuição, compondo dessa forma uma
estrutura de dados em formato de árvore para então
iniciar as varreduras que verificam o cumprimento
das leis de Kirchhoff. Para ilustrar, será considerado
como exemplo um sistema_de_distribuição de 23 nós.

2.1 Aplicações em Sistemas Elétricos de Potência
Especificamente na área de sistemas_elétricos de
potência, já foram realizados trabalhos como a modelagem e desenvolvimento de um sistema computacional apresentado por Manzoni (2005), que implementado em C++ mostrou-se capaz de analisar as
redes de alta tensão, permitindo simular cenários
através do fluxo_de_potência e estabilidade_de_tensão.
Por sua vez (Neyer et al, 1990), desenvolveram
um protótipo para calcular o fluxo_de_potência baseado no método completo de Newton Raphson a fim
de defender a ideia de que a orientação_a_objetos
seria ideal para atender os requisitos de um EMS
(Energy Managment System) o qual na época era
mantido em linguagens de alto nível da primeira
geração. Utilizando a linguagem de programação
Objective C atingiram resultados em um tempo computacional mais lento que o tempo obtido no fluxo de
potência implementado em Fortran, e diante disso
afirmaram que essa questão dependia da linguagem
de programação e do quanto os recursos do paradigma orientado a objetos eram utilizados, por fim,
evidenciaram que fazendo uso de classes elevou-se o
nível conceitual na programação.
Já, Tomoioagã et al (2011), optaram por aplicar
a orientação_a_objetos ao método backward forward
sweep na solução do fluxo_de_potência com objetivo
de analisar a propagação assimétrica e a distorção de
harmônicos em sistemas_de_distribuição trifásicos
com cargas desbalanceadas.
Na China, Luo et al (2009) desenvolveram um
sistema de informação georreferenciado (GIS) para
suporte na tomada de decisões no planejamento da
expansão em redes_de_distribuição utilizando a tecnologia de banco_de_dados Oracle para armazenamento
de dados integrado ao servidor de dados espaciais
ARC SDE e ao Activex Data Object para a comunicação e a leitura desses dados, incrementando uma
camada para efetuar a análise da demanda no planejamento, que de forma automatizada realizava o
planejamento através de algoritmos baseados em
vários cenários proporcionando subsistemas para
analisar a expansão em redes_de_distribuição separadas por regiões e distritos, com mecanismos de consulta em planejamentos relacionados. Esse projeto foi
realizado mediante a uma separação em camadas
visando os aspectos de segurança na aplicação de
uma arquitetura orientada a objetos.
Neste trabalho, a proposta é apresentar a orientação_a_objetos aplicada ao backward forward sweep, e
será descrita em detalhes a seguir.

Figura 1. Topologia de um sistema_de_distribuição de 23 nós Adaptado de Lavorato, Rider, Garcia e Romero (2010).

Como pode ser visto no sistema apresentado na
Figura 1, sua topologia é composta em formato radial. Para dar início ao método, é necessário identificar
pelas ramificações quais são os nós mais próximos e
mais afastados da subestação, e é assim que se forma
a árvore com a divisão das camadas, conforme mostra a Figura 2.

Figura 2. Composição do sistema em camadas

Levando em conta que foram especificados os
dados de entrada, como potência_ativa e reativa em
cada nó, a tensão base do sistema, além da resistência
e reatância por km de cada linha, e considerando o
modelo de linha curta, inicia-se o método estabelecendo a tensão em 1,0 pu e o ângulo em 0 graus para
todos os nós, calculando então a injeção de corrente
inicial em todos os nós, conforme a equação apresentada na Figura 3.

1913

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

tém-se a maior das diferenças e verifica-se se esta é
menor ou igual que um valor de tolerância aceitável.
Outra forma de se adotar o critério de convergência, é utilizar os valores de tensão calculados em
pu na iteração, comparando-os com as tensões em pu
calculadas na iteração anterior, assim se a maior das
diferenças obtidas por esse critério for menor ou
igual que uma tolerância especificada, a convergência é atingida. Esses dois critérios seguem detalhados
nas Figuras 6 e 7.

Figura 3. Calculo da injeção de corrente

A partir daí torna-se possível o início da etapa
backward, que é a soma dessas correntes partindo
dos nós terminais do sistema até a subestação. Para
demonstrar essa etapa, usou-se como exemplo um
pequeno sistema de 6 nós, ilustrado na Figura 4.

Figura 6. Critério das Diferenças de Potências

Figura 7. Critério das Diferenças de Tensões em Pu

Figura 4. Soma das Correntes (Backward)

Por fim, o backward forward sweep, segue representado pelo fluxograma apresentado na Figura 8.

Com isso, obtém-se os fasores de correntes que
passam pelos trechos ao longo das camadas do sistema, o que permite calcular as quedas de tensões,
tão logo obter a atualização das tensões na iteração.
Assim, a diferença das tensões entre os nós de
origem e destino nas ramificações de cada camada do
sistema deve ser igual  queda de tensão dada pela
relação entre a corrente e a impedância da linha.
Então para cumprir a 2 lei de Kirchhoff, é executada
a etapa forward, ilustrada na Figura 5.

Figura 5. Calculo das Tensões (Forward)

Ao final desse procedimento é verificado pelo
critério de convergência se os resultados apresentados na iteração estão coerentes com os dados do
sistema. O critério de convergência pode ser adotado,
como por exemplo, fazendo a comparação entre a
potência aparente especificada e a potência aparente
recalculada na iteração dada pela relação entre a
tensão e a injeção de corrente de cada nó, assim ob-

Figura 8. Fluxograma backward forward sweep

A abordagem utilizada nesse método torna perceptível a classificação dos objetos e como eles se
relacionam para proceder no cálculo fluxo_de_potência. Na sequência isso será mostrado em mais detalhes.
1914

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

4 Orientação a Objetos aplicada na Solução do
Bacward Forward Sweep
Antes de falar em resolver o fluxo_de_potência, é
importante lembrar que as grandezas das informações analisadas como as correntes que passam pelas
linhas, as correntes injetadas nos nós do sistema bem
como suas tensões, são compostas por números complexos, na forma polar e cartesiana. Por exemplo, no
momento em que se dispara uma operação de soma
nos atributos de um objeto, deve ser extraído o real e
o imaginário de sua grandeza, e assim calculado de
forma correspondente, como por exemplo, no processo da soma das correntes conforme mostra a Figura 9.

Figura 12. Diagrama de Classes

Por meio dessa modelagem, torna-se possível se
desprender da indexação dos nós e linhas, pois como
pode ser visto na Figura 12, a associação entre as
classes Linha e Nodo torna suas enumerações independentes da topologia, ou seja, caso em tempo de
execução a enumeração de um nó seja alterada, ele
permanece vinculado  uma linha como origem ou
destino da mesma, bem como a enumeração das
linhas que permanecem vinculadas a uma camada.
Isso facilita a mudança da topologia dos sistemas
simulados em tempo de execução, além de oferecer a
flexibilidade na adaptação dessa solução  uma modelagem mais ampla, como a apresentada por Selvan
e Swarup(2006).
Para completar essa modelagem, basta incluir os
atributos e métodos correspondentes aos nós na classe Nodo onde se agrupa os dados de demanda, da
potência_ativa, potência reativa e corrente injetada, e
s linhas na classe Linha, que por sua vez é responsável por armazenar as informações de corrente,
resistência, reatância, impedância, perda ativa, perda
reativa e o fluxo_de_potência, lembrando que, quando
se trata de números complexos, ainda existe a necessidade de extrair as magnitudes e seus respectivos
ângulos bem como as partes reais e imaginárias, o
que de fato fica a critério de modelagem e implementação.

Figura 9. Soma de Números Complexos

Para extrair a magnitude e o ângulo em radianos,
deve ser realizada a equação descrita na Figura 10.

Figura 10. Extração da Magnitude e Ângulo

Sabendo que boa parte dos atributos são compostos por números complexos, basta analisar os
conceitos descritos na seção anterior para identificar
os objetos e classificá-los. Nota-se que, inicialmente,
para se obter a análise do fluxo_de_potência, os objetos são classificados como nós, linhas e camadas,
conforme ilustrado na Figura 11.

4.1 Implementação do Modelo Orientado a Objetos
em Java aplicando Mapeamento ObjetoRelacional
Baseando-se na modelagem inicial, ilustrada na
Figura 13, as classes Nodo, Linha, e Camada foram
implementadas em Java e tiveram suas estruturas
refletidas nas tabelas do banco_de_dados através do
mapeamento objeto-relacional(OR).

Figura 11. Classificação dos Objetos

Isso demonstra que na modelagem inicial foram
identificadas as classes Nodo, Linha e Camada. Percebe-se então que, essas classes se associam da seguinte forma a classe Linha depende da classe Nodo,
uma vez que cada linha do sistema está relacionada a
um nó de origem e um nó de destino e agrega-se 
classe Camada, pois as camadas são compostas por
um conjunto de linhas. Então em um diagrama de
classes UML, temos inicialmente, o esquema ilustrado na Figura 12.

Figura 13. Mapeamento OR

Como pode ser visto na Figura 13, o mapeamento OR proporciona a possibilidade de refletir as
ações da aplicação no modelo Orientado a Objetos
para o modelo relacional do banco_de_dados, onde as
informações são armazenadas, e ao recuperá-las,

1915

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

Na etapa forward, demonstrada na Figura 16,
pode-se notar que a varredura se inverte, pois parte
da subestação para as extremidades do sistema calculando as quedas de tensão de cada linha, e atualizando as tensões em cada nó.

através das heurísticas baseadas em regras, determina-se o que fazer com elas. Para a solução do fluxo
de potência foi possível recuperar as informações dos
nós, linhas e camadas e mapeá-las para as coleções
dos objetos.
Dessa forma, a topologia do sistema se resume 
coleção de objetos da classe Camada, pois a mesma
possui uma coleção de objetos da classe Linha, que
por sua vez faz o vínculo entre os nós de origem e
destino. Na Figura 14, segue a ilustração da aplicação dos frameworks utilizados na implementação do
mapeamento objeto relacional que permite processar
as informações armazenadas no banco_de_dados para
calcular o fluxo_de_potência.

Figura 16. Implementação da etapa forward

Lembrando que, nos exemplos ilustrados, as
operações de soma e subtração de fasores foram
abreviadas, pois na prática é necessário fazer o tratamento de operações de números complexos conforme ilustrado anteriormente.
4.1 Simulador do Fluxo de Potência
Através das etapas de desenvolvimento demonstradas, foi possível obter um protótipo inicial de um
simulador do fluxo_de_potência em regime_permanente, capaz de simular redes_de_distribuição em qualquer topologia radial no modelo monofásico, permitindo a elaboração de sistemas testes com entrada de
dados por meio de uma interface amigável. Na Figura 17, é apresentado o início de uma simulação após
acessar o sistema por meio de login e senha.

Figura 14. Implementação do Mapeamento OR

A implementação do cálculo do fluxo_de_potência baseado no backward forward sweep, resume-se
em duas partes, apresentadas nas figuras 15 e 16. Na
etapa backward, ilustrada na Figura 15, encontrou-se
uma alternativa que simplificou a soma das correntes
partindo das extremidades do sistema para a subestação. Nessa alternativa, incrementou-se um atributo
auxiliar na classe Nodo para armazenar o somatório
das correntes. No início de cada iteração, esse atributo auxiliar recebe a injeção de corrente, e depois
segue somando seu próprio valor com as correntes
auxiliares a jusante de cada linha percorrida. Ao
final, esse somatório é atribuído ao valor de corrente
de cada linha.

Figura 17. Dados iniciais de uma simulação

Após a inclusão de um novo sistema para ser
simulado, é gerado o número de nós automaticamente com seus valores de demandas inicializados em
zero e a tensão no valor da tensão base especificada
para o sistema podendo, a partir disso, cada nó ser
selecionado em uma tabela para a atualização de seus
dados, conforme a Figura 18.

Figura 15. Implementação da etapa backward

Figura 18. Manipulação de dados de um nó selecionado

1916

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

4.1 Simulações Realizadas em Sistemas Radiais

Ao informar a potência aparente e o fator_de_potência, a potência_ativa e reativa são recalculadas, do
contrário, a potência aparente e o fator_de_potência
são recalculados, e tanto de uma forma como de
outra a corrente injetada do nó é atualizada. Além
disso, a partir do nó selecionado é possível adicionar
uma linha no sistema, selecionando um nó de destino
relacionado em uma tabela, e assim devem ser informados os dados da linha, assim como mostra a
Figura 19.

Um dos primeiros processos de validação dessa
parte desenvolvida, foi a montagem de um sistema de
23 nós que já havia sido simulado e validado em
GAMS (Brooke, Kendrik e Meeraus, 1997).
Maiores informações sobre estes resultados podem ser obtidas em Rocha et al (2012). Nesse sistema, a tensão base foi atribuída em 35,535kV, o fator
de potência em 0,9, enquanto que a potência aparente
foi especificada em 320kVA do nó 4 ao nó 23, e
640kVA no nó 3, e 0kVA no nó 2.
A topologia desse sistema montado pode ser vista na Figura 23.

Figura 19. Adição de Linha

A cada vez que esse processo é repetido, o sistema, de forma automatizada, verifica se a linha
adicionada deve ser incluída em uma camada existente do sistema, ou deve ser realizada a adição automática de uma camada para então adicionar a linha,
e assim, a topologia do sistema é desenhada na página web em formato de árvore, e as camadas são
compostas em uma tabela abaixo, assim como pode
ser visto na Figura 20.

Figura 22. Topologia do Sistema de 23 nós

Executando o fluxo_de_potência, foram obtidos
os resultados correspondentes s perdas_ativas e
reativas, e o tempo de execução em segundos, ambos
apresentados na Figura 23.

Figura 23. Resultados da Simulação do Sistema de 23 nós

Além disso, esse sistema apresentou uma variação nas quedas de tensões relativamente baixa, onde
a tensão mais baixa obtida foi a do nó 3 com
35.317kV num ângulo de -0.00104 radianos.
Outra simulação realizada foi baseada em um
sistema de 10 nós, conforme apresentado por Grainger e Lee (1982), e com a alocação dos bancos de
capacitores conforme descrito por Grainger e Lee
(1981).
Ao rodar o fluxo_de_potência neste sistema, foram obtidos os resultados inerentes s perdas_ativas e
reativas, e o tempo de execução, conforme ilustrado
na Figura 24.

Figura 20. Topologia Montada

Desse modo, a estrutura de dados é composta,
permitindo proceder aos cálculos da soma das correntes e das quedas de tensões de forma simples.
Além disso, ainda é possível visualizar, verificar e
editar os dados das linhas a montante, e a jusante de
um nó selecionado, como mostra a Figura 21.

Figura 24. Resultados do Sistema de 10 nós com a alocação dos
bancos_de_capacitores

Neste mesmo sistema, foi possível comparar os
perfis de tensões entre rodar o fluxo_de_potência com
a alocação dos bancos_de_capacitores, e sem os bancos_de_capacitores. Essa comparação segue ilustrada
no gráfico apresentado na Figura 25.

Figura 21. Ramificações de um Nó selecionado

1917

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

Larman, C. (2007). Utilizando UML e Padrões.
Bookman, Porto Alegre - RS.
Lavorato, M., Rider, M.J., Garcia, A.V. e Romero, R.
(2010). A Constructive Heuristic Algorithm for
Distribution System Planning. IEE Transactions
on Power Systems, Vol.25, No.3 pp. 17341742.
Luo, F.,Wang, C., Xiao, J., Ge, S., Yu, B., Wang, J.,
Li, Y., Wang, S. (2009). A Practical GIS-Based
Decicion-making Support System for Urban
Distribution Network Expansion Planning.
Sustainable Power Generation and Supply, 2009.
SUPERGEN 09. International Conference on,
ISBN - 978-1-4244-4934-7, Nanging  China.
Manzoni, A. (2005). Desenvolvimento de um
Sistema Computacional Orientado a Objetos
para Sistemas Elétricos de Potência Aplicação a
Simulação Rápida e Análise da Estabilidade de
Tensão. COPPEUFRJ, Rio de Janeiro - RJ.
Monticelli, A. (1983). Fluxo de Carga em Redes de
Energia Elétrica. Edgar Blucher, Rio de Janeiro RJ.
Neyer, A.F., Wu, F.F., Imhof, K.(1990). Objectoriented programming for flexible software
example of a load flow. IEEE Transactions on
Power Systems, Vol. 5, No. 3, pp. 689-696.
Rezende, S.O., Evsukoff, A.G., Garcia, A.C.B.,
Carvalho, A.C.P.L.F.,Braga, A.P., Monard,
M.C.,
Ebecken,
N.F.F., Morandin, O.,
Almeida, P.E.M., Ludemir, T.B. (2005).
Sistemas Inteligentes
Fundamentos e
Aplicações. Editora Manole, Barueri  SP.
Rocha, C.R.M., Contreras, J., Lotero, R.C., Muoz,
J.I. (2012). Algoritmo Heurístico Construtivo
Enumerativo Aplicado ao Planejamento da
Expansão de Sistemas de Distribuição de
Energia Elétrica. Anais do XIX Congresso
Brasileiro de Automática, CBA 2012, Campina
Grande  PB.
Russel, S., Norvig, P. (2004). Inteligência Artificial.
Elsevier Editora Ltda, Rio de Janeiro - RJ.
Selvan, M.P. and Swarup, K.S. (2006). Modeling and
analysis of unbalanced distribution system using
object-oriented methodology. Electric Power
Systems Research, Volume 76, Issue 11, July
2006, Pages 968-979, ISSN 0378-7796
Shirmohammadi, D., Hong, H. W., Semlyen, A.,
Luo, G. X.(1988). A Compesation-Based Power
Flow For Weakly Meshed Distribution And
Transmission Networks. IEEE Transactions on
Power Systems, Vol. 3, No. 2, pp. 753-762.
Sodhi, J. and Sodhi, P. (1996). Object-Oriented
Methods for Software Development. McGrawHill, New York - NY.
Tomoiaga, B., Chindris, M., Sudria-Andreu, A.,
Sumper,
A.
(2011)
Object
oriented
backwardforward algorithm for unbalanced and
harmonic
polluted
distribution
systems.
International Conference on Electrical Power
Quality and Utilisation (EPQU), 2011 11th, vol.,
no., pp.1-6.

Figura 25.Comparação nos Perfis de Tensões no Sistema de 10 nós

5 Conclusão
Através desse trabalho foi possível explorar na
teoria e na prática, os recursos que a orientação a
objetos oferece para solucionar os problemas do
mundo real, resultando no simulador apresentado
neste artigo, que foi tomado como o ponto de partida
no projeto de desenvolvimento de um sistema inteligente baseado na orientação_a_objetos para análise
automatizada de redes aéreas de distribuição_de_energia_elétrica em ambiente web.
Desse modo, módulos que integram a solução do
fluxo_de_potência com a presença da geração_distribuída em sistemas no modelo trifásico com cargas
desbalanceadas estão em processo de testes, análise e
desenvolvimento.
Embora esse simulador ainda exija que os dados
dos sistemas sejam informados manualmente através
da interface_gráfica, futuros módulos de integração
com banco_de_dados que armazenam dados de sistemas reais poderão ser desenvolvidos utilizando os
recursos de webservices.
Além disso, o Java se mostrou uma ferramenta
poderosa na programação orientada a objetos, permitindo agregar heurísticas de automatização nas simulações de forma ágil e flexível.
Agradecimentos
Este trabalho tem o apoio financeiro da Fundação
PTI através do processo 9010402013.
Referências Bibliográficas
Booch, G. (1994). Object-Oriented Analysis And
Design With Applications. Addison-Wesley,
Santa Clara - California.
Brooke, A., Kendrik, D. e Meeraus, A. (1997).
GAMS Sistema Geral de Modelagem Algébrica.
Edgar Blcher, Rio de Janeiro - RJ.
Grainger, J.J., Lee, S.H. (1981). Optimum Size and
Location of Shunt Capacitors for Reduction of
Losses on Distribution Feeders. IEEE
Transactions on Power Apparatus and Systems,
Vol. PAS-100, No. 5, pp. 1105-1118.
Grainger, J.J., Lee, S.H. (1982). Capacity Release
By Shunt Capacitor Placement on Distribution
Feeders A new Voltage-Dependent Model.
IEEE Transactions on Power Apparatus and
Systems, Vol. PAS-101, No. 5, pp. 42-43.

1918