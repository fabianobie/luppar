Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

METAHEURISTICAS GRASP E ILS APLICADOS A PROBLEMAS DE
AGENDAMENTO DE CIRURGIAS ELETIVAS EM HOSPITAIS DE GRANDE PORTE
Giselle Paranhos de Andrade, Eduardo Camargo Siqueira, Sergio Ricardo de Souza,
Moacir Felizardo de Franca Filho, Joao Francisco de Almeida Vitor


Centro Federal de Educacao Tecnologica de Minas Gerais (CEFET-MG)
Av. Amazonas, 7675 - Nova Gameleira- CEP 30510-000 Belo Horizonte, MG, Brasil

Email giselle@dppg.cefetmg.br, eduardosiqueira@dppg.cefetmg.br,
sergio@dppg.cefetmg.br, franca@des.cefetmg.br, joaofrancisco@dppg.cefetmg.br
Abstract In this paper we developed a study on the problem of scheduling elective surgeries - (PACE).
This problem consists in allocating hospital resources to perform elective surgery. The study aims to promote
a management system that has as objective, the use of hospital resources efficiently in order to reduce costs
in surgical centers. The PACE will be treated as a Problem of Parallel Machines Eligible, a class of problems
(Scheduling Problem). It developed a literature review, allowing the reader a better understanding about the
machine problem. The objective that is proposed and the implementation is to minimize the makespan, which
includes the total time taken to perform all tasks in this case, perform all elective surgery elective. It is hoped,
through this work was to study the application of different metaheuristicas in order to solve the PACE, and
meet new solucoes for the same. With this, different algorithms will be developed, which will be used in actual
instances of three large hospitals.
Keywords programming tasks, parallel machines, preparation times depentent sequence, GRASP, Tabu
Search, Sequencing of tasks optimization, Metaheuristics
Resumo Neste artigo e desenvolvido um estudo a respeito do Problema de Agendamento de Cirurgias
Eletivas (PACE). Este problema consiste em alocar recursos hospitalares para a realizacao de cirurgias eletivas.
O estudo visa promover um sistema gerencial que tenha, como objetivo, a utilizacao de recursos hospitalares de
forma eficiente, visando a reducao de custos nos centros cirurgicos. O PACE sera tratado como um Problema
de Programacao em Maquinas Paralelas Elegveis, uma classe de problemas de sequenciamento. E apresentada
uma revisao da literatura, permitindo uma melhor compreensao do problema. O objetivo da implementacao e
minimizar o makespan, que compreende o tempo total gasto para realizar todas as tarefas, ou seja, neste caso,
realizar todas as cirurgias eletivas. Para avaliacao do desenvolvimento realizado, sao utilizadas instancias de
quatro hospitais de grande porte de Belo Horizonte, MG. Os resultados mostram o potencial de estudos como
esse na melhoria da eficiencia e prestacao de servicos de hospitais.
Palavras-chave .

1

Introducao

O gerenciamento da prestacao de servicos de saude
nos hospitais esta se tornando cada vez mais importante. Hospitais querem, por um lado, reduzir
custos e melhorar os seus ativos financeiros e, por
outro lado, querem elevar o nvel de satisfacao do
paciente. Uma unidade de particular interesse e
o Centro Cirurgico (CC), ou melhor, a utilizacao
das salas cirurgicas, uma vez que o CC e a unidade responsavel pelo maior custo do hospital e,
segundo Macario et al. (1995), e o principal centro
de receita da instituicao.
Os fatores mencionados acima sao tratados
no Problema de Agendamento de Salas Cirurgicas (Surgical Case Scheduling - SCS), problema
que consiste em alocar recursos hospitalares para
casos cirurgicos e que tambem define o melhor instante de realizacao das cirurgias. Esta tarefa tem
um papel decisivo na utilizacao de recursos hospitalares de forma eficiente, segundo Carter and
Tovey (1992).
O Problema de SCS e considerado, na literatura, um problema classico de otimizacao combi-

ISBN 978-85-8001-069-5

natoria, pertencente a classe NP-Difcil, segundo
Carter and Tovey (1992). Logo, as tecnicas heursticas e as metaheursticas, de maneira geral, tem
sido largamente utilizadas na resolucao_de_problemas desta natureza.
Segundo Etzioni et al. (2003), o gerenciamento das salas cirurgicas se torna difcil devido
aos conflitos de prioridades, as preferencias das
partes interessadas e a escassez de recursos caros. Alem disso, os gestores de saude precisam
se antecipar ao aumento da demanda dos servicos
cirurgicos advinda do envelhecimento da populacao. Esses fatores claramente salientam a necessidade do desenvolvimento de um planejamento
adequado para o agendamento das cirurgias eletivas.
Doravante, denotar-se-a o SCS como PACE
(Problema de Agendamento de Cirurgias Eletivas), que consiste em agendar cirurgias previamente conhecidas, desconsiderando casos de cirurgias de emergencia. Para a resolucao do PACE,
e programado um sequenciamento de cirurgias estabelecendo uma agenda cirurgica, com o objetivo
de minimizar o makespan, ou seja, minimizar o

3228

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

horario de termino da ultima cirurgias agendada,
tendo em vista os diversos recursos relacionados
com as restricoes do problema.
O restante deste trabalho esta organizado
como segue. Na secao 2 e apresentada a revisao bibliografica para o problema. Na secao 3
desenvolve-se a caracterizacao e definicao do problema. Na secao 4 apresenta-se a metodologia
adotada para estrutura de dados utilizada e os
algoritmos implementados para solucionar o problema de interesse. Na secao 5 sao expostos os
resultados computacionais. E realizada uma comparacao de desempenho entre as duas metaheursticas implementadas atraves do teste de probabilidade emprica. E, por ultimo, a secao 6 apresenta
a conclusao do trabalho.

2

Revisao Bibliografica

Segundo Proenca (2010), o processo de planejamento de cirurgias eletivas pode ser dividido em
tres fases.
Na primeira fase, a disponibilidade em horas
das salas cirurgicas e distribuda pelos diferentes
cirurgioes ou equipes cirurgicas. Situada em um
nvel estrategico de decisao e, geralmente, realizada anualmente, esta fase e denominada como
Planejamento de Casos Mistos (Case Mix Planning). A distribuicao do tempo pode ter em conta
a capacidade operativa de cada cirurgiao ou grupo
cirurgico e a quantidade esperada de pacientes ao
longo do correspondente horizonte temporal.
A segunda fase envolve o desenvolvimento de
um cronograma ou uma agenda cirurgica. Tratase de um documento cclico, que define o numero
e o tipo de salas de operacoes disponveis, as horas
em que as salas estao abertas, cirurgioes ou grupos de cirurgias que tem prioridade sobre o tempo
das salas cirurgicas. Esta fase designa-se como
Planejamento Mestre de Cirurgias (Master Surgery Planning) e enquadra-se em um nvel tatico
da gestao hospitalar. O horizonte temporal nesta
fase do planejamento e mais reduzido do que na
fase anterior. Finalmente, na terceira fase, e estabelecido o planejamento de cada cirurgia em uma
base diaria. Esta fase situa-se em um nvel operacional e e designada por Agendamento de Casos
Eletivos (Elective Case Scheduling).
O presente trabalho faz parte da fase de Agendamento de Casos Eletivos. Trabalhos de revisao
bibliografica sobre a aplicacao de pesquisa operacional no planejamento de cirurgias sao apresentados em Magerlein and Martin (1978), Przasnyski
(1986) e Cardoen et al. (2010).
Na secao seguinte sao apresentados artigos encontrados na literatura que se enquadram dentro
das tres fases de planejamento de cirurgias eletivas.

ISBN 978-85-8001-069-5

2.1

Primeira Fase Planejamento de Casos Mistos

Hughes and Soliman (1978) se utilizaram de programacao_linear na definicao do numero de pacientes a serem tratados, de modo a maximizar o
retorno financeiro lquido total do hospital. Sao
consideradas restricoes de capacidade de recursos,
como quantidade de leitos, duracao das cirurgias
e tempo de utilizacao de recursos.
Robbins and Tuntiwongpiboon (1989) apresentam um modelo que maximiza o lucro obtido
com restricoes de disponibilidade de recursos para
servir aos varios grupos. Estas restricoes incluem
a limitacao de leitos de internacao e de tempo
disponvel, quer ao nvel de pessoal medico, quer
ainda ao nvel de equipamentos de diagnostico.
Blake and Carter (2002) apresentam uma
abordagem determinstica em que formulam o problema da selecao de Planejamento de Casos Mistos em dois modelos de programacao_linear e quadratica.

2.2

Segunda Fase Planejamento Mestre de Cirurgias

Segundo Blake and Carter (2002), o cronograma
de cirurgias compoe um calendario cclico que define o numero e o tipo de salas cirurgicas disponveis a hora em que as salas serao abertas o nome
do procedimento cirurgico e o cirurgiao ou grupos de cirurgioes que devem ser priorizados para
o agendamento. Assim, propoem um modelo de
programacao inteira que minimiza a suboferta de
horas medias ponderada, ou seja, e alocado, para
cada grupo cirurgico, um numero maximo de horas possvel. Em Blake and Joan (2002), os autores apresentam uma abordagem identica mas utilizam o CPLEX para obter uma solucao inteira
admissvel inicial, e melhoram esta solucao atraves de uma heurstica.
Belien and Demeulemeester (2007) propoem
uma serie de modelos para a construcao de agendamentos de cirurgias com o nivelamento da taxa
de ocupacao nos leitos de internacao. Sao considerados modelos_estocasticos, seguindo uma distribuicao multinomial. Para a solucao, utiliza-se
uma serie de heursticas de programacao inteira
mista (MIP), com base em uma metaheurstica,
com o objetivo de minimizar a escassez de leitos.
Os modelos desenvolvidos envolvem dois tipos de
restricoes. A primeira certifica se cada cirurgiao
(ou grupo cirurgico) obtem um numero especfico
de blocos em salas de cirurgias. A segunda limita
os blocos disponveis em cada dia. Alem disso, o
numero de pacientes operados por bloco e o tempo
de permanencia de cada paciente operado sao dependentes do tipo de cirurgia.

3229

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

2.3

Terceira Fase Agendamento de Casos Eletivos

Ozkarahan (1995) apresentam uma abordagem de
programacao por metas em que pretende-se minimizar a ociosidade das salas e o tempo excedido.
O modelo e resolvido com pacotes computacionais
de otimizacao linear. O sequenciamento das cirurgias e feito atraves de um procedimento heurstico.
Gerchak et al. (1996) desenvolvem um modelo
de programacao_dinamica_estocastica para o agendamento antecipado das cirurgias eletivas sob demanda incerta para a cirurgia de emergencia. Os
algoritmos descritos para o nivelamento da ocupacao resultante dos leitos foram desenvolvidos em
funcao da agenda principal de cirurgias.
Dexter and Traub (2002), comparam duas
heursticas construtivas para alocar cirurgias a salas de operacoes de modo a maximizar a eficiencia
da utilizacao das salas de cirurgias, eficiencia medida pelo total das horas em subutilizacao e sobreutilizacao. Os autores utilizaram dados reais
obtidos no bloco cirurgico de um hospital.
Jebali et al. (2006) apresentam uma abordagem em dois passos em que consideram separadamente os dois procedimentos sobre os quais a
literatura divide a fase de Agendamento de Casos
Eletivos. No primeiro passo, alocam as cirurgias
as salas (Advance Scheduling), de modo a minimizar os custos de utilizacao em tempo extraordinario e de subtilizacao das salas de operacoes
envolvendo ainda a minimizacao do tempo entre
o dia da admissao e o dia da cirurgia de cada paciente cirurgico. Sao restricoes do modelo o limite
de tempo regular e extraordinario permitido no
planejamento, a capacidade do numero de camas
na Unidade de Tratamento Intensivo e o tempo
maximo de cirurgia para cada cirurgiao. Ambos
os problemas sao resolvidos atraves do CPLEX.
Kharrajal et al. (2006), utiliza em seu trabalho tecnicas de programacao_linear inteira,
levando-se em conta duas abordagens. Na primeira abordagem, considerados os cirurgioes individualmente no momento do agendamento da
cirurgia. Na segunda abordagem considera para o
agendamento das cirurgias, grupos cirurgicos compartilhando a mesma sala. Neste ultimo, e introduzido o termo Bloco de Agendamento (BA), em
que cada cirurgiao ou grupo cirurgico e proprietario de um ou varios Blocos de Tempo (BT), de
acordo com suas necessidades por dia e por semana.
Pham and Klinkert (2008) apresentam um
modelo em programacao_linear inteira mista, baseado em uma nova extensao do Job Shop Scheduling Problem denominada Multi-Mode Blocking
Job Shop. O modelo define um perodo de incio
para cada uma das tres fases necessarias na realizacao de uma cirurgia (pre-operatorio, operatorio e pos-operatorio) e aloca, para cada uma das

ISBN 978-85-8001-069-5

tres fases, um conjunto de recursos necessarios.
Com tecnicas de bloqueio, os autores apresentam
uma solucao ao problema de restricoes de disponibilidade dos equipamentos. E possvel atraves
do algoritmo apresentado bloquear os recursos indisponveis no momento da cirurgia. O objetivo
e minimizar o perodo de incio da ultima cirurgia a ser realizada e e resolvido com o programa
CPLEX.
3

Caracterizacao do Problema de
Agendamento de Cirurgias Eletivas
(PACE)

Nesta secao e abordada a descricao do Problema
de Agendamento de Cirurgias Eletivas PACE, o
qual sera tratado neste trabalho como um Problema de Programacao em Maquinas Paralelas
Identicas com Tempos de Preparacao de Maquina
dependente da Sequencia (Identical Parallel Machine Scheduling Problem with Sequence Dependent Setup Times), este e um problema de sequenciamento (Scheduling Problem).
No Problema de Programacao em Maquinas
Paralelas Identicas com Tempos de Preparacao de
Maquina dependente da Sequencia tem-se um conjunto N  1, ...n de n tarefas e um conjunto
M  1, ..., m de m maquinas identicas, com as
seguintes caractersticas (a) Cada tarefa deve ser
processada exatamente uma vez por apenas uma
maquina (b) Cada tarefa j possui um tempo de
processamento pj  (c) Existem tempos de preparacao entre as tarefas, sjk , em que as tarefas j e
k serao processadas, nesta ordem. Tais tempos de
preparacao sao dependentes da sequencia. O objetivo e encontrar um sequenciamento das n tarefas
nas m maquinas de forma a minimizar o tempo
maximo de conclusao do sequenciamento, o chamado makespan ou Cmax . Pelas caractersticas citadas este problema e definido como P Sjk Cmax ,
segundo (Pinedo (2008)).
Com o objetivo de solucionar o PACE usando
as caractersticas do problema de programacao em
maquinas_paralelas denotar-se a a equivalencia entre maquinae sala cirurgica tarefae cirurgia.
A Tabela 1 contem os tempos de processamento (pj ) de sete cirurgias (j1,..., 7) em duas
salas cirurgicas. Na tabela 2 estao contidos os
tempos de preparacao (Sjk ) para as salas. A Figura 1 ilustra um possvel sequenciamento para
este exemplo.
Tabela 1 Tempos de Processamento das cirurgias
j
1
2
3
4
5
6
7
pj 20 25 15 32 38 23 65
Na Figura 1 observa-se, por exemplo, que a
cirurgia 6 e alocada a sala S2 na terceira posicao,

3230

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

Tabela 2 Tempos de Preparacao(setup) das salas.
S 1 2 3 4 5
6 7
1 0 1 6 5 10 3 6
2 4 0 6 2 7
7 4
3 7 3 0 6 8
1 3
4 3 8 1 0 12 10 2
5 8 3 5 7 0
4 7
6 8 8 5 4 9
0 9
7 1 4 6 1 5
6 0
com tempo de processamento p6  23, tendo a
cirurgia 4 como predecessora e a cirurgia 3 como
sucessora. As partes hachuradas da figura representam os tempos de preparacao entre as cirurgias.
Assim, neste exemplo sao computados os tempos
s46  10 e s63  5. O tempo de conclusao das cirurgias na sala S1 e 120 e o da sala S2 e 130, o que
resulta em makespan de 130 unidades de tempo.
7

1

2

S1
S2

20

0

6

4

5
40

60

3
120

100

80

t

Figura 1 Exemplo de um possvel sequenciamento.

Iterated Local Search (ILS). Por fim, e apresentada
a tecnica de busca local utilizada como heurstica
de refinamento das metaheursticas desenvolvidas.
As Figuras 4, 5 e 6 mostram os seus pseudocodigos.
Souza (2000) define heurstica como sendo
uma tecnica inspirada em processos intuitivos que
procura uma boa solucao a um custo_computacional aceitavel, sem, no entanto, estar capacitada a
garantir sua otimalidade, bem como garantir quao
proximo esta da solucao otima.
Segundo Osman (1996), uma metaheurstica
e formalmente definida como um processo de geracao iterativo, que guia uma heurstica subordinada, combinando inteligentemente diferentes
conceitos para explorar o espaco de busca, o qual
deve ser modelado para um problema especfico.
4.1

Representacao da Solucao

A solucao foi representada atraves de dois vetores.
O primeiro vetor (seq) representa a sequencia em
que as cirurgias devem ser realizadas, enquanto
que o segundo vetor (sala) representa em quais
das salas a cirurgia sera realizada, visto que cada
cirurgia pode ser realizada em mais de uma sala.
A Figura 3 representa a solucao para o exemplo
apresentado na secao 3.

Vetor seq

S1 1

3

4

2

2

S2

1

3

1

4

2

4
3

1

5

3

2

4

1

3

2

4

5

1

2

3

4

5

6

7

2

5

1

4

7

6

3

1

2

3

4

5

6

7

1

1

2

2

2

2

1

t (horas)
7

Seg

19

Ter

31

Quar

43

Qui

55

Sex

67

Vetor sala

Figura 2 Exemplo de um possvel sequenciamento.
Sao considerados para o sequenciamento e
agendamento de cirurgias a disponibilidade de recursos humanos, tais como cirurgioes, enfermeiros
e anestesistas, conforme Tabela 3, presente na secao 5.
O perodo de tempo considerado para agendamento das cirurgias eletivas e o mesmo perodo
de tempo proposto na literatura para este tipo
de problema, considerando exclusivamente 5 dias,
nos horarios entre 07h e 19h.
4

Metodologia

Esta secao apresenta os procedimentos propostos
para a solucao do Problema de Agendamento de
Cirurgias Eletivas (PACE). Inicialmente, e mostrada a estrutura de dados utilizada para a representacao de uma solucao. Em seguida, sao apresentadas as duas Metaheursticas implementadas
para a solucao do PACE, a saber, Greedy Randomized Adaptative Search Procedure (GRASP) e

ISBN 978-85-8001-069-5

Figura 3 Representacao da solucao atraves de
dois vetores.
.

4.2

Estruturas de Vizinhanca

A vizinhanca da solucao e, neste trabalho, explorada atraves dos seguintes movimentos
 MovimentoTrocaSequencia consiste em
trocar a posicao de duas cirurgias em uma
mesma sala
 MovimentoRealocaSequencia consiste
em realocar uma cirurgia para uma nova posicao na mesma sala
 MovimentoTrocaSala consiste em considerar duas cirurgias e trocar as salas que as
executam
 MovimentoRealocaSala consiste em realocar uma cirurgia para uma nova sala.

3231

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

4.3

Metaheurstica

Foram propostos dois algoritmos baseados em Metaheursticas, em que sao detalhados nas secoes
seguintes.
4.3.1
Greedy Randomized Adaptative Search Procedure (GRASP)
Proposta por Feo and Resende (1995), a metaheurstica Greedy Randomized Adaptative Search Procedure (GRASP) - Procedimento de
Busca Adaptativa Gulosa e Randomica - tem sido
aplicada a uma ampla gama de problemas de otimizacao_combinatoria. O GRASP e um processo
iterativo no qual cada iteracao consiste de duas
fases fase (a) fase construtiva, que gera solucoes
factveis para o problema e fase (b) fase de busca
local, que busca o otimo local na vizinhanca das
solucoes iniciais, geradas pela fase de construcao.
Na fase construtiva, uma funcao denominada
construcaoGRASP e empregada, gerando uma
Lista de Candidatos (LC). Tais candidatos (cirurgias) sao avaliadas segundo um criterio no qual
o tempo necessario para a realizacao de uma cirurgia seja maior ou igual a diferenca entre Tmax
e (Tmax  Tmin ), sendo  um parametro real
 0, 1. Para   1, tem-se uma solucao totalmente aleatoria para   0, tem-se uma solucao
gulosa. Os candidatos que atendem a esta condicao, ou seja, compoem a LRC que e ordenada
em ordem crescente de tempo de realizacao da cirurgia. Logo, o algoritmo ira escolher aleatoriamente um dos candidatos da LRC, sequenciando-o
e retirando-o da LC. Este passo se repete ate que
todas as tarefas sejam sequenciadas.
Para a segunda fase ou fase de busca local
foi utilizado tanto para a metaheurstica GRASP
quanto ILS o metodo de Descida Completa. Este
metodo analisa toda a vizinhanca da solucao corrente, realizando os quatro tipos de movimentos
apresentados na secao 4.2. No final, efetua-se uma
comparacao entre a melhor solucao encontrada e
a solucao corrente. Havendo melhora, a solucao
corrente e atualizada.
O pseudocodigo do GRASP esta especificado
na Figura 4.
4.3.2

Iterated Local Search (ILS)

A meta-heurstica ILS (Iterated Local Search), segundo Lourenco et al. (2003), e um metodo de
busca iterativa que faz uso de pertubacoes da solucao (alteracoes na solucao corrente), tendo como
principal objetivo a diversificacao da busca, de
modo a escapar e visitar diferentes otimos locais.
Quatro sao os principais componentes que definem o metodo ILS geracao da solucao inicial,
busca local, pertubacao e criterio de aceitacao.
ILS baseia-se na ideia de aplicar uma busca local

ISBN 978-85-8001-069-5

Entrada , criterioParada
1. inicio
2.
repita
3.
s  construcaoGRASP()
4.
s  buscaLocal(s)
5.
se fo(s) melhor que fo(s*) entao
6.
s*  s
7.
fim se
8.
ate criterioParada seja satisfeito
9. fim
Figura 4 Pseudocodigo do GRASP.
em uma solucao inicial qualquer ate que se encontre um otimo local, e entao, perturbar a solucao
encontrada e reiniciar a busca local. A perturbacao deve ser de tal forma que seja suficiente para
escapar de um otimo local e permitir a exploracao
de outras regioes do espaco de buscas. O metodo
ILS e, portanto, um metodo de busca local que
procura focar a busca nao no espaco completo de
solucoes, mas em um pequeno subespaco definido
por solucoes que sao otimos locais de determinado
procedimento de otimizacao.
O pseudocodigo do ILS encontra-se descrito
na Figura 5. Na linha 2 e construda uma solucao
com o metodo construcao do GRASP, o mesmo
utilizado na metaheurstica GRASP, e na linha 3
a solucao e refinada atraves de busca local, utilizando o metodo de descida completa, explicado
anteriormente.
Na linha 6 e realizada uma perturbacao na
solucao atual, o nvel de pertubacao vai sendo aumentado a cada iteracao sem melhora. A Figura
7 mostra o pseudocodigo do metodo de perturbacao utilizado. Neste metodo considera-se o nvel
de perturbacao a quantidade de vezes que um dos
quatro movimentos sera aplicado. Apos a perturbacao, essa nova solucao e refinada, conforme Figura 5 (linha 7). Se houver melhora na solucao,
ela e atualizada e o nvel de perturbacao reinicializado. Esses passos sao repetidos ate que um
criterio_de_parada seja atendido. Como criterio de
parada, foi adotado o numero de 100 iteracoes sem
melhora, ou seja, o metodo para quando a melhor
solucao se mantem inalterada por 100 iteracoes.
4.4

Busca Local

A busca local realizada foi a heurstica de refinamento descida completa, em que e avaliada toda
a vizinhanca da solucao. Os movimentos sao avaliados e entao a solucao e atualizada caso haja
melhora na funcao objetivo.
4.5

Funcao Perturbacao da Solucao

A funcao perturbacao da solucao (alteracoes na
solucao corrente), citada na Figura 5, tem como
principal objetivo a diversificacao da busca, de

3232

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

Entrada , criterioParada
1. incio
2.
s  construcaoGRASP()
3.
s*  buscaLocal(s)
4.
nivel  1
5.
repita
6.
s  perturbacao(s*, nivel)
7.
s  buscaLocal(s)
8.
se fo(s) melhor que fo(s*) entao
9.
s*  s
10.
nivel  1
11.
senao
12.
nivel  nivel + 1
13.
fim se
14.
ate criterioParada seja satisfeito
15. fim
Figura 5 Pseudocodigo do ILS.
Entrada s
1.incio
2. r  Qtde. de movimentos (r  4)
3. Para i  1 ate r faca
4.
s  melhor vizinho c movimento i
5.
se s melhor que s entao
6.
s  s
7.
fim
8. fim
9. retorna s
10. fim
Figura 6 Pseudocodigo da Busca Local(Descida
Completa).
modo a escapar e visitar diferentes otimos locais.
Esta funcao esta descrita na Figura 7. O nvel de
perturbacao define a quantidade de vezes que um
dos movimentos, escolhido aleatoriamente, sera
realizado.
Entrada s, nivel
1.incio
2. Para i  1 ate nivel faca
3.
Escolhe movimento aleatoriamente
4.
s  aplicaMovimento()
5. fim
6. retorna s
7. fim
Figura 7 Pseudocodigo da Perturbacao.

5

Resultados Computacionais

Os algoritmos GRASP e ILS foram implementados na linguagem C++, utilizando a IDE Borland
C++ Builder, e testados em um computador Intel
Core 2 Duo 2.10GHz e 3GB de memoria RAM.
Os parametros utilizados para gerar as ins-

ISBN 978-85-8001-069-5

tancias foram obtidos em 4 hospitais (denominada
H1, H2, H3, H4) de grande porte localizados na regiao metropolitana de Belo Horizonte, Minas Gerais, e estao detalhados na Tabela 3. Esta tabela
mostra que a instancia H1 possui 162 cirurgias e
7 salas a instancia H2 possui 192 cirurgias e 12
salas a instancia H3 tem 216 cirurgias e 18 salas
e, e por fim, a instancia H4 possui 266 cirurgias a
serem realizadas em 16 salas.
Tabela 3 Dimensao das
H1
Leitos
157
Cirurgias
162
Salas
7
Cirurgioes
74
Anestesistas
20
Enfermeiros
18

Instancias do PACE
H2 H3 H4
272 319 501
192 216 266
12
18
16
112 126 157
25
31
37
21
27
34

Tabela 4 Tabela de Resultados
Instancia Solucao Inicial ILS GRASP
H1
190
131
136
H2
126
84
92
H3
131
113
109
H4
162
111
118
Os algoritmos foram executados 30 vezes
cada, para cada uma das quatro instancias. Os
melhores valores encontrados estao mostrados na
Tabela 4. Nesta tabela, apresenta-se tambem as
solucoes iniciais para cada uma das instancias. Solucao esta obtida na fase construtiva do algoritimo
GRASP, usando para isto a funcao construcaoGRASP.
Para as instancias dos hospitais H1, H2 e H4
a metaheurstica proposta ILS, obteve melhores
resultados. Esses resultados foram, na media,
31,96 melhores, em relacao as solucoes iniciais.
Para a instancia do hospital H3, a metaheurstica
proposta GRASP, obteve o melhor resultado, que
representa uma melhora de 16,79 em relacao ao
ILS.
De forma a comparar esses algoritmos com relacao ao tempo necessario para encontrar um valor
alvo, foram feitos experimentos, segundo a abordagem indicada em (Aiex et al. (2002)) em que
sao gerados graficos da funcao de distribuicao acumulada emprica. O grafico representa o tempo
versos probabilidade, ou seja, o tempo gasto da
instancia para alcancar o valor alvo determinado,
isso, em percentual.
Para realizar os experimentos, os algoritmos
sao executados 100 vezes e sempre que o alvo e
alcancado, eles eram interrompidos e o tempo registrado. Esses tempos foram, entao, ordenados
de forma crescente e, para cada tempo (ti ) foi associada uma probabilidade (pi  (i - 0,5)100).

3233

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.
Alvo 114
100
90
80
70
Probabilidade()

Os valores alvos utilizados para as instancias
H1, H2 e H4, foram, respectivamente, 138, 93 e
120, esses valores sao 2 acima do melhor valor
encontrado pelo GRASP e para instancia H3 foi
115, 2 acima do melhor valor encontrado pelo
ILS.
As Figuras 8, 9, 10 e 11 mostram os resultados
dos graficos ti x pi obtidos para cada instancia.

60
50
40
30
20

Alvo 136
100

10

GRASP-ALE
GRASP-COM
ILS

90
0
0

20000

40000

80

60000
Tempo (ms)

80000

100000

120000

Probabilidade()

70

Figura 10 Time-to-target da instancia H3 com
alvo igual a 115.

60
50
40
30

Alvo 116
100

20
10

90

GRASP-ALE
GRASP-COM
ILS

80

0
20000

40000

60000
80000
Tempo (ms)

100000

120000

140000
70

Figura 8 Time-to-target da instancia H1 com alvo
igual a 138.

Probabilidade()

0

60
50
40
30
20

Alvo 91

10

100

GRASP-ALE
GRASP-COM
ILS

0

90

0

20000

40000

60000
Tempo (ms)

80000

100000

120000

80

Probabilidade()

70

Figura 11 Time-to-target da instancia H4 com
alvo igual a 120.

60
50
40
30
20
10

GRASP-ALE
GRASP-COM
ILS

0
0

20000

40000

60000
80000
Tempo (ms)

100000

120000

140000

Figura 9 Time-to-target da instancia H2 com alvo
igual a 93.

6

Conclusao e Trabalhos Futuros

Este trabalho teve seu foco no Problema de Agendamento de Cirurgias Eletivas. O objetivo e minimizar o makespan, que compreende o tempo de
termino da ultima tarefa. Para resolve-lo, foi testado as metaheursticas GRASP e ILS, ja conhecidas na literatura para este tipo de problema.
Atraves do teste de probabilidade emprica e
comprovada a melhor eficiencia do ILS em relacao
ao GRASP, nas instancias h1 e h4, pois apresenta
uma convergencia maior. Isto pode ser visto nas
Figuras 8 e 11, em que o ILS atinge o valor alvo
(makespan), em apenas 50 segundos de execucao.
Ao passo que o GRASP so atinge este makespan
em 120 e 110 segundo de execucao.

ISBN 978-85-8001-069-5

Na instancias h2 o ILS a parter de 30 segundo
apresenta uma maior convergencia mas ao final o
tempo gasto para atingir o makespan e o mesmo
para as duas metaheurstica.
Na instancia h3 o GRASP converge mais rapidamente.
Analisando os resultados obtidos e as metricas para as comparacoes adotadas, observa-se que
o algoritmo ILS obteve uma maior robustez em
relacao ao algoritmo GRASP, pois obteve menor
variabilidade das solucoes encontradas. Ja o algoritmo GRASP nao obteve bons resultados, provavelmente devido as exaustivas buscas locais exaustivas.
Como continuacao deste trabalho sera efetuado testes dos algoritmos com outros tipos de movimentos, alem de implementar a metaheurstica
Iterated Greedy Search.

Agradecimentos
Os autores agradecem ao CEFET-MG, a CAPES,
a FAPEMIG e ao CNPq pelo apoio ao desenvolvimento deste trabalho.

3234

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

Referencias
Aiex, R. M., Resende, M. G. C. and Ribeiro, C. C.
(2002). Probability distribution of solution
time in grasp An experimental investigation,
Journal of Heuristics 8 343373.
Belien, J. and Demeulemeester, E. (2007).
Building cyclic master surgery schedules
with leveled resulting bed occupancy, European Journal of Operational Research
2(176) 11851204.
Blake, J. and Carter, M. W. (2002). A goal programming approach to strategic resource allocation in acute care hospitals, European
Journal of Operational Research 140 541
561.
Blake, J. and Joan, D. (2002). Mount sinai hospital uses integer programming to allocate operating room time., Interfaces 32(2) 6373.

Lourenco, H., Martin, O. and Stutzle, T. (2003).
Iterated local search. glover,g.f. e kochenberger, editor, handbook of metaheuristics, Kluwer Academic Publishers, Boston
pp. 321353.
Macario, A., Vitez, T. S., Dunn, B. and McDonald, T. (1995). Where are the costs in perioperative care? Analysis of hospital costs and
charges for inpatient surgical care, Anesthesiology 83(6) 11381144.
Magerlein, J. M. and Martin, J. B. (1978). Surgical demand scheduling A review, Health
Services Research pp. 418433.
Osman, I. H. (1996). Metaheuristics A bibliography, Annals of Operations Research,
Vol. 63, Institute of Mathematics and Statistics, University of Kent, Canterbury, Kent
CT2 7NF, UK, Annals of Operations Research, pp. 513623.

Cardoen, B., Demeulemeester, E. and Belien, J.
(2010). Operating room planning and scheduling a literature review, European Journal
of Operational Research 3 333333.

Ozkarahan, I. (1995). Allocation of surgical procedures to operating rooms, Journal of Medical
Systems 4(19) 333352.

Carter, M. W. and Tovey, C. A. (1992). When
is the classroom assignment problem hard?,
Operations Research 40(1) 2830.

Pham, D. N. and Klinkert, A. (2008). Surgical
case scheduling as a generalized job shopscheduling problem, 185 10111025.

Dexter, F. and Traub, R. D. (2002). How to schedule elective surgical cases into specific operating rooms to maximize the efficiency of
use of operating room time., Anesthesia and
Analgesia 94(4) 933942.

Pinedo, M. (2008). Scheduling theory, algorithms, and systems, Springer Verlag.

Etzioni, D. A., Liu, J. H., Maggard, M. A. and
Ko, C. Y. (2003). The aging population and
its impact on the surgery workforce, Annals
of Surgery 238(2) 170177.
Feo, T. and Resende, M. (1995). Greedy randomized adaptive search procedures, Journal of
Global Optimization pp. 109133.
Gerchak, Y., Gupta, D. and Mordechai, H. (1996).
Reservation planning for elective surgery under uncertain demand for emergency surgery,
Management Science 42 321334.
Hughes, W. L. and Soliman, S. Y. (1978). Shortterm case mix management with linear programming, Hospital  Health Services Administration 30 5260.

Proenca, I. M. (2010). Planejamento de Cirurgias
Eletivas - Abordagens em Programacao Inteira, PhD thesis, Tese de Doutorado, Departamento de Estatstica e Investigacao Operacional, Lisboa.
Przasnyski, Z. H. (1986). Operating room scheduling a literature review., AORN Journal
44 6779.
Robbins, W. A. and Tuntiwongpiboon, N. (1989).
Linear programming is a useful tool in casemix management, Healthcare Financial Management 6(43) 114116.
Souza, M. J. F. (2000). Programacao de horarios
em escolas uma aproximacao por metaheursticas., PhD thesis, Tese de doutorado, Programa de Engenharia de Sistemas e Computacao, COPPEUFRJ, Rio de Janeiro.

Jebali, A., Atidel, B., Hadj, A. and Pierre, L.
(2006). Operating rooms scheduling, Int. J.
Production Economics 99 5262.
Kharrajal, S., Albert, P. and Chaabanel, S.
(2006). Bloco de programacao para um calendario cirurgico, Anais de Conferencia Internacional sobre Sistemas de Servicos e Sistemas de Gerenciamento .

ISBN 978-85-8001-069-5

3235