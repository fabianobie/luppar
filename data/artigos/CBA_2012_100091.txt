Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

DETECÇÃO DE FAIXAS COM CÂMERA MONOCULAR E OTIMIZAÇÃO ATRAVÉS DE
ALGORITMO GENÉTICO
RODOLFO F. NUNES, ANDRÉ C. HERNANDES, MARCELO BECKER
Laboratório de Robótica Móvel, Departamento de Engenharia Mecânica, Escola de Engenharia de São Carlos
 Universidade de São Paulo
Av. Trabalhador São-carlense, 400, Pq Arnold Schimidt, São Carlos - SP
E-mails rodolfo.nunes@usp.br, andre.hernandes@usp.br, becker@sc.usp.br

Abstract The demand for cars keeps increasing in Brazil and in the world, and as result it is observed a large amount of traffic
accidents. As a consequence, there is a large investment in new security systems for vehicles. Within this context, the present
work aims to be a tool to increase vehicle safety by developing a system of detecting traffic lanes, which will be used in
a prototype vehicle with autonomous features. The study is based on the development of image processing algorithms to perform the identification of edges, were used for this the Canny operator, the Sobel operator and the Laplacian of Gaussian. These
techniques are based on filtering and in the primary and secondary derivatives of the images in grayscale and have parameters of
thresholds that modify the detection. Using the technique of genetic algorithm these parameters were optimized in order to increase the identification of tracks and reduce noise. Once found, the tracks could be geometrically described using the Hough
Transform method. The algorithms were implemented in Matlab and the tests were performed in a past-processed way, using
photos and videos captured by a monocular camera installed in the test car.
Keywords computer_vision, edge detection, genetic algorithm, Canny operator, Sobel operator, Laplacian of Gaussian, Hough
Transform.
Resumo A demanda de carros apresenta grande crescimento no Brasil e no Mundo e com isso observa-se uma grande quantidade de acidentes de trânsito. Uma consequência disso é o aumento no investimento em segurança veicular e desenvolvimento de
novos sistemas_embarcados em veículos. Diante desse contexto, o presente trabalho pretende ser mais uma ferramenta para aumentar a segurança veicular, através do desenvolvimento de um sistema de detecção de faixas de trânsito, que será embarcado
em um veículo protótipo com características autônomas. O estudo se baseia no desenvolvimento de algoritmos de tratamento de
imagens para realizar a identificação de bordas, para isso foram utilizados o operador de Canny, o operador de Sobel e o Laplaciano da Gaussiana. Essas técnicas se baseiam em filtragens e em derivadas primárias e secundárias de imagens em escala de cinza
e possuem parâmetros que modificam a detecção. Através da técnica de algoritmo_genético esses parâmetros foram otimizados
com o objetivo de aumentar a identificação de faixas, que então puderam ser descritas geometricamente utilizando o método de
Transformada de Hough. Os algoritmos foram implementados em MatLab e os testes foram realizados de maneira pósprocessada utilizando fotos e vídeos capturados por uma câmera_monocular acoplada ao veículo de testes.
Palavras-chave .

1 Introdução
Todos os anos verifica-se um aumento na quantidade de acidentes e mortes no trânsito brasileiro. A
combinação de imperícia e imprudência dos motoristas, as péssimas condições de vias, juntamente com
situações metereológicas adversas provocam a perda
de diversas vidas. E essa quantidade está chegando a
números tão alarmantes que em 2011 foi lançado
pela ONU (Organização das Nações Unidas) a década de ação pelo trânsito seguro (2011 - 2020) com a
finalidade de prevenir tais acidentes (ONUBR,
2011), e a OMS (Organização Mundial da Saúde)
considerou as mortes em acidentes de trânsito como
um problema mundial de saúde pública, alcançando a
marca de nona maior causa de morte no mundo, um
total de 1,3 milhões de pessoas por ano (OMS,
2009). E infelizmente esses números não tendem a
sofrer uma queda significativa nos próximos anos,
pelo menos no Brasil, já que a quantidade de carros
novos vendidos é superada a cada ano e os investimentos na malha rodoviária em diversos estados estão aquém das necessidades. Em apenas seis anos o
número de carros novos vendidos dobrou e o Brasil

ISBN 978-85-8001-069-5

passou da 10 posição para a 4 colocação no ranking
mundial nesse quesito (Fenabrave, 2010).
Por outro lado, a indústria automobilística, pressionada por regulamentações governamentais e pela
opinião pública, vem investindo muito em novos
sistemas de segurança para veículos (Folha, 2010).
Também nos últimos anos, presenciou-se um grande
desenvolvimento nas áreas de eletrônica e sensores
embarcados, tornando mais viável a aplicação de
técnicas de robótica_móvel e inteligência_artificial em
veículos de passeio, sendo possível a instalação de
sistemas avançados de auxílio ao motorista ou Advanced Driver-Assistance Systems (ADAS). Sistemas
tais como o Controle Ativo de Cruzeiro, Frenagem
Automática de Emergência, Proteção Pré-Colisão e o
Sistema de Permanência na Pista (Kowalenko, 2010).
Recentemente, a empresa Ford anunciou que usará
essa última tecnologia no carro Fusion modelo 2013,
que apresentará um sistema opcional que consiste em
uma câmera instalada próximo ao espelho retrovisor
e que terá a função de identificar as faixas de trânsito
e alertar o motorista caso ele atravesse uma faixa sem
utilizar o sinal luminoso de mudança de direção, isso
tem por objetivo diminuir acidentes causados por
cansaço do motorista (Ford, 2011).

3534

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

Esse tipo de sistema de transporte pessoal com
sistemas autônomos começou a ganhar mais visibilidade a partir de 2003 quando a agência americana
DARPA (Defense Advanced Research Projects Agency) propôs uma competição entre carros autônomos. Mais atualmente, novos carros começaram a ser
desenvolvidos, como exemplo pode-se citar o carro
desenvolvido pela Google (Ackerman, 2010). Em
sua aparição no ano de 2010, o mesmo executou aproximadamente 225.000 km de testes com apenas
uma colisão em sua traseira.
É nesse contexto que o Laboratório de Robótica Móvel do Grupo de Mecatrônica da EESC USP desenvolve o Projeto SENA  Sistema Embarcado de Navegação Autônoma  que tem por objetivo principal o desenvolvimento de um veículo com
capacidade de se locomover de forma semiautônoma em ambientes urbanos e rodovias (SENA,
2012). Para seu funcionamento possui diversos sensores como pode ser observado na Figura (1).

rio construir o fundo verdade de um banco de imagens coletadas com o plataforma_de_testes para ser
utilizada como gabarito das detecções.
Para fazer o desenvolvimento dos algoritmos foi
utilizado o software Matlab. Esse ambiente_de_desenvolvimento foi escolhido devido a sua eficiência e
facilidade no trabalho com matrizes, além de possuir
um alto_desempenho e ser voltado para o cálculo
numérico.
Todas as imagens utilizadas nos testes foram coletadas durante passeios com o veículo protótipo na
forma de fotos e principalmente vídeos. As imagens
tiverem seu tamanho pré-fixado em 640x480, pois
essa é a resolução ideal segundo Khalifa (Khalifa et.
al., 2010), já que imagens maiores teriam o tempo de
processamento muito prejudicado e fotos com resolução menor deixam a desejar no detalhamento da
imagem.
O princípio básico dos detectores de borda baseia-se em encontrar a fronteira entre regiões com
diferentes intensidades de nível de cinza. Para isso, é
preciso inicialmente utilizar uma transformação na
imagem passando de um espaço de cor RGB para
uma escala de cinza, a qual se utiliza apenas da iluminação, eliminando-se assim a matiz e a saturação
da imagem. Isso é feito se utilizando a Equação (1)
encontrada em Assidiq (Assidiq et. al., 2008).
(1)

Figura 1. Ilustração dos sensores embarcados no veículo de testes
do projeto SENA.

O presente trabalho é uma das ferramentas
utilizadas no desenvolvimento desse projeto. A localização das faixas é utilizada principalmente como
uma das opções para identificação da posição do
carro em relação  rua, e funciona como um complemento s informações obtidas com o GPS e com a
detecção de pista trafegável, trabalhos que estão sendo desenvolvidos paralelamente a este.
2 Métodos
O objetivo principal desse artigo é apresentar
maneiras de localizar e identificar faixas de trânsito
em imagens, para isso, inicialmente precisa-se detectar as bordas presentes na foto e então utilizar algum
método para identificar quais são as bordas relevantes, ou seja, quais representam as faixas ou sarjetas
das ruas. Para a primeira parte, a detecção_de_bordas,
foram estudados e implementados três algoritmos
Operador de Canny, Operador Laplaciano da Gaussiana (LoG) e Operador de Sobel. Para a segunda parte, a identificação da faixa, foi utilizada a técnica de
Transformada de Hough. Também foi desenvolvido
um algoritmo_genético (AG) para aprimorar os detectores de borda, para isso primeiramente foi necessá-

ISBN 978-85-8001-069-5

Onde Y é a intensidade em escala de cinza, R é
a componente vermelha do valor do pixel, G é a
componente verde e B, a azul. Com isso pode-se observar, a imagem que antes possuía três componentes
passa a ter apenas uma componente, tornando mais
rápido o processamento da imagem. Nos próximos
itens serão apresentados os algoritmos detectores de
borda que foram estudados e implementados.
2.1 Operador de Canny
Canny estabeleceu que um bom algoritmo detector de bordas deve atender a três necessidades básicas (Canny, 1986).
a) Baixa taxa de erro O primeiro critério define que deve haver uma baixa probabilidade
de o detector identificar um pixel que esteja
fora da região de borda.
b) Boa Localização Os pontos detectados como borda devem estar o mais próximo possível da real borda.
c) Resposta única Deve haver apenas um ponto de máxima que será dito borda, ou seja,
evitar bordas duplas.
Baseado nessas premissas, Canny desenvolveu
um algoritmo que passa por diversas etapas com o
objetivo de se fazer uma boa detecção das bordas
presentes na imagem. Primeiramente, a imagem passa por uma filtragem com o objetivo de reduzir a
quantidade de ruído. O filtro construído por Canny
pode ser aproximado pela primeira derivada da função Gaussiana e o desvio padrão pode ser modificado

3535

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

manualmente. Em seguida são aplicadas duas máscaras unidimensionais para fazer a diferenciação da
imagem e calcular a magnitude em cada píxel. Já
com as intensidades é possível passar por um processo de supressão não máxima para provocar um afinamento das bordas e diminuir a incidência de bordas duplas (Silva et. al., 2004). Por fim, o algoritmo
passa por um processo de histerese (Vale and Dal
Poz, 2002), onde são aplicados dois valores de limiar, sendo um de valor baixo T1 e outro de valor alto
T2, o processo consiste em percorrer todos os valores
de magnitude da imagem classificando-os, aqueles
que possuírem valor maior que T2 serão ditos bordas
fortes, os que possuírem valor entre T1 e T2 serão
chamados de bordas fracas e os que possuírem
magnitude menor que T1 serão eliminados (Gonzalez
and Woods, 2007). Em seguida, os pontos de borda
fraca são analisados, se um ponto de borda fraca estiver 8-conectado a uma borda forte, ou seja, pelo
menos um dos oito pixels ao redor do ponto seja borda forte, ele é incorporado a este, tornando-se assim
um ponto de borda. Por outro lado, os que não possuírem alguma borda forte como vizinha serão eliminados. Ao fim desse processo a imagem estará binarizada e deverá apresentar apenas as bordas de maior
intensidade. Os dois valores de threshold e o desvio
padrão da Gaussiana podem ser modificados na função e foram os parâmetros aprimorados com o auxílio do algoritmo_genético.
2.2 Operador Laplaciano da Gaussiana
A função Gaussiana é muito utilizada na visão
computacional como um filtro, normalmente utilizado para remover ruídos na imagem devido ao borramento provocado pela convolução dessa função
com a imagem. O algoritmo apresentado se utilizada
da segunda derivada da função Gaussiana, ou seja, de
seu Laplaciano, como mostrado na Eq. (2) calculado
na direção x e y ou em r, sendo
e 
sendo o desvio padrão (Gonzalez and Woods, 2007).
(2)
Essa operação utiliza a derivada secundária, assim, trata-se de uma operação linear, então aplicar o
LoG na imagem é o mesmo que aplicar a Gaussiana
na imagem e depois calcular o Laplaciano do resultado. Desse modo, pode-se observar que aplicar o
LoG na imagem provoca dois efeitos. Ele borra a
imagem provocando a redução dos ruídos e calcula o
Laplaciano, assim, encontrando as bordas presentes
na imagem. Entretanto, ao se utilizar esse processo
são encontradas bordas duplas como resposta, o que
é indesejável, para resolver esse problema o algoritmo procura pelos pontos que cruzam o zero da função entre as duas bordas, e então assume que essa
seja verdadeiramente a borda e não as anteriores.
Depois de serem encontradas todas as bordas da imagem elas são analisadas e comparadas com o valor

ISBN 978-85-8001-069-5

de limiar imposto, eliminando as de valor menor que
do threshold. Esse último parâmetro, juntamente com
o valor de  puderam ser otimizados com o AG.
2.3 Operador de Sobel
O operado de Sobel consiste na aplicação de duas máscaras de filtragem de tamanho 3x3 que passam
por convolução com a imagem, sendo uma máscara
para detecção vertical e uma para detecção horizontal, gerando duas imagens. A Figura (2) mostra duas
matrizes representando as máscaras utilizadas na
convolução (Ying-Dong et. al., 2005).
-1

-2

-1

-1

0

1

0

0

0

-2

0

2

1

2

1

-1

0

1

Figura 2. Máscara do Operador de Sobel.

De posse das máscaras e dos valores dos pixels vizinhos ao que se quer analisar, pode-se encontrar o
valor do gradiente para cada ponto da imagem (Gonzalez and Woods, 2007). Para se determinar um ponto de borda basta estabelecer um valor de limiar e
analisar o valor do gradiente em cada ponto. Se o
valor do ponto for maior que o do threshold imposto
diz-se que é um ponto de borda, esse valor de limiar
é escolhido manualmente e pôde ser otimizado através do algoritmo_genético. Além dessa análise na
vertical e na horizontal separadamente, pode-se encontrar os pontos de borda fazendo o módulo dos
gradientes das duas imagens para compor um único
resultado. É importante ressaltar que mesmo depois
de encontrar o módulo dos gradientes as bordas serão
mais ressaltadas nas direções verticais e horizontais,
falhando ao encontrar algumas bordas inclinadas.
2.4 Transformada de Hough
Depois de fazer a identificação de todas as bordas através dos detectores apresentados têm-se imagens binarizadas, com muitas informações desnecessárias e com ruídos. Após fazer uma análise dos resultados dos métodos descritos, foi determinado o
que possuía os melhores resultados para ser implementado como imagem base para a Transformada de
Hough. Com a utilização dessa transformada pretende-se extrair da imagem apenas a localização e a angulação das faixas de trânsito e quando possível também das sarjetas da rua. Basicamente o objetivo desse método é localizar um conjunto de pontos que
sejam colineares.
Para aplicar essa transformada, tomamos um
ponto da imagem que seja considerado borda
e é possível observar que por ele passam infinitas
retas, sendo que todas obedecem  equação
para diferentes valores de e . Reescrevendo a equação da forma
teremos o
chamado plano dos parâmetros e nesse caso faz-se

3536

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

com que e sejam as variáveis. Pode-se tomar outro ponto da reta
que possua os mesmos e
e fazer o mesmo processo descrito acima. Ao se fazer
isso é observado que um ponto no espaço cartesiano
corresponde a uma reta no espaço dos parâmetros, e
uma reta no espaço cartesiano corresponde a um ponto no espaço dos parâmetros, assim temos que pontos
colineares no plano xy serão retas concorrentes com
um ponto em comum, esse ponto é exatamente o que
procuramos, pois com ele encontramos
e
que
são os coeficientes angular e linear da reta que passa
pelos dois pontos no espaço cartesiano.
Esse é um exemplo muito simples, apresentando
apenas dois pontos, mas esse processo pode ser feito
para imagens binárias muito mais complexas, o que
pode gerar um grande problema, pois como o plano
ab é linear, o valor de a pode se aproximar de infinito
quando a reta se aproximar da vertical, e nesse caso
fazer uma análise para localizar os pontos de encontro entre as retas pode ter um custo_computacional
muito grande e desnecessário. Por esse motivo, a
Transformada de Hough não faz uma transformação
para reta e sim para funções senóides (Gonzalez and
Woods, 2007), fazendo-se
.
Dessa forma a função fica limitada e o algoritmo
encontra mais facilmente o ponto de intersecção.
Esse método é muito eficiente na análise de faixas retas, entretanto, é possível que haja problemas
ao ser utilizado em curvas principalmente, uma solução para isso seria futuramente usar-se o método de
Transformada de Hough Generalizada que é capaz de
encontrar pontos pertencentes  curva.
2.4 Algoritmo Genético
A técnica de algoritmo_genético (AG) é um modelo computacional iterativo, ele é inspirado no princípio de seleção natural e combinação genética, buscando encontrar soluções para um determinado problema através da evolução das populações. Essa técnica já está sendo utilizada por muitos anos devido a
sua flexibilidade e versatilidade na resolução de problemas_de_otimização, podendo ser utilizado, por
exemplo, em diversas áreas da Engenharia, em soluções para Biologia, Medicina e Teoria de Controle
(Pearson et. al., 2003).
Para se utilizar um AG nesse trabalho é necessário possuir uma maneira de avaliar a qualidade da
detecção de borda e seus respectivos parâmetros,
para isso, foi armazenado um banco_de_dados com
diversas imagens e produzido um fundo verdade para
cada uma dessas fotos. Esse fundo verdade é basicamente uma imagem binária que possui valor apenas
nos pontos pertencentes a faixas na foto. Para desenvolver o fundo verdade, um programa de captura de
posição do mouse foi implementado em Matlab, dessa forma foi possível através de alguns cliques na
imagem, extrair a posição das faixas de interesse.
Assim é possível fazer uma comparação entre a
imagem que passou por um detector de bordas e o
fundo verdade. Para definir os critérios de desempenho dos parâmetros dos detectores, foi definido que
ISBN 978-85-8001-069-5

seria melhor utilizar um classificador conservador
para a determinação das faixas, ou seja, possuir uma
maior porcentagem de acerto, mesmo que para isso
seja necessário encontrar uma menor quantidade de
faixas. Isso foi definido, pois existirão outros sensores que também darão resposta da localização do
carro e assim, seria mais vantajoso possuir uma maior certeza da resposta do algoritmo. Por esse motivo,
não há penalidade para os pontos de faixa que não
são localizados, é somado um ponto positivo quando
encontrado um ponto de borda que pertença  faixa, e
um ponto negativo ao se encontrar um ponto de borda que não esteja no fundo verdade, assim, fazendo a
avaliação dos parâmetros utilizados.
Abaixo são relacionadas s etapas básicas utilizadas no desenvolvimento do algoritmo_genético
(Pacheco, 1999).
a) Gera-se uma população inicial randômica
que possuam os parâmetros a serem otimizados.
b) Avalia-se cada indivíduo tendo por base o
fundo verdade, realizando-se a classificação
do desempenho destes como mencionado
anteriormente e selecionando aqueles que
obtiveram melhor desempenho.
c) É verificado se a condição de otimização foi
alcançada.
d) Se não foi alcançada, deve-se realizar permutações entre os indivíduos e introduzir
pequenas mutações em seus genes, mantendo inalterado apenas o melhor indivíduo
da geração.
e) Finalmente introduzem-se os novos indivíduos na população, ocupando o lugar de
seus geradores.
As rotinas de b a e são repetidas até que
uma condição de parada seja satisfeita. Para aprimorar ainda mais o AG, foi utilizada uma técnica que
após certa quantidade de gerações os indivíduos são
novamente randomizados, mantendo apenas o individuo com maior pontuação, isso foi feito, pois algumas vezes o algoritmo pode convergir para um
pico local da função, mas que não seja o máximo
geral. Ao se randomizar novamente os indivíduos
aumenta a possibilidade de conseguir encontrar outro
ponto que possua uma maior pontuação, sempre buscando encontrar o valor de máxima otimização, utilizando-se dessa técnica foi observado que existe convergência do valor por volta da 20 interação.
Os parâmetros que passaram por essa técnica foram os valores de limiar e o desvio padrão utilizados
no operador de Canny, o valor de limiar e o desvio
padrão utilizados no LoG, e o valor de limiar utilizado no método de Sobel.É importante frisar que os
parâmetros utilizados possuem certa dependência das
condições ambientais, assim, as detecções noturnas,
por exemplo, irão ter parâmetros diferentes das detecções para dias claros. Essa identificação poderá
ser feita por um sensor de iluminação e através desse
dado o sistema_de_controle do carro irá escolher o
grupo de parâmetros adequado para fazer uma melhor detecção.

3537

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

Nessa parte do projeto, foram utilizados apenas
imagens de dias claros e com pouca incidência de
sombras na rua para montar o banco_de_dados. Para
isso, foram feitos vídeos com o carro de testes, e então retirados frames desses vídeos em diversas ruas e
condições de faixas distintas, porém procurando
manter as condições climáticas relativamente parecidas. Sendo assim, para o desenvolvimento do AG,
foram selecionadas 70 imagens seguindo a descrição
acima, e foi possível observar a otimização dos detectores, como podem ser observados no próximo
tópico.
3 Resultados
Os algoritmos de detecção de borda descritos foram implementados e então com o algoritmo_genético as rotinas foram aprimoradas na busca de uma
detecção que possuísse certa robustez e que conseguisse eliminar grande parte dos ruídos presentes na
imagem, priorizando sempre a detecção das faixas e
sarjetas da rua. Na Figura (3) pode-se observar uma
comparação entre os três métodos de detecção utilizados já com seus parâmetros otimizados.

(a)

(b)

(c)

(d)

Figura 3. Comparação entre os detectores de borda. (a) Imagem
Original. (b) Operador de Canny. (c) Operador Laplaciano da
Gaussiana. (d) Operador de Sobel.

Analisando os resultados de diversas imagens
para os três detectores pôde-se observar que o algoritmo proposto por Canny mostrou-se superior aos
demais, além de gerar linhas constantes e fortes ainda
é o algoritmo que mais elimina ruídos e possui uma
boa robustez a alteração de iluminação e condições
de pista. Entre os outros dois detectores, o algoritmo
de Sobel teve um desempenho melhor, esse operador
mostrou-se muito bom para detecções de linhas retas,
principalmente se essas estiverem na vertical ou horizontal, entretanto falha ao encontrar algumas linhas
inclinadas e em curvas, além de em alguns casos não
conseguir eliminar uma parte dos ruídos. Já o operador LoG mostrou-se inferior aos outros, esse algoritmo possui falhas nas linhas que deveriam ser constantes e na maioria das imagens não conseguiu eli-

ISBN 978-85-8001-069-5

minar de maneira eficiente os ruídos, prejudicando
assim a detecção. A aplicação do algoritmo_genético
se mostrou uma boa opção para a otimização dos
parâmetros desses detectores, isso foi comprovado ao
se fazer uma análise da pontuação ganha através da
comparação com o fundo verdade, observando-se
uma grande melhora ao longo das gerações. O AG
teve uma grande importância principalmente para o
operador de Canny, já que este possui três parâmetros modificáveis e pode ser difícil fazer uma ótima
combinação dessas variáveis manualmente. Os outros dois operadores tiveram uma boa melhora das
detecções com o AG comparado com testes iniciais
feitos modificando os parâmetros manualmente. Apesar dessa melhora, não foram capazes de igualar
seus resultados ao algoritmo desenvolvido por
Canny, devido a isso, esse último operador foi o escolhido para ser usado nos testes com a utilização da
Transformada de Hough.
A Transformada de Hough se mostrou uma boa
opção para fazer a descrição geométrica das faixas,
em grande parte das imagens testadas essa técnica
localizou com sucesso a região desejada, entretanto,
em alguns casos o algoritmo encontrava linhas que
não eram o objetivo como postes, árvores, carros ou
a separação entre rua e céu. Para se melhorar a classificação algumas providências foram tomadas, primeiramente a dimensão da imagem foi levemente
reduzida, recortando-se a parte superior da imagem,
que normalmente possui apenas céu, ou se possuir
rua, essa se encontra a uma distância muito grande e
não é de grande interesse. Outra solução foi selecionar um intervalo de ângulos a ser considerado, assim,
a Transformada de Hough ignorava uma parte das
linhas que não estavam com uma angulação de interesse, no caso, retas que estão próximas a horizontal.
Portanto, qualquer linha que estava com uma angulação menor que 15 em relação a horizontal era ignorada. Desse modo eliminou-se o problema da região
de mudança de rua para céu e de identificar a traseira
de carros localizados  frente da câmera. Na Figura
(4) são mostradas em azul as retas encontradas com a
Transforma de Hough aplicada sobre a imagem binária gerada pelo Operador de Canny da Figura (3).

Figura 4. Aplicação da Transformada de Hough sobre a imagem binária obtida com o operador de Canny da Figura (3)

3538

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

A Transformada de Hough também apresentou
muito bons resultados em vias mais complexas, com
mais de duas faixas, na Figura (5) tem-se um exemplo dessa condição, sendo a foto retirada em uma
rodovia.

nal dessa técnica para avaliar sua viabilidade. Por
isso, outro modo de descrição de faixas pode ser estudado, como a utilização da técnica de mapeamento
inverso da perspectiva, que se trata de uma transformação na imagem com o objetivo de se retirar o efeito da perspectiva de uma foto, resultando em uma
imagem aérea, se isso for feito com uma imagem que
passou por um detector de bordas, é possível utilizar
histogramas para fazer a análise e identificação das
faixas.
Agradecimentos

(a)

(b)

Figura 5. Aplicação do Operador de Canny e da Transformada de
Hough para uma situação de diversas faixas.

Apesar de ser um bom descritor de retas, e ter tido bons resultados, a Transformada de Hough tem
alguns problemas, um deles é sua limitação de conseguir fazer a descrição apenas de retas, falhando em
encontrar curvas e alguns cruzamentos, além disso,
essa técnica exige um alto custo_computacional, o
que dificulta a aplicação desse algoritmo em tempo
real de modo embarcado (Reineri and Ribeiro, 2005).
4 Conclusões e Trabalhos Futuros
Após a realização do presente trabalho pôde-se
verificar que o algoritmo_genético aplicado sobre os
três detectores de borda já existentes se mostrou uma
boa forma de melhorar essas técnicas, que depois de
otimizadas tiveram uma grande quantidade de identificação de faixas e uma boa eliminação de ruídos. O
Operador de Canny foi o que mais se destacou, gerando detecções muito boas e mais confiáveis que os
demais algoritmos. Também a utilização da Transformada de Hough se mostrou uma boa opção para
fazer a descrição geométrica das faixas, principalmente depois de as imagens terem sido cortadas próximas a linha do horizonte e de se ter estabelecido
ângulos de interesse para se fazer a busca por retas.
O problema dessa técnica é que ela se limita a encontrar retas e possui um elevado tempo de processamento.
Na continuação do trabalho, será necessário
aumentar o banco_de_dados, obtendo situações climáticas diversas, a fim de encontrar os diferentes valores de parâmetros para cada condição. Após isso,
sabendo que o algoritmo proposto por Canny teve
um melhor resultado, e de posse dos parâmetros otimizados com o AG pode-se propor como um trabalho futuro a aplicação desse algoritmo em linguagem
C ou C++ em busca de uma maior velocidade de
processamento, com o objetivo de embarcar esse
programa no veículo de testes. Além disso, um melhor descritor é necessário, para isso pode-se trabalhar com a Transformada de Hough Generalizada,
que é capaz de encontrar curvas além de retas, tornando assim mais robusto a identificação das faixas,
entretanto terá de ser analisado o custo computacio-

ISBN 978-85-8001-069-5

Os autores gostariam de agradecer  FAPESP pelo
apoio financeiro,  Fiat e ao INOF  Instituto Nacional de Óptica e Fotônica.
Referências Bibliográficas
Ackerman, E. (2010). Googles Autonomous Car
Takes To The Streets. online Disponível em
<httpspectrum.ieee.orgautomatonroboticsarti
ficial-intelligencegoogles-autonomous-cartakes-to-the-streets>. Acesso em 15 abr. 2012.
Assidiq, A.A.M., Khalifa, O.O., Islam, R. and Khan,
S. (2008). Real Time Lane Detection for Autonomous Vehicles. Computer and Communication
Engineering International Conference, pp.82-88.
Canny, J. (1986). A Computational Approach to
Edge Detection. IEEE Transactions on Pattern
Analysis and Machine Intelligence, vol.PAMI-8,
No.6, pp.679-698.
Fenabrave. (2010). Distribuição de Veículos Automotores no Brasil. Anuário 2010.
Ford. (2011). Lane Keeping System Helps Fusion
Drivers Stay Alert and Between the Lines. online
Disponível
em
<httpmedia.ford.comarticledisplay.cfm?articl
eid35776>. Acesso em 15 abr. 2012.
Folha. (2010). Indústria automotiva investirá US
11,2 bilhões até 2012, diz Anfavea. online Disponível
em
<httpwww1.folha.uol.com.brfolhadinheiroult
91u728367.shtml>. Acesso em 15 abr. 2012.
Gonzalez, R.C. and Woods, R.E. (2007) Digital Image Processing. Pearson Prentice Hall, 3th. Edition.
Khalifa, O. O. et. al. (2010). A Hyperbola-Pair Based
Lane Detection System for Vehicle Guidance. Proceedings of the World Congress on Engineering and Computer Science, São Francisco,
Vol. 1, pp.585-588.
Kowalenko, K. (2010). Keeping Cars from Crashing.
IEEE The Institute, Vol. 34, No. 3, 5 p.
OMS. (2009). Global Status Report on Road Safety
Time for Action. Technical report, Organização
Mundial da Saúde.
ONUBR. (2011). Década de ação pelo trânsito seguro 2011-2020 é lançada oficialmente hoje (11)
em todo mundo. online Disponível em
<httpwww.onu.org.brdecada-de-acao-pelo-

3539

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

transito-seguro-2011-2020-e-lancadaoficialmente-hoje-11-em-todo-o-mundo>
Acesso em 15 abr. 2012.
Pacheco, M. A. C. (1999). Algoritmos Genéticos
Princípios e Aplicações. Apostila, 9 p.
Pearson, D. W., Steele, N. C. and Albrecht, R. F.
(2003). Artificial Neural Nets and Genetic Algorithms. New York Springer Verlag Wien, 271 p.
Reineri, S. and Ribeiro, C. H. C. (2005). Implementação e Análise de Algoritmos de Tempo Real
Para Detecção de Bordas em Navegação Utilizando Robô Móvel de Vigilância. Relatório Final PIBICCNPq, Instituto Tecnológico de Aeronáutica.
SENA. Sistema Embarcado De Navegação Autônoma.
online
Disponível
em
<httpwww.eesc.usp.brsenaurlptindex.php>.
Acesso em 15 abr. 2012.
Silva, J. F. C., Barbosa, R. L. and Gallis, R. B. A.
(2004). Avaliação Da Qualidade Da Detecção
De Bordas Em Uma Sequência De Imagens De
Ruas E Rodovias. Revista Brasileira de Cartografia, No. 56, pp.96-103
Vale, G. M. and Dal Poz, A. P. (2002). O Processo
de Detecção de Bordas de Canny Fundamentos,
Algoritmos e Avaliação Experimental. Simpósio
Brasileiro de Geomática, Anais, pp.292-303.
Ying-Dong, Q., Cheng-Song, C. and San-Ben,
C. (2005). A Fast Subpixel Edge Detection
Method
Using
Sobel-Zernike
Moments
Operator. Image and Vision Computing, pp. 11
17

ISBN 978-85-8001-069-5

3540