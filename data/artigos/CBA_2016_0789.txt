XXI Congresso Brasileiro de Automática - CBA2016
UFES, Vitória - ES, 3 a 7 de outubro

ABORDAGEM CO-EVOLUTIVA COM PROCESSAMENTO PARALELO PARA A
OBTENCAO DE SISTEMAS FUZZY
Airton Motoki Tamakoshi, Jeremias Barbosa Machado, Edmilson Marmo Moreira,
Fadul Ferrari Rodor


Universidade Federal de Itajuba
Itajuba, Minas Gerais

Emails motoki@gmail.com, jeremias@unifei.edu.br, edmarmo@unifei.edu.br,
fadulrodor@gmail.com
Abstract This work aims to present a methodology to obtain nonlinear fuzzy models from training data.
This methodology is based on optimization of fuzzy models through the use of genetic algorithm assembled to
parallel processing techniques. This approach aims to improve the efficiency of the method ensuring a shorter
processing time. The results obtained show that, after training, the system is able to model a nonlinear function
and in addition improve the performance from the viewpoint for the necessary time used for such achievement.
Keywords

Nonlinear modeling, Fuzzy systems, Genetic algorithm, Parallel processing.

Resumo Este trabalho tem como objetivo apresentar uma metodologia para a obtencao de modelos nao
lineares fuzzy a partir de dados de treinamento. Esta metodologia e baseada na otimizacao de modelos fuzzy por
meio da utilizacao de algoritmo_genetico conciliado a tecnicas de processamento_paralelo. Esta abordagem visa
melhorar a eficiencia do metodo garantindo um tempo menor de processamento. Alem disso, trata-se de uma
metodologia fundamentada em um sistema de representacao multinveis, o que garante eficacia na obtencao dos
modelos. Os resultados obtidos mostram que, apos o treinamento, o sistema e capaz de modelar uma funcao nao
linear e, alem disso, melhorar o desempenho do ponto de vista do tempo necessario para tal obtencao.
Palavras-chave

.

Introducao

A modelagem matematica de sistemas reais e importante em muitas areas da ciencia e tecnologia. Em engenharia, modelos sao utilizados para
analise, otimizacao, simulacao e obtencao de sistemas_de_controle que demandam por processos
de modelagem e identificacao cada vez mais eficientes. Ha uma demanda cada vez maior de
solucoes de modelagem para sistemas_nao-lineares
(Nelles, 2001). Diante desta demanda e da complexidade dos modelos que representem adequadamente tais sistemas, tem-se encontrado na utilizacao de modelos baseados em teoria de conjuntos_nebulosos, ou conjuntos_fuzzy, uma solucao eficiente (Yager and Filev, 1994).
No entanto, a obtencao de modelos fuzzy,
em geral, se baseia no conhecimento de um especialista. Uma outra forma de obtencao de
tais modelos se baseia em tecnicas de otimizacao
ou aprendizado_de_maquinas, especialmente com
o emprego de tecnicas de inteligencia_artificial
(Nelles, 2001). Dentre estas tecnicas, destam-se
as utilizacoes de algoritmos_geneticos ou algoritmos_evolutivos. Algoritmo Genetico (AG) e um
algoritmo de busca estocastica, baseado no processo natural de selecao de indivduos em uma populacao (Holland, 1975). Criado por John Henry
Holland, o Algoritmo Genetico e utilizado para
solucionar problemas de otimizacao_combinatoria
de diversas aplicacoes (Holland, 1975).
A aplicacao do algoritmo_genetico classico
para a determinacao de modelos fuzzy pode, em

ISSN 2525-8311

alguns casos, se tornar inviavel devido a complexidade da representacao do modelo via um
unico cromossomo e a eventuais dificuldades na
otimizacao. Neste sentido, foi proposta por Delgado (2002) uma metodologia baseada em uma
representacao multinveis que torna o processo
de obtencao dos modelos fuzzy mais amigavel.
Mesmo assim, como citado pela propria autora
em (Delgado, 2002), a extracao de modelos em
problemas de instancias elevadas pode se inviabilizar devido a necessidade de um tempo elevado
de processamento.
Uma das alternativas de otimizacao no processamento do algoritmo_genetico esta relacionado
a paralelizacao. A paralelizacao consiste na resolucao de um problema dividindo-o ou ampliando
a capacidade de processamento atraves da utilizacao de varios processadores ou maquinas em
um cluster de estacoes de trabalho (Javed et al.,
2015). A paralelizacao do AG tende a fazer com
que o algoritmo apresente um tempo de processamento menor do que a necessaria quando e realizado em um unico processador de forma tradicional.
Com o avanco da eletronica e da computacao
cada vez mais se utilizam computadores que apresentam multiplos cores. Estes computadores
possibilitam que varios programas funcionem ao
mesmo tempo, ou de forma paralelizada, dentro
do mesmo processador. Neste sentido, o objetivo deste trabalho e propor e apresentar a implementacao de uma metodologia que seja capaz de possibilitar a paralelizacao da metodolo-

2760

XXI Congresso Brasileiro de Automática - CBA2016
UFES, Vitória - ES, 3 a 7 de outubro

gia proposta por (Delgado, 2002) dentro de um
mesmo computador com multiplos cores de forma
a melhorar a sua capacidade de processamento e
diminuir seu tempo de execucao.
Neste artigo e apresentado uma breve descricao teorica dos temas relacionados a metodologia proposta. Para analisar a eficiencia de tal
metodologia, pretende-se obter um modelo fuzzy
que seja possvel de aproximar uma funcao naolinear. O principal objetivo e realizar um comparativo no tempo de processamento do algoritmo
inicialmente apresentado em (Delgado, 2002) com
o algoritmo paralelizado proposto.
Este artigo esta organizado da seguinte
maneira. Na secao 2, a modelagem por modelos fuzzy e revisada. Na secao 3, apresenta-se de
forma resumida a teoria de algoritmos_geneticos.
Nas secoes 4 e 5, descrevem-se o algoritmo inicial de obtencao dos modelos fuzzy e a proposta
deste trabalho baseado em processamento_paralelo, respectivamente. Na sequencia (secao 6)
apresentam-se os resultados e por fim, na secao 7
apresentam-se as conclusoes.
2

Sistemas Fuzzy

A teoria de conjuntos_nebulosos (fuzzy) foi inicialmente proposta por Zadeh (1965). Esta teoria permite tratar a incerteza da informacao,
sendo uma extensao da teoria de conjuntos
classicos. Um sistema_fuzzy e formado por uma
base de regras do tipo Se <premissa> Entao
<conclusao>, permitindo atribuir conclusoes para
diversas faixas de valor para as variaveis de estado
do problema. Um sistema_fuzzy, em geral, possui
as seguintes etapas (Yager and Filev, 1994)
 Fuzzificacao
 Inferencia da base de regras
 Defuzzificacao.
Formalmente, um conjunto nebuloso A do
universo de discurso  e definido por uma funcao
de pertinencia A    0, 1. Essa funcao associa cada elemento x de  um grau de compatibilidade com o conjunto A. A aplicacao da teoria dos
conjuntos_nebulosos permite inferir que um determinado valor de  pode assumir participacao
parcial perante a um conjunto.
As funcoes de pertinencia podem assumir diversos formatos, variando conforme o problema
tratado. Os formatos mais comuns sao triangular, trapezoidal e Gaussiana (Yager and Filev,
1994).
Quanto a classificacao dos modelos fuzzy,
estes geralmente sao classificados com relacao ao
tipo de consequente presente nas regras. Dentre os
mais utilizados destacam-se os modelos de Mamdani e Takagi-Sugeno (Yager and Filev, 1994).

ISSN 2525-8311

Neste trabalho, sao de especial interesse os modelos fuzzy Takagi-Sugeno.
2.1

Modelo Takagi-Sugeno

O modelo fuzzy Takagi-Sugeno (TS) e formado
por regras do tipo se-entao. Entretanto, os
antecedentes sao variaveis lingusticas e os consequentes sao funcoes das variaveis presentes nos
antecedentes. Atraves da utilizacao deste modelo
e possvel descrever de forma aproximada funcoes
ou sistemas_dinamicos nao lineares (Nelles, 2001).
A regra nebulosa no modelo Takagi-Sugeno e apresentada na forma
Rj  Se x1 e Aj1 e x2 eAj2 . . . e xn eAjn
entao yi  gi (wi , x) , j  1 . . . m

(1)

onde m e o numero de regras, xk sao as
variaveis de entrada, Ajk sao os conjuntos_nebulosos, gj (wj , x) e a funcao de sada com wj sendo
o vetor dos parametros do consequente e x o vetor
de variaveis.
A funcao a ser empregada nos consequentes
das regras pode ser linear ou nao linear. A
obtencao do valor final da funcao modelada pelo
sistema_fuzzy TS se da via um processo de inferencia normalmente resultado da combinacao
das funcoes locais presentes em cada regra ponderada pelo seu valor de ativacao (Yager and
Filev, 1994).
3

Algoritmo Genetico

O Algoritmo Genetico e um tipo especfico de algoritmo_evolutivo. Seu funcionamento se baseia
em conceitos advindos da teoria da evolucao e
em caractersticas biologicas do processo de reproducao de seres vivos (Back et al., 2000).
Para seu funcionamento inicialmente e gerada aleatoriamente uma populacao de indivduos.
Para cada indivduo e calculado seu grau de aptidao atraves da funcao de aptidao ou funcao de
fitness. Apos criar a populacao inicial, indivduos
sao selecionados para a operacao de crossover e
mutacao, gerando novos indivduos. O processo
de criacao de indivduos e repetido ate o algoritmo
encontrar um criterio_de_parada (de Castro, 2006)
geralmente ligado a capacidade do indivduo de
representar uma solucao otima ou subotima para o
problema sob analise. A Figura 2 apresenta o fluxograma do funcionamento do algoritmo_genetico.
A execucao do algoritmo_genetico depende
da definicao de alguns componentes tais como
(de Castro, 2006)
 Indivduo ou Cromossomo
Indivduos ou cromossomos sao representacoes de possveis respostas para o
problema.

2761

XXI Congresso Brasileiro de Automática - CBA2016
UFES, Vitória - ES, 3 a 7 de outubro

4

Figure 1 Fluxograma Algoritmo Genetico
 Populacao
A populacao e composta por um grupo de
indivduos. A populacao permite explorar
varias respostas e combinacoes de respostas
para solucionar o problema de otimizacao.
 Funcao de Aptidao e Grau de Aptidao
A funcao de aptidao (fitness function) e
a funcao responsavel em avaliar o grau de
adaptacao de um cromossomo a solucao de
um dado problema. A funcao varia conforme
o problema a ser solucionado.
 Selecao
A operacao de selecao e responsavel por escolher os bons cromossomos da populacao
para realizar o cruzamento.
Dentre todos os metodos de selecao, os mais comuns
sao selecao por classificacao (rank selection),
selecao por roleta (roulette wheel selection),
selecao por torneio (tournament selection) e
selecao uniforme (uniform selection).
 Cruzamento ou Crossover
A operacao de cruzamento e responsavel pela
combinacao de conteudos dos cromossomos
pais gerando um ou mais filhos. Dentre
os metodos de cruzamento mais utilizados
destacam-se cruzamento em um ponto (onepoint crossover ), cruzamento em dois pontos (two-points crossover ), cruzamento de
tres pais (three parent crossover ), cruzamento
uniforme (uniform crossover ).
 Mutacao
A operacao de mutacao possui uma pequena
probabilidade de ocorrer nos filhos gerados
apos o cruzamento. A mutacao consiste em
realizar pequenas alteracoes aleatorias no cromossomo filho permitindo explorar assim outras respostas ainda nao exploradas.

ISSN 2525-8311

Projeto Automatico de Sistemas
Nebulosos CoevolGFS

Sistemas nebulosos baseados em regras usam teoria dos conjuntos para descrever um determinado sistema, seja ele um modelo, classificador ou
mesmo um controlador. A obtencao de um modelo fuzzy pode se dar atraves de conhecimento de
um especialista ou atraves de dados provenientes
do sistema a ser modelado. O desenvolvimento de
tecnicas para extracao automatica e representacao
do conhecimento e motivado por situacoes onde a
base de dados e extensa, sendo assim, uma tarefa
complicada para um humano.
Um dos diversos metodos encontrados para
a extracao automatica e o genetic fuzzy system
(GFS), que e o uso do algoritmo_genetico no projeto de sistemas_nebulosos. Nesta metodologia, o
algoritmo_genetico e utilizado como ferramenta de
otimizacao para a obtencao do sistema_nebuloso.
Em algumas situacoes a aplicacao de GFS
pode se tornar inadequada. Isto pode ocorrer especialmente em problemas com grande dimensionalidade, o que acarretara em cromossomos de elevada dimensao, o que pode prejudicar
a solucao do problema por meio de GFS. Em
(Delgado, 2002) e proposta uma solucao para este
problema com a particao da representacao fuzzy
em varios nveis hierarquicos. Desta forma cada
nvel e responsavel por representar uma parte do
modelo fuzzy sendo este mapeado em um respectivo cromossomo. A estrutura de nveis e descrita
a seguir (Delgado, 2002)
4.1

Nvel I - Funcoes de Pertinencia

No nvel I tem-se a representacao da funcao
de pertinencia. O cromossomo apresenta uma
sequencia de cinco alelos com codificacao real.
O primeiro alelo Sk representa qual e o tipo da
funcao de pertinencia que e representado pelo cromossomo, podendo adotar os valores 1 (trapezoidal), 2 (triangular) e 3 (Gaussiana).
4.2

Nvel II - Regras Nebulosas

No nvel II tem-se cromossomos com tamanho fixo
e codificacao inteira. Cada alelo possui um valor
que representa um indivduo da populacao de nvel
I. A quantidade de alelos do cromossomo de nvel
II e igual ao numero de dimensoes do problema
tratado. E possvel adotar valores nulos para os
alelos, permitindo criar regras mais simplificadas.
4.3

Nvel III - Bases Regras

Assim como no nvel II, os cromossomos deste
nvel tem tamanho fixo e codificacao inteira. Cada
alelo possui um valor que representa um indivduo
da populacao de nvel II. A quantidade de alelos

2762

XXI Congresso Brasileiro de Automática - CBA2016
UFES, Vitória - ES, 3 a 7 de outubro

5

Figure 2 Fluxograma CoevolGFS
no nvel III e igual ao numero de regras que o sistema deve conter. Pode-se adotar valores nulos
para diminuir o numero de regras.
4.4

Nvel IV - Sistema Nebuloso

Neste nvel, os cromossomos possuem nove alelos
de codificacao mista. Sua representacao garante
a codificacao para os modelos Mamdani e TakagiSugeno. Os nove alelos sao
1. Inferencia (Escalonada)
2. Agregacao dos Antecedentes (t-norma)
3. Parametro pt 
4. Semantica da Regra (norma)
5. Parametro associado
6. Agregacao das Regras
7. Defuzificacao
8. Indice da Base de Regras
9. Indice da Particao Nebulosa.
Os parametros dos consequentes das regras
em um modelo TS sao obtidos via metodo de
mnimos_quadrados conforme apresentado em
(Delgado, 2002).
Como se trata de um processo multinveis, em
cada um destes nveis havera uma populacao e
consequentemente um processo evolutivo associado. Como a evolucao de um nvel depende do
efeito deste nvel nos demais, denominou-se este
processo como um processo coevolutivo. A estrutura geral do metodo pode ser resumida pelo
fluxograma apresentado na Figura 2. Maiores detalhes sobre o metodo podem ser encontrados em
(Delgado, 2002).

ISSN 2525-8311

Proposta

Neste artigo e proposta a obtencao de modelos fuzzy Takagi-Sugeno atraves de uma variacao
do processo CoevolGFS (Delgado, 2002).
A
metodologia CoevolGFS inicialmente proposta
apresenta algumas desvantagens em sua implementacao. Uma destas desvantagens, conforme
citado pela propria autora, esta relacionada ao
tempo necessario para o processamento do algoritmo_genetico. Desta forma, neste artigo propoese uma solucao para este problema atraves da
aplicacao de metodos de computacao paralela no
algoritmo original.
A paralelizacao deste metodo e baseada no
paradigma mestre-escravo. Atualmente, e um dos
paradigmas mais populares, devido as diversas
possibilidades de explorar o paralelismo nos modernos sistemas_computacionais, alem de proporcionar algoritmos paralelos cujo entendimento e
intuitivo (Yuan et al., 2016). A versao paralela
funciona da seguinte forma um processo principal
(mestre) e criado sendo responsavel em gerenciar
o sistema, os demais processos criados (escravos)
sao responsaveis em executar tarefas enviadas pelo
mestre.
O diagrama da figura 2 ilustra o funcionamento basico do CoevolGFS. O que se propoe
neste trabalho e a paralelizacao das etapas
Otimizar os Consequentes e Calcular o Fitness. Estas duas etapas foram escolhidas para
serem paralelizadas tendo em vista o maior custo
computacional envolvido em ambas. Analisandose o tempo de execucao das tarefas envolvidas
no algoritmo CoevolGFS, pode-se verificar que a
etapa denominada Otimizar os Consequentes
consome a maior parte do tempo de processamento de todo o algoritmo. Isso acontece devido
aos calculos matriciais existentes no procedimento
de otimizacao do modelo Takagi-Sugeno (metodo
de mnimos_quadrados global).
Outra etapa de elevado custo_computacional
e aquela denominada Calcular o Fitness. Nesta
etapa, e paralelizado o calculo do fitness dos indivduos de nvel IV (nvel do sistema_fuzzy). Tal
calculo utiliza o valor real de sada e o valor de
sada estimado pelo sistema_fuzzy. Ja os demais
nveis tem seus valores de fitness calculados de
forma sequencial por serem dependentes dos indivduos de nvel superior. O calculo do fitness
ocorre em ordem decrescente do ponto de vista
hierarquico, ou seja, inicia-se com calculo dos indivduos de nvel IV.
Com relacao ao restante do metodo, mantevese sua abordagem sequencial de forma normal,
pois em geral estas etapas demandam um custo
computacional irrelevante frente aos processos
citados acima.
Para implementar este metodo, foi utilizada
a plataforma Java (versao 1.8) com a biblioteca

2763

XXI Congresso Brasileiro de Automática - CBA2016
UFES, Vitória - ES, 3 a 7 de outubro

MPJ Express. Esta biblioteca e um sistema de
troca de mensagens que permite aos desenvolvedores de aplicativos paralelizar seus codigos Java
sequenciais para serem executados em clusters de
computacao de alto_desempenho e processadores
multicore (Javed et al., 2015).
Neste trabalho, os metodos das classes
disponveis na biblioteca MPJ foram utilizados
para estabelecer a comunicacao de dados entre o processo mestre e os demais processos escravos. No incio da fase de Otimizacao dos
Consequentes, o processo mestre envia um indivduo de nvel IV para cada processo escravo
que, por sua vez, realiza a otimizacao, calcula
o fitness correspondente e envia este resultado
para o processo mestre. Enquanto ha indivduos
para serem otimizados, o processo mestre envia
estes indivduos para os escravos, conforme eles
vao devolvendo os resultados parciais. O processo
mestre, a partir dos resultados de otimizacao de
todos os indivduos, calcula os respectivos fitness
dos indivduos de nvel III, II e I.
Na secao a seguir serao apresentados resultados a fim de demonstrar a validade da metodologia
proposta.
6

Simulacao e Resultados

Para ilustrar a aplicacao e a validade da metodologia proposta, realizou-se a obtencao de um modelo
fuzzy para a funcao multivariavel apresentada na
equacao (2)
f (x1 , x2 ) 

sen(x1 ) sen(x2 )
x1
x2

(2)

A Figura 3 apresenta a superfcie gerada pela
funcao f (x1 , x2 ) apresentada na equacao 2.

 Crossover Single Point
 Tamanho das populacoes 50.
Conforme proposto neste artigo pretende-se
verificar o impacto da paralelizacao do CoevolGFS utilizando de 1 a 8 nucleos de processamento disponveis na mesma maquina. As caractersticas do computador utilizado sao apresentadas na Tabela 1.
Table 1 Caractersticas do Computador
Processador i7-3770 3,40 GHz x 8
S.O.
Ubuntu 14.04 LTS
RAM
8GB
Para o teste dedicado a avaliacao para um determinado numero de nucleos realizou-se um total
de 100 experimentos para cada configuracao. A
Tabela 2 apresenta um resumo dos resultados obtidos com os experimentos realizados com relacao
ao tempo de processamento.
Table 2 Tempo x Numero de nucleos
Nucleos T. Medio ms Desv. Padrao ms
1
74797
7600
2
79425
8240
3
43872
3218
4
32807
2192
5
28743
1952
6
26489
1757
7
24480
1247
8
23932
1145
A Tabela 3 apresenta os resultados de erro
quadratico medio (EQM) para cada um dos testes
realizados de acordo com o numero de processadores utilizados.
Table 3
Nucleos
1
2
3
4
5
6
7
8

Figure 3 Funcao f (x1 , x2 )
A obtencao do modelo fuzzy se da a partir de um conjunto de N dados de treinamento
(x1,i , x2,i , fi ) com i  1, . . . , N .
Para o processo de treinamento e obtencao
do modelo utilizou-se os seguintes parametros no
algoritmo_genetico
 Selecao primaria Torneio
Tamanho 10 Taxa de escolha 50

ISSN 2525-8311

EQM x Numero de nucleos
EQM Medio Desv. Padrao
1, 7483.103
3, 1881.104
3
1, 8793.10
4, 2183.104
1, 8292.103
3, 0977.104
3
1, 7124.10
3, 0698.104
3
1, 7532.10
2, 6425.104
3
1, 7604.10
3, 2206.104
3
1, 7881.10
3, 1920.104
3
1, 7741.10
3, 5294.104

Na avaliacao de um sistema paralelo, duas
medidas de interesse sao Speedup e Eficiencia.
O Speedup e definido como sendo a razao entre o tempo de execucao de um programa num
unico processador em relacao ao tempo obtido
quando n processadores estao disponveis. A
Eficiencia e definida como sendo a razao entre o
Speedup e o numero dos processadores utilizados.
A eficiencia indica a taxa de utilizacao dos processadores (Eager et al., 1989). Os valores de Speedup
e Eficiencia estao presentes na Tabela 4.

2764

XXI Congresso Brasileiro de Automática - CBA2016
UFES, Vitória - ES, 3 a 7 de outubro

Table 4 Speedup
Nucleos Tempo ms
1
74797
2
79425
3
43872
4
32807
5
28743
6
26489
7
24480
8
23932

e Eficiencia
Sp
Ef 
0,9417
1,7048
2,2799
2,6022
2,8237
3,0554
3,1253

47,0865
56,8297
56,9977
52,0453
47,0616
43,6490
39,0674

Como pode-se observar pelos dados apresentados nas Tabelas 2 e 3 o algoritmo apresentou
melhoras significativas conforme foi sendo incrementado o numero de processadores. A queda relativa descrita pela medida eficiencia (Ef) e explicada pelo aumento da comunicacao entre o processo mestre e os escravos e pela forma circular
em que indivduos sao enviados do mestre para
os escravos. O valor do speedup tende a estabilizar em funcao do numero de indivduos criados
no sistema, que no caso deste trabalho foram 50.
E importante destacar que o aumento no
tempo total de execucao verificado com dois processadores (79425 ms) em relacao ao tempo com
um unico processador (74797 ms) ocorreu devido
ao fato da versao sequencial nao necessitar de comunicacao entre os nucleos e, desta forma, nao
utilizar a biblioteca MPJ. Com dois processadores,
por sua vez, ha o custo_computacional no calculo
de otimizacao dos consequentes, que ocorre em
apenas um nucleo (o que contem o processo escravo). Entretanto, a partir de 3 nucleos de processamento, pela carga deste calculo ser divida em
mais de um escravo, o aumento do speedup e significativo.
Com relacao a precisao do metodo na modelagem da funcao por meio de um sistema_fuzzy
pode-se verificar atraves da Tabela 4 que este se
manteve eficiente mesmo com a alteracao no algoritmo. Pode-se perceber que nao ha comprometimento na eficacia do ponto de vista da identificacao quando se utiliza o processamento_paralelo.
7

Conclusao

Este artigo apresenta uma abordagem paralela
para arquiteturas multicore do algoritmo CoevolGFS proposto por Delgado (2002). O algoritmo inicialmente proposto apresenta vantagens
na obtencao de mo-delos fuzzy via otimizacao por
algoritmo_genetico quando comparado a tecnicas
classicas aplicadas a mesma funcao. No entanto, demanda um esforco computacional significativo para a solucao do problema. Neste contexto, a abordagem aqui apresentada alcancou
um desempenho relevante justificando a necessidade de paralelizacao do metodo. Sendo assim,
considerando-se as arquiteturas computacionais

ISSN 2525-8311

atuais com multiplos nucleos, a implementacao
desenvolvida se mostra ainda mais vantajosa, pois
esta nao demanda a aquisicao de equipamentos especficos, mas somente a utilizacao de recurso computacional ja disponvel. Alem disso,
a metodologia apresentada e as ferramentas utilizadas apresentam flexibilidade possibilitando a
sua facil adaptacao em arquiteturas computacionais mais robustas como clusters de alto_desempenho, grades computacionais e ate mesmo uma
estrutura de nuvem.
Os resultados experimentais apresentados
mostram a eficiencia do metodo proposto.
8

Agradecimentos

Os autores agradecem a FAPEMIG, a CAPES e
ao CNPQ pelo apoio financeiro.
References
Back, T., Fogel, D. B. and Michalewicz, Z. (2000).
Evolutionary Computation 1 Basic Algortithms
and Operators, 1st edn, Institute of Physics Publishing, Bristol and Philadelphia.
de Castro, L. N. (2006). Fundamentals of Natural Computing Basic Concepts, Algorithms, and
Applications, 1st edn, Chapman and HallCRC
Computer and Information Science Series.
Delgado, M. R. B. S. (2002). Projeto Automatico
de Sistemas nebulosos uma Abordagem CoEvolutiva., PhD thesis, Universidade Estadual de
Campinas. Campinas, SP.
Eager, D. L., Zahorjan, J. and Lazowska, E. D. (1989).
Speedup versus efficiency in parallel systems,
IEEE Transactions on Computers 38(3) 408
423.
Holland, J. (1975). Adaptation in Natural and Artificial Systems, University of Michigan Press.
Javed, A., Qamar, B., Jameel, M., Shafi, A. and Carpenter, B. (2015). Towards scalable java hpc
with hybrid and native communication devices
in mpj express, International Journal of Parallel
Programming pp. 131.
Nelles, O. (2001). Nonlinear System Identification
From Classical Approaches to Neural Networks
and Fuzzy Models, Springer-Verlag.
Yager, R. R. and Filev, D. P. (1994). Essentials of
Fuzzy Modeling and Control, John Wiley and
Sons.
Yuan, X., Zhang, T., Dai, X. and Wu, L. (2016).
Masterslave model-based parallel chaos optimization algorithm for parameter identification
problems, Nonlinear Dynamics 83(3) 1727
1741.
Zadeh, L. A. (1965). Fuzzy sets, Information and control 8(3) 338353.

2765