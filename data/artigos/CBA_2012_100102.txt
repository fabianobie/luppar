Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

CODIFICACAO POR POLOS E ZEROS PARA O PROJETO DE FILTROS DIGITAIS
DE RESPOSTA INFINITA AO IMPULSO UTILIZANDO OTIMIZACAO POR
ENXAME DE PARTICULAS
Daniel Rossato de Oliveira, Heitor Silverio Lopes


Universidade Tecnologica Federal do Parana (UTFPR)
Av. Sete de Setembro 3165
Curitiba, Parana, Brasil

Emails rossato.daniel@gmail.com, heitorslopes@gmail.com
Abstract IIR digital filter design is classic problem in Electrical Engineering. There are many specific
methods in literature, but most of these methods are not flexible, preventing one from fixing all parameters.
Therefore, this problem is also solved in literature with Evolutionary Computing techniques. Several works were
found with this approach, but in almost all, the focus was in the evolutionary algorithm rather than on the
filter problem, using this only as a benchmark function. Moreover, the filter stability - prerequisite for the filter
application - is neglected in almost all of them. So, this work proposes a new codification, which maps a search
sub-space made only by stable solutions. This approach is compared with the most common codification in the
literature, and experiments showed a much better performance obtained with the proposed approach.
Keywords

Evolutionary Computing, Digital Filters, PSO.

Resumo O projeto_de_filtros_digitais do tipo IIR e um problema classico da engenharia. Existem varios
metodos especialistas consagrados na literatura, mas a maior parte destes metodos nao e flexvel, impedindo
a especificacao de todos os parametros importantes de um filtro. Por isso, este problema tambem e atacado
na literatura atraves de tecnicas de computacao_evolucionaria. Diversos estudos foram encontrados com esta
abordagem, mas em quase todos, o enfoque era dado no algoritmo evolucionario em vez de no filtro, utilizando
este apenas como uma funcao de benchmark. Alem disso, a estabilidade do filtro - condicao imprescindvel para
a utilizacao do mesmo - e desprezada em quase todos os trabalhos. Este trabalho propoe uma nova codificacao,
que mapeia um sub-espaco de busca composto apenas pelas solucoes estaveis. Esta abordagem e comparada com
a codificacao mais utilizada na literatura, e os resultados mostram um desempenho muito superior obtido pela
abordagem proposta.
Palavras-chave

.

Introducao

O processamento_de_sinais e uma area da Engenharia Eletrica que permeia praticamente todas
as outras areas. Sistemas embarcados processam
sinais de dispositivos de entrada, sistemas_de_controle processam os sinais de sensores e atuadores,
etc. Dentro da area de processamento_de_sinais, a
parte que lida com sinais digitais e uma das mais
presentes em nosso dia-a-dia, ja que a maior parte
da analise e manipulacao de dados e feita hoje por
dispositivos digitais.
Os filtros_digitais sao uma das bases do processamento_digital_de_sinais. Os filtros sao classificados conforme diversas caractersticas, como o
tipo de sua resposta, seu comportamento quando
submetido a diferentes sinais, sua linearidade, etc.
Uma das principais caractersticas e a duracao da
resposta ao impulso unitario de um filtro. Esta
pode ser finita ou infinita, gerando filtros chamados respectivamente de FIR (Finite Impulse Response) ou IIR (Infinite Impulse Response).
A principal diferenca na implementacao destes filtros e que os do tipo IIR possuem realimentacao, isto e, os resultados em cada instante na sada
afetam o valor de sada nos instantes seguintes. O
filtro FIR nao possui realimentacao. Esta caracterstica tem varias consequencias, sendo as princi-

ISBN 978-85-8001-069-5

pais dificuldade de obter resposta em fase linear,
tendencia a instabilidade, e maior fator de rolloff. Este fator e a velocidade de transicao entre
as bandas de passagem e rejeicao de um filtro.
Como um filtro IIR consegue um roll-off muito
mais acentuado que um FIR que utilize o mesmo
processamento, os filtros IIR sao mais utilizados.
Existem diversos metodos de projeto_de_filtros
digitais, cada um com suas particularidades. Porem, a maioria nao e muito flexvel nao e possvel
especificar todos os parametros desejados, pois alguns serao resultado do calculo. Eles tambem priorizam o atendimento de uma das faixas em detrimento da outra, gerando um desequilbrio. Se o
projetista fornecer um conjunto de especificacoes
impossvel de ser alcancado, os metodos tradicionais fornecerao um filtro que obedeca aos criterios
em uma das faixas, enquanto a outra fica muito
longe do exigido.
Por isso, e muito estudado na literatura o
projeto_de_filtros_digitais atraves de tecnicas de
otimizacao_heurstica, dentre elas a Computacao
Evolucionaria (CE). Os metodos de CE sao algoritmos bioinspirados, isto e, baseados em algum processo biologico ou natural que formam
meta-heursticas para a resolucao_de_problemas
de otimizacao numerica ou combinatoria. Dentre as tecnicas mais conhecidas, estao o Algo-

3352

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

ritmo Genetico (AG) (Goldberg, 1989), Otimizacao por Enxame de Partculas (PSO) (Kennedy
and Eberhart, 1995), Programacao Genetica (GP)
(Koza, 1992), entre outras. Neste campo estao sempre sendo propostas novas tecnicas como
o Harmony Search (HS) (Geem et al., 2001),
Otimizacao por Enxame Bioluminescente (BSO)
(de Oliveira, Parpinelli and Lopes, 2011),Bat Algorithm (BA) (Yang, 2010), Evolucao Diferencial
(DE) (Price et al., 2005), Otimizacao por Colonia
de Formigas (ACO) (Dorigo and Stutzle, 2004),
dentre varias outras.
Quando se busca otimizar um problema com
metodos de CE, uma das escolhas mais importantes e a codificacao do problema, que e a forma
de representacao numerica de uma solucao candidata. Usualmente, para o projeto_de_filtros_digitais, cada solucao e representada pelos coeficientes
do filtro (Pan, 2011 Chen and Chen, 2006 Gao
et al., 2008). Porem, esta abordagem gera alguns
problemas que podem ser resolvidos com uma codificacao melhor.
O objetivo deste trabalho e apresentar uma
nova codificacao para o projeto_de_filtros_digitais com metodos de Computacao Evolucionaria, e
comparar o desempenho obtido com a codificacao
mais utilizada na literatura.
Na Secao 2 e feita uma breve revisao teorica
sobre os filtros_digitais IIR, o algoritmo PSO, e os
trabalhos da literatura que utilizam tecnicas de
CE para o projeto_de_filtros_digitais. Na Secao 3,
e apresentada a nova abordagem proposta, suas
implicacoes e vantagens esperadas, assim como os
experimentos realizados para avaliar seu desempenho. Por fim, a Secao 4 mostra os resultados
obtidos, assim como as conclusoes tiradas a partir
destes.
2
2.1

Fundamentacao Teorica

Filtros Digitais

Filtros digitais sao sistemas que efetuam uma serie
de operacoes matematicas em um sinal digital discreto, de modo a amplificar ou atenuar determinadas caractersticas deste sinal (Diniz et al., 2004).
Como sao geralmente sistemas_lineares invariantes no deslocamento (LSI), diversas propriedades
observadas no estudo destes sistemas sao aplicaveis neste caso. Entre as mais importantes estao a
total representacao do sistema atraves de sua resposta ao impulso, e o criterio para a avaliacao da
estabilidade.
Um sistema LSI pode ser representado por
uma equacao de diferencas (Hamming, 1997), no
formato mostrado na Equacao 1.
N
X

ai y(n  i) 

i0

ISBN 978-85-8001-069-5

M
X
l0

bi x(n  l)  0

(1)

Em geral, deseja-se calcular a sada atual do
sistema, chamada de y(n). Isolando-se y(n) na
Equacao 1, obtem-se a Equacao 2 (considerandose a0  1).
PM
l0 bi x(n  l)
y(n)  PN
i1 ai y(n  i)

(2)

Como essa equacao descreve totalmente o sistema (Hamming, 1997) e tanto os valores x quanto
y sao de amostras alheias ao sistema em si, tem-se
que o sistema tambem pode ser totalmente caracterizado pelos vetores de coeficientes ak e bk , que
multiplicam respectivamente as amostras de sada
e de entrada.
Estes vetores e equacoes descrevem o funcionamento do filtro no domnio do tempo_discreto.
Este formato e importante para a implementacao
do filtro, mas para o projeto e analise do mesmo,
e muito mais usual a utilizacao da representacao
da resposta do filtro no domnio da frequencia. E
nele que sao especificados os ganhos e faixas do
filtro. Para se calcular esta resposta_em_frequencia, utiliza-se a Equacao 3 (Oppenheim and Schafer, 1989).
PM 1
b(k)ejk
H(ej )  Pk0
N 1
jl
l0 a(l)e

(3)

Portanto, e a partir dos vetores ak e bk que
se calcula a resposta_em_frequencia de um filtro, e
partir desta resposta_em_frequencia que se avalia
a adequacao dele ao projeto em questao.
2.2

Otimizacao por Enxame de Partculas

A Otimizacao por Enxame de Partculas (PSO)
foi proposta por Kennedy and Eberhart (1995), e
e um algoritmo inspirado no movimento sincronizado de cardumes de peixes e bandos de passaros.
Neste algoritmo, cada solucao candidata e representada por uma partcula, cuja posicao em um
espaco N-dimensional e a representacao numerica
desta solucao. Cada partcula possui tambem velocidade propria e inercia, isto e, a forca da influencia da velocidade atual na mudanca de velocidade na proxima iteracao.
A navegacao do grupo de partculas, tambem
chamado de enxame, e guiada pela melhor solucao
encontrada pelo enxame como um todo, chamado
de maximo social ou gbest, pela melhor solucao
ja encontrada pela propria partcula, chamado de
maximo cognitivo ou lbest, e pela velocidade anterior da partcula. O peso de cada uma destas
solucoes na alteracao de velocidade e posicao das
partculas e dado pelas constantes cg e cl , que regem respectivamente a influencia de gbest e lbest.
A inercia e dada por w, e o tamanho do enxame ou
numero de partculas e chamado de M . Algumas
implementacoes utilizam tambem o pbest, que e o

3353

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

melhor resultado encontrado pelo grupo do qual a
partcula faz parte.
As partculas sao inicializadas com velocidade
e posicoes aleatorias, no incio da execucao. A Figura 1 descreve os passos tomados em cada iteracao, buscando-se otimizar uma funcao f (x).
1
2

3

4
5
6

7
8
9

10
11
12
13
14
15
16
17
18
19
20
21
22

Configura parametros M, cg , cl , w
Inicializa de forma aleatoria o vetor de
posicao das partculas xi 
Inicializa de forma aleatoria o vetor de
velocidade das partculas vi 
 i  xi 
Inicializa o vetor lbest

Encontra o otimo global gbest
while Criterio de parada nao for satisfeito
do
for cada partcula i do
atualiza velocidade
 
vi  w  vi + cg  rand  (gbest
  xi )
xi ) + cl  rand  (lbest
atualiza posic
ao
xi  xi + vi 
 i ) then
if f (xi ) > f (lbest
atualiza lbest
 i  xi 
lbest
end if

if f (xi ) > f (gbest)
then
atualiza gbest
  xi 
gbest
end if
end for
end while
Pos-processamento e visualizacao de dados
Figura 1 Otimizacao por Enxame de
Partculas (PSO)

A equacao mostrada na linha 9 do Algoritmo 1
diz respeito a velocidade da partcula, que e o nucleo da heurstica do PSO. Seu efeito e levar a
partcula a ser atrada ao mesmo tempo para o
gbest e para o lbest, balanceando a relacao entre
busca global e busca local, respectivamente, pelas
constantes cg e cl .
2.3

Trabalhos Relacionados

No artigo de Chen and Chen (2006), e proposta
uma modificacao no algoritmo PSO para a evolucao de filtros_digitais IIR. Esta modificacao busca
calibrar a busca do algoritmo alterando a enfase
entre local e global. O objetivo e fazer com que
partculas com boas solucoes efetuem uma busca
mais local, enquanto partculas com baixo fitness,
que provavelmente estao em vizinhancas de baixa
qualidade, efetuem sua busca de forma global,
para explorar melhor o espaco. Para avaliar a qualidade destas modificacoes, foi analisado o desem-

ISBN 978-85-8001-069-5

penho dos algoritmos em problemas de benchmarking, e na identificacao de filtros IIR. Os resultados encontrados sao melhores do que os de outras
variacoes do PSO inclusive o canonico, mas nao e
feita uma comparacao com metodos classicos de
calculo de filtro.
Ja em Gao et al. (2008), a modificacao feita
e chamada de CPSO, ou Chaotic PSO. Nela, e
inserido um fator caotico em vez de aleatorio no
calculo da velocidade das partculas. Alem disto,
sao geradas varias populacoes iniciais em vez de
apenas uma, e a melhor delas e selecionada para
ser trabalhada pelo algoritmo. O resultado do
CPSO e comparado apenas com o PSO canonico
e com a resposta ideal de cada filtro. Ou seja,
como nao e mostrado o desempenho de um metodo como Chebyshev ou Butterworth em comparacao com o obtido pelo CPSO, nao e possvel
saber se ha alguma vantagem nesta proposta, ja
que o custo_computacional e obviamente maior.
Porem, o CPSO mostrou desempenho melhor do
que o PSO canonico.
A introducao de fatores caoticos e novamente
utilizada em Jia et al. (2009). Aqui, e utilizada a
chamada mutacao caotica, em que a melhor partcula de cada iteracao sofre mutacao de forma caotica, para melhorar a busca local do algoritmo.
O resultado e comparado com o do PSO canonico, assim como com o dos metodos de Butterworth, Chebyshev tipo I e Chebyshev tipo II.
Embora o CPSO tenha sido superado apenas pelo
Chebyshev tipo II, apenas um filtro e utilizado
para este teste. Sendo assim, e difcil dizer se o
metodo realmente e satisfatorio.
Outra variacao do PSO utilizada para o calculo de filtros IIR e o PSO-QI, proposta em Luite
and Venayagamoorthy (2008). Nela, as partculas do PSO sao tratadas como partculas da fsica
quantica, em que velocidade e posicao nao podem
ser determinadas com precisao ao mesmo tempo.
Desta forma, as partculas sao representadas por
uma funcao de densidade de probabilidade, que resulta na probabilidade de uma partcula estar em
determinada posicao num determinado instante.
Esta abordagem mostrou resultados melhores que
o PSO, mas nao foi comparada com metodos fortes de calculos de filtros.
Um estudo mais profundo da evolucao de filtros e feita em Pan (2011). Aqui, a evolucao de
filtros IIR e testada utilizando PSO, AG, Evolucao
Diferencial (DE) e uma versao modificada do AG
chamada de Improved Genetic Algorithm (IGA).
O autor deduz um metodo de verificacao de estabilidade que exige menos esforco computacional,
e compara o desempenho de todos os algoritmos.
Porem, apenas filtros de segunda ordem sao utilizados nos experimentos, tornando os problemas
simples de serem resolvidos por otimizacao numerica. Outro problema e a ausencia de comparacao com os metodos classicos, que daria uma real

3354

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

medida da qualidade dos resultados obtidos pelos
algoritmos.
Em Yu et al. (2009), e proposto um PSO com
esquema adaptativo para o momento de inercia.
Nele, cada partcula possui um momento de inercia proprio, baseado em seu fitness e corrigido por
uma funcao sigmoide. De forma similar a proposta de Chen and Chen (2006), o objetivo e dar
enfase a busca local nas proximidades das melhores solucoes encontradas, e utilizar as partculas
em vizinhancas ruins para explorar o espaco de
busca de forma mais global. O algoritmo proposto
e chamado de AIW-PSO, e apresentou resultados
melhores do que o PSO canonico. Porem, o resultado nao foi comparado com filtros obtidos pelos
metodos classicos.
O trabalho de Zhang et al. (2010) propoe um
esquema de redistribuicao de partculas em caso
de convergencia prematura. Esta redistribuicao
nada mais e do que a reinicializacao das partculas, chamada em outros trabalhos de explosao.
Neste artigo, o criterio utilizado para a deteccao
de convergencia e a distancia media entre cada
partcula e o melhor resultado encontrado. O resultado desta proposta, chamada de RPSO, e comparada com o PSO canonico, QPSO, CPSO e o
algoritmo de Cultura Diferencial (DC). O RPSO
alcancou melhores resultados, mas estes nao foram
comparados com metodos fortes.
Observou-se em todos estes trabalhos que usualmente o projeto_de_filtros_digitais e utilizado
apenas como um problema de benchmark, em vez
de um problema de engenharia. Raramente os resultados sao comparados com os obtidos com um
metodo especialista, e a estabilidade do filtro condicao essencial para sua utilizacao - tambem
costuma ser desprezada.

3

Metodologia

Ao aplicar-se metodos de Computacao Evolucionaria na resolucao_de_problemas numericos, duas
escolhas possuem o maior impacto na eficacia do
algoritmo o calculo de fitness e a codificacao. O
primeiro e a forma de mensurar a qualidade de
uma dada solucao, e a segunda e a forma de representacao desta dada solucao.
Em filtros_digitais, o calculo de fitness mais
usual e atraves do erro quadratico medio (MSE)
da resposta_em_frequencia do filtro em relacao
a resposta ideal. Ha outras formas de avaliar
a qualidade de um filtro (de Oliveira, Scalabrin, Teodoro, Parpinelli and Lopes, 2011 de Oliveira, 2011), mas a discussao destas nao esta no
escopo deste trabalho. Portanto, para que os resultados das modificacoes propostas nestes trabalhos possam ser comparados com resultados encontrados na literatura, o calculo de fitness sera
feito pela MSE, como descrito na Equacao 4.

ISBN 978-85-8001-069-5

f (x) 

N
X
Y (i)  X(i)2
i1

N

(4)

onde f (x) e o fitness da solucao x, Y (i) e a resposta do filtro ideal, X(i) e a resposta_em_frequencia de x, e N e o numero de amostras a ser considerado nas respostas em frequencia.
A codificacao utilizada em todos os trabalhos
encontrados na literatura foi a codificacao por coeficientes. Ou seja, cada filtro e representado pelos
vetores ak e bk utilizados na implementacao do
filtro, como mostrado na Equacao 2. A vantagem
desta codificacao e que o calculo da resposta em
frequencia vem diretamente deste vetores. Portanto, sao necessarios poucos calculos para comparar a resposta do filtro proposto com a resposta
do filtro ideal.
Porem, esta abordagem apresenta alguns problemas. O primeiro e a faixa de valores e a precisao de cada coeficiente. Os valores dos coeficientes podem ser extremamente dspares, com alguns
sendo 100 vezes maiores que outros. E possvel
normalizar os coeficientes, mas isso pode implicar
em uma necessidade elevada de precisao.
Em algoritmos discretos como o AG tradicional, esse aumento de precisao acarreta num grande
aumento do espaco de busca, elevando a complexidade do problema, o esforco computacional e o
tempo necessario para concluir o projeto do filtro.
Alem disso, este aumento do espaco de busca pode
levar o algoritmo a ficar preso em mnimos locais
mais facilmente.
Alem da dificuldade de se estabelecer os limites e precisao do espaco de busca, ha um problema
muito maior, que e a estabilidade do filtro. Um
filtro IIR e estavel quando todas as razes do polinomio formado pelo vetor ak tem modulo menor
do que 1, ou seja, estao dentro do crculo de raio
unitario no plano z. Portanto, para descobrir se
um filtro e estavel ou nao  e portanto, utilizavel ou nao  e necessario calcular as razes deste
polinomio.
A estabilidade do filtro e um criterio comumente chamado em CE de restricao (Goldberg,
1989). A princpio, a funcao de fitness nao leva
em conta o atendimento ou nao a restricao. Para
isso, em geral sao utilizadas penalidades, que sao
redutores de fitness. Porem, esta solucao nao e
muito boa nada garante que ao final do processo
evolutivo havera um filtro estavel, e a forma de
aplicacao destas penalidades necessita de estudos.
Seria possvel zerar o fitness das solucoes invalidas, mas esta abordagem costuma atrapalhar a
evolucao. O metodo que costuma apresentar melhores resultados e a de punir proporcionalmente a
gravidade da desobediencia a restricao. Por exemplo, poderia ser avaliado o numero de polos causadores de instabilidade, ou a distancia deles ao
crculo de raio unitario, entre outros. Ainda as-

3355

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

sim, nada garantiria que um filtro estavel seria
atingido ao final do algoritmo.
3.1

Codificacao por polos e zeros

Melhor do que aplicar penalidades, e alterar a codificacao de forma que somente solucoes validas
sejam representaveis. Ou seja, o novo espaco de
busca e um sub-espaco do original, contendo todas e apenas as solucoes estaveis possveis. Neste
problema, isso e possvel representando os filtros
atraves de seus polos e zeros, ao inves de seus coeficientes. Desta forma, limitando-se o modulo dos
polos e zeros em 1, garante-se que apenas filtros
estaveis sejam representaveis, e todos eles estao
contidos no espaco de busca. A Figura 2 mostra
um exemplo de diagrama de polos e zeros de um
filtro.

Figura 3 Codificacao proposta

Cada par de valores MxnAxn equivale respectivamente ao modulo e angulo de um polo ou zero.
Como citado anteriormente, cada polozero tem
seu conjugado implcito, entao cada par de valores reprenta um par de polos ou um par de zeros.
Os valores de Mxn sao limitados entre 0 e 1,
para garantir a estabilidade do filtro. Os angulos poderiam variar entre  e , mas isto nao
e necessario pelo seguinte motivo qualquer valor
de angulo negativo teria o mesmo efeito de um
angulo positivo. Isto ocorre pelo conjugado implcito, ja que o angulo do conjugado de um numero
complexo e o angulo original com o sinal invertido.
Logo, representar cada valor Axn entre 0 e  ja e
suficiente. Para fins de padronizacao, este valor
sera normalizado entre 0 e 1. Desta forma, todo o
vetor e composto por valores normalizados entre
0 e 1.
Como nao e possvel calcular a resposta em
frequencia do filtro diretamente atraves dos polos
e zeros, e necessario primeiro converter estes valores nos coeficientes da funcao de transferencia.
Esta conversao e feita atraves da Equacao 5.
H(z)  N
i1

Figura 2 Diagrama de polos e zeros
Em um primeiro momento, a solucao mais obvia seria representar cada polozero por seu modulo e angulo. Porem, para que um filtro seja realizavel, todos os seus coeficientes deve ser numeros
reais. Para que esta condicao seja alcancada, todos os polos e zeros do filtro que sejam complexos
necessitam de outro polo ou zero conjugado. Por
exemplo, um filtro com um polo em 0, 3 + j0, 4 so
seria realizavel se tambem houvesse outro polo em
0, 3  j0, 4.
Com isso, ha um problema equivalente ao da
codificacao por coeficientes apenas uma fracao do
espaco de busca e valido. Seria novamente necessario aplicar penalidades, o que anularia as vantagens geradas pela nova representacao. A solucao
encontrada tambem e relacionada a codificacao.
Basta que cada polo ou zero tenha seu conjugado
implcito. Ou seja, se a codificacao diz que o filtro
possui um polo em 0, 4 + j0, 6, ele automaticamente possui outro polo em 0, 4  j0, 6. Dessa
forma, qualquer valor representavel na codificacao gerara um filtro realizavel. A Figura 3 mostra
como isto se organiza.
A primeira metade dos valores diz respeito aos
polos, e a segunda metade diz respeito aos zeros.

ISBN 978-85-8001-069-5

(z  ai )
(z  pi )

(5)

onde ak sao os zeros e pk sao os polos. A partir
do vetor codificacao, e possivel demonstrar que a
conversao fica como na Equacao 6.
N

H(z) 

2
Y
z 2 + z  M Zi  2  cos(  AZi ) + M Z 2

i

z 2 + z  M Pi  2  cos(  APi ) + M Pi2
i1
(6)
onde cada par moduloangulo gera um par de polos ou zeros, ou seja, uma secao de segunda ordem
do filtro. O produto destas secoes e o filtro completo.
Com os polinomios da funcao de transferencia (ou seja, os vetores de coeficientes ak e bk )
calculados, ja e possvel descobrir a curva de resposta_em_frequencia, e com isso calcular o fitness.
Porem, mais um passo e necessario. Quando se
especifica os ganhos de um filtro, o que realmente
importa e a diferenca entre os ganhos na banda
de passagem e na banda de rejeicao, pois e trivial modificar ambos basta multiplicar a funcao
de transferencia pelo ganho desejado. Portanto,
os filtros calculados terao seu ganho normalizado
antes do calculo do fitness. O ganho geral do filtro

3356

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

sera dividido pelo ganho maximo, resultando em
um ganho maximo de 1V V ou 0dB.
4

Experimentos e Resultados

Para avaliar o desempenho da codificacao proposta, foram utilizados 3 especificacoes diferentes de filtros, retirados da literatura (Diniz et al.,
2004). A especificacao de cada um esta mostrada
na Tabela 1. Esta tabela mostra os 6 conjuntos de
experimentos realizados, que sao os 3 filtros com
as 2 diferentes codificacoes.
Foi utilizado o PSO canonico com os parametros padrao (cg  2, 0 cl  2, 0   0, 5), com
tamanho do enxame M  100 particulas e numero de iteracoes N  1000. Cada configuracao
foi executada 30 vezes, para que o desempenho
medio seja obtido. Isso e necessario pois o PSO
e um algoritmo estocastico, e portanto cada execucao fornece resultados diferentes. Alem disso, a
funcao de fitness foi normalizada e transformada
em maximizacao, ja que o PSO canonico e maximizador. A transformacao utilizada e mostrada
na Equacao 7.
f itness(x) 

1
1 + M SE(x)

(7)

onde x e a solucao proposta, e MSE e o erro quadratico medio da resposta_em_frequencia em relacao a resposta ideal do filtro especificado.
Para a codificacao por coeficientes, e necessario aplicar penalidades para a instabilidade. A
funcao destas penalidades e guiar o algoritmo para
solucoes estaveis, ja que as instaveis terao fitness
mais baixo. A funcao de penalidade utilizada e
mostrada na Equacao 8.
p1 

1
1 + Np

As Figuras 4, 5 e 6 mostram as curvas de fitness obtidas pelas duas abordagens. A Figura 4
mostra a evolucao media da melhor partcula nos
experimentos 1 e 2. E possvel perceber que
quando representadas por coeficientes, as solucoes
tendem a convergir mais rapido, mas a qualidade
dos resultados obtidos e bem mais baixa se houver
tempo suficiente para evolurem as solucoes representadas por polos e zeros. O ponto de cruzamento
dos fitness e proximo da iteracao 200.

Figura 4 Media da evolucao do fitness maximo
para os experimentos 1 e 2
Na Figura 5 percebe-se que o algoritmo com a
representacao por coeficientes convergiu muito rapidamente, mas para solucoes de qualidade muito
baixa. Ja com os polos e zeros, o algoritmo sequer
chegou a convergir dentro do limite estipulado de
iteracoes, pois nota-se uma inclinacao na curva de
fitness que sugere um potencial ainda consideravel
de melhora da solucao. Ainda assim, o contraste
na qualidade entre as solucoes e visvel.

(8)

onde p1 e o fator a multiplicar o fitness da solucao, e Np e o numero de polos causadores de
instabilidade, isto e, com modulo maior do que 1.
4.1

Resultados

Os resultados obtidos pelos experimentos sao mostrados na Tabela 2. A coluna referente ao fitness
maximo mostra o melhor resultado encontrado em
todas as 30 rodadas, fitness mnimo e o pior resultado encontrado ao final das rodadas, e fitness
medio e o resultado medio encontrado nos testes,
mostrado juntamente com o desvio padrao. A coluna  mostra a probabilidade de que as medias
sejam as mesmas pelo teste de t-Student. Ou seja,
expressa a chance de que a diferenca observada na
media do fitness obtido seja puramente aleatoria e
nao causada pela codificacao diferente. A coluna
Diferenca mostra o intervalo em que se encontra
a diferenca no fitness medio obtido pela mudanca
de codificacao, com 95 de certeza.

ISBN 978-85-8001-069-5

Figura 5 Media da evolucao do fitness maximo
para os experimentos 3 e 4
Nos experimentos 5 e 6, ambas as codificacoes
parecem ainda ter um certo potencial de melhora
ao final das iteracoes, mas com polos e zeros o desempenho e muito melhor. Este e um filtro mais
difcil do que os experimentos anteriores, pois re-

3357

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

Exp. No
1
2
3
4
5
6

Filtro No
1
1
2
2
3
3

Codificacao
Coeficientes
Polos e Zeros
Coeficientes
Polos e Zeros
Coeficientes
Polos e Zeros

Ordem
6
6
6
6
4
4

p
0,45
0,45
0,8
0,8
0,08
0,08

r
0,5
0,5
0,85
0,85
0,1
0,1

Ap dB
1
1
1
1
1
1

Ar dB
-30
-30
-30
-30
-30
-30

Tabela 1 Experimentos de codificacao
Exp. No
1
2
3
4
5
6

Fitness maximo
0,7904
0,9713
0,5588
0,8850
0,7371
0,8841

Fitness mnimo
0,3114
0,8434
0,1564
0,1631
0,0689
0,2010

Fitness medio
0,5769  0,1449
0,9438  0,0299
0,2182  0,1066
0,7094  0,2843
0,3494  0,1586
0,7775  0,2062



Diferenca

8,45e-14

(0,3101 0,4237)

1,36e-9

(0,3759 0,6065)

3,89e-8

(0,2222 0,3923)

Tabela 2 Resultados dos experimentos de codificacao
quer um roll-off muito acentuado. Isto explica a
necessidade de um tempo maior para a convergencia, mas a Figura 6 deixa implcito que a codificacao por coeficientes nao chegara perto de atingir
o resultado obtido com polos e zeros, mesmo com
um grande numero de iteracoes.

tabilidade do filtro. Com a nova codificacao, e
impossvel obter um filtro instavel.
Mesmo sem a realizacao de um ajuste dos
parametros do PSO, os filtros encontrados tiveram respostas satisfatorias. Trabalhos futuros investigarao o desempenho desta nova codificacao
em comparacao com metodos especialistas, assim
como melhores conjuntos de parametros do PSO.
Outros algoritmos evolucionarios tambem devem ser avaliados, assim como os respectivos parametros de configuracao que fornecam os melhores
resultados.
Referencias
Chen, H.-C. and Chen, O. T.-C. (2006). Particle swarm optimization incorporating a preferential velocity-updating mechanism and its
applications in IIR filter design, IEEE International Conference on Systems, Man, and
Cybernetics 1 11901195.

Figura 6 Media da evolucao do fitness maximo
para os experimentos 5 e 6
A Figura 7 mostra os filtros medios obtidos
pelas duas abordagens. O filtro medio foi definido como sendo o filtro obtido cujo fitness mais
se aproximou do fitness medio obtido em todas
as rodadas. Desta forma tem-se um filtro existente cujo desempenho reflete o desempenho do
algoritmo como um todo.
5

Conclusoes

A abordagem proposta mostrou resultados muito
melhores do que a codificacao tradicional. Trabalhos na literatura forneceram resultados aparentemente melhores em um primeiro momento, mas
praticamente nenhum leva em consideracao a es-

ISBN 978-85-8001-069-5

de Oliveira, D. R. (2011). Projeto de filtros_digitais iir com tecnicas de computacao_evolucionaria, Masters thesis, Universidade Tecnologica Federal do Parana.
de Oliveira, D. R., Parpinelli, R. S. and Lopes,
H. S. (2011). Bioluminescent swarm optimization algorithm, in E. Kita (ed.), Evolutionary Algorithms, InTech, pp. 6984.
de Oliveira, D. R., Scalabrin, M. H., Teodoro,
F. R., Parpinelli, R. S. and Lopes, H. S.
(2011). Comparacao de tecnicas de computacao_evolucionaria para o projetos de filtros
digitais de resposta finita ao impulso, in H. S.
Lopes and R. Takahashi (eds), Computacao
Evolucionaria em Problemas de Engenharia,
Omnipax, pp. 107128.

3358

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

(a) Filtro 1

(b) Filtro 2

(c) Filtro 3

Figura 7 Filtros Obtidos
Diniz, P., da Silva, E. and Netto, S. (2004).
Processamento Digital de Sinais  Projeto e
Analise de Sistemas, Bookman.
Dorigo, M. and Stutzle, T. (2004). Ant Colony
Optimization, MIT Press.
Gao, Y., Li, Y. and Qian, H. (2008). The design
of IIR digital filter based on chaos particle
swarm optimization algorithm, Second International Conference on Genetic and Evolutionary Computing 1 303306.
Geem, Z., Kim, J. and Loganathan, G. (2001). A
new heuristic optimization algorithm Harmony search, Simulation 76(2) 6068.
Goldberg, D. (1989). Genetic Algorithms in Search, Optimization and Machine Learning,
Addison-Wesley, Reading, MA.
Hamming, R. (1997). Digital Filters, 3rd edn, Dover Publications, Mineola, NY.
Jia, D., Jiao, Y. and Zhang, J. (2009). Satisfactory design of IIR digital filter based on chaotic mutation particle_swarm_optimization,
Third International Conference on Genetic
and Evolutionary Computing 1 4851.
Kennedy, J. and Eberhart, R. (1995). Particle swarm optimization, Proc. of IEEE International Conference on Neural Networks
4 19421948.

Luite, B. and Venayagamoorthy, G. K. (2008).
Particle swarm optimization with quantum
infusion for the design, IEEE Swarm Intelligence Symposium 1 18.
Oppenheim, A. and Schafer, R. (1989). DiscreteTime Signal Processing, Prentice-Hall.
Pan, S.-T. (2011). Evolutionary computation
on programmable robust IIR filter poleplacement design, IEEE Transactions on Instrumentation and Measurement 60 1469
1479.
Price, K., Storn, R. and Lampinen, J. (2005). Differential Evolution A Practical Approach to
Global Optimization, Springer.
Yang, X.-S. (2010). A new meta-heuristic batinspired algorithm, Natured Inspired Cooperative Strategies for Optimization 1 6574.
Yu, X., Liu, J. and Li, H. (2009). An adaptive inertia weight particle_swarm_optimization algorithm for IIR digital filter, International Conference on Artificial Intelligence and
Computational Intelligence. 1 114118.
Zhang, X., Jia, P. and Guo, J. (2010). An improved particle swarm optimizer for IIR digital
filter design, International Conference on Intelligent Systems and Knowledge Engineering
1 191196.

Koza, J. (1992). Genetic Programming on the
programming of computers by means of natural selection, Cambridge MIT Press.

ISBN 978-85-8001-069-5

3359