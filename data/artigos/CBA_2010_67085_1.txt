XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

PLATAFORMA PARA PROTOTIPAÇÃO RÁPIDA DE CONTROLADORES PID E NEBULOSO EM FPGAS
DAVI N. OLIVEIRA, ARTHUR P. S. BRAGA, OTACÍLIO M. ALMEIDA
Grupo de Pesquisa em Automação e Robótica, Depto de Engenharia Elétrica, Universidade Federal do Ceará
Caixa Postal 6001, 60.020-181 Fortaleza, CE, BRASIL
E-mails davi,arthurp,otacilio@dee.ufc.br

Abstract
 The FPGAs (Field Programmable Gate Arrays) are reconfigurable logic device that provides mainly practicality and
portability, with low consumption of energy, high speedy of operation and large capacity of data storage. These characteristics,
combined with the ability of synthesizing circuits, make FPGAs powerful tools for project development and prototyping of digital controllers. Studies have been developed with the use of FPGAs to implement various types of controller, such as PID and
FUZZY, using the techniques of discrete control. During implementation and testing is important that the time needed between
tests (setup time) is reduced and its desirable a good tool for acquiring and comparing the results of tests performed. This paper
presents a platform composed of a development FPGA kit, simulation and data analysis systems, and an interface circuit with
the plant under study.
Keywords
 Programmable Logic Devices, FPGA, Digital Control, PID Controller, Fuzzy Controller.
Resumo
 Os FPGAs (Field Programmable Gate Arrays) são dispositivos lógicos reconfiguráveis que permitem grande praticidade e portabilidade, baixo consumo_de_energia, alta velocidade de operação e grande capacidade de memória. Tais características, aliadas  capacidade de sintetização de circuitos, fazem os FPGAs ferramentas poderosas para o desenvolvimento de projetos e protótipos de controladores_digitais. Trabalhos vêm sendo desenvolvidos com a utilização de FPGAs para implementação
de diversos tipos de controlador, como PID e FUZZY (Nebuloso), utilizando as técnicas de controle_discreto. Na fase de implementação e testes é importante que o tempo demandado entre os ensaios (tempo de ajuste) seja reduzido e que haja uma boa ferramenta para aquisição e comparação entre os resultados dos ensaios realizados. Este artigo apresenta uma plataforma composta
por uma placa de desenvolvimento de FPGAs, sistemas de simulação e análise dos dados e um circuito de interface com a planta
em estudo.
Palavras-chave
 .
A lógica_nebulosa formaliza uma metodologia
para representar, manipular e implementar controle
de sistemas baseados em conhecimento heurístico.
Controladores nebulosos têm robustez e baixo_custo
como características inerentes (Passino, 1998). Existem publicações de uma série de aplicações bem sucedidas que confirmam a capacidade de controladores_nebulosos (Yen et al., 1995, Zhu et al.,2005).
Para o desenvolvimento e implementação de
controladores_nebulosos, robustez e capacidade de
processamento em tempo_real são características apreciadas. Os FPGAs apresentam uma boa alternativa
para o desenvolvimento e aplicação de novos algoritmos de controle por permitirem rápida elaboração
de protótipos e possuírem capacidade de comportar
projetos de sistemas com grande complexidade de
hardware. Esses dispositivos tem sido utilizados em
aplicações reais e complexas (Vega-Rodrigues et al.,
2004) devido a rapidez na realização dos testes, simplicidade de modificação, simulação e atualização da
aplicação a partir de um único software. Além disso,
para implementações de controle_nebuloso, que podem ser baseadas em software ou hardware, os FPGAs representam uma alternativa que combina alta
velocidade de processamento e desempenho de
hardware, com a flexibilidade para alteração da descrição dos circuitos. Pesquisas a cerca desse dispositivo tem tido grande desenvolvimento e contribuição

1 Introdução
Os FPGAs (Field Programmable Gate Array)
(Monmasson e Cirstea, 2007) possuem grande potencial para utilização em sistemas_de_controle pela característica de permitir o desenvolvimento de protótipos velozes e com grande complexidade de hardware. Um sistema inteligente contido em um único chip
contendo toda a funcionalidade de um controlador
nebuloso e interfaces necessárias para o controle de
um sistema de balanço horizontal foi desenvolvido.
Sistemas de controle_nebuloso representam uma
alternativa prática para o desenvolvimento de uma
grande variedade de aplicações de controle, sendo
capazes de controlar sistemas_não-lineares utilizando
informações heurísticas fornecidas de maneira intuitiva pelo programador.
Este artigo apresenta a descrição do algoritmo de
controle_nebuloso implementado em linguagem
VHDL (Linguagem descritiva de alto nível para circuitos integrados de alta velocidade). O algoritmo foi
aplicado em um FPGA. Além do controlador_nebuloso também foi implementado um controlador PID
para utilização dos resultados dos ensaios como parâmetro de referência. Durante o desenvolvimento
dos trabalhos dois modelos de controlador PID foram
elaborados. Um utilizando linguagem VHDL e outro
diagrama_de_blocos. A técnica de ajuste do controla-

3065

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

analógico Video Graphics Array (VGA). O FPGA
empregado é o EP2C20F484C7 fabricado pela Altera.
Em um sistema para aplicações no desenvolvimento de projetos em geral, robustez, baixo_custo,
capacidade de processamento em tempo_real são características desejáveis. Os FPGAs representam uma
boa alternativa. Esses dispositivos têm sido utilizados
em diversas aplicações com processamento e simulação_em_tempo_real (Vega-Rodrigues et al., 2004).

para o campo acadêmico, como também para a área
industrial.
Existe um grande número de contribuições sobre
aplicações de FPGA em diferentes áreas (Ali et al.,
2004 Romero-Troncoso et al., 2004 MendonzaJasso et al., 2005). Também existem contribuições
sobre implementação de controladores_nebulosos em
hardware (Cabrera et al., 2004).
A plataforma desenvolvida visa também suprir
carências na área de ensino e pesquisa, se mostrando
uma ferramenta para o desenvolvimento e implementação de controladores, interface com dispositivos
FPGA, simulação em plantas de teste e integração
entre os elementos anteriores e softwares de engenharia como o Matlab.
A abordagem proposta neste artigo está focada
na descrição das etapas seqenciais e concorrentes
realizadas por controladores_nebulosos implementadas em FPGA com o objetivo de obtenção de uma
solução de engenharia completa em um único circuito
integrado, especificamente para o controle_de_posição
de um sistema de balanço horizontal.
Como o circuito não é linear e não é de primeira
ordem, já era esperado que os resultados obtidos com
o controlador PID simples não obtivesse a otimização
máxima. Um método de adaptação deste tipo de controlador pode ser obtido posteriormente como resultado secundário da pesquisa.
O restante deste trabalho está organizado conforme segue a Seção 2 descreve o hardware da plataforma, a Seção 3 traz um embasamento teórico dos
pontos principais e exemplifica a implementação dos
controladores na plataforma, a Seção 4 traz resultados experimentais, a Seção 5 disserta sobre as conclusões obtidas até esta etapa da pesquisa.

Figura 1. Kit Altera Cyclone II

2.1 Planta de testes
Uma estrutura composta por uma haste com eixo
giratório e um motor_de_corrente_contínua instalado
em uma das extremidades, chamada de pêndulo amortecido (Figura 2). O sistema é composto de um
pêndulo, motor CC e hélice, além de potenciômetro
acoplado ao eixo para indicação da posição_angular
do pêndulo. Dois circuitos foram elaborados. O primeiro é composto por um conversor AD para condicionar o sinal enviado pelo potenciômetro ao FPGA.
O segundo circuito possui componentes para comando do motor com isolamento elétrico.

2 A Plataforma
A primeira parte deste trabalho consistiu-se em
desenvolver um código próprio do controlador_nebuloso que pudesse ser comparado com uma ferramenta
já consolidada para validação dos resultados. Como
ferramenta de validação foi utilizado o Fuzzy Logic
ToolboxTM do Matlab. O código próprio do controlador_nebuloso foi desenvolvido em linguagem
MATLAB e ordenados em arquivos M-file utilizando
o editor de texto nativo para posterior utilização como bloco de função ou comando.
2.1 Kit FPGA
O kit Cyclone II FPGA Starter Development Board possui diversos periféricos que fornecem um ambiente eficaz para o desenvolvimento de projetos.
Periféricos como chaves, LEDs e dois headers conectados a 72 pinos de uso geral são os elementos
comumente utilizados. O kit ainda dispõe de controle
serial, controlador USB, memórias (SRAM, SDRAM
e Flash), geradores de clock (50MHz, 27MHz e
24MHz), codec de áudio e conversor digital-

Figura 2. Sistema balanço horizontal

O desenho esquemático dos circuitos é ilustrado
na Figura 3. O conjunto está conectado a uma placa
de aquisição_de_dados e controle através de entradas
e saídas analógicas e digitais. Os pontos de aquisição

3066

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

estão conectados ao FPGA para captação dos sinais
de referência, resposta do sistema e ação de controle.
Para documentar os ensaios, uma placa da National
Instruments está ligada em paralelo com o sistema
para fazer aquisição dos sinais de entrada (controle
do motor) e saída (tensão do potenciômetro) do sistema no MatlabSimulink.
O sensoriamento necessário para realizar o controle do sistema exige a medição da posição do pêndulo. Para a medição do ângulo, foi necessário acoplar ao eixo de rotação do pêndulo um potenciômetro. Assim, podem-se obter sinais de tensão do potenciômetro proporcionais ao ângulo do eixo principal
do sistema de balanço horizontal. A figura 3 ilustra
como foi feito o acoplamento entre o potenciômetro e
o eixo de rotação da planta.
Figura 4. Diagrama esquemático do conversor AD.

Como o controlador não possui a capacidade de
fornecer a potência necessária para o acionamento
diretamente em seus pinos, foi elaborado um circuito
de acionamento. O circuito é composto de um optoacoplador e um transistor conectado diretamente ao
motor. O circuito isola eletricamente as duas partes
controle e acionamento. A figura 5 representa o diagrama de interligação entre o controlador e o circuito
de acionamento.
Figura 3. Acoplamento do potenciômetro ao eixo.

O sistema_de_controle exige que o sinal proveniente do potenciômetro seja condicionado para realizar as aquisições. O elemento principal de condicionamento de sinal do potenciômetro é um conversor
analógico-digital de 8-bits de resolução ADC0808.
2.3 Interfaceamento do Kit com a Planta
O ADC0808 é um componente de baixa potência
para aquisição_de_dados de oito canais de aquisição
que realiza conversão de sinais analógicos, entre os
níveis de referência, para sinais digitais através do
método de aproximações sucessivas. O dispositivo
elimina a necessidade de incorporar ao projeto elementos para ajuste de escala de conversão, sendo
possível o ajuste através dos sinais de controle do
dispositivo. A figura 4 a seguir ilustra o esquema de
ligação do conversor.
Para realizar o acionamento do motor foi realizada abordagem de acionamento por PWM (Pulse
Width Modulation).
O acionamento do motor por PWM, apesar de
trabalhar com modelagem complexa para o motor,
facilita a implementação tendo em vista que o controlador é totalmente digital. Sendo reduzido o número
de canais necessários para o acionamento.
A frequência aplicada ao PWM é regulada a partir de divisores de frequência. O ciclo de trabalho do
PWM é alterado de acordo com o resultado da comparação entre o valor de saída do controlador e o
valor acumulado em um contador.

Figura 5. Diagrama esquemático de acionamento.

As placas do controlador e de interface são conectadas através de um cabo do tipo fita comumente
usado para comunicação de discos rígidos IDE. O
conector de 40 pinos possui conexão com 36 pinos
de entrada_e_saída do FPGA, e também aos sinais de
+5VDC, +3.3VDC e dois pontos para conexão  referência (GND).
3 Controladores PID e Nebuloso
A implementação de controladores PID utilizando dispositivos processadores digitais de sinais
(DSPs) vem se desenvolvendo há um bom tempo e
possui riqueza de artigos publicados. Porém, poucos
trabalhos são encontrados na literatura sobre implementação de controlador PID em FPGA.
Também já existe um número expressivo de aplicações bem sucedidas que confirmam a capacidade
de controladores_nebulosos. Os avanços tecnológicos

3067

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

k p  0,5
 T  10
i

 Td  8
 Ts  0,1

obtidos têm sido empregados em diversas aplicações
comerciais.
As características de desempenho a serem analisadas são tempo de subida, overshoot e erro absoluto.

(7)

3.1O Controlador Proporcional-Integral-Derivativo
(PID)
Discretizando a equação do algoritmo PID de
posição representada em (1) obtém-se o sinal de controle_discreto, mk, a partir de (2). Tendo Sk representado em (3) (Ogata, 1998).
m(t )  k c e(t ) +

kc t
de(t )
e(t )dt + k cTd

Ti 0
dt

(1)

m k  k p e k + k i S k + k d (ek  ek 1 )

(2)

S k  S k 1 + ek

(3)

Figura 6. Diagrama esquemático do controlador PID.

3.2O Controlador Nebuloso

E os novos parâmetros estão relacionados os analógicos da seguinte forma (strm and Hgglund,
1995)

 k p  kc

T

 ki  k c
Ti

Td

k d  k c T

Um típico controlador_nebuloso está representado na Figura 7. Baseado na lógica_nebulosa (Passino
e Yurkovich, 1998), o cerne do controlador está em
sua base de conhecimento, formada por REGRAS
nebulosas que descrevem o comportamento do controlador, e em um sistema de inferência que ativacombina regras conforme as entradas apresentadas
ao controlador. Como as regras e o sistema de inferências utilizam conjuntos_nebulosos (Passino e
Yurkovich, 1998), há a necessidade de transformar
medidas reais em conjuntos_nebulosos (etapa de
NEBULIZAÇÃO), e transformar conjuntos_nebulosos
em
valores
escalares
(etapa
de
DESNEBULIZAÇÃO) para interfacear o sistema de
inferência com um processo a ser controlado.

(4)

Também se pode obter o valor da variação da
variável manipulada em cada instante ao invés de seu
valor absoluto, derivando o algoritmo de velocidade
da equação
mk  mk  mk 1

(5)

mk  ek (k p + k i + k d )  ek 1 (k p + 2k d ) + ek 2 k d (6)

A figura 6 ilustra o diagrama_de_blocos que
compõe
o
controlador
PID.
O
bloco
CONVERSORAD é responsável por todo o controle do conversor analógico digital, que também
fornece o sinal de fim de conversão para ser utilizado
como sinal de estímulo para outras etapas do processo. O bloco NORMALIZA trata-se de um simples
filtro para evitar ruídos de leitura. O bloco
GERADOR é responsável pela formação dos sinais
de referência em forma de uma sequência de degraus.
No bloco PID está contido todo o equacionamento
do controlador em VHDL. Outra implementação em
diagrama_de_blocos com a utilização de flip-flops do
tipo D também está sendo desenvolvida.

Figura 7. Diagrama de blocos de um sistema_nebuloso típico.

Conjuntos nebulosos podem ser interpretados
como uma expansão dos conjuntos clássicos, pois
permitem pertinência parcial de um elemento a um
determinado conjunto ao associar um valor de pertinência ao elemento que varia entre 0 e 1 (DAmore,
1998), (Passino e Yurkovich, 1998). Cada conjunto
nebuloso pode ser descrito por uma função de pertinência,  A ( x)  0,1 , como os conjuntos Negativo,
Zero e Positivo da Figura 8.

Os valores utilizados para a implementação foram

3068

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.


ZCOA 

q

j 1

z j c( z j )

q
j 1

(13)

c( z j )

sendo q é o número de níveis da saída,

z j é o valor

correspondente  saída no nível de entrada j e
c( z j ) representa o valor de pertinência em C.

Figura 8  Funções de pertinência e termos de variável lingísticas.

Operações de união (), interseção () e completo podem ser realizadas nos conjuntos_nebulosos a
partir de suas funções de pertinência conforme as
expressões (8)-(10).

 ( x)  max ( x),  ( x)   ( x)   ( x)

(8)

  ( x)  min   ( x),  ( x)    ( x)   ( x)

(9)

  ( x)  1    ( x)

(10)
Figura 10. Diagrama esquemático do controlador_nebuloso.

Conforme (8) e (9), MAX e MIN podem ser utilizados como conectivos lógicos E (AND) e OU
(OR). Regras podem ser escritas utilizando estes conectivos e conjuntos_nebulosos

Para implementação do algoritmo nebuloso em
VHDL buscou-se seccionar a estrutura do algoritmo
em unidades simples alocadas em processos, aproveitando a capacidade de processamento_paralelo do
FPGA.
Após a declaração das variáveis, dos sinais, e entradas e saídas da entidade é dado início  identificação dos parâmetros de inferência baseados nos pontos determinados para a composição de cada função
de pertinência dos termos. A estrutura de trabalho
permite a utilização de funções de pertinência dos
tipos triangulares ou trapezoidais. Cada termo de
variável linguística é definida por quatro pontos (a, b,
c e d) (Figura 11). Os pontos a e d correspondem 
região onde a pertinência tende a ser nula. Os pontos
c e d correspondem  região onde a pertinência
tende a ser total. A restrição para definição dos pontos está na obrigatoriedade de se obedecer as limitações de magnitude entre os pontos, por exemplo, o
ponto b não pode estar  esquerda do ponto a, o
ponto c não pode estar  esquerda do ponto b e o
ponto d não pode estar  esquerda do ponto c. A
alteração no tipo de função utilizada é realizada com
a equalização dos pontos b e c, assim, a função passa a ser do tipo triangular.

Regra 1 SE X é A1 E Y é B1 ENTÃO Z é C1 (11)
Regra 2 SE X é A2 E Y é B2 ENTÃO Z é C2 (12)
Sendo A1, A2, B1, B2, C1 e C2 conjuntos_nebulosos.
Caso tivermos x0 e y0 como entradas, e seus graus de
pertinência aos termos X e Y representados por
 A1 ( x0 ) e  B1 ( y0 ) para a regra 1. E, similarmente

 A ( x0 )
2

de

e

saída

 B ( y0 )
2

da

para a regra 2. Então, o peso

regra

1   A ( x0 )   B ( y0 ) ,
1

1

1
é
dado
por
onde refere-se ao ope-

rador de conjunção ou MIN. Para a regra 2 temos
 2   A2 ( x0 )   B2 ( y0 ) .
Na etapa de nebulização um valor escalar é convertido em um conjunto nebuloso cuja função de
pertinência é definida através de parâmetros. A figura
9 exemplifica a nebulização para diferentes entradas
de um elemento sensor.

Figura 11  Formato padrão das funções de pertinência.

Com a definição dos pontos da função característica de cada variável lingística são calculados os
coeficientes angulares e lineares das retas que ligam
os pontos a e b, e c e d usando equações de primeiro grau. No FPGA foram inseridos dois processos
para cada variável lingística, uma para a reta ascendente e outra para a descendente.

Figura 9  Nebulização de um valor medido do processo.

A etapa de desnebulização pode ser realizada pelo método da centróide (Passino e Yurkovich, 1998),
no qual a saída escalar é calculada conforme (13).

3069

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

Todo o algoritmo do controlador_nebuloso foi
desenvolvido em linguagem VHDL buscando seccionar ao máximo as etapas do processo e explorar a
capacidade do dispositivo de realizar processamento
paralelo. Assim, o algoritmo foi dividido em diversos
processos, os quais só são executados caso haja alterações em seus sinais de entrada indicados em uma
lista de sensibilidade do processo. Ao ser alterado um
parâmetro existente na lista de sensibilidade, todos os
processos associados de forma direta são executados
e os associados de forma indireta são disparados subsequentemente. Essa abordagem busca maior economia de potência e redução do esforço computacional
necessário. A figura 13 ilustra como os processos
encontram-se associados e o nível de propagação das
alterações no sistema.

Com as equações características definidas é possível obter o valor fuzzyficado das entradas com a
obtenção do valor obtido como resultado da entrada
física sobre a função de pertinência para cada variável lingística. Assim, se o valor de entrada for menor que o ponto a da função de pertinência é atribuído pertinência nula. Se o valor de entrada estiver
entre o ponto a e b, o valor, que vai da pertinência
nula até a pertinência total, é obtido pela função linear ascendente definida pelos pontos. Se o valor de
entrada estiver entre os pontos b e c é atribuída
pertinência total. Se o valor de entrada estiver entre o
ponto c e d, o valor, que vai da pertinência total até
a pertinência nula, é obtido pela função linear descendente definida pelos pontos. Se o valor de entrada
for maior que o ponto d é atribuída pertinência nula.
Como resultado, são gerados os valores fuzzyficados
das entradas para cada função de pertinência.
A composição das regras preestabelecidas é realizada em um processo  parte. Como existe a possibilidade de relacionar a mesma variável lingística de
um conjunto de entrada em mais de uma regra, todas
as regras estão descritas num mesmo processo. Se for
feita opção de relacionar cada variável lingística em
uma única regra, cada regra pode estar contida em
um processo separadamente aumentando o grau de
paralelismo e reduzindo o número de cálculos desnecessários.
Em cada regra é executado o operador E entre
os termos precedentes. Em outras palavras, o menor
valor fuzzyficado encontrado entre as variáveis lingísticas precedentes da regra é armazenado em uma
variável auxiliar.
Para caracterização das variáveis lingísticas dos
conjuntos de saída é realizado procedimento semelhante ao composto para as funções de pertinência de
entrada.
Em seguida, é realizada uma varredura em todo
o conjunto de suporte de saída para composição da
saída do sistema.
Durante a varredura do conjunto de suporte das
funções de pertinência de saída é realizada a comparação entre os valores fuzzyficados resultantes das
regras e os valores fuzzyficados das funções de pertinência de saída conseqente  regra correspondente.
Essa operação equivale  execução do operador OU
entre os conjuntos. Os valores obtidos são utilizados
para o cálculo do valor de saída do algoritmo utilizando o método de defuzzyficação escolhido. Para o
experimento foram utilizados o cálculo de centróide e
o cálculo do máximo das médias.
Um resumo de todas as operações realizadas no
controlador_nebuloso pode ser visto na figura 12.

Figura 13. Associação dos processos.

4 Experimentos com a Plataforma
Após ser gravado o projeto no FPGA e configurar a planta para posição de partida, é dado início 
aquisição_de_dados. Os valores correspondentes 
referência para o controlador, sinal de controle, resposta da planta e tempo de simulação são armazenados em vetores ou em estruturas típicas de aquisição
de dados do Matlab. O sinal de referência para o controlador é gerado pelo FPGA para se obter uma sequencia constante de degraus para comparação entre
os ensaios.
Após a realização do ensaio, os dados são analisados por um algoritmo desenvolvido para identificar
parâmetros como tempo de subida, overshoot e erro
absoluto.
Para o caso de se estar realizando ensaios com o
controlador_nebuloso, o resultado da análise dos dados colhidos alimenta um vetor de função de fitness
para evolução dos parâmetros das funções de pertinência do controlador através de algoritmos_genéticos. Gerando assim, uma nova população para ensaio. Apesar de também ter sido desenvolvida uma lógica para geração da população inicial aleatória de indivíduos para ensaios de controladores_nebulosos, o
processo foi mantido seccionado para permitir que o
usuário ajustasse os parâmetros inicias de teste caso
desejado.
As figuras 14 e 15 ilustram exemplos de ensaios
realizados com os controladores PID e nebuloso implementados em FPGA.

Figura 12. Resumo das operações Nebulosas.

3070

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

5 Conclusão

Controlador PID
120
100

Devido  grande capacidade de processamento,
os FPGAs permitem implementações complexas e
elaboradas, como é o caso da aplicação de controladores (clássicos ou baseados em inteligência_computacional). Vêm se obtendo resultados promissores
com a aplicação de controle_digital, o que expande
ainda mais a aplicabilidade dos FPGAs.
A plataforma desenvolvida já apresenta resultados satisfatórios em cada etapa e permite a integração
de todo o processo, inclusive com o desenvolvimento
de uma interface amigável. Com a utilização do Matlab como intermediário nas etapas de ensaio e evolução, é facilitado o tratamento dos dados por diversas
ferramentas integradas ou externas, bem como a exportação dos dados.
O sistema como um todo possibilita a realização
de ensaios com variações dos parâmetros de controladores (PID e nebuloso) para pesquisa, aplicações
de técnicas de controle e execução de atividades em
disciplinas. Também possibilita experimentos em
bancadas diversas com o limitante da conversão de
sinais para o tipo digital.

80
60
40
20
0

0

10

20

30

40

50

60

70

40

50

60

70

Referência
100
90
80
70
60
50
40

0

10

20

30

Figura 14. Exemplo de ensaio com controlador PID.
Controlador Nebuloso
140
120
100
80
60
40
20

0

10

20

30

40

50

60

70

Referência
100

Agradecimentos

90
80

Os autores agradecem o suporte financeiro da Coordenação de Aperfeiçoamento de Pessoal de Nível
Superior (CAPES).

70
60
50
40

0

10

20

30

40

50

60

70

Referências Bibliográficas

Figura 15. Exemplo de ensaio com Controlador Nebuloso.

Também se encontra em desenvolvimento uma
ferramenta para análise dos dados obtidos. Inicialmente serão avaliados os resultados colhidos através
de uma placa de aquisição_de_dados conforme as características de overshoot, tempo de subida e erro
absoluto para cada ensaio.
No caso específico do controlador_nebuloso já
está incorporada  plataforma um algoritmo para criação das funções de pertinência de forma aleatória.
Com a união das ferramentas desenvolvidas pode-se,
por exemplo, gerar uma população correspondente a
diversos controladores_nebulosos, transferi-los para o
FPGA, realizar os ensaios e avaliar o desempenho
dos controladores gerados. Modelo evolucionário
baseado em algoritmos_genéticos também já foi elaborado para realizar a evolução dos parâmetros dos
controladores_nebulosos através de função de fitness
baseada nos parâmetros resultantes do sistema de
avaliação de performance.
Em estudos posteriores há a intenção de realizar
todo o processo de forma on-line implementada em
FPGA.

Ali, L., Sidek, R., Ishak, Ali, A. M. A., Suparjo, B. S.
(2004). Design of a micro-UART for SoC
application.
Computers
and
Electrical
Engineering, 30, 257268.
strm, K. and Hgglund, T. (1995), PID
ControllersTheory,Design and Tuning, Ed. ISA.
Cabrera, A., Sánchez-Solano, S., Brox, P., Barriga,
A., Senhadji, R., (2004). Hardwaresoftware
codesign of configurable fuzzy control systems.
Applied Soft Computing, 4, 271285.
DAmore, R. (2005). VHDL - Descriçao e sintese de
Circuitos Digitais. Editora LTC.
Mendoza-Jasso, J., Ornelas-Vargas, G., CastaedaMiranda, R., Ventura-Ramos, E., ZepedaGarrido, A., Herrera-Ruiz, G. (2005). FPGAbased real-time remote monitoring system.
Computers and Electronics in Agriculture, 49(2),
272285.
Monmasson, E. e Cirstea, M. N. (2007). FPGA
design methodology for industrial control
systems  a review. IEEE Transactions on
Industrial Electronics, V. 54, N. 4, pp. 18241842.
Ogata, K. (1998). Engenharia de Controle Moderno.
3 Ed. Rio de Janeiro Prentice Hall do Brasil.

3071

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

Passino, K. M. e Yurkovich, S. (1998). Fuzzy
Control, EUA, Addison-Wesley.
Romero-Troncoso, R., Herrera-Ruiz, G., TerolVillalobos, I., Jauregui-Correa, J. C. (2004).
FPGA based on-line tool breakage detection
system for CNC milling machines. Mechatronics,
14, 439454.
Vega-Rodriguez, M. A., Sanchez-Perez, J. M.,
Gomez-Pulido, J. A., (2004). Special issue on
FPGAs
applications
and
designs.
Microprocessors and Microsystems, 28, 193
195.
Yen, J., Langari, R. e Zadeh, L. A. (1995) Industrial
Applications of Fuzzy Logic and Intelligent
Systems. IEEE Press, New York.
Zhu, Z. X., Torisu, R., Takeda, J. I., Mao, E. R.,
Zhang, Q. (2005). Neural network for estimating
vehicle behaviour on sloping terrain. Biosystems
Engineering, 91(4), 403411.

3072