XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

APLICAÇÃO DA COERÊNCIA SEMÂNTICA NA DETECÇÃO DE COLISÕES EM UM SIMULADOR DE ROBÔ
RODRIGO MIGUEL, REJANE G. DOS SANTOS, MARCELO DA S. HOUNSELL, ROBERTO S. U. ROSSO JR.
LARVA  Laboratory for Research on Visual Applications,
DCC  Departamento de Ciência da Computação,
UDESC  Universidade do Estado de Santa Catarina.
Campus Universitário Avelino Marcante, Bom Retiro, Joinville, 89223-100, Brasil
rdgo.miguel,rejigomes@gmail.com, marcelo,rosso@joinville.udesc.br
Abstract 3D articulated robot simulators are those graphical applications that are prune to undesirable and probable collision
situations. For the majority of cases it is necessary to rapidly identify these collisions to avoid damages to the robot, to its envir onment and also to its operator. To detect collisions in these kind of graphical applications this paper presents and tests conven tional algorithms and approaches altogether with a new concept on Collision Detection on virtual environments. Such concept,
named Semantic Coherence, performs an a priori analysis of the virtual environment as a way to foresee situations of guaran teed no collisions whatsoever as well as highly probable collision situations between paired objects. The application has been developed using X3D Virtual Reality (VR) technology and Java standards which rendered an open source, free and portable software. Tests have shown that the Semantic Coherence approach resulted in a reduction of the number of paired tests between vir tual objects when applied alone and, mainly when combined with a Spatial Coherence approach (50.47 of reduction). It was
also found that Semantic Coherence approach complements classical existing approaches for Collision Detection without, how ever, adding an overhear to them.
Keywords  Collision Detection, Semantic Coherence, Simulators, Articulated Robots, Virtual Reality.
Resumo Simuladores 3D de robôs_articulados representam um ambiente gráfico passível de situações prováveis e indesejáveis
de colisão. Na maioria dos casos, necessita-se identificar o mais rápido estas colisões para evitar danos ao robô, ao seu ambiente
e, s vezes, até ao operador. Para detectar a colisão nestes ambientes gráficos este artigo apresenta e testa os algoritmos e estraté gias convencionais junto com um novo conceito para a detecção_de_colisão em ambientes virtuais. Tal conceito, chamado de Co erência Semântica, visa fazer uma avaliação prévia do ambiente_virtual como uma forma de prever casos certos de não colisão
ou situações de maior probabilidade de colisão entre pares de objetos. O sistema foi desenvolvido com tecnologia para Realida de Virtual (RV) X3D e Java, ambas padronizadas, e que geraram um software aberto, gratuito e portátil. Os testes mostraram
que a estratégia da Coerência Semântica apresentou redução do número de testes entre objetos na cena quando aplicada sozinha,
mas, principalmente, quando combinada com a técnica de Coerência Espacial (50,47 de redução). Pôde-se constatar que o
conceito de Coerência Semântica complementa estratégias e técnicas clássicas de otimização do cálculo da Detecção de Colisão
sem, entretanto prejudicar o desempenho daquelas.
Palavras-chave  .

fronteiras ou boundary representations (B-Reps).
Uma imagem do ambiente_virtual Virbot4u pode ser
vista na Figura 1.
O modelo geométrico do simulador é carregado
em um browser X3D a partir de uma aplicação Java.
Esta combinação de tecnologias permite a manipulação do robô através de Cinemática Direta, Cinemática Inversa ou movimentação diretamente na interface
3D. Além disso, é possível manipular a garra com
formas de abordagem pré-definidas ou com orientação fixa. Este simulador permite também a criação de
objetos virtuais fixos na cena.

1 Introdução
A detecção_de_colisão é um problema geométrico
fundamental que existe em diversas aplicações gráficas como CADCAM, simulações dinâmicas de robótica e automação, ambientes virtuais, jogos de computador, etc. Trata-se de um problema não trivial que
tem se caracterizado como um desafio devido ao alto
custo_computacional que demanda.
Os testes de colisão podem ter objetivos diferentes dependendo da necessidade da aplicação. O
teste pode requerer a detecção do contato entre dois
objetos, a distância_euclidiana entre esses corpos ou a
distância de interpenetração entre eles. O cálculo da
distância entre dois corpos, por exemplo, pode ser
útil para o planejamento de movimentações de um
robô.
O conceito que será apresentado neste artigo foi
implementado em um simulador do robô manipulador Scorbot ER-4PC, (Hoss, Hounsell e Leal, 2009).
Este ambiente é freeware e open source e simula um
robô com cinco graus de liberdade e foi modelado
em X3D (Web3d, 2010), uma linguagem que, entre
outras coisas, permite a modelagem geométrica através de objetos poliédricos com representação por

Figura 1. O Simulador Virbot4u (Hoss, Hounsell e Leal, 2009).

1633

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

técnicas que exploram o conceito de Coerência
Temporal são a Sort Moving Boxes (Tropp et
al., 2006) e Sweep and Prune (Cohen et al.,
1994)
 A Coerência Espacial (Klosowski et al., 1998),
(Taddeo, 2005), parte do princípio de que objetos que estão fisicamente distantes não estão em
contato um com o outro, portanto não haveria a
necessidade de testar a colisão entre eles. Sendo
assim, a Coerência Espacial consiste em uma otimização que decompõe ou divide o espaço ocupado pelos objetos, de forma que a colisão só
precisa ser checada entre objetos que estão na
mesma célula de decomposição e portanto, próximos. Algumas técnicas que utilizam o conceito
de Coerência Espacial são as grids (Taddeo,
2005), R-trees (Figueiredo e Fernando, 2003),
octrees (Taddeo, 2005), BSP-trees (Luque et al.,
2006) e árvores K-d (Silva, 2002).
Ainda assim, na detecção_de_colisão entre os
triângulos que modelam geometricamente os objetos,
a complexidade do teste de força bruta é de O(n),
sendo n o número de primitivas não eliminadas nos
testes de coerência.
Para reduzir o número de primitivas testadas,
normalmente são utilizados volumes envolventes
(Bradshaw e OSullivan, 2004). A utilização de volumes envolventes em detecção_de_colisão consiste em
envolver o objeto alvo do teste em um volume convexo de formato geometricamente mais simples (como
uma primitiva). O teste de colisão é feito primeiramente no volume envolvente caso o par de volumes
testados não estejam se colidindo tem-se que as entidade envolvidas também não estão (Lin, 1993). Por
tratarem-se de formas geométricas mais simples, a
detecção_de_colisão nestes volumes também é mais
rápida.
Os volumes envolventes mais utilizados são Esferas (Bradshaw e OSullivan, 2004), Axis Aligned
Bounding Boxes - AABB (Lin e Manocha, 2003) e
Oriented Bounding Boxes - OBBs (Gottschalk,
2000), mas existem também as representações por kDOPs (Discrete Orientable Polytopes) (Lin e Manocha, 2003), Envoltórios Convexos ou Convex Hull
(Mezger, 2005) e, Swept Volumes (Redon, 2005). A
Figura 2 demonstra as técnicas de volumes envolventes AABB e OBB, representadas em 2D para simplificação. Pode-se verificar que os volumes OBBs envolvem melhor os objetos por rotacionarem e transladarem junto com o objeto envolvido e desta forma se
ajustando melhor ao objeto. Entretanto, esta técnica
requer cálculos mais complexos do que os necessários para um volume AABB, por exemplo.
Estes volumes podem envolver o objeto como
um todo ou partes decompostas deste. A partir disto
surge o conceito de hierarquia de volumes envolventes (HVEs). Esta hierarquia é representada na forma de uma árvore, onde a raiz é o volume envolvente
do objeto inteiro e as folhas são os volumes envolventes de suas partes menores (Jiménez et al., 2001).

A tecnologia utilizada no Virbot4u, no caso Java
e X3D, não são consideradas as de melhor desempenho nem em termos gráficos, nem em termos de processamento numérico. Além disso, este ambiente
deve ser executado sobre uma máquina virtual Java
(JVM) o que o torna independente de plataforma e
Sistema Operacional mas, lento para execução se
comparado com uma aplicação desenvolvida em C
ou C++, por exemplo. Portanto, é importante desenvolver técnicas de aumento da eficiência da detecção
de colisão diminuindo a quantidade de testes efetuados, isso aumentará a eficiência da aplicação como
um todo.
Existem certas aplicações (como a de um ambiente robotizado com propósitos educacionais, por
exemplo) em que se deve, sobretudo, identificar se há
(ou não) ocorrência de colisão, pois esta é considerada uma situação de erro. Nestes casos a colisão deve
ser evitada a todo custo (devido  segurança dos
equipamentos e também dos operadores) e não precisa necessariamente ser tratada (como no caso da colisão de uma bola de bilhar durante um jogo). Desta
maneira é importante a identificação da colisão o
quanto antes, pois esta indica um problema e uma necessidade de refazer algum procedimento.
Apesar da importância da detecção_de_colisão
em simuladores deste tipo é fácil encontrar na literatura ambientes que não implementam esta funcionalidade, como é o caso de Rohrmeier (2000) e Demetriou e Lambert (2005).
Este artigo apresenta uma nova abordagem para
os testes de colisão que buscam a detecção do contato entre dois objetos. Tal abordagem foi chamada de
Coerência Semântica. Este artigo está dividido como
segue A seção 2 apresenta uma pesquisa bibliográfica dos conceitos e técnicas relacionados  detecção
de colisão. A seção 3 define o conceito de Coerência
Semântica, e a seção 4 mostra a implementação no simulador Virbot4u e seus resultados comparativos a
outras abordagens de detecção_de_colisão.
2 Conceitos Relacionados
Existem várias técnicas convencionais que podem ser
empregadas para aumentar a eficiência da detecção
de colisão. Estas técnicas se encaixam em duas estratégias clássicas
 A Coerência Temporal (Lin et al., 1997 Li et
al., 2006), explora o fato de que, em um ambiente dinâmico, as características dos objetos não
mudam significativamente entre dois passos de
tempo consecutivos (tipicamente dois frames de
uma animação). Com a Coerência Temporal, as
verificações de colisão podem ser aceleradas utilizando-se das informações das verificações feitas nos passos anteriores. Tipicamente mantémse uma estrutura de dados com as interseções anteriormente calculadas com o objetivo de acelerar o cálculo das próximas interseções. Algumas

1634

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

uma cena específica para auxiliar na tomada de decisões de otimização do teste
de colisão.

A hierarquia pode ser composta de diversos níveis e é
usada como uma forma de simplificação da topologia
do objeto. Os testes são efetuados recursivamente a
partir da raiz da hierarquia. Apenas se os volumes envolventes raízes colidirem, é que é necessário descer
ao próximo nível para testar a colisão com os filhos
(mais detalhadosrefinados) do volume colidente.
Dessa sequência de testes surge uma árvore chamada
de Árvore de Testes de Volumes Envolventes
(ATVE). Com esta técnica é possível eliminar muitos
testes de colisão que seriam necessários para certificar-se de que o objeto todo está livre de colisão.

A partir do momento que a Coerência Semântica
elimina testes desnecessários entre pares de objetos
impossíveis de se colidirem e prioriza os testes entre
pares de objetos com maior probabilidade de colisão,
ela resulta em uma quantidade menor de testes para a
detecção_de_colisão, principalmente nos momentos
onde a colisão efetivamente ocorre. Uma quantidade
menor de testes leva, por sua vez, a um tempo de resposta também menor do simulador.
O conceito de Coerência Semântica não visa
substituir nenhuma das técnicas e estratégias tradicionais existentes, e sim, complementá-las. Esta nova estratégia faz o descarte das colisões impossíveis de
acontecerem e a priorização daquelas com maior probabilidade, a partir daí é necessário a utilização de
um algoritmo que faça a detecção da colisão em si.
O descarte das colisões impossíveis não deve ser
confundido com aquele que é feito pela Coerência
Espacial. Este último é realizado através do cálculo
da distância de separação entre os objetos, como no
caso da subdivisão espacial do ambiente os objetos
que se encontrarem em células de divisão diferentes
não precisarão ser testados. O descarte obtido pela
Coerência Semântica é diferente trata-se de uma decisão obtida através do conhecimento do significado
e da posição relativa entre os objetos na cena.
Um exemplo de descarte é o caso que ocorre entre os elos adjacentes de um braço robótico que estariam quase que sempre numa mesma área do espaço e
então, a divisão espacial os consideraria como casos
de teste. Entretanto, sabe-se antecipadamente que esses elos não colidirão entre si em função da articulação existente e do controle dos limites das juntas no
robô, portanto, é possível descartar esses testes para
todas as situações. De outra forma, os objetos geométricos respectivos seriam considerados como mais
dois objetos que eventualmente seriam testados entre
si, desnecessariamente.

Figura 2. Volume envolvente do tipo (a) AABB, (b) OBB e (c)
esférico.

Assim, quando se faz o projeto de um ambiente
gráfico 3D simulador onde pode ocorrer algum tipo
de colisão, o projetista seleciona uma ou as duas técnicas de coerência eou um tipo de volume envolvente em árvore para tentar alcançar eficiência nos testes.
3 Definindo a Coerência Semântica
O estudo das técnicas_de_otimização do cálculo de
detecção_de_colisão evidencia o fato de que elas são
soluções genéricas e, portanto, não levam em consideração eventuais especificidades da cena. Assim,
deixam de considerar situações onde é possível prever o comportamento do sistema. Como a cena do simulador em questão apresentava características que
repercutiam diretamente sobre o eventual (ou não)
teste de colisão, apareceu uma lacuna a qual este trabalho tenta contribuir com a proposição de uma nova
técnica de otimização da detecção_de_colisão a Coerência Semântica.
A possibilidade de uma avaliação prévia do ambiente_virtual simulado como forma de identificar casos inequívocos de não colisão ou situações de maior
probabilidade de colisão e a avaliação de cada uma
das funcionalidades e significados dos eventos nelas
contidos podem trazer informações valiosas que restrinjam o número de testes de colisão necessário em
determinados momentos ou cenas. Entretanto, este
tipo de análise não está contemplado nem na Coerência Temporal e nem na Coerência Espacial. A partir
desta avaliação, pode-se definir que

4 Implementação da Detecção de Colisão
Para implementação da detecção_de_colisão no Virbot4u foi utilizado o volume envolvente OBB, pois
se conhece antecipadamente as geometrias envolvidas, tanto dos objetos da cena quanto dos elos do
próprio robô. No caso, a maioria dos objetos considerados, ou são primitivas gráficas tem uma aparência
próxima a um retângulo desta forma, uma OBB traria
um bom resultado de encaixe na geometria alvo. Par
construir a OBB, pode-se atribuir AABBs aos objetos em suas posições canônicas e, propagando as movimentações (posicionamento e rotação) do objeto na
cena s respectivas AABB, tem-se como resultado a
OBB daquele objeto.

Coerência Semântica é o uso do significado relativo que alguns objetos têm em
1635

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

Para todos os membros do robô foram definidas
árvores de um único nível (devido á simplicidade dos
demais componentes da cena), com exceção da garra,
que foi modelada com dois níveis da árvore, onde a
OBB que envolve toda a garra é então dividida em
OBBs dos dedos, suporte dos dedos e eixoservomotor da garra, separadamente. Neste caso a garra é a
única parte do robô que usufrui efetivamente de uma
HVE, como pode ser visto na Figura 3.

ter o conhecimento necessário em relação ao significado e função dos objetos na cena. O que se conhece
do ambiente_virtual é que ele possui uma representação virtual do robô manipulador Scorbot ER-4PC sobre uma mesa na qual podem ser dispostos vários objetos a serem manipulados pelo braço robótico. Os
objetos que podem ser dispostos sobre a mesa são fixos.
Na cena pode-se encontrar, além da mesa e dos
objetos dispostos sobre ela, as cinco partes que compõem o robô base, corpo, antebraço, braço e garra.
A partir daí as seguintes características podem ser
observadas neste ambiente
 Mobilidade Existem alguns objetos fixos na
cena, o que torna desnecessário qualquer
teste de colisão entre eles ou seus HVE.
Desta forma, pode-se eliminar os testes entre os pares objeto-objeto, objeto-mesa, objeto-base e mesa-base
 Alcance As articulações do robô restringem
alguns movimentos do mesmo de forma que
alguns elos não podem colidir entre si e também, nem com o corpo do robô nem o braço
não conseguem atingir a mesa
 Adjacência Dois elos adjacentes de um
robô articulado não se interceptam, como é
o caso dos pares base-corpo, corpo-braço,
braço-antebraço e antebraço-garra.

Figura 3. Hierarquia de volumes envolventes na garra do robô.

Para detecção_de_colisão entre as HVE dos pares
de objetos candidatos  colisão é utilizada uma
ATVE. O algoritmo utilizado para executar o teste de
colisão entre duas OBBs é baseado no Teorema da
Separação dos Eixos (Separating Axis Theorem 
SAT) de Gottschalk et al (1996).
No simulador em questão, os objetos dispostos
sobre a mesa onde se encontra o robô só se movem
quando são manipulados pelo braço robótico. Portanto, o único objeto capaz de produzir uma colisão é o
próprio robô. Com o objetivo de explorar a Coerência Espacial, a mesa de trabalho foi dividida em duas
partes iguais, estando o robô ao centro da mesa. Desta forma, os testes das partes móveis do robô precisam ser realizados apenas contra os objetos fixos que
estejam do mesmo lado da mesa no qual se encontra
o braço manipulador. Para isto, é necessária a utilização de uma estrutura de dados representando o particionamento espacial da mesa, de forma a enumerar os
objetos que estejam de um lado e outro da mesa. Assim, é possível saber quais os objetos candidatos 
colisão em determinado momento.
A configuração das estruturas de dados sofrerá
alterações quando forem inseridos novos objetos no
ambiente ou quando o robô movimentá-las para um
novo local na mesa. É preciso atentar ao fato de que
um objeto pode se encontrar em mais de uma lista se
ele estiver posicionado sobre a região de fronteira da
divisão da mesa.

A partir destas características é possível montar
a Tabela 1 considerando apenas os pares que precisam ser testados. As linhas e colunas desta tabela são
ordenadas considerando as características de deslocamento e velocidade, iniciando pelos elementos que
mais se movimentam em cena até chegar aos objetos
fixos. Desta forma obtém-se uma ordem de testes que
priorizará os elementos com maior probabilidade de
colisão.

5 Aplicando a Coerência Semântica
Para a aplicação do conceito de Coerência Semântica
é necessário estudar o ambiente para que se possa ob-

Tabela 1. Tabela de priorização e descarte dos testes com Coerência Semântica.

1636

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.



A Tabela 1 é uma matriz triangular, pois um teste de colisão entre dois objetos é comutativo. Nesta
tabela os campos preenchidos com X indicam que
não há necessidade de testes de colisão entre estes
pares. As letras a, d, f e r, que seguem o X, indicam o
motivo da exclusão do teste
1. Xa Eliminados por adjacência 4 casos.
2. Xd Eliminados por tratar-se de testes do objeto com ele mesmo, onde n é o número de objetos fixos sobre a mesa
casos
(1)
3. Xf Eliminados pelo critério da mobilidade os
testes da base com a mesa, da base com os objetos fixos, da mesa com os objetos fixos e
dos objetos fixos entre si. Ou seja
casos

O grupo 1 identifica os testes entre os objetos móveis e a mesa. Tal grupo é colocado
como primeiro na ordem de testes, pois o
teste de um objeto qualquer contra um plano
(que pode ser usado neste caso para representar a mesa onde se encontram os objetos)
é menos custoso computacionalmente que os
outros testes
 O grupo 2 compreende os testes dos objetos
móveis entre si, ou seja, do próprio robô, e
 O grupo 3 compreende os testes entre os objetos móveis e todos os objetos fixos da
cena.
Deve-se observar que, se o robô tivesse uma anatomia diferente ou os objetos da cena se movimentassem, esta análise seria diferente da apresentada, pois
a Coerência Semântica é específica para cada cena.

(2)

4. Xr Eliminados pelo critério do alcance os testes do braço com a base, do braço com a mesa
e do corpo com a mesa 3 casos.
Os demais pares identificados têm possibilidade
de colisão entre si mas, já se pode antever que, pelos
casos identificados na Coerência Semântica haverá
uma economia do número de testes em relação ao teste de força bruta (todos contra todos), ou seja, o número total de testes eliminados é
casos

6 Análise do Desempenho
Para obter um resultado comparativo de desempenho
foram montadas quatro configurações de teste (apresentadas como colunas na Tabela 2)
 A primeira configuração utilizava apenas as técnicas de OBBs e HVEs. Neste ambiente todos os
objetos seriam testados um contra o outro em
cada momento da movimentação na cena. Este
ambiente foi chamado de Força Bruta
 A segunda configuração utilizava, além das
OBBs e HVEs, também o conceito de Coerência
Espacial com a divisão da mesa em duas partes
 A terceira configuração utilizava somente a Coerência Semântica (sem Coerência Espacial), além
das OBBS e HVEs.
 A quarta configuração utilizava além das OBBs
e HVEs ambas as estratégias de Coerência Espacial e Coerência Semântica juntas.

(3)

Sendo que, na detecção de força bruta, há um total de testes de
casos

(4)

A Tabela 1 ainda identifica alguns grupos de
priorização de testes

Tabela 2. Quantidade de testes de colisão executados em cada cenário e percentual de redução de testes em relação á força bruta.

Foram montados oito cenários de teste. Cada cenário previa a colisão entre dois objetos diferentes da
cena Garra x Objeto Fixo, Garra x Mesa, Garra x
Braço, Garra x Corpo, Garra x Base, Antebraço x
Mesa, Antebraço x Corpo e Antebraço x Base. Em

cada cenário de teste o robô foi posicionado automaticamente em posições predefinidas de forma que
com apenas um comando ele atingisse a situação de
colisão esperada, garantindo assim que a mesma situação fosse reproduzida para todas as configurações
1637

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

50,47, no pior caso quando combinada com uma
técnica de Coerência Espacial. A redução em termos
de tempo em si dependerá do teste efetivo nos modelos geométricos, do fato de estarem (ou não) sendo
aplicadas as técnicas de volumes envolventes e HVEs
bem como da configuração do computador sendo utilizado.
A aplicação da Coerência Semântica num simulador de robô permitiu constatar as seguintes características
 Maior eficiência nos momentos em que efetivamente ocorre a colisão
 Não houve perda de eficiência (overhead) nos
demais momentos
 Implica em codificação específica para cada
cena, o que leva a uma perda de generalidade
 Esta codificação específica depende de como o
programador percebe a dinâmica do ambiente e
portanto, programadores diferentes poderão implementar soluções diferentes (mas, situação semelhante tem ocorrido quanto a escolha de quantas e quais técnicas clássicas são usadas numa
determinada cena).

de teste. Neste momento eram contada a quantidade
de testes de colisão efetuados pelo simulador.
Os ambientes foram montados de forma que, o
tempo do teste de detecção_de_colisão entre dois objetos seria praticamente o mesmo, visto que utilizam
o mesmo algoritmo baseado no SAT. O que muda de
um ambiente para outro é, justamente, a quantidade
de testes que será efetuada, já que, as técnicas de Coerência Espacial e Coerência Semântica baseiam-se,
principalmente, no descarte de testes desnecessários.
Desta forma, optou-se pela medição da quantidade de
testes em detrimento do tempo, pois assim seria possível obter o valor absoluto da quantidade de testes
efetuadas em cada ambiente e também uma forma de
medição independente de hardware.
Os resultados encontrados podem ser vistos na
Tabela 2. Descartando o teste Garra x Objeto, as configurações de testes que utilizaram somente a Coerência Semântica apresentaram uma redução de, no mínimo, 93,46 da quantidade de testes em relação ao
ambiente de Força Bruta.
Na média, utilizando a Coerência Espacial sozinha, obteve-se uma redução do número de testes em
49,19, utilizando-se a Coerência Semântica sozinha
obteve-se uma redução de 84,72 e utilizando-se as
duas coerências conjuntamente, obteve-se uma redução de 90,57.
Para o teste Garra x Objeto, a Coerência Semântica não apresenta uma redução significativa, menor
até que a configuração que utiliza somente a Coerência Espacial. Isto se explica devido ao fato de que,
neste teste, o algoritmo com Coerência Espacial testa
apenas os objetos que se encontram do mesmo lado
da mesa que o robô. Nenhuma verificação deste tipo
é feita na Coerência Semântica.
Entretanto, no quarto ambiente, onde foram utilizados os conceitos de Coerência Semântica e Coerência Espacial juntos foi possível manter os excelentes
resultados da Coerência Semântica obtidos no demais
cenários e ainda diminuir a quantidade de testes do
cenário Garra x Objeto, graças a Coerência Espacial.
Assim, nesta situação, o uso da Coerência Semântica
junto com a Coerência Espacial garantiu uma redução mínima de 50,47 no número de testes de colisão efetuados no simulador.

Foi possível observar que, mesmo no pior caso,
não houve aumento na quantidade de testes efetuados
e demonstrou-se que uma avaliação do contexto da
cena e o conhecimento do significado de cada objeto
na mesma podem diminuir consideravelmente a
quantidade de testes de colisão efetuados.
Trabalhos futuros envolvem avaliar o conceito
de Coerência Semântica para cenas mais complexas
como por exemplo, uma célula de manufatura onde
se tenha mais de um robô, outros objetos móveis e
uma quantidade maior de objetos na cena.
Referências
Bradshaw, G., OSullivan, C. (2004) Adaptive
Medial-Axis Approximation For Sphere-Tree
Construction, In ACM Transactions, 23(1)1
26. Janeiro.
Cohen, J. D., Lin, M. C., Manocha D., Ponamgi M.
K. (1994) Interactive And Exact Collision Detection for Large-Scaled Environments In
Technical report, University of North Carolina at
Chapel Hill, 28 pgs.
Demetriou, G. A. Lambert, A. H. (2005) Virtual
Environments for Robotics Education. IEEE
Robotics  Automation Magazine, 12(4)75-91.
Figueiredo, M. Fernando, T. (2003) An Unified
Framework to Solve the Broad and Narrow
phases of the Collision Detection Problem in
Virtual Prototype Enviroments. In Proc. of
International Conference on Geometric Modeling and Graphics, Salford University, UK, pp.
130-136, 16-18 July.
Gottschalk, S. (2000) Collision Queries using Oriented Bounding Boxes, PhD Thesis in the De-

7 Conclusão
Apesar de existirem vários métodos clássicos para
otimização de detecção_de_colisão entre objetos, percebeu-se que as informações específicas da cena sendo simulada não são utilizadas. Ambientes como os
de simuladores de robôs fixos articulados apresentam
características que podem ser úteis. Neste contexto
propôs-se o conceito de Coerência Semântica.
A aplicação da Coerência Semântica, que implica na análise e entendimento do significado da cena e
sua dinâmica, levou a redução na quantidade de testes de colisão de 99,07, no melhor caso, e de

1638

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

mento de Informática. Pontifícia Universidade
Católica do Rio de Janeiro (PUC-RJ), 148 pgs.
Tropp, O., Tal, A., Shimshoni, I., Dobkin, D. P.
(2006) Temporal Coherence in Bounding
Volume Hierarchies for Collision Detection. In
International Journal of Shape Modeling 12(2)
159-178.
Web3d Consortium. X3D Specifications. Disponível
em httpwww.web3d.orgx3dspecifications.
Último acesso em 03 de fevereiro de 2010.

partment of Computer Science, University of
North Carolina, Chapel Hill.
Gottschalk, S., Lin, M. and Manocha, D. (1996)
OBB Tree A hierarchical structure for rapid interference detection. In Proc. Siggraph96, pp.
171-180, 1996.
Hoss, A., Hounsell, M. S., Leal, A. B. (2009)
VirBot4u Um Simulador de Robô usando X3D.
In I Simpósio de Computação Aplicada, 2009,
Passo Fundo - RS. I SCA. Porto Alegre - RS
SBC. pp. 1-15.
Jiménez, P. Thomas, F. Torras, C. (2001) 3D collision detection a survey. In Computer and
Graphics, 25(2) 269-285, Abril.
Klosowski, J., Held, M., Mitchell, J., Sowizral, H.,
Zikan, K. (1998) Efficient Collision Detection
Using Bounding Volume Hierarchies of kDOPs In IEEE Transactions on Visualization
and
Computer
Graphics,
4(1)21-36,
ISSN1077-2626.
Li, C. F., Feng, Y. T., Owen, D. R. J. (2006) SMB
Collision detection based on temporal coherence In Computer Methods in Applied Mechanics and Engineering. 195 (19-22) 2252-2269.
Lin, M. C. (1993) Eficient Collision Detection for animation and robotics. Dissertation of Doctor of
Philosophy in Electrical Engineering and Computer Sciences of the University of California
and Berkeley, 59 pgs.
Lin, M., Manocha, D. (2003) Collision and proximity
queries. In CRC Handbook of Discrete and
Computational Geometry, 2 ed., Boca Raton, FL.
Lin, M. C., Manocha, D., Cohen, J., Gottschalk, S.
(1997) Collision detection algorithms and applications. In Algorithms for Robotic Motion
and Manipulation, Wellesley, MA, p. 129-142.
Luque, R. G., Comba, J. L. D., Freitas, C. M. S.
(2006) Broad-Phase Collision Detection Using
Semi-Adjusting BSP-trees. In SIBIGRAPI,
Brazil, p 8.
Mezger, J. (2005) Tutorial 2 - Collision Handling in
Dynamic
Simulation
Environments.
In
Eurographics, pp. 54, 2005.
Taddeo, L. da S. (2005) Detecção de colisão
utilizando grids e octrees esféricas para
ambientes gráficos interativos. Dissertação de
Mestrado. Mestrado em Informática Aplicada da
Universidade de Fortaleza, Ceará, 103 pgs.
Redon, S., Kim, Y. J., Lin, M. C., Manocha, D.
(2005) Fast Continuous Collision Detection for
Articulated Models, In J. Comput. Inf. Sci.
Eng., 5(2)126-138. DOI10.11151.1884133.
Rohrmeier, M. (2000) Interactive simulation using
virtual systems web based robot simulation using VRML. Winter Simulation Conference 
WSC, pp. 1525-1528.
Silva, M. H. da (2002) Tratamento Eficiente de Visibilidade Através de Árvores de Volumes Envolventes. Dissertação de Mestrado. Departa-

1639