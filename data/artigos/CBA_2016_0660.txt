XXI Congresso Brasileiro de Automática - CBA2016
UFES, Vitória - ES, 3 a 7 de outubro

UMA ABORDAGEM COMPARATIVA ENTRE MICROCONTROLADORES
ARDUINO MEGA X ARDUINO DUE APLICADOS NO CONTROLE DE SOCCER
ROBOTS
Jusoan Mor, Everson Siqueira, Cristiano Steffens, Paulo Jefferson Dias de Oliveira
Evald, Vincius Menezes de Oliveira, Silvia Silva da Costa Botelho, Rodrigo Azzolin


Universidade Federal do Rio Grande - FURG
Km 8 - Av. Italia - Carreiros, 96203-900, Rio Grande, Rio Grande do Sul, Brasil
Emails jmor@furg.br, everson.brumm@furg.br, cristiano@furg.br, paulo.evald@gmail.com,
vinicius@furg.br, silviacb@furg.br, rodrigoazzolin@furg.br
Abstract Improving the positioning, power consumption and team performance of small size soccer robots
is a laborious task. Otherwise, stationary robots or robots attached to rack and pinion structures, soccer robots
can run freely on a match field and are susceptible to slips and collisions that impact their actuation in terms of
speed and positioning. High performance closed loop controling alternatives become essential in such scenarios.
We implement and evaluate the feasibility of the standard Proportional-Integral (PI), Proportional-Integral with
Recursive Least Squares (PI-RLS) and Robust Model Reference Adaptive Control (RMRAC) on two models of
Arduino prototiping boards. Given time constraints imposed by the soccer game dynamics, it was showed that
Arduino DUE can be used to implement any of aforementioned controllers, while Arduino MEGA does not show
sufficient processing capabilities to execute the calculi for PI-RLS and RMRAC controllers with sampling rate of
1ms.
Keywords

Robot Soccer, Control, PI, PI-RLS, RMRAC

Resumo Melhorar o posicionamento, consumo_de_energia e desempenho dos robos de futebol da classe small
size e uma tarefa trabalhosa. Diferente de robos estacionarios ou ligados a cremalheiras ou pinhoes estruturais,
robos de futebol correm livremente no campo de jogo e sao suscetveis a deslizamentos e colisoes, que impactam
na sua atuacao em termos de velocidade e posicionamento. Alternativas de controle de alto_desempenho em
malha_fechada sao essenciais nesse cenario. Portanto, neste trabalho foi implementada e avaliada a viabilidade
da utilizacao de tres controladores diferentes, aplicados em dois modelos de placas de prototipagem Arduino. Os
controladores aplicados foram O controlador Proporcional-Integral (PI), O controlador Proporcional-Integral
com Recursividade por Mnimos Quadrados (PI-RLS) e o Controle Adaptativo Robusto por Modelo de Referencia
(RMRAC). Dadas as limitacoes de tempo inerentes a dinamica do jogo de futebol, foi mostrado que o Arduino
DUE pode ser utilizado para a implementacao de qualquer um dos controladores avaliados, enquanto o Arduino
MEGA nao apresentou capacidade de processamento suficiente para executar os controladores PI-RLS e RMRAC
em uma janela de tempo de 1ms.
Palavras-chave



Introducao

O futebol_de_robos na categoria small size e composto por duas equipes de seis robos em cada
equipe, que se enfrentam em um campo de 6,05
por 4,05 metros. Cada robo nao deve possuir
mais de 180 milmetros de diametro e nao deve
ultrapassar 150 milmetros de altura. A movimentacao dos robos e da bola e capturada por
um par de cameras localizadas a 4 metros de altura sobre o campo. Todas as informacoes sao
processadas por um computador e enviadas aos
robos via radio, como observado na Figura 1. Nenhuma interferencia externa de humanos e permitida, apenas em substituicoes de robos (2012 ROBOCUP.ORG.BR, 2016). A Universidade Federal
do Rio Grande - FURG possui uma equipe de futebol_de_robos dessa categoria, conhecida pelo nome
de Furgbol. O hardware e software dos robos foram
desenvolvidos na propria instituicao. A estrutura
dos robos e composta por uma carcaca de Alumnio, quatro motores Brushless Direct Current Motor - BLDC encarregados pela movimentacao das
rodas omnidirecionais do robo, conforme pode ser

ISSN 2525-8311

visualizado na Figura 2. O robo possui diversos
modulos eletronicos, tais como os drivers, microcontrolador e o receptor de radio. Os drivers sao
utilizados para o acionamento dos motores, enquanto que o microcontrolador atua no controle
dos diversos componentes do sistema e o receptor de radio adquire as referencias calculadas pelo
computador central.
Os motores descritos sao construdos com tres
sensores de efeito Hall embutidos em sua carcaca, responsaveis pela medicao de velocidade e
sentido de giro dos motores (Simpkins and Todorov, 2010). A utilizacao desses sensores para aquisicao de velocidade implica na nao linearidade do
sistema (Siegwart et al., 2011). Uma das restricoes do projeto e a necessidade de utilizacao de
uma placa de prototipagem_rapida, que deve executar todo o sistema do robo no tempo de 1ms
afim de que a medida de velocidade seja valida e
permita a acao de correcao.
Para o controle dos motores do Furgbol e utilizado um controlador do tipo Proporcional e Integral - PI (Srisabye et al., 2009 Wasuntapichaikul
et al., 2010). Alem disso, os controladores adap-

2348

XXI Congresso Brasileiro de Automática - CBA2016
UFES, Vitória - ES, 3 a 7 de outubro

2

Geração de Referência
Aceleração

*
PCam


PCam

Malha Externa de
Controle

Vd*
Planta

 r  Vr
r


PCam

Figura 1 Geracao de referencia e malha externa
do controle de futebol_de_robos - Furgbol.

Inicialmente, para o controle das rodas do robos
do Furgbol, um controlador do tipo PI foi implementado, entretanto, o sistema apresentou baixo
desempenho frente a dinamicas nao modeladas,
como por exemplo o escorregamento da roda. Visando melhorar o desempenho e proposto a implementacao dos controladores PI-RLS e RMRAC
apresentados nessa secao. Em todos os controles citados anteriormente e necessario a modelagem completa do motor descrita em (Siqueira
et al., 2015), onde foi observado a equacao que
representa a funcao de transferencia do motor
BLDC, mostrado em (1). A funcao de transferencia descrita nesse sistema relaciona o sistema
mecanico e o sistema eletrico. O sistema mecanico
contempla o conjunto de variaveis torque geral Tg ,
torque de disturbio Td , torque total Tt , velocidade
angular , constante de inercia J, constante de
torque Km e o coeficiente de atrito mecanico do
motor b. O sistema eletrico demonstra a tensao de
entrada Vr , corrente da armadura ia , a resistencia
da armadura Ra , a indutancia da armadura La e
a constante de forca contra-eletromotriz Kb .

G(s) 

2.1
Figura 2 Estrutura do robo do Furgbol.

tativos do tipo PI (Recursive Least Square) - PIRLS (Bernat and Stepien, 2011 Lin, 1996) e Controle Adaptativo Robusto por Modelo de Referencia (Robust Model Reference Adaptive Controller )
- RMRAC (Ioannou and Tsakalis, 1986 Ioannou
and Sun, 2012), sao utilizados como alternativas
para melhorar o desempenho do sistema.
Este trabalho tem o objetivo de comparar
o desempenho dos microcontroladores Arduino
MEGA (Site oficial c 2015 Arduino, 2015b) e Arduino DUE (Site oficial c 2015 Arduino, 2015a),
aplicados como controladores nos robos do Furgbol. Inicialmente, o Arduino MEGA foi utilizado
no controle de movimentacao dos robos. Entretanto, para a implementacao dos controladores
adaptativos visando melhorar o desempenho dos
robos em competicoes, mostrou-se necessario realizar a substituicao do Arduino MEGA pelo Arduino DUE, visto que a implementacao de controladores adaptativos incitou o comportamento de
saturacao (o Arduino nao consegue processar todos os dados dentro do tempo pre-determinado)
no Arduino MEGA.

ISSN 2525-8311

Controladores

Velocidade

Km
s2 JLa + s(La b + Ra J) + Ra b + Kb Km
(1)

Controlador PI

No controlador PI, a velocidade do motor e medida e comparada com a velocidade de referencia,
gerando um erro. Esse erro e utilizado como entrada do bloco PI que produz uma acao de controle aplicado no motor. A estrutura da planta de
controle pode ser observada na Figura 3.
O controlador utiliza a acao de dois ganhos
KP  12 e KI  250 modelados de acordo com o
metodo de alocacao_de_polos (Ogata, 2001).
r * 

PI (s)

G( s)

r


H (s)

Figura 3 Estrutura do controlador PI

2.2

Controlador PI-RLS

O controlador PI-RLS, conforme pode ser visualizado na Figura 4, possui um algoritmo recursivo
que estima os parametros do motor. Isso permite
calcular dinamicamente os ganhos KP e KI do
controlador PI (Siqueira et al., 2015).

2349

XXI Congresso Brasileiro de Automática - CBA2016
UFES, Vitória - ES, 3 a 7 de outubro

Kp

r * 





Ko
Ts  1

RLS

SVF

Ki
s

yp tende a um valor muito pequeno, sendo na media quase nulo (Ioannou and Tsakalis, 1986 Ioannou and Sun, 2012 Lozano-Leal et al., 1990 Mor
et al., 2013). Tambem estao presentes no modelo
a entrada da planta up , a entrada de referencia de
velocidade r e a sada dos filtros 1 e 2 .

r

Wm (s)  K m

Figura 4 Estrutura do controlador PI-RLS.

G ( s)  G0 ( s)1   m ( s)   a ( s)

r

Ko
Ts + 1

(2)

O algoritmo RLS e um algoritmo de estimacao
parametrica que requer o modelo da planta (motor) em tempo_discreto (Zhang et al., 2013) e na
forma de regressao linear (Regazzi, 2015). O modelo da regressao linear esta presente na Equacao
(3), onde k indica a amostragem atual no tempo
discreto.
Y(k)  C(k) (k)
(3)
As variaveis Y(k) , C(k) , (k) sao o vetor de predicao, matriz de regressao linear e vetor de parametros, respectivamente. O algoritmo de identificacao recursiva pode ser obtido atraves da relacao
presente nas Equacoes (4), (5) e (6).
(k)  (k1) + K(k) e(k)

(4)

P(k1) C(k)
T P
I + C(k)
(k1) C(k)

(5)

P(k)  I  K(k) C(k) P(k1)

(6)

K(k) 

Sendo que K e P representam, respectivamente,
a matriz de ganhos e a matriz de covariancia do
RLS. A variavel e e a diferenca dos valores medido
e estimado.
2.3

yp



up

O custo_computacional do RLS e elevado devido ao numero de equacoes necessarias para execucao do algoritmo. Visando reduzir o custo,
considerou-se a funcao de transferencia do motor
de primeira ordem conforme (2), onde Ko e T representam respectivamente o ganho do sistema e
constante do tempo.
G(s) 

e1



Z m ( s ) ym
Rm ( s )

4




 

1

1  ( s )
(s)

2
up 
yp 

1 
2 

e1 

2  ( s )
(s)

3
   


m

Figura 5 Estrutura do controlador RMRAC.
Alem disso, a Equacao (7) apresenta uma funcao de transferencia de segunda ordem comumente
utilizada em modelos de controle.
W (s) 

s2

n2
+ 2n s + n2

(7)

Ao atribuir na Equacao (7) os valores   0.7,
n  50 pode-se aferir o modelo de referencia
Wm (s).
Wm (s) 

s2

2500
+ 70s + 2500

(8)

Os parametros do controlador RMRAC podem ser encontrados nas Equacoes (9) ate (16).
0  0.7,
m(0) 

1  1,

(0)  0, 0, 0, 0.2

1
 1.4286,
0

  2,

0  0.1

(9)
(10)

Controlador RMRAC

O controlador RMRAC, apresentado na Figura
5, utiliza um modelo de referencia com o mesmo
grau da planta desejada, sendo esse o fator que
define a resposta dinamica desejada para a sada
da planta. Um erro e1 e utilizado pelo algoritmo
de adaptacao para ajustar os parametros do controlador, adquirido a partir da sada do modelo de
referencia e da sada da planta. Este ajuste acontece de um certo modo que o erro entre a sada
do modelo de referencia ym e a sada da planta

ISSN 2525-8311

T  1 , 2 , 3 , 4 ,

 T  1 , 2 , ym , yp  (11)

(s)  s + 1,

M0  0.5

(s) , n2  sn2 , sn3 , ..., s, 1T
para n  2
(s) , 0

(12)

(13)

para n  1

  e1 + T   Wm (s)T 

(14)

2350

XXI Congresso Brasileiro de Automática - CBA2016
UFES, Vitória - ES, 3 a 7 de outubro

m  0 m + 1 (up  + yp  + 1)


if kk < M0
0
kk
  0 ( M0  1) if M0  kk < 2M0


0
if kk  2M0

(15)

(16)

onde M0 > k k e 0 > 22 R2  <+ sao parametros de projeto.
3
3.1

Arquitetura dos Microcontroladores
Arduino MEGA

Arduino MEGA 2560 e um microcontrolador baseado no ATMEGA 2560, possui 54 pinos digitais
dos quais 15 sao pinos PWM (Pulse-Width Modulation), 16 pinos analogicos de entrada, 4 UARTs
(Universal Asynchronous ReceiverTransmitter ),
um oscilador de 16M Hz, um ICSP header e um
botao reset.
Para maximizar a performance e o paralelismo, o Atmel AVR utiliza a arquitetura Harvard,
ou seja, possui duas memorias separadas, um para
programa e outra para os dados. Instrucoes na
memoria do programa sao executadas com apenas um nvel de pipeline. Enquanto uma instrucao
esta sendo executada, a proxima instrucao e realocada para a memoria do programa. Esse conceito
permite que mais de uma instrucao seja executada
a cada ciclo de clock.
Os registradores de acesso rapido de proposito geral trabalham com apenas um acesso por
ciclo, permitindo a execucao de um ciclo de operacao da Unidade Logica Aritmetica (ULA). Em
uma tpica operacao da ULA, dois operandos geram uma sada para o registrador e o resultado e
armazenado no registrador de entrada em apenas
um ciclo de operacao da ULA.
Dos 32 registradores, apenas 6 podem ser usados como 3 registradores indiretos que apontam
para um dado no espaco de enderecamento. Um
desses apontadores de endereco pode ser utilizados
para procurar programas na memoria flash.
A ULA suporta operacoes logicas e aritmeticas entre os registradores e entre uma constante
e um registrador. Apos uma operacao aritmetica,
o status do registrador e atualizado para obter a
informacao a respeito do resultado da operacao.
3.2

Arduino DUE

O Arduino Due e uma placa de microcontrolador
baseado no processadorAtmel SAM3X8E ARM
Cortex-M3 CPU. E a primeira placa Arduino baseada em um microcontrolador ARM de 32 bits.
Tem 54 pinos de entrada e sada digital, dos quais
12 podem ser utilizados como sadas PWM, 12
entradas analogicas, 4 UARTs, clock de 84M Hz,
uma conexao USB OTG (on the go), 2 DAC (digital to analog converter ), 2 TWI (two wire interface), uma entrada de alimentacao, um barra-

ISSN 2525-8311

mento SPI, um barramento JTAG, um botao de
reset, e um botao de erase.
O processador fornece um grande poder de
processamento devido a seu design eficiente e otimizado. O processador pode realizar multiplicacao de 32  32 em um unico ciclo de processamento com hardware dedicado. O acesso a memoria e feito com a tecnologia Advanced Microcontroller Bus Architecture (AMBA) (ARM Ltd.
Copyright 1995-2016, 2016), que fornece baixa latencia e grande velocidade. Uma das vantagens
desse processador e a possibilidade de acesso desalinhado a memoria, alem do controle rapido de perifericos usando a manipulacao de bit atomico e de
spinlocks do sistema e manipulacao de dado booleano thread-safe. O processador tem uma unidade
de protecao a memoria (MPC), que fornece controle de memoria de granulacao fina, permitindo
que aplicacoes implemente privilegios de nveis de
seguranca, ou seja, separando codigo, dados e pilha em uma base tarefa-por-tarefa.
4

Resultados

Nesta secao sao apresentados os resultados praticos, obtidos por leituras diretas em um osciloscopio, onde uma porta do microcontrolador foi utilizada como um flag de controle. No incio da
rotina de controle, o flag indica sinal alto, apos a
execucao de todo o codigo o flag passa para sinal
baixo. A Figura 6, mostra a bancada de teste,
com o osciloscopio, um robo Furgbol, e os microcontroladores Arduino MEGA e DUE. Uma placa
de adaptacao e utilizada para a captacao dos dados, em que, um pino GND e o pino de flag sao de
facil acesso. Alem disso, uma funcao de interrupcao e utilizada nos controladores do Furgbol, onde
o controle deve ser implementado a cada 1ms para
a correta comunicacao via radio e medicao de velocidade.
O tempo de processamento de execucao do
controlador PI aplicado no Arduino MEGA e o
Arduino DUE pode ser observado nas Figuras 7 e
8, respectivamente. Observa-se, que ambos os microcontroladores conseguem processar o controle
dentro do tempo da interrupcao, entretanto, e possvel notar que o Arduino MEGA necessita praticamente do triplo do tempo que o Arduino DUE.
O tempo de processamento de execucao do
controlador PI-RLS aplicado ao Arduino MEGA e
DUE pode ser visualizado nas Figuras 9 e 10, respectivamente. Observa-se, que o Arduino MEGA
nao conseguiu processar completamente o controle
PI-RLS dentro do tempo da interrupcao estipulado. Entretanto, como esperado, o Arduino DUE
obteve um desempenho satisfatorio e com uma janela tempo restante equivalente a 630s.
Nas Figuras 11 e 12 pode-se observar o tempo
de processamento do controlador RMRAC aplicado no MEGA e no DUE, respectivamente.

2351

XXI Congresso Brasileiro de Automática - CBA2016
UFES, Vitória - ES, 3 a 7 de outubro

Figura 6 Bancada de testes.

Figura 7
MEGA.

Controle PI aplicado no Arduino

Figura 9 Controle PI-RLS aplicado no Arduino
MEGA.

Figura 8 Controle PI aplicado no Arduino DUE.

Figura 10 Controle PI-RLS aplicado no Arduino
DUE.

Observa-se, que o MEGA nao processou o controlador RMRAC no tempo de interrupcao e que
o DUE conseguiu processar, mas com uma janela
de tempo restante de 170s.
5

Conclusao

Nesse trabalho foram apresentados os principais
microcontroladores e tecnicas de controle utilizadas pela equipe de Futebol de Robos da FURG
- Furgbol. Os aspectos abordados nesse trabalho
foram quanto a estrutura dos robos, padronizacoes para participacoes de competicoes e controle
dos robos. O controlador atualmente implementado nos robos e o PI no microcontrolador Arduino MEGA. Para melhorar a performance do
robo diante de disturbios consequentes de derrapagens e deslizamentos, foram implementados os

ISSN 2525-8311

Figura 11 Controle RMRAC aplicado no Arduino
MEGA.
controladores PI-RLS e o RMRAC no Arduino
MEGA. Visando detectar os problemas apresentados, foram realizados testes utilizando um os-

2352

XXI Congresso Brasileiro de Automática - CBA2016
UFES, Vitória - ES, 3 a 7 de outubro

Lozano-Leal, R., Collado, J. and Mondie, S.
(1990). Model reference robust adaptive_control without a priori knowledge of the high
frequency gain, Automatic Control, IEEE
Transactions on 35(1) 7178.
Mor, J. L., Siqueira, E. B., Oliveira, V. M. d. and
Azzolin, R. Z. (2013). Controle de velocidade
de motor bldc utilizando rmrac, 7th Seminario de Eletronica de Potencia e Controle .

Figura 12 Controle RMRAC aplicado no Arduino
DUE.
ciloscopio para verificar o tempo de execucao de
cada controlador aplicado aos Arduinos MEGA e
DUE. Como resultado, verificou-se que o MEGA
nao conseguia processar os controladores PI-RLS
e RMRAC. A solucao encontrada foi a de substituir o Arduino MEGA pelo Arduino DUE. Como
consequencia, os controladores propostos puderam
ser implementados e a performance do robo pode
ser melhorada.
6

Agradecimentos

Os autores gostariam de agradecer ao apoio financeiro do Conselho Nacional de Desenvolvimento
Cientfico e Tecnologico (CNPq) e Coordenacao
de Aperfeicoamento de Pessoal de Nvel Superior
(Capes).
Referencias
2012 ROBOCUP.ORG.BR (2016). RoboCup Brasil, httpwww.robocup.org.br. Online
acessado 10-marco-2016.
ARM Ltd. Copyright 1995-2016 (2016).
AMBA
Specifications,
http
www.arm.comproductssystem-ip
amba-specifications.php.
Online
acessado 10-marco-2016.
Bernat, J. and Stepien, S. (2011). Application of
optimal current driver for the torque control
of bldc motor, Archives of Electrical Engineering 60(2) 149.
Ioannou, P. A. and Sun, J. (2012). Robust adaptive
control, Courier Corporation.
Ioannou, P. A. and Tsakalis, K. S. (1986).
A robust direct adaptive_controller, Automatic Control, IEEE Transactions on
31(11) 10331043.
Lin, F.-J. (1996).
Robust speed-controlled
induction-motor drive using ekf and rls estimators, Electric Power Applications, IEE
Proceedings-, Vol. 143, IET, pp. 186192.

ISSN 2525-8311

Ogata, K. (2001). Modern control engineering,
Prentice Hall PTR.
Regazzi, A. J. (2015). Teste para verificar a igualdade de parametros e a identidade de modelos de regressao nao-lineartest for parameter
equality in nonlinear regression models, Ceres 50(287).
Siegwart, R., Nourbakhsh, I. and Scaramuzza, D.
(2011). Introduction to autonomous mobile
robots, MIT Press.
Simpkins, A. and Todorov, E. (2010). Position
estimation and control of compact bldc motors based on analog linear hall effect sensors,
American Control Conference (ACC), 2010,
IEEE, pp. 19481955.
Siqueira, E. B., Mor, J. L., Azzolin, R. Z. and
de Oliveira, V. M. (2015). Algorithm to
identification of parameters and automatic
re-project of speed controller of bldc motor,
IFAC-PapersOnLine 48(19) 256261.
Site oficial c 2015 Arduino (2015a).
Arduino DUE, httpwww.arduino.ccen
MainarduinoBoardDue. Online acessado
05-marco-2016.
Site oficial c 2015 Arduino (2015b). Arduino
MEGA, httpwww.arduino.ccenMain
arduinoBoardMega2560. Online acessado
05-marco-2016.
Srisabye, J., Wasuntapichaikul, P., Onman, C.,
Sukvichai, K., Damyot, S., Munintarawong,
T., Phuangjaisri, P. and Tipsuwan, Y.
(2009). Skuba 2009 extended team description, Proceedings of RoboCup .
Wasuntapichaikul, P., Srisabye, J., Onman, C.,
Damyot, S., Areeprasert, C. and Sukvichai,
K. (2010). Skuba 2010 extended team description, Proceeding of Robocup .
Zhang, H., Gong, S.-j. and Dong, Z.-z. (2013). Online parameter identification of induction motor based on rls algorithm, Electrical Machines and Systems (ICEMS), 2013 International Conference on, IEEE, pp. 21322137.

2353