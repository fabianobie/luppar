Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

PLATAFORMA DE SIMULACAO EM TEMPO REAL PARA SISTEMAS DINAMICOS
Isaac D. T. de Souza, Sergio Natan, Rafael Teles, Marcelo A. C. Fernandes


Departamento de Engenharia da Computacao e Automacao  DCA
Universidade Federal do Rio Grande do Norte  UFRN
Natal, RN, Brasil

Emails isaacdiego@gmail.com, s.natansilva@gmail.com, rmteles@gmail.com,
mfernandes@dca.ufrn.br
Abstract The development of new embedded algorithms for automation and control of industrial equipment
usually requires the use of real-time testing. However, the equipment required is often expensive, which means
that such tests are often not viable. The objective of this work was therefore to develop an embedded platform
for the distributed real-time simulation of dynamic_systems. This platform, called the Real-Time Simulator
for Dynamic Systems (RTSDS) could be applied in both industrial and academic environments. In industrial
applications, the RTSDS could be used to optimize embedded control algorithms. In the academic sphere, it could
be used to support research into new embedded solutions for automation and control, and could also be used as
a tool to assist in undergraduate and postgraduate teaching related to the development of projects concerning
on-board control systems.
Keywords

Real time, Simulation, Dynamic systems, Embedded systems.

Resumo O desenvolvimento de novos algoritmos embarcados para automacao e controle de equipamentos
industriais requerem, na maioria das vezes, testes em tempo_real. Porem, em muito dos casos os equipamentos
reais possuem um custo elevado inviabilizando testes com novos algoritmos de controle. Assim, este projeto tem
como objetivo o desenvolvimento de uma plataforma embarcada e distribuda para simulacao_em_tempo_real de
sistemas_dinamicos. A plataforma chamada neste projeto de STRSD (Simulador em Tempo Real para Sistemas
Dinamicos) pode ser aplicada em ambiente industrial e academico. Na industria o STRSD podera ser utilizado
na otimizacao e sintonia de algoritmos de controle_embarcados. Em ambiente academico sera utilizado no apoio
as pesquisas de novas solucoes embarcadas para area de automacao e controle, assim como podera ser usado
como ferramenta de apoio ao ensino de graduacao e pos-graduacao no desenvolvimento de projetos de sistemas
embarcados de controle.
Palavras-chave

.

Introducao

pagne et al., 2003 Cosic et al., 1997 Keller and
Kolb, 2009 Matar and Iravani, 2010) observa-se
varias propostas e metodologias de plataformas
de simulacao_em_tempo_real no qual sao utilizados hardwares como processadores digitais de
sinais, processadores de uso geral e ate mesmo
solucoes com computacao reconfiguravel utilizando FPGAs (Field-Programmable Gate Array). Nos trabalhos de (Menghal and Laxmi,
2011) e (Venugopal et al., 2011) sao apresentados
os benefcios associados ao ensino graduacao de
varias areas utilizando plataformas de simulacao
em tempo_real.
Assim, diferentemente das propostas apresentadas em (Kim et al., 2011 Dixit et al., 2009 Boukerche and Lu, 2005 You et al., 2009 Vityaz and
Zimmermann, 2005 Monga et al., 2012 Champagne et al., 2003 Cosic et al., 1997 Keller and
Kolb, 2009 Matar and Iravani, 2010) este projeto
apresenta uma plataforma distribuda de simulacao_em_tempo_real que faz uso de varias plataformas de hardware objetivando uma maior modularidade e robustez no processo de simulacao. O objetivo principal do STRSD (Simulador em Tempo
Real para Sistemas Dinamicos) e criar uma ferramenta de apoio aos projetistas de sistemas_embarcados para a area de controle focado na reducao de custos dos testes em tempo_real. Alem de
ter uma aplicacao na industria, o STRSD podera

O desenvolvimento de novos algoritmos e tecnicas
de controle, em ambientes embarcados, para sistemas_dinamicos como motores, processos_industriais, automoveis, avioes e outros requerem testes
em tempo_real nos dispositivos a serem controlados. Em muitos casos, testes reais nestes sistemas
dinamicos estao associados a custos elevados. Por
exemplo, para aperfeicoar o algoritmo de controle
da valvula de injecao em um automovel sao necessarios testes em ambientes reais que podem levar
horas ou ate dias. Em outros casos e necessario a
construcao de prototipos menores para realizacao
dos testes como no caso de avioes e navios. Atualmente, muitos destes testes, em ambientes reais,
sao feitos com a utilizacao de simulacoes off-line
(em tempo nao real), porem estas simulacoes nao
eliminam completamente os testes em tempo_real.
Propostas para desenvolvimento de plataformas para simulacao_em_tempo_real sao amplamente estudas por varios pesquisadores ja a muito
tempo. Porem, com o avanco relacionado a velocidade e a facilidade de desenvolvimento associada as novas plataformas de hardware as pesquisas ficaram mais acentuadas nos ultimos anos.
Em (Kim et al., 2011 Dixit et al., 2009 Boukerche and Lu, 2005 You et al., 2009 Vityaz and
Zimmermann, 2005 Monga et al., 2012 Cham-

867

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

tambem ter uma funcionalidade academica funcionando como uma planta_didatica programavel
para varios componentes curriculares dos cursos
de Engenharia. Com o STRSD um aluno de graduacao e pos-graduacao podera testar algoritmos
de controle em varios tipos sistemas_dinamicos de
forma simples e com um custo relativamente baixo
quando comparado as plantas didaticas reais. Outro ponto a ser enfatizado na proposta apresentada e que o STRSD tambem simula o funcionamento dos drivers e sensores associados ao controle
dos sistemas_dinamicos, caracterstica importante
do ponto de vista de projeto_de_sistemas_de_controle (Ogata, 2001).
2

a um sistema_dinamico escolhido previamente. O
MCP realiza sua tarefa atraves de uma aplicacao embarcada chamada de Aplicacao Principal
(AP) no qual sera detalhada nas proximas secoes.
Alem da AP o hardware do MCP deve possui um
conjunto de interfaces e protocolos de comunicacao integrados para realizar a comunicacao com
os MADs e MGSs. A plataforma STRSD nao
prioriza nenhum protocolo de comunicacao especfico porem a taxa de transmissao, R (em bps) e
um fator importante no funcionamento do simulador de tempo_real principalmente para sistemas
dinamicos de resposta rapida (Ogata, 2001).

2.2

Arquitetura Fsica do STRSD

Os MADs sao hardware conectados ao MCP atraves de algum protocolo de comunicacao de dados
transferindo bits a uma taxa de R1 bps. Cada
m-esimo MAD pode ser formado por L entradas
(analogicas eou digitais) sendo responsavel por
captar sinais do mundo externo para serem utilizados pelo simulador de tempo_real executado no
MCP. Os MADs utilizam um sistema de software
que e embarcado antes do processo de simulacao
chamado de Aplicacao MAD (AMAD). Para cada
tipo de driver e atuador associado ao sistema_dinamico a ser simulado existe um AMAD diferente. A
AMAD e responsavel por transformar os L sinais
externos conectados ao m-esimo MAD em valores
reais e transmiti-los ao MCP. O l-esimo sinal de
entrada do m-esimo MAD e expresso por xml (t)
e dependendo do driver pode ser um sinal analogico de amplitude eou frequencia variavel ou um
sinal digital de frequencia eou largura de pulso
variavel.

A Figura 1 detalha em diagrama_de_blocos a arquitetura do STRSD. O modulo de controle principal
(MCP) e acoplado a um conjunto de M modulos
de aquisicao_de_dados (MAD) e N modulos de geradores de sinais (MGS). O MCP tem a funcao de
controlar, gerenciar e configurar a plataforma de
simulacao_em_tempo_real, sendo tambem responsavel pela entrada e sada de dados com o usuario.
Em princpio o MCP deve ser formado por um processador de alto_desempenho que neste projeto e o
Intel DN2800MT Mini-ITX, que integra um processador Atom N2800.
x11
MAD-1
.
.
.

xM1

Módulo
Controle Principal
(MCP)

MAD-M

MGS-N

s 11
s1K

.
.
.

...

...

xML

MGS-1

...

...

x1L

sN1
sNK

Periféricos de entradasaída
(teclado, monitor, mouse, ...)

Figura 1
STRSD.

Arquitetura fsica da plataforma

2.3

Modulo de Geracao de Sinais  MGS

Estes modulos sao plataformas de hardware responsaveis pela geracao de sinais associadas as sadas do sistema_dinamico simulado no MCP. Semelhante ao MADs os MGSs sao formados por
K sadas (analogicas eou digitais), comunicamse com o MCP atraves de um protocolo de comunicacao de dados a uma taxa R2 bps e utilizam
um sistema de software_embarcado chamado de
Aplicacao MGS (AMGS) que converte os dados
de simulacao recebidos do MCP em sinais externos analogicos eou digitais. Para cada tipo de
sensor a ser simulado juntamente com o sistema
dinamico existe um AMGS diferente que converte
a informacao de sada de acordo com as caractersticas instrumentais do sensor_em questao. O
k-esimo sinal de sada do n-esimo MGS e expresso
como snk (t) e dependendo do tipo de sensor pode
ser um sinal analogico de amplitude eou frequencia variavel ou um sinal digital de frequencia eou
largura de pulso variavel.

Os MADs e os MGSs sao hardwares auxiliares com a funcao de receber e gerar sinais relativos ao sistema_dinamico a ser simulado pelo MCP.
Os MADs e MGSs podem ser implementados, na
pratica, por varias plataformas de hardware como
processadores digitais de sinais, microcontroladores e outros dispositivos que possuam entradas e
sadas digitais eou analogicas. De acordo com a
Figura 1 cada m-esimo MAD podera ser formado
L entradas digitais eou analogicas e cada n-esimo
MGS sera caracterizado por K sadas digitais eou
analogicas. Cada STRSD deve possuir pelo menos
um MAD e um MGS.
2.1

Modulo de Aquisicao de Dados  MAD

Modulo de Controle Principal  MCP

O modulo de controle principal (implementado no
hardware Intel DN2800MT Mini-ITX) e responsavel por configurar e executar a simulacao relativa

868

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

3

Arquitetura Logica do STRSD

(TCT). A TAD e tem funcionalidade de atualizar todas as, P , entradas do sistema_dinamico em
simulacao lendo todos os buffers de entradas associados as conexoes de dados entre o MCP e os
MADs. As, P , variaveis de entrada sao compartilhadas entre as threads de aquisicao_de_dados e
de simulacao. A Figura 3 ilustra o funcionamento
entre as threads TAD, TS e TCT.

A Figura 2 ilustra a arquitetura logica do STRSD
no qual uma aplicacao localizada no MCP, chamada de neste projeto de Aplicacao Principal
(AP), instancia uma classe de software chamada de Objeto Sistema Dinamico (OSD). Um
OSD representa o sistema_dinamico a ser simulado em tempo_real e e formado, alem de
outros, por 8 atributos principais expresso por
P, H, f (t), M, C, D, MethodODE , ta  no qual

variáveis de entrada
1 2

 P  Representa o numero de entradas do sistema_dinamico.

...

P

escrita
dos
MADs

 H Representa o numero de sadas do sistema
dinamico.

leitura

TAD

TS

controle de
execução

 f (t) Define o sistema de equacoes_diferenciais ordinarias (ODE) do sistema_dinamico a
ser simulado em tempo_real.

TCT

Figura 3 Threads responsaveis pela simulacao em
tempo_real do OSD.

 M Define um conjunto de parametros ajustaveis associados ao sistema_dinamico.

A TS envia, aos GSMs, as H, variaveis de
sada e executa o metodo numerico de resolucao
de ODE (definido pela variavel MethodODE ) no
sistema equacoes, f (t), para atualizar os estados
do sistema_dinamico (Ogata, 2001 Butcher, 2008).
A execucao da thread de simulacao e controlada
pela TCT que atraves de uma logica de semaforos
(Ben-Ari, 2006) regula o tempo de execucao da
TS a um valor fixo, ts , fazendo com que o metodo
de resolucao ocorra sempre a um passo fixo. A
utilizacao de um passo fixo, ts , nao e essencial na
resolucao metodos de numericos mas e fundamental na parametrizacao da plataforma de simulacao
que deve ter um tempo de amostragem, ta , bem
menor que o tempo de resposta, tr , do sistema
dinamico a ser simulado, ou seja, o processo de
simulacao deve respeita a seguinte restricao

 C Caracteriza o conjunto de codigos, os
AMADs, que serao embarcados nos MADs
associados as entradas do sistema_dinamico.
 D Caracteriza o conjunto de codigos, os
AMGSs, que serao embarcados nos MGSs
associados as sadas do sistema_dinamico.
 MethodODE  Atributo que define qual metodo numerico de resolucao de ODEs que devera ser utilizado na simulacao de tempo_real.
O STRSD podera implementar varios metodos de resolucao como os metodos de Euler,
Runge-Kutta e outros (Butcher, 2008).
 ta  Representa o tempo de amostragem que
sera utilizado no processo de simulacao em
tempo_real.

ta << tr .
O STRSD possui um base de dados localizada no
MCP composta por varios OSDs que podem ser
inseridos facilmente atraves da AP.
MCP

AMAD

AP

...

x1L

Figura 2
STRSD.

OSD

H

s 11
s1K

MGS-N
sN1
AMGS

...

AMAD

P

1

...

...

xML

1

...

MAD-M
xM1

.
.
.

AMGS
.
.
.

(1)

As Figuras 4, 5 e 6 detalham os automatos associados ao funcionamento das threads TAD, TS
e TCT. A Figura 4 detalha da TAD que faz a
leitura de todos os buffers das interfaces de comunicacao com os MADs e atualiza as P variaveis
entradas do OSD. A TAD fica adormecida por um
tempo fixo predeterminado, tw
T AD , para minimizar problemas de colisoes na escrita das variaveis
entrada, dado que elas sao compartilhadas com
a TS. Ja a Figura 5 detalha o automato da TS
que espera a atualizacao do recurso do semaforo,
pela TCT, para enviar as variaveis de sada aos
MGSs e depois executar a OSD. Finalmente, a
Figura 6 apresenta, atraves de um automato, o
funcionamento da TCT que controla o semaforo
adicionando o recurso a um tempo ts .
Os codigos do conjunto C associados a um
OSD tem o papel de servirem como transdutores

MGS-1

...

MAD-1
x11

para os
MGSs

sNK

Arquitetura logica da plataforma

A execucao da simulacao_em_tempo_real de
um OSD, no MCP, e feita por tres threads, trabalhando de forma colaborativa, chamadas de Thread de Aquisicao de Dados (TAD), Thread de
Simulacao (TS) e Thread Controle de Tempo

869

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014
TCT

TAD

dtempo
atual() - d

w
espera(tTAD
)

espera(ts+d a)

atualiza as
variáveis
de entrada

adiciona
recursos ao
semáforo
dtempo
atual()

Figura 4 Automato relativo a TAD.

dats-d

TS
não existe
recurso

d a0

espera um
recurso do
semáfaro

existe recurso

Figura 6 Automato relativo a TCT.
envia
variáveis
de saída

simulacao se aproxime mais do caso real. Este benefcio e bastante importante no desenvolvimento
e na validacao sistema_embarcados de controle de
sistemas_dinamicos. Trabalhos futuros podem ser
associados ao estudo de algoritmos de otimizacao
para alocacao automatica de MADs e MGSs ao
MCP.
A partir de um OSD instanciado, o tempo de
amostragem, ta , pode ser expresso por

execução
do OSD

Figura 5 Automato relativo a TS.

entre o sinal de entrada externo (que pode ser digital ou analogico) e uma das P entradas do sistema
dinamico. Cada OSD possui um relacionamento
de um para muitos com os MADs, podendo, se
necessario, utilizar todos os M MADs disponveis. A utilizacao de quantos e quais MADs serao utilizados pelo OSD e feita off-line atraves
de parametros de configuracao e tem como objetivo customizar o desempenho do sistema objetivando a reducao do tempo de amostragem ta .
Um ponto importante e que os MADs podem simular o efeito real drivers e atuadores, como por
exemplo os drivers comerciais que trabalham com
sinais de frequencia e largura de pulso variavel.
Semelhante aos MADs o conjunto D de codigos referentes ao OSD tem o objetivo de funcionarem como transdutores entre as sadas do sistema
dinamico e os sinais externos (digitais eou analogicos) a serem gerados. Cada OSD possui tambem um relacionamento de um para muitos com
os MGSs, podendo se necessario utilizar todos N
MGSs associados ao STRSD. A configuracao de
quais e quantos MGSs serao utilizados durante o
processo de simulacao_em_tempo_real e configurado off-line semelhante aos MADs. Os MGSs
tambem podem simular a resposta de sensores comerciais reais nos quais podem ser de frequencia,
amplitude ou largura de pulso variavel.
A simulacao de drivers e sensores (atraves
MADs e os MGSs, respectivamente) acoplados
ao sistema_dinamico trazem um diferencial a plataforma proposta, fazendo com que o processo de

ta  tM AD + t1 + tT AD + ts + t2 + tM GS ,

(2)

no qual tM AD e o maior tempo de processamento
associado a todos os MADs utilizados pelo MCP,
t1 e o tempo relativo a menor taxa de transferencia (em bps) entre todos os MADs utilizados e o
MCP, tT AD e o tempo de processamento da TAD
que corresponde ao tempo de espera tw
T AD mais o
tempo que a TAD leva para ler a informacao de
recebida de todos os MADs, ts e o tempo que a
TS leva para ser executada, t2 e o tempo da menor taxa de transferencia (em bps) entre o MCP e
os MGSs e finalmente tM GS e o maior tempo de
processamento associado a todos os MGSs utilizado pelo MCP. O tempo de transmissao, t1 , entre
um MAD e o MCP pode ser medido por t1  Rb11 ,
onde b1 e a resolucao em bits do valor a ser transmitido. De forma semelhante o tempo de transmissao entre o MCP e o MGS pode ser expresso
por t2  Rb22 , no qual b2 e a resolucao em bits do
valor transmitido.
4

Descricao do Prototipo

Para validar o sistema proposto foi desenvolvido
um prototipo, ilustrado na Figura 7, com M  2
MADs (MAD-1 e MAD-2) e N  1 MGS (MGS1). O MCP foi implementado utilizando a plataforma Intel DN2800MT Mini-ITX com o sistema
operacional Linux (distribuicao Ubuntu 13.10) e
os MADs e MGSs foram implementados em mi-

870

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

crocontroladores. O MAD-1 utilizou um processador ATmega 2560 do fabricante Atmel atraves
do kit de desenvolvimento Arduino Mega 2560, O
MAD-2 fez uso de um processador ATmega 328p
do fabricante Atmel atraves do kit de desenvolvimento Arduino Uno e o MGS utilizou o processador PSOC 3 CY8C38 do fabricante Cypress atraves do kit PSOC CY8CKIT-001. A comunicacao
entre os dois MADs e o MCP foi atraves do protocolo USART (Universal Synchronous and Asynchronous serial Receiver and Transmitter) a uma
taxa de R1  9.6 kbps e a comunicacao entre o
MGS e o MCP foi atraves do protocolo USB (Universal Serial Bus) a uma taxa de R2  1 Mbps.

area da secao transversal do tubo de sada do tanque (cm2 ), respectivamente.
tanque

q m(t)Ve(t)

q e(t)
bomba

n(t)

água

q s(t)
V o(t)

Figura 8 Sistema dinamico simulado em tempo
real pelo prototipo desenvolvido.
O sistema_dinamico foi simulado em tempo
real utilizando o metodo de resolucao para ODE
de Euler (variavel MethodODE ), metodo simples
mais suficiente para o sistema_dinamico apresentado na Equacao 3. Neste metodo a Equacao 3
pode ser rescrita como

z(t) para z(t) < nmax
n(t) 
,
(4)
nmax para z(t)  nmax
onde nmax e nvel maximo de agua no tanque e
Z t
z(t)  n0 +
g (s, n(s)) ds, t > t0 e n0  0 (5)

Figura 7 Prototipo desenvolvido do STRSD formado por um MCP (Intel DN2800MT Mini-ITX),
dois MADs (kit Arduino Mega 2560) e um MGS
(kit PSOC CY8CKIT-001).

t0

no qual n0 e a condicao inicial do nvel do tanque
e g (s, n(s)) e expresso como

p
1 
qm (s)Ve (s)  Vo (s)a 2gn(s)
g (s, n(s)) 
A
(6)
Assim, o metodo de Euler aproxima o valor da
integral, apresentada na equacao 5, pela area de
um retangulo (Butcher, 2008), ou seja,
Z t
z(t + t)  n0 +
g (s, n(s)) ds

A aplicacao principal do MCP associada ao
prototipo foi implementada apenas com um OSD
disponvel que representa o sistema_dinamico ilustrado na Figura 8 e no qual os resultados serao
apresentados na proxima secao. O sistema_dinamico a ser simulado em tempo_real representa um
tanque de agua acoplado a uma bomba (ver Figura 8). A bomba tem vazao variavel, qe (t), que
e proporcional a sua vazao maxima qm (t) pelo valor da seu atuador Ve (t). A valvula de sada do
tanque tambem possui um controle contnuo Vo (t)
e a vazao apos esta valvula e dada por qs (t). A
altura do nvel de agua do tanque e caracterizada
pela variavel n(t). Neste caso o OSD possui duas
entradas, P  2, que sao o valor do atuador da
bomba, Ve (t), e o controle da valvula de sada,
Vo (t), e uma sada, H  1, que e o nvel de agua
do tanque, n(t). O sistema de equacoes_diferenciais a associado ao OSD pode ser expresso por

dn(t)
 qe (t)  Vo (t)qs (t)  A dt
f (t) 
,
(3)
q (t)  qm
p(t)Ve (t)
 e
qs (t)  a 2gn(t)

Z
+

t0
t

g (s, n(s)) ds
t

 z(t) + g (t, n(t))  t

(7)

onde t e o passo da interacao do metodo de Euler
(Butcher, 2008). Para o STRSD t e o tempo de
execucao da thread TS, ou seja, ts  t, assim, o
metodo de resolucao implementado no prototipo
pode ser expresso por

 v(t) para v(t) < nmax
n(t + ts ) 
(8)

nmax para v(t)  nmax
no qual,

onde qm (t), A, g e a sao o conjunto de parametros
ajustaveis, M, do OSD e representam a vazao maxima da bomba (cm2 s), area da secao transversal
do tanque (cm2 ), a forca gravitacional (m2 s) e a

v(t)

871

 n(t) +
(9)
 


p
1
qm (t)Ve (t)  Vo (t)a 2gn(t)
 ts .
A

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

O sinal de controle do atuador da bomba,
Ve (t), assume valores entre 0 e 1 no OSD. Porem
para caracterizar uma situacao mais real, o sinal
externo, x11 (t), associado a Ve (t) e caracterizado
por sinal digital de largura de pulso variavel entre 0 e 100 (PWM - Pulse Wide Modulation)
e frequencia fixa. Assim, o MAD-1, atraves de
uma AMAD (conjunto C de codigos) embarcada
no ATmega 2560 reconhece, em tempo_real, a largura do pulso PWM de x11 (t) e a converte em um
valor entre 0 e 1 para ser transmitido ao MCP via
protocolo USART a uma taxa R1  9.6 kbps. A
resolucao do valor associado a Ve (t) na conversao
do sinal PWM foi de 8 bits (b1  8), para simplificar o processo de transmissao, resultando em
um tempo de transmissao de 0.83 ms. A aplicacao
embarcada no MAD-1 teve um tempo de execucao
em torno de 110 ms devido a frequencia utilizada
no PWM que foi de 100 Hz.

Tabela 1 Tempos (em ms) estimados relativos aos
MADs e MGSs com base nas variaveis apresentadas na Equacao 2 (tw
T AD  100s).
MAD-1 MAD-2 MGS-1 MCP
tM AD
110
20


t1
0, 83
0, 83


tM GS


1

t2


8

tT AD



0, 2

5

Resultados Experimentais

Objetivando validar experimentalmente o prototipo desenvolvido foram realizados varios testes variando o conjunto de parametros, M 
qm (t), A, g, a, do sistema_dinamico caracterizado pela Equacao 3. Os testes foram comparados com resultados obtidos na plataforma MatlabSimulink em simulacoes de tempo nao real.
Os valores utilizados nos parametros do conjunto
M foram baseados em um kit didatico de tanques
acoplados da empresa Quanser utilizada nas disciplinas de sistemas_de_controle e automacao.
Em todos os experimentos realizados foi utilizado uma bomba com vazao constante de qm (t) 
69 cm3 s, valor de aceleracao gravitacional em g 
9.8 ms2 , o nvel maximo do tanque nmax  30 cm
e o valor da secao transversal do tubo de sada em
a  0.1781 cm2 gerando uma vazao de sada, qs (t),
maxima de 17.81 cm3 s. Os testes utilizaram valores de A  15.518 cm2 e A  62.072 cm2 para a
area da secao transversal do tanque fazendo com
que o tempo de resposta do sistema_dinamico, tr ,
ficasse no pior caso em torno de tr  100 s. Com
base no valor de tr e nos valores apresentados na
secao anterior que estao resumidos na Tabela 1
pode-se atraves da Equacao 3 estimar um valor
para ts que ficou em 100 ms e calcular o valor de ta
que ficou em 212 ms respeitando a restricao apresentada na Equacao 1.
As Figuras 9 a 11 apresentam os resultados obtidos para plataforma STRSD executando
o prototipo detalhado na secao anterior juntamente com os resultados obtidos de simulacoes em
tempo nao real com o MatlabSimulink. Em todos os resultados pode observar que a plataforma
STRSD atendeu aos requisitos apresentando um
erro muito pequeno em relacao a simulacao de
tempo nao real utilizada como referencia. Em todos os testes, apresentados nas Figuras 9 a 11, o
controle da vazao de sada ficou fixo no valor maximo, Vo (t)  1, e o controle da vazao de entrada,
Ve (t), ficou sendo alterando entre 0 e 1, variando
o valor da vazao de entrada, qe (t), em relacao a
vazao constante, qm (t), gerada pela bomba (ver
Equacao 3).
A Figura 9 detalha o resultado para uma tanque com A  15.518 cm2 e qe (t)  0.457. Ja a

No caso do sinal de controle associado ao atuador valvula de sada, Vo (t), OSD tambem trabalha com valores entre 0 e 1. Todavia, neste caso
para diferenciar do caso anterior o sinal externo,
x21 (t), associado a Vo (t) e caracterizado por sinal
de amplitude variavel entre 0 e 2.5 Volts. Desta
forma, o MAD-2 atraves de uma AMAD (conjunto
C de codigos) embarcada em outro ATmega 2560
reconhece, em tempo_real, a amplitude do sinal
x21 (t) e a converte em um valor entre 0 e 1 para
ser transmitido ao MCP via protocolo USART a
uma taxa R1  9.6 kbps. A resolucao do valor associado a Vo (t) na conversao analogicodigital foi
de 8 bits (b1  8), resultando em um tempo de
transmissao de 0.83 ms. A aplicacao embarcada
no MAD-2 teve um tempo de execucao em torno
de 20 ms.
Finalmente, a sada do sistema_dinamico simulado, n(t), que representa o nvel do tanque foi
associada a um sinal analogico, s11 (t), no MGS1. Neste caso a AMGS (conjunto D de codigos)
embarcada no MGS-1 simula um sensor de nvel
analogico, bastante utilizando no meio industrial,
com valores de sada entre 0 e 1 volt. Foi utilizada uma resolucao de 8 bits para o valor da
sada do nvel, n(t), e uma taxa de transmissao
de 1 Mbps (via protocolo USB) entre o MCP e o
MGS-1 resultando em um tempo de transmissao
em torno de 8 s. A resolucao do conversor digitalanalogico, no MGS-1, foi de 8 bits e o tempo
de execucao da AMGS foi de aproximadamente
1 ms.
A Tabela 1 resume os tempos estimados relativos aos MADs e MGSs com base nas variaveis apresentadas na Equacao 2. As celulas em
amarelo representam os tempos escolhidos e partir destes valores e do tempo de resposta do sistema_dinamico, tr , pode-se estimar o valor de ts e
calcular o tempo de amostragem do sistema, ta .

872

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

Figura 10 apresenta o resultado para uma sequencia programada de perturbacoes, ou seja, o MAD1 foi programado para iniciar com qe (t)  0.457
e depois de 100s alterar para qe (t)  0.6. Finalmente a Figura 11 apresenta o resultado para uma
tanque com A  62.072 cm2 .

0.08
0.07
0.06

Level (m)

0.05
0.04
0.03

0.18
0.02

Simulação sem tempo_real
Simulação em tempo_real (Plataforma STRSD)

0.16
0.01
0.14
0

Nível (m)

0.12

0

50

100
Time (s)

150

200

0.1
0.08

Figura 11 Resultados obtidos para a plataforma
STRSD referentes ao sistema_dinamico caracterizado pela Equacao 3 com A  62.072 cm2 e
qe (t)  0.3.

0.06
Simulação sem tempo_real
Simulação em tempo_real (Plataforma STRSD)

0.04
0.02
0

0

20

40

60
Tempo (s)

80

100

120

o PID.
Figura 9 Resultados obtidos para a plataforma
STRSD referentes ao sistema_dinamico caracterizado pela Equacao 3 com A  15.518 cm2 e
qe (t)  0.457.

0.2
0.18
0.16

Nível (m)

0.14
0.12
0.1
0.08
0.06

0.25

Simulação em tempo_real (Plataforma STRSD)
Set point

0.04

Nível (m)

0.2

0.02
0

0.15

0

50

100
Tempo (s)

150

200

0.1

0

Figura 12 Resultados obtidos para a plataforma
STRSD utilizando um controlador PID (kp 
2, ki  0.2 e kd  0.001) externo embarcado em
um microcontrolador ATmega 2560.

Simulação sem tempo_real
Simulação em tempo_real (Plataforma STRSD)

0.05

0

50

100
Tempo (s)

150

200

Figura 10 Resultados obtidos para a plataforma
STRSD referentes ao sistema_dinamico caracterizado pela Equacao 3 com A  15.518 cm2 e
qe (t)  0.457 e depois de 100s para qe (t)  0.6.

6

Conclusoes

Este trabalho apresentou uma proposta de uma
solucao embarcada para simulacao_em_tempo_real
para sistemas_dinamicos chamada de STRSD. A
plataforma STRSD e formada por um modulo
hardware central chamado de MCP e um conjunto de modulos de hardware auxiliares chamados de MADs e MGSs, fazendo com que a mesma
seja modular e distribuda. Testes experimentais foram apresentados a partir de um prototipo
desenvolvido utilizado um kit Intel DN2800MT
Mini-ITX como MCP, kits Arduino Mega 2560
como MADs e um kit PSOC CY8CKIT-001 como
MGS. Os resultados obtidos mostram que a plataforma STRSD funciona de forma bastante adequada com erros muito pequenos quando comparados a simulacoes em tempo nao real. O STRSD
podera ser utilizado na otimizacao e sintonia de

As Figuras 12 e 13 apresentam resultados obtidos para um controlador PID (Ogata, 2001) embarcado em um microcontrolador ATmega 2560
(utilizando kit Arduino Mega 2560) externo a plataforma STRSD. O sistema foi controlado para
um valor de referencia (set point) de 15 cm e os resultados o mostram a resposta do sistema atraves
do valor associado ao nvel n(t). Este experimento
mostra claramente o benefcio do STRSD no projeto relativo ao desenvolvimento de algoritmos de
controle_embarcados no qual, pode-se testar o desempenho e a viabilidade de novos algoritmos em
tempo_real sem a necessidade de aquisicao de plantas reais de alto custo. A Figura 14 apresenta a
bancada montada para realizacao dos testes com

873

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

of dynamic_systems using modern DSPs, Simulation Practice and Theory 5(2) 137 
151.

0.2
0.18
0.16

Level (m)

0.14

Dixit, V., Patil, M. and Chandorkar, M. (2009).
Real time simulation of power electronic systems on multi-core processors, Power Electronics and Drive Systems, 2009. PEDS
2009. International Conference on, pp. 1524
1529.

0.12
0.1
0.08
0.06
Simulação em tempo_real (Plataforma STRSD)
Set point

0.04
0.02
0

0

50

100
Time (s)

150

Keller, M. and Kolb, A. (2009). Real-time simulation of time-of-flight sensors, Simulation Modelling Practice and Theory 17(5) 967  978.

200

Figura 13 Resultados obtidos para a plataforma
STRSD utilizando um controlador PID (kp 
5, ki  0.1 e kd  0.03) externo embarcado em
um microcontrolador ATmega 2560..

Kim, W., Lee, B., Kim, K., Yang, T. and Kim, S.
(2011). A real-time hwil simulation control
system architecture for implementing evaluation environment of complex embedded
systems, Advanced Communication Technology (ICACT), 2011 13th International Conference on, pp. 254259.
Matar, M. and Iravani, R. (2010). Fpga implementation of the power electronic converter
model for real-time simulation of electromagnetic transients, Power Delivery, IEEE Transactions on 25(2) 852860.
Menghal, P. M. and Laxmi, A. (2011). Real time
simulation A novel approach in engineering
education, Electronics Computer Technology
(ICECT), 2011 3rd International Conference
on, Vol. 1, pp. 215219.

Figura 14 Bancada com equipamentos utilizada
para realizacao dos testes experimentais.

Monga, M., Karkee, M., Sun, S., KiranTondehal,
L., Steward, B., AtulKelkar and Zambreno,
J. (2012). Real-time simulation of dynamic vehicle models using a high-performance
reconfigurable platform, Procedia Computer
Science 9(0) 338  347.

algoritmos de controle_embarcados voltados para
industria e como ferramenta de apoio ao ensino de
graduacao e pos-graduacao.
Referencias

Ogata, K. (2001). Modern Control Engineering,
4th edn, Prentice Hall PTR, Upper Saddle
River, NJ, USA.

Ben-Ari, M. (2006).
Principles of Concurrent and Distributed Programming, Prentice
Hall international series in computer science,
Addison-Wesley.

Venugopal, R., Wang, W. and Belanger, J.
(2011). Advances in real-time simulation for
power distribution systems, Energy, Automation, and Signal (ICEAS), 2011 International Conference on, pp. 16.

Boukerche, A. and Lu, K. (2005). A novel approach to real-time rti based distributed simulation system, Simulation Symposium, 2005.
Proceedings. 38th Annual, pp. 267274.

Vityaz, O. and Zimmermann, G. (2005). Realtime simulation using graceful degradation of
accuracy, Energy and Buildings 37(8) 795 
806.

Butcher, J. (2008). Numerical Methods for Ordinary Differential Equations, 1st edn, Wiley.
Champagne, R., Dessaint, L.-A. and FortinBlanchette, H. (2003). Real-time simulation
of electric drives, Mathematics and Computers in Simulation 63(3-5) 173  181.

You, T., an Zhu, Y. and peng Zhang, D. (2009).
Applied research of delaminated real-time
network framework based on rtx in simulation, Information and Computing Science,
2009. ICIC 09. Second International Conference on, Vol. 1, pp. 389392.

Cosic, K., Kopriva, I. and Sikic, T. (1997). A
methodology for digital real time simulation

874