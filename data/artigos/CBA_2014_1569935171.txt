Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

ALGORITMO DISTRIBUIDO PARA ALOCACAO DINAMICA DE TAREFAS EM UM
ENXAME DE ROBOS
Rafael Mathias de Mendonca, Nadia Nedjah, Luiza de Macedo Mourelle


Departamento de Engenharia Eletronica e Telecomunicacoes, Faculdade de Engenharia
Universidade do Estado do Rio de Janeiro
Rio de Janeiro, RJ, Brasil


Departamento de Engenharia de Sistemas e Computacao, Faculdade de Engenharia
Universidade do Estado do Rio de Janeiro
Rio de Janeiro, RJ, Brasil

Emails rmathias.mendonca@gmail.com, nadia@eng.uerj.br, ldmm@eng.uerj.br
Abstract This paper proposes a distributed control algorithm to implement dynamic task allocation in a
swarm_robotics environment. The algorithm is inspired by the particle_swarm_optimization. In this context, each
robot that integrates the swarm must run the algorithm periodically in order to control the underlying actions
and decisions. The algorithm was implemented on real robots and extensively tested. The algorithm is effective.
The corresponding performance is promising.
Dynamic task allocation, Swarm robotics, Swarm intelligence.

Keywords

Resumo Este artigo propoe um algoritmo de controle distribudo para a alocacao_dinamica_de_tarefas em
um ambiente de robotica_de_enxame. O algoritmo e inspirado na otimizacao por enxame de partculas. Neste
contexto, cada robo que integra o enxame deve executar este algoritmo periodicamente para controlar suas acoes
e decisoes. O algoritmo foi implementado em robos reais e amplamente testado. O algoritmo e eficaz e sua
eficiencia e promissora.
Palavras-chave

.

et al., 2013a) representa uma melhor aproximacao do comportamento dos enxames de especies
sociais, onde nao existe um mecanismo de controle_centralizado. Portanto, a alocacao de tarefas
em enxames_de_robos deve surgir como resultado
de um processo distribudo. Esta descentralizacao
aumenta a complexidade do problema, pois o robo
nao tem uma visao completa do ambiente.
Diversas aplicacoes de automacao que utilizam enxame_de_robos requerem o uso da alocacao
dinamica de tarefas (ADT). Por exemplo, em situacoes que representem um risco ou inviabilizem a
presenca humana, o enxame_de_robos seria capaz
de se auto-organizar formando grupos, onde cada
grupo executaria uma tarefa com o objetivo, de
juntos realizarem uma acao significativa.
Neste artigo, e proposto um algoritmo distribudo de ADT em um enxame_de_robos. O algoritmo utiliza o algoritmo_de_otimizacao por enxame de partculas (Particle Swarm Optimization
 PSO) (Kennedy and Eberhart, 1995) (Eberhart
and Kennedy, 1995) no processo de decisao. O
PSO e um algoritmo estocastico baseado em inteligencia_de_enxame que pode ser utilizado para
procurar a solucao de problemas de otimizacao em
um espaco de busca de forma iterativa. A iteracao
local e global da solucao apresentada pelas partculas atualizam a posicao e velocidade de cada
partcula que se locomovem pelo espaco de busca.
O algoritmo proposto permite uma execucao
eficiente em robos dotados de recursos de armazenamento e processamento limitados. O algoritmo

Introducao

A realizacao de tarefas de alta complexidade por
um sistema robotico e um problema de interesse
da comunidade academica desde muito tempo.
Este tema e abordado em muitas areas de pesquisa, que propoem diferentes formas de abordagem (Parker, 2003). Os algoritmos_evolutivos
de otimizacao, provavelmente, representam a area
mais atual que opera na resolucao desse tipo de
problema (Coello et al., 2006). Essa area de pesquisa trata dos processos de otimizacao na busca
por solucoes em um espaco de busca de grandes
dimensoes.
A resolucao consiste em decompor uma tarefa
de alta complexidade em uma serie de tarefas de
simples resolucao. A realizacao coordenada destas
tarefas simples permite a realizacao da tarefa complexa, respeitando uma proporcao pre-definida de
execucao. A proporcao deve ser determinada no
sentido de permitir o alcance do objetivo global
pelo enxame_de_robos. O problema de alocacao de
tarefas surge da necessidade de alocar as tarefas
aos indivduos de modo coordenado, permitindo
um bom gerenciamento deste processo.
A alocacao de tarefas e um processo dinamico
pois precisa ser continuamente ajustado em resposta as alteracoes no ambiente eou no desempenho do enxame. Uma solucao imediata para
resolver este problema baseia-se na abordagem
centralizada. No entanto, uma alocacao distribuda (de Mendonca et al., 2013b) (de Mendonca

3467

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

foi testado em um enxame_de_robos do tipo Elisa
III para demonstrar sua eficacia e eficiencia. Os
resultados dos experimentos sao reportados.
O restante deste artigo e organizado em 6 secoes. Inicialmente, na Secao 2 e apresentado o
problema de alocacao de tarefas. Em seguida, na
Secao 3 sao apresentados alguns trabalhos relacionados. Apos, na Secao 4 e detalhado o algoritmo
de ADT proposto. A seguir, na Secao 5 e apresentada a implementacao do algoritmo proposto em
robos reais. Na Secao 6 sao discutidos os resultados obtidos e por fim na Secao 7 sao comentadas
as conclusoes e as propostas de trabalhos futuros.
2

(a, t) 



Q 

(1)

Q    .

(ar , tj ),

(6)

(7)

A avaliacao da aptidao de uma alocacao A
e realizada utilizando uma funcao objetivo f (A),
definida pela Equacao 8
P
Ci  CA i
,
(8)
f (A)  i1

onde C representa a quantidade desejada de robos
alocados a cada tarefa de acordo com a proporcao
desejada P e CA representa quantidade de robos
alocados a cada tarefa de acordo com A.

(2)

O conjunto C define a quantidade de robos
alocados a cada umas das  tarefas, de forma que
o numero de robos alocados a tarefa tj  T corresponde ao contador cj  C.
No enxame, cada robo possui uma identificacao unica representada por id que o diferencia dos demais. O conjunto de identificadores
dos robos do enxame e representado por I 
id1 , id2 , . . . , id .
A alocacao do enxame e representada por
A  a1 , a2 , . . . , a , onde aj identifica a tarefa
alocada ao robo idj . A partir de uma alocacao
A do enxame e possvel deduzir os elementos do
conjunto CA de contadores, conforme apresentado
pela Equacao 3, tal que

X

ii  11  22      nn ,

sendo o enxame constitudo por  robos, diferenciados em n grupos, sendo cada grupo i composto
por i robos capazes de realizar o distinto conjunto Ti de tarefas. Deste modo, para o enxame de
caracterstica homogenea composto por um unico
grupo (n  1), Q e representado por

j1

cj  CA tj  

n
Y

i1

sendo, cj  pj   robos devem ser alocados a
tarefa tj .
O numero de robos alocados a cada uma das
tarefas e representado por um conjunto de contadores C  c1 , c2 , . . . , c , tal que
cj  .

(5)

A complexidade do processo de alocacao de
tarefas e definida por um problema de decisao em
que se deseja encontrar a alocacao A que resolva
o problema de ADT pertencente a um conjunto
de alocacoes factveis Q. O numero de alocacoes
factveis Q depende de  e  de acordo com as
caractersticas do enxame.
Para o enxame de caracterstica heterogenea,
Q e definido pela Equacao6

j1


X

(4)

0 caso contrario,

 tj  T e  pj  P, CA tj   pj  .

Seja T  t1 , t2 , . . . , t  o conjunto de identificadores de tarefas a serem alocadas aos robos do enxame, sendo este composto pelas  tarefas validas
a serem realizadas pelo enxame. Considerando
um enxame composto por  robos, o processo de
ADT permite a alocacao das  tarefas aos  robos
do enxame, respeitando-se a proporcao desejada
P. Esta proporcao P  p1 , p2 , . . . , p , e definida
por um conjunto de inteiros positivos pj  N , tais
que
pj  1,

se a  t

de forma que ao termino da contabilizacao o conjunto CA representara a distribuicao de robos alocados em cada tarefa definido pela alocacao A.
A resolucao do problema de alocacao dinamica de tarefa consiste em encontrar a alocacao
A  a1 , a2 , . . . , a  tal que

Alocacao dinamica de tarefas


X


 1

3

Trabalhos Relacionados

Recentemente, varias solucoes tem sido propostas na literatura para os problemas de ADT. A
partir da taxonomia disponvel em (Zhang and
Liu, 2008) e realizada a classificacao dos algoritmos quanto a sua abordagem como comportamentais, baseados nas leis do mercado e bioinspirados.
Na abordagem comportamental, as tarefas a
serem realizadas sao diferenciadas em grupos, ditos grupos comportamentais. Os grupos contem
um conjunto de tarefas a serem realizadas que
possuem uma relacao entre elas. Dentre os algoritmos comportamentais destacam-se o Alliance

(3)

r1

onde a funcao  e definida conforme apresentado
na Equacao 4

3468

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

ADTG, cada robo idi representa uma partcula i
e possui uma solucao de alocacao Ai em potencial
para o enxame. O numero de dimensoes deste
problema e representada pelo numero de robos ,
sendo o espaco de busca discreto de cada dimensao
delimitado pelo numero de tarefas  .
Algoritmo 1 ADTG no robo i
Entrada  ,  e P
1 Inicializar(, )
2 Enquanto verdadeiro Faca
3
Se Pi 6 P Entao
4
AjustarAlocacao(Ai , AP besti , AGbest )
5
Senao
6
ExecutarTarefa(ti)
7
Fim Se
8 Fim Enquanto

Figura 1 Q para um enxame homogeneo.
(Parker, 1998), BLE (Werger and Mataric, 2000)
e ASyMTRe (Tang and Parker, 2005).
Os algoritmos baseados nas leis de mercado
respeitam o preceito de maximizar as receitas (informacao, rapidez) enquanto minimizam os custos
(tempo de convergencia, comunicacao) com o objetivo de maximizar as vantagens de cada implementacao. Entre os algoritmos com destaque na
atualidade sao citados, Leilao de primeiro preco
(Zlot et al., 2002), Murdoch (Gerkey and Mataric, 2000) e DEMiR-CF (Sariel and Balch, 2006).
A utilizacao de algoritmos bio-inspirados para
a resolucao_de_problemas de ADT apresenta um
consideravel crescimento em termos de pesquisas
e publicacoes (Goldingay and Van Mourik, 2013).
Derivado dos comportamentos de insetos sociais,
a abordagem da inteligencia_de_enxame apresenta
caractersticas apreciaveis, como a capacidade de
auto-organizacao e comportamento flexvel as mudancas no ambiente. Em (Yang and Wang, 2004)
foi realizada a cooperacao em grupos de robos
utilizando-se a otimizacao por colonia de formigas (Ant colony optimization  ACO).
4

Apos a inicializacao dos parametros do problema (linha 2) e verificado a cada iteracao se a
proporcao desejada P e alcancada, comparando-a
com a proporcao Pi , que e obtida a partir da alocacao Ai . Caso a proporcao desejada nao tenha
sido alcancada, e realizado o ajuste da alocacao Ai
(linha 4). Caso a proporcao desejada tenha sido
alcancada, a tarefa ti e realizada por um perodo
de tempo pre-definido (linha 6).
4.1

Etapa de Inicializacao

A etapa de inicializacao e implementada conforme
mostrado no Algoritmo 2. E considerada uma
configuracao inicial aleatoria com distribuicao uniforme da alocacao Ai do robo, sendo o conjunto de
contadores CAi atualizado. Em seguida, sao atualizados a proporcao Pi , a melhor alocacao atual
AP besti e a melhor alocacao global AGbest . Apos
a tarefa atual ti ser atualizada a etapa de inicializacao e encerrada.
Algoritmo 2 Inicializar no robo i
Entrada  e 
Sada Ai , AP besti , AGbest , Pi e ti 
1 Para r  1   Faca
2
Ai r  GeradorRand(1, . . . ,  )
3
CAi Ai r  CAi Ai r + 1
4 Fim Para
5 Para t  1   Faca
6
Pi t  CAi t
7 Fim Para
8 AP besti  Ai 
9 AGbest  Ai 
10 ti  AGbest idi 

Algoritmo Proposto

O Algoritmo para Alocacao Dinamica de Tarefas
com abordagem Global (ADTG) proposto define,
de forma dinamica, o ajuste da alocacao de tarefas Ai do ponto de vista do robo idi . O algoritmo baseia-se no processo de otimizacao do algoritmo GBPSO (Kennedy and Eberhart, 1995)
como forma de minimizar a funcao objetivo f (A)
idealizada para o problema de ADT.
O problema de ADT apresenta uma complexidade computacional alta sendo classificado como
NP completo (Gerkey and Mataric, 2004). Na Figura 1 e apresentada a relacao entre o numero de
alocacoes factveis Q formadas pelos enxames de
composicao homogenea para diferentes numeros
de tarefas.
A realizacao de ADTG no robo i e estruturado
em tres etapas principais inicializacao, ajuste e
execucao, conforme mostrado no Algoritmo 1. Em

4.2

Etapa de Ajuste

A etapa de ajuste e estruturada em 5 subetapas,
conforme apresentado no Algoritmo 3. Esta etapa
descreve o metodo proposto para implementar o
ajuste da alocacao atual dos robos do enxame de

3469

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

Algoritmo 4 AtualizarAlocPbest no robo i
Entrada , Ai e AP besti 
Sada P bests e AP besti 
1 Se f (Ai )  f (AP besti ) Entao
2
AP besti  Ai 
3 Fim Se
4 msg  hidi , f (AP besti )i
5 Repita
6
Enviar msg aos demais   1 robos
7
Receber msg dos demais   1 robos
8 Ate receber de todos os robos
9 Para r  1    1 Faca
10
Se Ir 6 idi Entao
11
P bestsr  f (AP bestr )
12
Fim Se
13 Fim Para

modo que seja obtida uma nova alocacao para os
robos que se aproxime da proporcao desejada P.
Algoritmo 3 AjustarAlocacao no robo i
Entrada Ai , AP besti e AGbest 
Sada ti 
1 AtualizarAlocPbest(Ai , AP besti )
2 IdentificarAlocGbest(P bests, AP besti )
3 Se idGbest  idi Entao
4
InformarAlocGbest(Ai )
5 Senao
6
AtualizarAlocGbest(idGbest )
7 Fim Se
8 Se f (AGbest ) 6 0 Entao
9
AtualizarAlocAtual(Ai , AP besti , AGbest )
10 Fim Se
11 ti  AGbest idi 

ritmo 5. O robo idGbest e identificado pelo menor
valor de aptidao de AP best encontrado entre os valores contidos em P bests e o valor de aptidao de
AP besti . Esta identificacao e realizada por todos
os robos, de modo que todos cheguem ao mesmo
resultado no final de   1 comparacoes.

E realizada a atualizacao da melhor alocacao
AP besti atraves de AtualizarAlocP best (linha 1).
Apos, o robo identifica a melhor alocacao AGbest
entre todos os robos do enxame e o identificador
idGbest do robo que possui esta melhor alocacao
atraves de Identif icarAlocGbest (linha 2).
O robo idGbest executa um procedimento distinto daquele realizado pelos demais robos do
enxame atraves de Inf ormarAlocGbest (linha
4), informando a alocacao AGbest aos demais
robos. Os demais robos atualizam AGbest com
a alocacao recebida do robo idGbest atraves de
AtualizarAlocGbest (linha 6).
Em seguida, e avaliada a necessidade de atualizacao da alocacao atual Ai verificando-se o valor de aptidao f (AGbest ). Um valor de aptidao
nulo identifica a situacao onde pelo menos um dos
robos possui uma alocacao que representa a proporcao desejada P. Caso o valor de aptidao de
AGbest nao seja nulo e realizada a atualizacao da
alocacao atual Ai atraves de AtualizarAlocAtual
(linha 9). Ao final, a tarefa atual ti do robo idi e
atualizada a partir de AGbest .
O Algoritmo 4 descreve o processo de atualizacao da melhor alocacao AP besti obtida pelo robo
i ate o momento.
E realizada a comparacao entre os valores de
aptidao de Ai e AP besti . Caso f (Ai ) apresente
um valor menor ou igual que f (AP besti ) a melhor
alocacao atual AP besti sera atualizada com Ai .
Em seguida, e realizado um processo de troca
de mensagens entre os robos como a finalidade de
informar aos demais robos o valor de aptidao da
melhor alocacao f (AP besti ) e receber a mesma informacao dos demais. O robo atualiza o vetor
P bests com os valores de aptidao recebidos pelas mensagens dos demais robos, de modo que ao
termino deste processo os robos do enxame possuem pleno conhecimento da melhor alocacao do
enxame.
A identificacao do robo idGbest que possui a
melhor alocacao global AGbest e descrita no Algo-

Algoritmo 5 IdentificarAlocGbest no robo i
Entrada , AP besti e P bests
Sada idGbest 
1 id  idi 
2 P bestmin  f (AP besti )
3 Para r  1    1 Faca
4
Se P bestmin > P bestsr Entao
5
P bestmin  P bestsr
6
id  Ir, onde Ir 6 idi 
7
Fim Se
8 Fim Para
9 idGbest  id 
O robo idGbest informa aos demais robos a alocacao AGbest atraves de um processo de troca de
mensagens, conforme mostra o Algoritmo 6. Neste
processo, o robo idGbest envia mensagens, denominadas msg1, aos demais robos e recebe dos demais mensagens, denominadas msg2. A mensagem msg1 e composta por idGbest e AGbest , de
modo que ao ser enviada informe aos demais   1
robos do enxame a alocacao AGbest .
Algoritmo 6 InformarAlocGbest no robo i
Entrada , Ai 
Sada AGbest 
1 AGbest  Ai 
2 msg1  hidi , AGbest i
3 Repita
4
Enviar msg1 aos demais   1 robos
5
Receber msg2 dos demais   1 robos
6 Ate que todos tenham recebido
Concorrente neste processo de troca de mensagens, os demais robos atualizam a alocacao

3470

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

AGbest recebida do robo idGbest , conforme apresentado no Algoritmo 7. Ao receber msg1, cada
um dos demais robos enviam uma mensagem
msg2 de confirmacao de recebimento composta
pelo seu idi .
Algoritmo 7 AtualizarAlocGbest no robo i
Entrada idGbest 
Sada AGbest 
1 ms2g  hidi i
2 Receber msg1 do robo idGbest 
3 Enviar msg2 ao robo idGbest 
4 AGbest  AidGbest 

Figura 2 Detalhe de um robo no enxame.

A atualizacao da alocacao atual Ai e realizada
pelo Algoritmo 8 baseando-se nas contribuicoes de
alocacao cognitiva e social, analogas aos componentes cognitivo e social do PSO. As contribuicoes
atualizam a velocidade do robo nas  dimensoes
da posicao definida pela alocacao.

arredondado.
Em seguida, e realizada a atualizacao de
Ai r com o seu valor anterior acrescido de
velocidader. O valor de Ai r e delimitado dentro do espaco de busca definido pelos valores
do conjunto dos identificadores das tarefas T 
t1 , t2 , . . . , t  (linhas 13  19), de modo que os
valores estarao sempre compreendidos entre os extremos inferior t1 e superior t . Durante o processo de atualizacao de Ai , e realizada a contabilizacao do numero de robos alocados a cada uma
das tarefas em  contadores CAi , baseando-se na
alocacao Ai atualizada. Apos, a proporcao Pi e
atualizada atraves do calculo das proporcoes equivalentes a cada uma das tarefas em relacao ao numero de robos .

Algoritmo 8 AtualizarAlocAtual no robo i
Entrada  , , Ai , AP besti , AGbest 
Sada Ai e Pi 
1 Para r  1   Faca
2
r1  GeradorRand0 . . . 1
3
r2  GeradorRand0 . . . 1
4
Acognitiva  c1  r1  (AP besti r  Ai r)
5
Asocial  c2  r2  (AGbest r  Ai r
6
velocidader  velocidader+ Acognitiva +
Asocial 
7
Se velocidader  0.5 Entao
8
velocidader  velocidader
9
Senao
10
velocidader  velocidader
11
Fim Se
12
Ai r  Ai r + velocidader
13
Se Ai r < t1 Entao
14
Ai r  t1 
15
Senao
16
Se Ai r > t Entao
17
Ai r  t 
18
Fim Se
19
Fim Se
20
CAi Ai r  CAi Ai r + 1
21 Fim Para
22 Para t  1   Faca
23
Pi t  CAi t
24 Fim Para

5

Aspectos de Implementacao

O algoritmo proposto foi implementado em enxames_de_robos do tipo Elisa III1 , mostrados na Figura 2. Os robos sao equipados com um LED central RGB capaz de representar qualquer cor atraves da combinacao das cores Vermelho, Verde e
Azul. A cor obtida e intensificada por um difusor
localizado no topo do robo. Nesta implementacao, cada tarefa e representada por uma cor distinta com o objetivo de observar o progresso dos
ajustes de tarefas realizados pelos robos. Assim,
foram usadas as cores Azul, Amarelo, Rosa, Roxo
e Verde para representar as cinco tarefas utilizadas.
Cada robo e equipado com um modulo transceiver adequado para aplicacoes com comunicacao wireless com ultra-baixo consumo_de_energia
na faixa de Radio Frequencia (RF). O modulo e
designado para operar na banda de radio ISM (Industrial, Scientific and Medical band basis) de 2.4
GHz.
A estacao-base e conectada a um computador
via USB e transfere dados de e para os robos de
modo wireless. O modulo transceiver, embarcado
no robo, comunica-se via comunicacao SPI (Serial

Para cada dimensao r, e realizada a atualizacao do valor de velocidader com o calculo das
contribuicoes de alocacao cognitiva (linha 4) e social (linha 5) da dimensao. Como forma de adequar o resultado da posicao ao espaco de busca
discreto, e realizado um arredondamento do valor
de velocidader, de modo que velocidader  Z
(linhas 7  11). O processo de arredondamento de
um numero x  x  Q considera a parte fracionaria x para definir se o numero tera o seu valor

1 Disponvel

3471

na pagina httpwww.gctronic.com

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

Figura 4 Estrutura da mensagem enviada pelo
robo para a estacao-base

Figura 3 Comunicacao dos robos via RF
Figura 5 Estrutura da mensagem enviada pela
estacao base para o robo id

Peripheral Interface) com o microcontrolador do
robo e transfere dados de e para a estacao-base,
como mostrado na Figura 3.
Cada robo e identificado com um endereco
RF id distinto no enxame. Este endereco e armazenado em um endereco especfico da memoria
EEPROM do robo. Cada mensagem proveniente
da estacao-base possui um endereco de destino que
coincide com o endereco de um dos robos do enxame. Ao receber a mensagem, o robo compara
o endereco de destino da mensagem recebida com
o seu endereco verificando se a mensagem e destinada a ele. Caso seja, a mensagem e armazenada
e interpretada pelo robo.
A comunicacao entre os robos e a estacao-base
e controlada pelo computador que verifica a existencia de mensagens na estacao-base a cada milissegundo, sendo esta a restricao a maxima velocidade de comunicacao. Para evitar esta limitacao, e proposto um protocolo de comunicacao
otimizado onde o pacote enviado pelo computador para a estacao-base contem comandos para
quatro robos simultaneamente. A estacao-base e
responsavel por separar o pacote recebido em quatro mensagens individuais de 16 bytes cada, antes
de envia-las aos enderecos de destino indicados.
O mesmo procedimento e realizado durante a recepcao nos robos. Neste caso, a estacao-base e
responsavel por receber as mensagens de 4 robos
unindo-as em um unico pacote de 64 bytes para
ser enviado ao computador. Este procedimento
permite aumentar em 4x a velocidade de comunicacao para a troca de mensagens entre os robos.
A estrutura das mensagens enviadas pelos
robos para a estacao-base e da estacao-base para
os robos sao mostradas nas Figuras 4 e 5, respectivamente. O byte de validade (BV) valida a
autenticidade da mensagem enviada pela estacaobase quando a mesma e recebida pelo robo. O
byte de Tipo define o tipo da mensagem, quando
existirem dois ou mais tipos de mensagens, os dois
bytes que compoem ID contem o endereco de destino da mensagem. Os 12 bytes correspondentes
a carga util contem o dado a ser disponibilizado.
Note que as mensagens geradas pelos robos nao
possuem endereco de destino devido ao fato de
que a comunicacao ser default.

Para representar os dois distintos momentos
de comunicacao realizados pelos robos durante a
execucao de ADTG, foram implementados tres tipos diferentes de mensagens. Na Figura 6 sao
mostradas as configuracoes de carga util para os
tres tipos de mensagens enviadas pelos robos. As
mensagens de tipo 1 sao utilizadas no primeiro
processo de comunicacao entre os robos informando o valor de aptidao da alocacao AP best . As
mensagens de tipos 2 e 3 sao utilizadas no segundo
processo de comunicacao, sendo que o robo idGbest
envia mensagens de tipo 2 e os demais robo enviam
mensagens de tipo 3.

(a) Tipo 1

(b) Tipo 2

(c) Tipo 3

Figura 6 Configuracoes de carga util para os tres
tipos de mensagens enviadas pelo robo
6

Performance dos Resultados

A analise dos resultados permite avaliar a eficacia de ADTG, bem como a eficiencia em atingir
o objetivo principal de alocar as tarefas aos robos
do enxame, de modo que seja obtida uma nova
alocacao que respeite a proporcao desejada. Apos
atingir a nova alocacao adequada, o enxame deve
manter-se nesta por tempo indeterminado ate que
uma nova proporcao-objetivo seja informada.
Tabela 1 Distribuicao da proporcao entre tarefas
Proporcao
 Tarefas
T0
T1
T2
T3
T4
2
60 40



3
20 30 50


4
10 15 30 45

5
5 10 20 30 35
A configuracao do enxame foi variada em termos do numero de robos e do numero de diferentes
tarefas a serem alocadas. O numero de robos no

3472

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

enxame variou entre 4 e 25 robos e o numero de
diferentes tarefas variou entre 2 e 5 tarefas, sendo
ensaiados 40 diferentes casos. Para cada configuracao de enxame foi utilizada uma distribuicao de
proporcao especfica, conforme a Tabela 1.
Cada caso foi realizado por 10 vezes totalizando 400 diferentes ensaios. Os ensaios foram
conduzidos inicializando todos os robos do enxame
com alocacoes iniciais aleatorias e com a mesma
tarefa inicial, denominada Tarefa 0.

log(tempo)

10

10

10

Figura 10 Numero de mensagens enviadas

6

3
linear
5

4

Figura 11 Numero de mensagens recebidas
10

3
1

10

log()

vada a mesma tendencia de aumento em decorrencia ao aumento do numero de tarefas. Contudo,
o numero de iteracoes tende a diminuir em decorrencia ao aumento do numero de robos no enxame
na maioria dos casos.
Para avaliar a comunicacao foram analisados
o numero de mensagens trocadas entre os robos
ate o enxame alcancar a convergencia. Como
forma de referenciar a troca de mensagens, foi
estabelecido que as mensagens provenientes da
estacao-base com destino aos robos sao definidas
como Mensagens enviadas e as mensagens destinadas a estacao-base e geradas pelos robos sao definidas como Mensagens recebidas.
A media dos resultados obtidos para o numero
de mensagens enviadas e recebidas sao apresentadas nas Figuras 10 e 11, respectivamente. Podemos observar que os resultados apresentaram
uma distribuicao similar ao comparar os graficos
dos numeros de mensagens recebidas e enviadas de
cada grupo dos ensaios. Note que e possvel que as
mensagens geradas nao sejam recebidas pelo seu
destinatario e sejam perdidas durante o processo
de comunicacao.
Pode-se observar que o numero de mensagens
trocadas entre os robos aumenta em decorrencia
ao aumento no numero de robos na maioria dos
casos. Foi observado tambem, que o numero de
tarefas possui uma influencia direta na complexidade dos processos de decisao e de alocacao de
tarefas, resultando em um aumento em termos de
mensagens enviadas e recebidas, e no tempo de
convergencia e de numero de iteracoes. Um vdeo
do ensaio de ADTG para robos reais esta disponvel em httpyoutu.beZC5NnQLMobA.

Figura 7 Tempo de convergencia (ms)
Durante os ensaios, foram analisados o numero de iteracoes e o tempo em milissegundos ate
o enxame alcancar a proporcao desejada. Na Figura 7 sao apresentados os resultados de tempo
de convergencia, em milissegundos, para os ensaios com tres tarefas. Como forma de analise,
foi obtida a media dos resultados para cada caso.
Na Figura 8 sao apresentadas as medias dos resultados obtidos para o tempo de convergencia e na
Figura 9 sao apresentadas as medias dos resultados para o numero de iteracoes.

Figura 8 Tempo de convergencia (ms)

Figura 9 Numero de iteracoes
Podemos observar que o tempo de convergencia possui uma tendencia de aumento decorrente
do aumento do numero de robos no enxame e de
tarefas. Quanto ao numero de iteracoes, e obser-

7

Conclusoes

Neste artigo foi proposta a utilizacao de um algoritmo distribudo para gerenciar o processo de

3473

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

alocacao em um enxame_de_robos com o objetivo
de convergir para uma proporcao pre-definida. O
algoritmo proposto e uma solucao eficiente para
realizar a alocacao de tarefas entre os robos do enxame. O processo de decisao e realizado de modo
independente por cada robo baseando-se na minimizacao do valor de aptidao da alocacao de tarefas para o enxame que cada robo possui. O algoritmo proposto e inspirado no algoritmo_de_otimizacao PSO. Os resultados dos ensaios comprovam
a eficacia do algoritmo proposto em convergir para
uma alocacao de tarefas que respeite a proporcao
pre-definida e mantenha-se nesta alocacao ate que
a proporcao seja alterada. Uma abordagem completa a respeito do algoritmo proposto esta disponvel em (de Mendonca, 2014).
Como trabalhos futuros, pretende-se investigar o impacto da ocorrencia de falhas, tais como
perda momentanea da comunicacao e retirada ou
inclusao de robos no enxame, com o objetivo
de avaliar a robustez do algoritmo. Um possvel acrescimo neste tema seria uma proposta de
algoritmo que realizasse a troca de mensagens
limitando-se a vizinhanca de cada robo. Nesta
proposta, cada robo do enxame trocaria mensagens unicamente com um numero restrito de
robos, definidos pelo seu alcance limitado. Desta
forma, a atualizacao de seu conhecimento a respeito da alocacao dos demais seria ainda mais limitada exigindo do algoritmo um processo de decisao mais sofisticado e complexo para realizar a
alocacao de tarefa ao robo.

Gerkey, B. P. and Mataric, M. J. (2000). Murdoch Publishsubscribe task allocation for
heterogeneous agents, Proceedings of the
fourth international conference on autonomous agents, ACM, Barcelona, Espanha,
pp. 203204.
Gerkey, B. P. and Mataric, M. J. (2004). A formal
analysis and taxonomy of task allocation in
multi-robot systems, The International Journal of Robotics Research 23(9) 939954.
Goldingay, H. and Van Mourik, J. (2013). The
effect of load on agent-based algorithms for
distributed task allocation, Information sciences 222 6680.
Kennedy, J. and Eberhart, R. (1995). Particle swarm optimization!, Proc of international conference on neural network., IEEE,
Washington, DC, pp. 19421948.
Parker, L. E. (1998). Alliance An architecture for fault tolerant multirobot cooperation, IEEE Transactions on Robotics and Automation 14(2) 220240.
Parker, L. E. (2003). Current research in multirobot systems, Artificial Life and Robotics
7(1-2) 15.
Sariel, S. and Balch, T. (2006). A distributed
multi-robot cooperation framework for real
time task achievement, Distributed Autonomous Robotic Systems 7, Springer, Berlim,
Alemanha, pp. 187196.

Referencias

Tang, F. and Parker, L. E. (2005). Asymtre Automated synthesis of multi-robot task solutions through software reconfiguration, Proceedings of the International Conference on Robotics and Automation. ICRA 2005., IEEE,
Barcelona, Espanha, pp. 15011508.

Coello, C. A. C., Van Veldhuizen, D. A. and Lamont, G. B. (2006). Evolutionary algorithms
for solving multi-objective problems, Springer, New York.
de Mendonca, R. M. (2014). Algoritmos distribudos para alocacao_dinamica_de_tarefas em
enxame_de_robos, Masters thesis, UERJ.

Werger, B. B. and Mataric, M. J. (2000). Broadcast of local eligibility behavior-based control for strongly cooperative robot teams,
Proceedings of the fourth international conference on autonomous agents, ACM, Barcelona, Espanha, pp. 2122.

de Mendonca, R. M., Nedjah, N. and de Macedo Mourelle, L. (2013a). Algoritmo distribudo para atribuicao dinamica de tarefas em
um enxame_de_robos, Simposium Brasileiro
de Automacao Inteligente . Anais do SBAIDINCON 2013.

Yang, D. and Wang, Z.-o. (2004). Improved ant
algorithm for assignment problem, Journal of
Tianjin University 4 020.

de Mendonca, R. M., Nedjah, N. and de Macedo Mourelle, L. (2013b). Efficient distributed algorithm of dynamic task assignment for
swarm_robotics, Computational Science and
Its ApplicationsICCSA 2013, Springer, Berlim, Alemanha, pp. 500510.

Zhang, Y. and Liu, S.-H. (2008). Survey of multirobot task allocation, CAAI Transactions on
Intelligent Systems 3(2) 115120.
Zlot, R., Stentz, A., Dias, M. B. and Thayer, S.
(2002). Multi-robot exploration controlled
by a market economy, Proceedings of International Conference on Robotics and Automation. ICRA02., Vol. 3, IEEE, Washington
D.C, pp. 30163023.

Eberhart, R. C. and Kennedy, J. (1995). A new
optimizer using particle swarm theory, Proceedings of the sixth international symposium
on micro machine and human science, Vol. 1,
IEEE, New York, pp. 3943.

3474