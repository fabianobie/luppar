Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

ABORDAGEM ONTOLÓGICA PARA MODELAGEM DA IHM DE SUBESTAÇÕES ELÉTRICAS
TORRES FILHO, F. VIEIRA, M. F. Q.
Programa de Pós-Graduação em Engenharia Elétrica da UFCG  COPELE
 Departamento de Engenharia Elétrica, Universidade Federal de Campina Grande  Paraíba, Brasil
Centre for Excellence in Signal  Image Processing, Dept of Electronic  Electrical Engineering, University
of Strathclyde - Scotland, UK
Laboratório de Interfaces Homem-Máquina, DEE, UFCG
Caixa Postal 10105, 58.109-970 Campina Grande, PB, Brasil
E-mails flavio@lihm.ufcg.edu.br, fatima@dee.ufcg.edu.br
Abstract This paper presents the steps taking when building an ontology in the field of electrical substations operation that
will support the design of an operator training system that represents in virtual reality, the real operating environment. The goal
is to reuse and adapt already existing components to represent the environment of different substations and the representation of
training environments for other contexts, such as the petrochemical industry. The adaptation of these components will be facilitated by the mapping between ontological domains since operating training environments of industrial automation systems have
similar requirements, although with specific ontologies.
Keywords Ontologies, Man-Machine Interfaces, Simulators, Operator Training systems, Industrial Automation
Resumo Esse artigo registra as etapas de construção de uma ontologia no domínio da operação de subestações de sistemas_elétricos para apoiar o desenvolvimento do projeto de um simulador para treinamento_de_operadores, o qual reproduz, em realidade
virtual, o ambiente real de operação. O objetivo é reutilizar e adaptar componentes já desenvolvidos para representar o ambiente
de subestações, na construção de ambientes de treinamento para outros contextos, a exemplo da indústria petroquímica. A adaptação destes componentes será facilitada a partir do mapeamento ontológico entre domínios, uma vez que ambientes de treinamento na operação de sistemas_industriais automatizados possuem requisitos semelhantes, com ontologias específicas.
Palavras-chave 

1

Introdução

Este trabalho se insere no contexto do desenvolvimento de ferramentas que apóiam a realização e
avaliação de treinamentos de operadores de sistemas
de automação_industrial. Estas ferramentas desenvolvidas no Laboratório de Interfaces Homem-Máquina
(LIHM) da UFCG consistem de um simulador para
treinamento_de_operadores, recursos para o registro e
monitoramento dos treinamentos realizados e aplicativos de software para gestão e planejamento de
treinamentos.
O simulador reproduz, em realidade_virtual, o
ambiente de trabalho dos operadores, permitindo-lhe
atuar via software supervisório e via painéis de controle (Figura 1).

Figura 1. Ambiente virtual representando a sala de controle de
uma subestação_elétrica

ISBN 978-85-8001-069-5

Imersos nesse ambiente_virtual, os usuários podem exercitar e demonstrar o domínio sobre os procedimentos e habilidade necessários  operação do
sistema, como se estivessem em um ambiente real
(Torres Filho  Vieira, 2010).
O simulador atualmente em desenvolvimento é
voltado para operadores de subestações_elétricas
(Torres Filho, et al., 2011). No entanto seu projeto
modular possibilita sua adaptação para representar
outros ambientes industriais tais como plantas petroquímicas, siderúrgicas e a indústria de manufaturados. Esta adaptação, entretanto, representa uma atividade complexa, por envolver o trabalho de profissionais com diferentes perfis, tais como designers 3D,
programadores, engenheiros e especialistas no domínio a ser representado.
Parte da complexidade está associada ao compartilhamento da informação, uma vez que especialistas no domínio de aplicação usualmente não estão
familiarizados com a construção de modelos virtuais
e, por outro lado, os designers e programadores,
frequentemente não são especialistas no domínio e,
no entanto, necessitarão compreender e representar
graficamente os cenários, os objetos e os atores e,
seus comportamentos. Por sua vez, a complexidade
aumenta com o número de objetos e animações que
precisem ser desenvolvidos, e em função do número
de cenários de treinamento necessários aos treinamentos.
Dado que o conjunto de objetos e animações pode ser reutilizado na composição de cenários diferen-

52

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

tes, este trabalho propõe uma ontologia no domínio
da operação de subestações_elétricas, com o objetivo
de apoiar o desenvolvimento de simuladores e outras
ferramentas voltadas para as atividades de gestão,
planejamento e avaliação de treinamentos de operadores. Com a ontologia pretende-se apoiar composição automática de cenários de treinamento tridimensionais beneficiando-se do reuso de componentes já
desenvolvidos ao longo deste projeto.
Este artigo está assim estruturado na seção 2,
discorre-se sobre o conceito de ontologia, sua aplicação para a engenharia_de_software e apresenta-se uma
breve revisão de trabalhos relacionados na seção 3,
apresenta-se o processo de desenvolvimento da ontologia proposta na seção 4, exemplifica-se o uso
dessa ontologia como base de conhecimento que
apóia a construção de painéis de controle virtuais na
seção 5, apresentam-se propostas de trabalhos futuros
e, as considerações finais.
2 Ontologias
Utilizado inicialmente no campo da Filosofia, o
termo ontologia diz respeito  área do conhecimento
que trata da Natureza e da organização do ser. Em
Ciências da Informação, uma ontologia define um
conjunto de termos ordenados hierarquicamente para
descrever um domínio e, pode ser usada como o
esqueleto de uma base de conhecimentos.
2.1 Ontologia
A estrutura de uma ontologia compreende uma
hierarquia de classes (taxonomia), instâncias (ou
indivíduos), relacionamentos (ou propriedades) e um
conjunto de axiomas.
Dentre as definições de ontologia atribuídas por
diferentes autores, destaca-se aquela apresentada por
Gruber (1993) Uma ontologia é uma especificação
formal e explicita de conceitos compartilhados.
Sendo assim, uma ontologia deve conter uma coleção de termos estritamente definidos, que refletem
um conhecimento consensual, para um grupo de
pessoas. Tendo formalizado este conhecimento, a
ontologia é passível de ser computada.

Dado que exista uma ontologia que ofereça um vocabulário adequado para representação de um domínio do conhecimento, este poderá ser compartilhado
pelas pessoas que trabalham no desenvolvimento de
uma aplicação nesse domínio. Ou seja, possibilita-se
o compartilhamento do conhecimento e, como existem conceitos explícitos associados aos termos que
compõem a ontologia, evitam-se problemas tais como ambigidades de compreensão e a atribuição de
termos a um mesmo conceito.
Além disso, uma ontologia, como base conceitual, pode apoiar a identificação, a definição e a classificação de componentes de software, os quais podem
ser reutilizados na composição de diferentes aplicações em um mesmo domínio ontológico. Dessa forma, um catálogo de componentes de software pode
ser constituído com base na ontologia do domínio. E,
uma vez disponível, novos produtos podem ser desenvolvidos mais rapidamente além de agregar valores como a padronização, confiança, baixo_custo de
desenvolvimento e fácil manutenção decorrentes do
reuso de componentes de software já amplamente
utilizados, testados e validados.
A motivação principal deste trabalho foi superar
as dificuldades encontradas no projeto do simulador
para treinamento_de_operadores de subestações_elétricas, a partir da aplicação da ontologia proposta nesse
trabalho. Estas dificuldades são listadas a seguir
 compartilhamento e formalização do conhecimento
 garantir uma estrutura de dados reutilizável
 reduzir a complexidade de criaçãoedição de
cenários de treinamento
 identificar as partes envolvidas e as ações a
serem realizadas em uma sessão de treinamento, utilizando uma terminologia formalizada
 gerenciar de forma eficiente objetos virtuais, componentes de animação e modelos de
simulação
 identificar e gerenciar perfis de diferentes
tipos de usuários do simulador considerando
suas necessidades particulares de aprendizagem.
2.3 Trabalhos Relacionados

2.2 Ontologia para Engenharia de Software
O processo de desenvolvimento de software pode se tornar uma atividade complexa em função de
variáveis tais como os requisitos exigidos para o
software, o número de pessoas e máquinas envolvidas (distribuídas ou não), a dificuldade de reuso de
componentes de software, dentre outras. Portanto
nesse contexto, uma ontologia é considerada um
elemento importante para as atividades de engenharia
de software.
No desenvolvimento de software, uma ontologia
pode auxiliar a análise do domínio do problema,
servindo como guia para aquisição, organização e
compartilhamento do conhecimento nesse domínio.

ISBN 978-85-8001-069-5

Outros sistemas já utilizam uma abordagem ontológica na modelagem de plantas industriais e na
simulação de processos. A plataforma de desenvolvimento Simantics (Luukkainen  Karhela, 2008),
por exemplo, permite que um usuário possa representar uma planta ou processo a partir de uma biblioteca
de componentes 3D, disponível na ferramenta. O
Simantics prevê a concepção de ontologias para a
representação gráfica dos componentes de uma planta, para o comportamento visual desses componentes
(animações) e, para os modelos de simulação que
representam o comportamento físico de cada componente. Assim, através do mapeamentos entre essas
ontologias, o sistema gera automaticamente uma

53

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.



animação que simula o comportamento da planta
descrita pelo usuário.
Parisi et al (2007) propõem uma metodologia
para geração automática de animações 3D, voltadas
para o treinamento e reciclagem de operadores. Uma
ontologia é usada para filtrar e entender requisitos
genéricos de treinamento expressos na linguagem
natural. O resultado é uma animação adaptável, que
pode ser customizada por um designer não especialista no domínio e, visualizada por operadores.
Em (Kalogerakis et al, 2006) é apresentada outra
metodologia, apoiada pela plataforma de desenvolvimento I3DVP, a qual propõe a integração de ontologias de domínio com cenas 3D, de realidade_virtual. Dessa forma, obtém-se o enriquecimento do ambiente_virtual a partir do conhecimento do domínio.

Para quais tipos de perguntas a ontologia
deverá fornecer respostas?
Segue um subconjunto das perguntas que
foram elaboradas
Quais são os painéis de controle presentes
na sala de comando de uma subestação de
sistemas_elétricos?
Quais são os dispositivos de manobra presentes em um painel especifico?
Qual objeto virtual é associado  representação 3D de um dispositivo particular?
Quais estados um dispositivo pode assumir?
Quais dispositivos ou painéis estão associados a uma linha específica?
Quais os dispositivos que um operador deve
comandar para realizar uma manobra específica?
 Quem vai utilizar e manter a ontologia?
A ontologia será disponibilizada para consulta e reuso por parte dos interessados, a exemplo de estudantes de engenharia elétrica, desenvolvedores de software e empresas do setor. A
manutenção ocorrerá  medida que surgirem novas necessidades ou situações que demandem
ajuste na ontologia.

3 Ontologia da IHM de subestações_elétricas
Nesta seção, é apresentado o processo de concepção da ontologia desenvolvida nesse trabalho, a
qual descreve a operação de subestações_elétricas
através da IHM (Interface Homem-Máquina). Foi
utilizado, como ferramenta de desenvolvimento, o
editor de ontologias Protegé (2008), versão 4.1, associado ao plug-in Protege-OWL. Este plug-in possibilita construir ontologias na linguagem OWL (Web
Ontology Language), um padrão recomendado pela
W3C. O método adotado para concepção desta ontologia, foi o método 101 (Noy  McGuinness, 2001),
o qual é constituído pelas sete etapas descritas a
seguir.
3.1 Etapa 1 Determinar o domínio e o escopo da
ontologia
Nessa primeira etapa, são sugeridas questões que
ajudam a delimitar o alcance da ontologia e norteiam
o processo de desenvolvimento. Seguem exemplos
 Qual é o domínio que a ontologia cobrirá?
O domínio é a operação de subestações de
sistemas_elétricos e neste escopo estão painéis
de controle, equipamentos de comando (tipos de
chaves, botoeiras, etc.), equipamentos de monitoramento (quadro de eventos, indicadores luminosos, etc.), equipamentos de proteção e de
transmissão e, telas de supervisão.
 Qual será a aplicação da ontologia?
A ontologia deverá permitir o compartilhamento de um vocabulário comum entre desenvolvedores e usuários de aplicativos de software
voltados ao treinamento_de_operadores de sistemas_elétricos, permitindo assim uma caracterização mais precisa do ambiente, dos atores e dos
objetos envolvidos em um treinamento. A ontologia deverá também apoiar uma classificação
mais eficiente dos diversos tipos de artefatos de
software desenvolvidos para esses ambientes e
consequentemente facilitar sua reutilização em
novas aplicações.

ISBN 978-85-8001-069-5

3.2 Etapa 2 Reuso de ontologias existentes
Foram consultados repositórios de ontologias
disponíveis na web. No entanto, não foi encontrada
uma ontologia que atendesse aos propósitos deste
trabalho. Por outro lado, Guerrero (2006) propôs uma
ontologia para cenários de acidentes causados pelo
erro humano na operação de subestações de sistemas
elétricos, a qual serviu de base para a ontologia aqui
apresentada. Além deste, outros trabalhos desenvolvidos por pesquisadores do grupo também serviram
de referência para este trabalho, a exemplo de (Nascimento Neto, 2010).
3.3 Etapa 3 Enumerar os termos importantes da
ontologia
A criação de uma ontologia requer a definição
de conceitos associados ao domínio e seus relacionamentos. Esse levantamento foi apoiado por relatórios e roteiros de manobras do setor_elétrico e por
visitas técnicas a subestações da empresa CHESF1
além de entrevistas com engenheiros e operadores do
setor.
3.4 Etapa 4 Definir classes e a hierarquia de classes
A partir dos conceitos definidos na etapa anterior, foram definidas as classes da ontologia e estruturadas de forma hierárquica (taxonomia), identificando-se especializações (abordagem Top-Down) e
generalizações (abordagem Bottom-up).
1

CHESF - Companhia Hidroelétrica do rio São Francisco

54

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

A Figura 2 ilustra o nível mais alto da hierarquia
de classes. A superclasse owlThing está presente em
toda ontologia descrita na linguagem owl e representa o conjunto que contém todos os indivíduos, uma
vez que todas as subclasses derivam desta.
Os elementos que compõem uma subestação foram agrupados nos oito conjuntos descritos a seguir
 EquipamentosELinhas define todos os elementos responsáveis pela transmissão e distribuição_de_energia_elétrica e, pela proteção
do sistema
 DispositivosDeInteração define todos os
elementos de comunicação (rádio e telefone) e, de manobra (chaves, botoeiras, painéis de controle, mostradores, lâmpadas,
etc) utilizados por operadores na realização
de suas tarefas na operação
 RecursosHumanos define as pessoas (operadores, engenheiros, administradores, etc.)
e as várias equipes que trabalham em uma
subestação
 MecanismoDeSegurança define elementos
usados como barreiras de segurança (cavalete, cadeado, cone, etc.) e, como sinalização
(cartões, faixa de segurança, etc.) para evitar
acidentes e incidentes
 Documento define os documentos que apóiam operadores na realização de manobras no sistema elétrico, tais como roteiros
de manobra, diagramas, normas, check-lists,
etc.



Localização define os espaços físicos na
subestação que estão relacionados  operação do sistema elétrico
 OutrosComponentes define a classe dos elementos não pertencentes s demais classes, embora estejam relacionados ao ambiente de uma subestação_elétrica, tais como
estado dos objetos, mobiliário, etc.
Cada uma dessas classes possui um conjunto de
subclasses nas quais os indivíduos da ontologia são
categorizados. Por outro lado, dado o grande número
de subclasses da ontologia, aqui são apresentadas
apenas as subclasses da classe DispositivoDeInteração. Estas subclasses descrevem os painéis de controle. Um exemplo de aplicação será apresentado
mais adiante na seção 4.
A Figura 3 representa a parte da taxonomia de
dispositivos de interação, constituída por dispositivos
de comunicação e por dispositivos de manobra.

Figura 3. Taxonomia

de dispositivos de interação

Analisando a Figura 3 verifica-se que Armário,
Botoeira, Chave, Computador, LampadaDeSinalização, Mostrador, PainelDeComando e QuadroAnunciadorDeEventos são subclasses da classe DispositivoDeManobra. Por sua vez, a Figura 4 representa a
taxonomia de Chaves, constituída das classes ChaveNomeada e TipoDeChave.
Figura 2. Nível mais alto da hierarquia de classes da ontologia



Evento define ocorrências, programadas ou
imprevistas, no sistema elétrico

ISBN 978-85-8001-069-5

A classe ChaveNomeada descreve as chaves de
comando presentes na subestação, as quais recebem
um nome específico. Este nome está associado  sua
função. Enquanto que a classe TipoDeChave agrupa
os diferente tipos de chaves encontrados neste ambi-

55

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

ente (chave do tipo punho, chave giro-giro, chave
giro-pressão-giro, chave comutadora, etc.).

limitar o uso das propriedades e auxilia na identificação de erros eventuais.
As propriedades éChaveDe e comanda, por exemplo, foram definidas como propriedades funcionais. Através dessa propriedade, um indivíduo se
relaciona  apenas a um outro indivíduo.
Foram também definidos domínios e escopos para as propriedades. Por exemplo, a propriedade comanda, relaciona indivíduos da classe DispositivoDeManobra a indivíduos pertencentes  classe EquipamentosELinhas.
3.6 Etapa 6 Definir as restrições das propriedades
das classes

Figura 4. taxonomia de Chaves

3.5 Etapa 5 Definir as propriedades das classes
Nessa etapa são definidas as propriedades utilizadas para descrever as classes da ontologia e, os
relacionamentos existentes entre elas.
Por exemplo, a classe Chave101 define o conjunto de chaves que está em um painel de controle, e
que comandam um Disjuntor ou Religador. Estas
chaves possuem os estados Aberto, Fechado ou EmDiscordancia, e podem ser do tipo Punho, Giro-Giro
ou Giro-Pressão-Giro. De acordo com essas características, foram definidas as propriedades eChaveDe,
comanda, temEstado e chaveDoTipo.
A Figura 5 ilustra essas propriedades, que por
sua vez relacionam indivíduos (instâncias), os quais
são representados por triângulos, e pertencem s
classes, as quais são representadas por círculos.
Estado
EmDiscordancia
Aberto

Fechado

temEstado
Disjuntor

Chave101

comanda

CH12J5

12J5

chaveDoTipo
éChaveDe

temChave

GPG

PainelDeControle
GG

TipoDeChave
Punho

Pressão

PN02J5
possuiModeloX3D
GPG.x3d

Figura 5. Representação de propriedades da classe Chave101

As restrições, também chamadas facetas, limitam o conjunto de valores possíveis das propriedades
das classes. Assim, os indivíduos de uma classe devem satisfazer s condições estabelecidas pelo conjunto de restrições.
Na linguagem OWL, as restrições são classificadas em três categorias
 Restrições de Cardinalidade descrevem a
classe dos indivíduos que têm, no mínimo,
no máximo, ou exatamente um número específico de relacionamentos com outros indivíduos. Por exemplo, a classe Chave101
tem a restrição eChaveDe exactly 1 PainelDeComando que estabelece que todos
os indivíduos da classe Chave101 relacionase com exatamente um indivíduo da classe
PainelDeComando, através da propriedade
eChaveDe.
 Restrições de quantificação essas restrições
são constituídas pelo quantificador existencial (E), e descrevem a classe dos indivíduos
que possui pelo menos um relacionamento
com outros indivíduos, através de uma propriedade específica. Ou então, por quantificador universal (A), quando descreve a classe de indivíduos que se relacionam através
de uma propriedade com apenas uma classe
de outros indivíduos. Por exemplo, a classe
Chave101 possui a restrição comanda only
(Disjuntor ou Religador), que estabelece
que instâncias dessa classe relacionam-se,
através da propriedade comanda, apenas
com instâncias das classes Disjuntor ou Religador.
 Restrições de Valores descrevem os tipos
de valores de uma dada propriedade para
uma classe específica. Por exemplo, a classe
TipoDeChave possui a restrição possuiModeloX3D some string, que estabelece que
um indivíduo dessa classe relaciona-se com
um tipo de dado string, através da propriedade possuiModeloX3D.

As propriedades da classe foram enriquecidas ao
lhes serem atribuídas as características funcional,
inversa, transitiva e simétrica. Essa prática permite

ISBN 978-85-8001-069-5

56

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

3.7 Etapa 7 Criar instâncias
Nessa etapa foram criadas instâncias utilizandose como estudo de caso uma subestação de um sistema elétrico. Com as instâncias criadas, o motor de
inferências Pallet, foi utilizado na classificação automática das classes e na verificação de consistência
da ontologia.

de um painel real (Figura 6a), no entanto, sobre cada
região onde são localizados os dispositivos utilizados
na realização de uma manobra é sobreposta por objetos virtuais, criados para permitir a interação do usuário com os dispositivos do painel, os quais apresentam um comportamento dinâmico durante uma simulação.

4 Exemplo de aplicação da ontologia descrição
de painéis de controle
Nessa seção, será descrita uma das aplicações da
ontologia desenvolvida, qual seja, a descrição formal
de painéis de controle, com base nos termos, relacionamentos e restrições previstos na ontologia, para
apoiar a geração automática de uma réplica virtual
tridimensional do painel.
O exemplo refere-se  aplicação da ontologia na
construção de um painel PN04V2 localizado em
uma subestação de empresa do setor_elétrico. Esse
painel disponibiliza dispositivos de interação que
comandam equipamentos associados a uma linha de
transmissão 04V2, a qual opera na tensão de 230
kV e faz a interligação entre duas subestações. A
seguir são descritos os dispositivos de manobra encontrados nesse painel, o qual é ilustrado na Figura
6a.
 Mostradores mostradores de corrente por
fase, tensão, potência_ativa e reativa.
 Quadro anunciador de eventos mostrador
através do qual podem ser visualizadas informações de alarmes associados a um banco_de_capacitores. Esse dispositivo possui os
elementos de interação listados a seguir.
o Chave TL chave de pressão utilizada para teste de lâmpadas.
o Chave TF chave de pressão utilizada para teste completo.
o Chave QS chave de pressão para o
reset do som de alarme.
o Chave QF chave de pressão para o
reset do piscar das lâmpadas do
quadro.
o Chave RE chave de pressão utilizada para o reset geral do quadro.
 Chave 43 chave de duas posições NormalTransferido com função_de_transferência de proteção do disjuntor.
 Chave Seletora de Corrente chave de três
posições com a qual se faz a associação do
mostrador a uma das fases.
 Chave 101 Chave do tipo giro-pressão-giro
utilizada no comando de um disjuntor
14V2.
 Chave CLT Chave utilizada para comutar a
operação do painel entre o comando local e
remoto (Telecomandado).
A Figura 6b retrata o modelo virtual 3D do painel PN04V2. A base dessa representação é a foto

ISBN 978-85-8001-069-5

(a)

(b)

Figura 6. (a) Ilustração do painel 04V2 na subestação. (b) Representação do painel

Os dispositivos de interação, modelados para esse painel podem ser reutilizados na composição de
outros painéis de uma subestação. Nesse sentido, a
ontologia aqui apresentada, funciona como uma base
de conhecimento, onde é possível descrever e consultar informações sobre quais dispositivos são encontrados em um painel e, quais os modelos 3D que os
representam.
Na Figura 7 é ilustrada uma parte do modelo ontológico do painel 04V2. Nele é possível identificar a associação, através de propriedades, entre dispositivos de manobra e os modelos correspondentes,
descritos em X3D.
A geração automática do painel virtual pode ser
obtida a partir de um módulo de software capaz de
interpretar a informação armazenada nessa base de
conhecimento.
Conforme foi mencionado, a ontologia foi desenvolvida utilizando-se o editor Protegé e construída na linguagem OWL. Existem diversas APIs disponíveis que apóiam o desenvolvimento de aplicativos de software que utilizem ontologias representadas na linguagem OWL. Destaca-se aqui o framework Jena (2009), escrito na linguagem Java, de
código aberto e gratuito e, que oferece recursos para
edição de ontologias e realização de consultas com
base em motores de inferência

57

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

Figura 7. Modelo ontológico de um painel de controle

6 Considerações Finais
5 Trabalhos Futuros
Dando continuidade a esta pesquisa, está previsto o desenvolvimento do módulo de software, citado
na seção anterior, integrado a um ambiente gráfico de
edição dos cenários de treinamento, que serão utilizados no simulador SimuLIHM. O objetivo é aperfeiçoar o processo de adaptação deste ambiente de
simulação para reproduzir situações as mais variadas,
por usuários não familiarizados com a construção de
mundos virtuais, tais como os tutores dos treinamentos, os quais irão se beneficiar de uma ferramenta
gráfica apoiada por uma biblioteca de componentes.
O principal objetivo deste trabalho é reutilizar e
adaptar componentes desenvolvidos no grupo de
pesquisa para representar o ambiente de subestações
elétricas, na construção de ambientes de treinamento
para operação em outros contextos a exemplo da
indústria petroquímica, siderúrgica e automobilística.
A adaptação desses componentes poderá ser facilitada a partir do mapeamento ontológico entre domínios, uma vez que ambientes de treinamento na operação de ambientes industriais automatizados possuem requisitos semelhantes, porém demandam ontologias específicas. Objetos, como painéis, displays,
chaves, mostradores e outros, que estão presentes em
salas de comando de subestações são encontrados em
outros ambientes industriais e, possuem aparência
eou comportamento semelhantes. Assim, a adaptação e reuso de objetos já modelados de um contexto
para o outro poderá ser apoiada pelo estudo de compatibilidade e similaridade entre ontologias pertinentes a cada domínio.

ISBN 978-85-8001-069-5

Esse artigo registrou a primeira etapa de uma
pesquisa em andamento, a qual consistiu no desenvolvimento de uma ontologia no domínio da operação de subestações de sistemas_elétricos. Especificamente, a ontologia irá apoiar o desenvolvimento do
projeto de um simulador para treinamento_de_operadores, cujo ambiente de simulação reproduz, em
realidade_virtual, o ambiente real de operação.
Dentre os ganhos alcançados com a abordagem
descrita, destacam-se
 descrição única do ambiente de simulação,
passível de ser processada e interpretada por
sistemas_computacionais
 rapidez no desenvolvimento de novos ambientes de operação e de novos contextos de
treinamento_de_operadores
 reuso de componentes já desenvolvidos, testados e validados.
 interdependência dos modelos de simulação,
modelos 3D e animações, facilitando a manutenção individual de cada componente ou
a sua substituição, com menor impacto sobre
os demais.
 medida que novos conceitos se façam necessários, estes deverão ser adicionados  ontologia descrita, com o detalhamento de subdomínios não contemplados nessa etapa por exemplo, a operação da
subestação através de um software supervisório.
Ressalta-se que a localização dos objetos no espaço
3D, ainda não foi tratada nessa etapa. Por outro lado,
espera-se que a estrutura geral da ontologia se mantenha estável frente a prováveis expansões.

58

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

Agradecimentos
Os autores agradecem a CAPES (Coordenação de
Aperfeiçoamento de Pessoal do Ensino Superior)
pelo apoio a esta pesquisa e a engenheiros e operadores da empresa CHESF por sua contribuição para
esta pesquisa.

Torres Filho, F., Vieira, M. d. F. Q.  Costa, R. C.
d., (2011). Ambiente para o treinamento de
operadores em painéis e supervisório apoiado
por um módulo tutor. Anais do X Simpósio
Brasileiro de Automação Inteligente, Volume X,
pp. 857-862.

Referências Bibliográficas
Gruber, T. R., (1993). Toward principles for the
design of ontologies used for knowledge sharing.
Padova, Kluwer academic Publishers.
Guerrero, C. V. S. (2006). Modelo conceitual de
cenários de acidentes causados pelo erro humano
em sistemas_industriais críticos com foco na
concepção de interfaces ergonômicas. 169 f.
Tese (Doutorado em Engenharia Elétrica) Centro de Engenharia Elétrica e Informática,
Universidade Federal de Campina Grande,
Paraíba.
Jena, 2009. Jena2 ontology API. Available at
httpjena.sourceforge.netontologyindex.html
Acesso em 10 Abril 2012.
Kalogerakis, E. Christodoulakis, S. Moumoutzis,
N. (2006). Coupling Ontologies with Graphics
Content for Knowledge Driven Visualization.
Proceedings of the IEEE Virtual Reality
Conference (VR06), pp. 43-50.
Luukkainen, M. Karhela, T. (2008). Ontology
approach for co-use of 3D plant modelling and
large scale process simulation, The 48th
Scandinavian Conference on Simulation and
Modeling (SIMS 2007). Linkping University
Electronic Press, pp. 166172.
Nascimento Neto, J. A. (2010). Processo para
concepção de estratégias_para_prevenção_do_erro
na operação de sistemas_elétricos. 139 f. Tese
(Doutorado em Engenharia Elétrica) - Centro de
Engenharia Elétrica e Informática, Universidade
Federal de Campina Grande, Paraíba.
Noy, F. N. McGuinness, D.L. (2001). Ontology
Development 101 A Guide to Creating Your
First Ontology, Technical Report SMI-20010880, Stanford Medical Informatics,Stanford
University, Stanford, CA , USA.
Parisi, S. Bauch, J. Berssenbr, J. Radkowski, R.
(2007). "Ontology-driven Generation of 3D
Animations for Training and Maintenance"
International Conference on Multimedia and
Ubiquitous Engineering. Mue, pp.608-614.
Protégé, 2008. The Protégé Ontology Editor and
Knowledge Acquisition System. Available at
httpprotege.stanford.edu Acesso em 10 Abril
2012.
Torres Filho, F.  Vieira, M. d. F. Q., (2010).
Motor de simulação baseado em modelos CPN
aplicado a um sistema para treinamento de
operadores. Anais do XVIII Congresso
Brasileiro de Automática, pp. 1252 - 1259.

ISBN 978-85-8001-069-5

59