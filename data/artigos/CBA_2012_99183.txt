Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

ARQUITETURAS MOON(D) PARA PORTAS DE ENTRADA E SAÍDA DE REMOTAS
EM CONFORMIDADE COM A IEC 61508
SÉRGIO CECHIN, TAISY S. WEBER, JOÃO C. NETTO
Instituto de Informática  Universidade Federal do Rio Grande do Sul (UFRGS)
Caixa Postal 15.064  91.501-970  Porto Alegre  RS  Brasil
cechin,taisy,netto@inf.ufrgs.br

Abstract Safety functions for critical systems performed by programmable devices require certification of their safety integrity. However, safety standards impose strong restrictions on the creativity of developers. The challenge is to create efficient solutions in terms of cost and performance and still comply with all requirements of a given safety standard to achieve the desired
certification. This paper presents the realization, according the life cycle specified by the IEC 61508, of a remote inputoutput
subsystem to be used in safety instrumented systems applied to oil and gas extraction. It also shows the comparison of fault tolerant architectures aimed at high level of safety integrity that should be developed in accordance with IEC 61508.
Keywords Functional safety, safety instrumented systems, SIL, IO, diagnostics
Resumo Funções de segurança para sistemas críticos executadas por dispositivos programáveis exigem certificação internacional de integridade de segurança. Normas de segurança impõem fortes restrições  criatividade dos desenvolvedores. O desafio
é criar soluções eficientes em termos de custo e desempenho e ainda assim obedecer a todos os requisitos de uma norma para alcançar a certificação desejada. O artigo apresenta o projeto, de acordo com o ciclo de vida especificado na norma IEC 61508, de
uma remota de entrada_e_saída para ser usada em aplicações no setor de petróleo e gás em sistemas_instrumentados_de_segurança.
Apresenta também a comparação de arquiteturas para sistemas desenvolvidos de acordo com a norma IEC 61508 para segurança
funcional e crítica visando alto nível de integridade de segurança.
Palavras-chave 

1 Introdução
A segurança_funcional na área de controle e automação de máquinas e processos é determinada por
rígida regulamentação principalmente porque falhas
podem provocar danos irremediáveis a pessoas e ao
meio_ambiente (Dunn, 2003). Até o final da década
de 90, sistemas_instrumentados_de_segurança (SIS)
eram, por imposição de normas e regulamentos,
quase exclusivamente baseados em relés, mas a pressão para um melhor aproveitamento de componentes
eletrônicos programáveis se fazia sentir tanto do lado
dos usuários como dos fornecedores. A norma IEC
61508 (IEC, 2010) permitiu aplicar componentes
programáveis e criou padrões para o projeto de sistemas de segurança.
SIS são sistemas que executam funções de segurança. Exemplos de tais funções são air-bag em automóveis, alarme de incêndio, detecção da presença
de gases tóxicos, e sinalização de instabilidade em
plataformas marítimas de exploração de petróleo.
SIS construídos com componentes programáveis
estão sujeitos a falhas de hardware, interferências
externas e erros de programação que afetam sua
capacidade de executar a função de segurança especificada. Para garantir a integridade da função de segurança nos níveis exigidos por órgãos reguladores, o
projeto do sistema deve ser conduzido com inúmeros
cuidados técnicos e administrativos, escolhendo a
cada passo as estratégias, métodos e soluções mais
adequados para manter a taxa de defeitos perigosos
dentro dos limites especificados. A observância rígida de normas de segurança, como a IEC 61508, im-

ISBN 978-85-8001-069-5

põe enormes restrições  criatividade de desenvolvedores, mas, por outro lado, auxilia no projeto de sistemas capazes de alcançar a integridade de segurança
necessária e possibilita certificação internacional.
Se o SIS é distribuído, um dos seus componentes
críticos é a remota de entrada_e_saída. O desenvolvimento de uma remota de ES para compor sistemas
instrumentados de segurança deve iniciar pelo estudo
de diferentes arquiteturas de hardware que permitam
alcançar a segurança almejada em conformidade com
a IEC 61508.
A remota de ES é o dispositivo responsável pela
aquisição das informações dos sensores e o envio
destas para um controlador_lógico_programável
(CLP). A remota também recebe informações do
CLP e faz com que sejam aplicadas aos atuadores. A
comunicação da remota com o CLP é realizada através de um protocolo de comunicação seguro (Neumann, 2007), sobre um black channel (Neumann,
2003). A pilha do protocolo deve ser implementada
tanto na remota quanto no CLP, devendo ser certificada quanto  integridade de segurança por órgão
internacional competente.
Para o projeto de uma remota de ES, várias opções de microcontroladores (MCU) são disponíveis e
variadas arquiteturas tolerantes a falhas podem ser
implementadas com esses componentes. Para facilitar a escolha, nesse artigo são calculadas duas métricas probabilidade de falhar ao executar a função de
segurança e a cobertura de falhas dos procedimentos
de diagnóstico e detecção que podem ser empregados. Vantagens e desvantagens de cada arquitetura
são analisadas, assim como sua conformidade com a

4500

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

norma IEC 61508. O estudo é uma tarefa do Projeto
RIO-SIL, financiado pela FINEP dentro da Rede
Temática de Eletrônica Embarcada para Equipamentos (Rede E3).
Esse artigo apresenta os fundamentos da norma
IEC 61508, a análise de possíveis arquiteturas seguras para o projeto de uma remota de entrada_e_saída,
os resultados da comparação qualitativa entre tais
arquiteturas.
2 Norma para segurança_funcional IEC 61508
A norma IEC 61508, publicada inicialmente no
ano 2000 (Bell, 2011), mesmo sendo considerada
extremamente restritiva pelos desenvolvedores de
hardware e software, foi a primeira a permitir a aplicação de sistemas eletrônicos programáveis nos sistemas de segurança. A norma estabelece técnicas e
medidas para evitar e controlar falhas aleatórias de
hardware e erros de projeto.
Um sistema desenvolvido criteriosamente segundo a norma pode almejar certificação para um
determinado nível de integridade de segurança, SIL
(Safety Integrity Level), de 1 a 4. Sistemas com menor probabilidade de apresentar defeitos residuais da
função de segurança são classificados em SIL 4 (10-9
defeitos perigosos por hora ou 10-5 defeitos sob demanda em baixa demanda de operação). Aumentando
uma ordem de grandeza na taxa de defeitos, diminui
de uma unidade o valor do SIL, até SIL 1. Por exemplo, uma função de segurança de detecção de incêndio que apresente, no máximo, um defeito a cada
10000 demandas, seria classificada como SIL 3.
A norma não visa disponibilidade, mas garantir
que a função de segurança esteja livre de falhas que
possam conduzir a defeitos perigosos, quando demandada (Jin, 2011). Dessa forma, é natural que
empregue tolerância a falhas (Lundteigen, 2009) para
alcançar segurança_funcional. Adicionalmente, caso
o sistema não possa ser mantido operacional diante
da ocorrência de falhas, como seria garantido pela
tolerância a falhas, as funções de segurança são projetadas para que suas saídas sejam comutadas para
um estado seguro, geralmente parando ou desernegizando a máquina ou processo que está sendo controlado ou monitorado.
A IEC 61508 teve uma grande receptividade e
vários equipamentos e componentes foram desenvolvidos visando permitir alcançar os níveis de integridade de segurança definidos. Em 2010 a norma foi
revisada consolidando 10 anos de experiência na sua
aplicação (Bell, 2011). No meio industrial brasileiro,
entretanto, é recente o interesse pelo desenvolvimento de produtos em conformidade com essa norma.
2.1 Comunicação com as remotas
Quando o sistema crítico exige controle eou instrumentação distribuídos, as normas definem que os
sistemas de comunicação não podem ser responsá-

ISBN 978-85-8001-069-5

veis por mais do que 1 das falhas não cobertas
pelos mecanismos de detecção e diagnóstico.
A versão original da IEC 61508 estabelecia que
todos os subsistemas de comunicação deveriam ser
igualmente seguros e certificados. Essa exigência
impunha sérias limitações ao desenvolvimento de
sistemas remotos que dependem de comunicação
entre seus componentes. A maior dificuldade era a
impossibilidade de usar protocolos_de_comunicação
já consolidados na área de controle e automação, mas
não certificados pela IEC 61508. Uma solução de
alto custo seria desenvolver e certificar tanto a pilha
de protocolos como os dispositivos de rede, de acordo com os critérios da norma, que são extremamente
restritivos.
A resposta ao problema veio com o conceito de
black channel (Neumann, 2003). Toda a pilha de
protocolos e o meio físico que transporta o sinal
elétrico, magnético ou ótico são considerados uma
caixa preta e, sobre ela, é implementado um protocolo seguro camada que reduz a probabilidade de
erro na comunicação pela implementação de diversos
mecanismos para detecção_de_falhas e correção de
erros, previstos na norma. Para que o cenário esteja
completo, basta que a implementação dessa nova
camada seja certificada como segura e toda a comunicação será considerada segura.
Do ponto de vista do desenvolvedor, o conceito
de black channel é extremamente confortável, pois
torna possível o uso de uma pilha convencional de
protocolos_de_comunicação sobre a qual basta adicionar um protocolo seguro implementado em software. Finalmente, usando essa nova pilha de protocolos, implementa-se o programa que executa a função
de segurança. O conceito de black channel foi o responsável pelo aparecimento de vários protocolos de
comunicação seguros, tais como PROFIsafe,
INTERBUS, OpenSafety, FOUNDATION Fieldbus
e EtherCAT (Neumann, 2007). Uma dada implementação em software desses protocolos é passível de ser
certificada segundo a IEC 61508 até o nível SIL3.
Perfis de protocolos seguros foram normatizados
pela IEC 61784-3 (Bell, 2011).
No projeto, escolheu-se o PROFIsafe (ProfibusPROFIsafe, 2011) como protocolo de comunicação no SIS, principalmente devido a sua popularidade, qualidade da documentação e a pré-aprovação
de sua especificação para SIL 3. A pré-aprovação da
especificação para SIL 3 não implica em garantias
que a implementação em software para um dado
hardware será certificada, mas facilita o processo de
certificação.
2.2 Arquiteturas sugeridas pela norma
A IEC 61508 usa a nomenclatura MooN(D) para
designar as arquiteturas de hardware do equipamento
que realiza a função de segurança e refere-se s capacidades de votação e de redundância do sistema. O
valor N indica quantos canais redundantes executam
a função de segurança, enquanto M indica quantos

4501

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

desses canais devem estar disponíveis. Esses valores
formam o parâmetro HFT  Hardware Fault Tolerance  usado pela norma para caracterizar o número
de falhas perigosas que a arquitetura suporta sem que
a função de segurança venha a apresentar defeito.
A letra D refere-se a diagnóstico e indica a existência de testes regulares do canal de operação
para verificar o seu correto funcionamento, e usar
estes resultados para controlar o circuito de votação
na saída, levando-o a apresentar uma saída correta ou
uma saída segura. Na ausência da letra D, os testes
são ainda usados, mas apenas para alertar a existência de falhas. Neste caso, os testes somente reportam
as falhas encontradas e não mudam o estado das
saídas.
Arquiteturas sugeridas pela norma são de um,
dois e três canais de operação, com ou sem diagnóstico (Lundteigein, 2009). As arquiteturas de três
canais são pouco usuais devido ao seu alto custo de
produção e manutenção. Por outro lado, a arquitetura
de um canal sem diagnóstico oferece uma baixa
segurança_funcional, pois não apresenta nenhuma
redundância. Dessa forma, essa arquitetura é usada
apenas em equipamentos muito simples.
Exemplos de MooND são mostrados na figura 1.
Cada retângulo corresponde a um canal sistema de
hardware e software capaz de executar, sozinho, a
função de segurança. A elipse menor representa o
circuito de votação, denominado aqui de votador,
uma tradução livre de voter usado na IEC 61508.

CANAL

1oo1

CANAL

diagnóstico

Votador

1oo1D

CANAL

diagnóstico

Votador

CANAL

1oo2

Figura 1. Exemplos de arquiteturas MooND

Uma das funções do votador (aquela que originou o nome do módulo) é escolher, dentre os valores
presentes nas suas entradas, o valor a ser colocado
em sua saída. Para isso, pode usar votação por maioria ou os resultados fornecidos pelos módulos de
diagnóstico. Outra função é garantir que a saída esteja em um de dois estados ou operacional e correta
ou colocada em estado seguro. Para isso, o circuito
deve ser capaz de identificar entradas em falha ou
então decidir os valores de saída usando os resultados dos diagnósticos. Deve-se observar que cada
arquitetura demanda uma, outra ou ambas as funções
do votador. Além disso, cada combinação apresenta
ISBN 978-85-8001-069-5

um maior ou menor grau de complexidade no seu
projeto.
3 A remota de entrada_e_saída
A remota de ES, conforme mostrado na metade
direita da figura 2, é formada por uma cabeça Profibus e uma interface de entrada_e_saída. A comunicação segura da remota com a CPU ocorre através de
um canal seguro sobre PROFIBUS. O black channel
engloba as cabeças PROFIBUS que se encontram
nos dois lados da comunicação.
CPU

CPU
Segura

Remota

Módulo
de ES

CPU
Comum
PROFIBUS

Interface

Black Channel

Figura 2. Remota de ES

A função executada pela remota é a de receber
os comandos enviados pela CPU e realizá-los, enviando dados para as portas de saída ou obtendo os
dados das portas de entrada. Como a comunicação é
parte essencial da função de segurança, a remota
deve contribuir com uma baixa percentagem de erros
residuais. Para isso, os módulos que executam o
protocolo seguro, tanto na CPU como na remota,
devem ter incorporados mecanismos para detecção
de falhas e circuitos de diagnósticos com altas coberturas de falhas. Assim, além de executar o protocolo
de comunicação segura, a remota deve conduzir
todos os testes necessários para alcançar a cobertura
de diagnóstico e detecção_de_falhas especificadas
para o nível de SIL desejado.
O hardware da remota pode ser separado em
dois grupos de circuitos um grupo dentro do black
channel e outro fora do black channel. O primeiro
grupo é invisível para a norma e pode ser implementado usando hardware convencional ou já disponível. Por exemplo, pode-se usar, sem preocupação
com certificação, um microcontrolador que implementa o Profibus na comunicação com a CPU e Ethercat na comunicação com os atuadores e sensores.
O segundo grupo de circuitos, fora do black
channel, que na remota corresponde ao módulo de
ES, tem que ser construído seguindo as restrições da
IEC 61508. Para isso, deve-se escolher uma arquitetura NooMD adequada, a forma como o diagnóstico
deverá atuar, e implementar a cobertura de falhas
perigosas exigida para alcançar o SIL desejado.
4 Taxas de falhas
A norma divide a taxa total de falhas ( ) dos elementos constituintes do sistema em falhas seguras
( ) e falhas perigosas ( ), e essas últimas em fa4502

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

lhas perigosas detectáveis (
) e não detectáveis
(
). São consideradas falhas seguras todas aquelas
que levam naturalmente o sistema para um estado
seguro de forma similar, todas as falhas perigosas
detectáveis pelos mecanismos de diagnóstico podem
levar o sistema para um estado seguro.
A partir dessas taxas de falhas, a norma deriva
dois parâmetros SFF (Safe Failure Fraction), fração
de falhas seguras, DC (Diagnostic Coverage) cobertura de diagnóstico.
4.1. Fração de falhas seguras  SFF
Conforme descrito na norma, o SFF determina
as restrições impostas pela arquitetura  integridade
de segurança do hardware. Dessa forma, o SFF é um
parâmetro que reflete a arquitetura do sistema e serve
para compará-las, além de prever a capacidade das
mesmas em evitar que a função de segurança venha a
falhar quando demandada.
Pode-se dizer que o SFF é um parâmetro estático, característico da arquitetura. Isso fica claro quando se percebe que seu valor é um percentual da taxa
total de falhas do sistema, conforme sua definição
+
(1)

Quanto maior o SFF, menor a quantidade de falhas perigosas não detectáveis que afetam o sistema e
que podem comprometer a função de segurança. Para
reduzir as falhas perigosas não detectáveis, é necessário aumentar a capacidade dos mecanismos de
detecção em identificá-las.
Considerando a definição de SFF, é de se esperar
que o SIL esteja diretamente relacionado com o SFF.
A forma como esse relacionamento é estabelecido na
norma é através de tabelas que limitam o SIL alcançável pela função de segurança. Existem duas tabelas uma para componentes do tipo A, onde o comportamento de todos os seus elementos diante de
falhas está completamente caracterizado, e do tipo B
(ou componentes complexos), onde alguns de seus
elementos não têm um comportamento bem definido,
quando sob falhas. A tabela 1 aplica-se a sistemas do
tipo B.




Tabela 1. Máximo SIL alcançável.
SFF (safe failure
fraction)

< 60 
60  - < 90 
90  - < 99 
> 99 

HFT
Tolerância a Falhas de Hardware
0

1

2

proibido
SIL 1
SIL 2
SIL 3

SIL 1
SIL 2
SIL 3
SIL 4

SIL 2
SIL 3
SIL 4
SIL 4

Na tabela 1, HFT (tolerância a falhas) refere-se 
capacidade do sistema de manter a execução da função de segurança em caso de zero, uma ou duas falhas de hardware. Com uma arquitetura de um único
canal, nenhuma falha é tolerada com dois canais

ISBN 978-85-8001-069-5

pode ser tolerada uma falha e com três canais podem
ser toleradas duas falhas simultâneas.
4.2. Cobertura de Falhas  DC
De acordo com a norma, o DC é uma estimativa
de medida de falha da função de segurança. Dessa
forma, é um parâmetro relacionado ao comportamento do sistema, quando em operação da função de
segurança. Esse parâmetro serve para avaliar, estatisticamente, a efetividade do diagnóstico em detectar
falhas.
Como esse parâmetro reflete o comportamento
da função de segurança, ele corresponde a um parâmetro dinâmico. Essa característica pode ser observada na sua definição, pois representa um percentual
das falhas perigosas

(2)

O DC caracteriza as técnicas_de_diagnóstico, de
tal forma que um valor elevado indica uma técnica
eficiente. A partir de seu valor, determinam-se as
taxas de falhas perigosas detectáveis e não detectáveis e, finalmente, pode-se calcular o SFF.


5 Análise das Arquiteturas
Tomando por base a discussão anterior, em que
foram excluídas as arquiteturas com três canais e
1oo1, escolheu-se avaliar as arquiteturas 1oo2,
1oo2D e 1001D.
5.1. Arquitetura 1oo2
Conforme apresentado na figura 3, essa arquitetura é formada por dois canais em paralelo de tal
forma que a função de segurança pode ser realizada
por cada um deles, individualmente. Assim, a função
de segurança só apresentará uma falha perigosa,
quando demandada, se os dois canais forem acometidos por falhas perigosas. Adicionalmente, o circuito
de diagnóstico é responsável por, apenas, relatar
eventuais falhas não é capaz de atuar no estado das
saídas dos canais ou da saída do votador.

CANAL

diagnóstico

Votador

CANAL

1oo2

Figura 3. Arquitetura 1oo2

A análise dessa arquitetura deve ser conduzida
através de dois cenários. No primeiro cenário (apresentado na figura 4), ocorre uma falha perigosa em
um dos canais, que é detectada pelo diagnóstico e
reparada. Desde a ocorrência da falha até o término

4503

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

de seu reparo, o sistema opera em modo degradado,
como se fosse uma arquitetura 1oo1.
Falha

Falha
1oo2

Recuperação

Falha
1oo1

Estado Seguro
tempo

1oo2

1oo1

1oo2

Figura 7. Arquitetura 1oo2 com 2 falhas

tempo
Figura 4. Arquitetura 1oo2 com 1 falha

No segundo cenário (figura 5), considera-se a
ocorrência de duas falhas, de maneira que a segunda
falha ocorra durante o período em que a primeira
ainda não foi recuperada. Com a primeira falha, a
arquitetura passa a operar de forma degradada, como
um 1oo1 quando ocorre a segunda falha, a saída do
votador será colocada em um estado não seguro e só
será recuperado quando for recuperado o primeiro
canal que falhou ou quando for executado o proof
test.
Falha
1oo2

Falha
1oo1

Falha Perigosa

5.3. Arquitetura 1oo1D
Conforme apresentado na figura 8, essa arquitetura apresenta um único canal para realização da
função de segurança. Dessa forma, a princípio, a
função de segurança poderá falhar quando demandada, se ocorrer uma falha perigosa no canal. Entretanto, o circuito de diagnóstico é capaz de atuar sobre a
saída do votador, de maneira semelhante ao que
acontece na arquitetura 1oo2D. Assim, quando o
circuito de diagnóstico detectar uma falha perigosa
no canal, atuará sobre o votador de maneira a colocar
a sua saída em estado seguro.
CANAL

Votador

tempo
Figura 5. Arquitetura 1oo2 com 2 falhas

diagnóstico

Figura 8. Arquitetura 1oo1D

5.2. Arquitetura 1oo2D
Conforme apresentado na figura 6, essa arquitetura é bastante semelhante  1oo2. A principal diferença é que o circuito de diagnóstico também é responsável por atuar no estado da saída do votador,
podendo levá-la para um estado seguro, quando ambos os canais estiverem em falha perigosa.
CANAL

diagnóstico

Votador

CANAL

Figura 6. Arquitetura 1oo2D

Novamente, a análise da arquitetura deve ser feita pela observação de dois cenários o primeiro, onde
ocorre uma falha que é reparada, apresenta o mesmo
comportamento da arquitetura 1oo2, conforme figura 4.
No segundo cenário, após a segunda falha sem
que tenha acontecido o reparo da primeira, o circuito
de diagnóstico irá atuar sobre votador de maneira que
sua saída seja colocada no estado seguro. Na figura 7
é apresentada a linha de tempo desse cenário, onde
após a segunda falha o sistema é colocado no seu
estado seguro.
Essa arquitetura é equivalente  arquitetura
1oo2, enquanto ocorre uma falha. Quando ocorre a
segunda falha, a arquitetura 1oo2D leva ao estado
seguro enquanto que a 1oo2 leva a falha da função de
segurança, quando demandada.

ISBN 978-85-8001-069-5

Essa arquitetura possui HFT0, ou seja, não é
capaz de suportar nenhuma falha perigosa. Entretanto, uma vez detectada pelo circuito de diagnóstico, o
votador pode ter sua saída colocada no estado seguro.
A forma de operação da arquitetura 1oo1D associada com uma cobertura de diagnóstico suficientemente alta, pode fornecer a uma função de segurança
com SFF maior do que se fosse utilizada a arquitetura 1oo2. Além disso, pode-se antever um custo de
produção maior da arquitetura 1oo2 do que a 1oo1D.
5.4. Comparação das arquiteturas
A arquitetura 1oo2 apresenta como principais
desvantagens a falha da função de segurança, quando
ocorrerem duas falhas simultâneas, e o alto custo
relativo para implementar os dois canais.
No caso da arquitetura 1oo2D, também aparece
como desvantagem relativa o custo dos dois canais.
Entretanto, usando-se um circuito de diagnóstico
com uma alta cobertura para a detecção_de_falhas
perigosas, a falha da função de segurança será pouco
provável.
Finalmente, a arquitetura 1oo1D é aquela com o
menor custo, pois utiliza um único canal. Ela também requer um circuito de diagnóstico com alta cobertura para garantir a baixa probabilidade de falha
da função de segurança.
Comparativamente, apesar de alta, a cobertura
necessária para atingir SIL 3 com as arquiteturas
1oo2D e 1oo1D é diferente. A arquitetura 1oo1D
possui HFT0, que corresponde  primeira coluna da
tabela de SFF (Tabela 1), onde se observa que o SFF
necessário deve ser maior do que 99. Por outro

4504

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

lado, a arquitetura 1oo2D possui HFT1, o que corresponde  segunda coluna da mesma tabela, levando
a necessidade de um SFF maior do que 90, portanto menos exigente do que a arquitetura 1oo1D.
No projeto, decidiu-se por descartar a arquitetura
1oo2, devido s suas desvantagens em relação s
outras duas arquiteturas. Para decidir entre as arquiteturas restantes, é necessário verificar a viabilidade
de suas implementações, analisando os custos de
desenvolvimento e de produto.

6.1. Implementação de 1oo1D  TMS570
Para obter SIL 3 com essa arquitetura é necessário que os componentes apresentem SFF maior do
que 99. Esse é o caso do TMS570, que implementa
uma série de técnicas que levam a um valor tão alto
de SFF.
Deve-se observar que a arquitetura 1oo1D é totalmente implementada no TMS570, inclusive o
votador de saída que pode ser colocado em estado
seguro, caso os circuitos de diagnóstico detectem
alguma falha.

6 Implementação das arquiteturas
Para verificar a viabilidade de implementação
das arquiteturas propostas, faz-se necessário detalhar
seus diagramas de blocos, indicando candidatos eventuais para implementar cada um destes blocos.
No estudo dos componentes necessários  implementação das funções de segurança bem como na
avaliação de suas taxas de falhas (necessárias para
determinar o DC e o SFF), verificou-se que os processadores são os de maior impacto aqueles que
apresentam as maiores taxas de falhas. Dessa forma,
percebeu-se a necessidade de encontrar processadores que apresentassem a menor taxa_de_falhas possível ou que fossem especialmente desenvolvidos para
aplicações de segurança. Nessa última classe podem
ser encontrados processadores como os da família
HerculesTM, da Texas e os PXS da Freescale. A família Hercules foi escolhida para nortear as decisões de
projeto, embora todos eles tenham sido desenvolvidos para auxiliar no atendimento s restrições impostas pela IEC 61508.
Os processadores da família HerculesTM
(TMS570LS31x21x Hercules ARM Safety Critical
Microcontrollers) são microcontroladores do tipo
ARM que, além de apresentarem um SFF maior do
que 99, oferecem toda a documentação necessária
para possibilitar um projeto de hardware visando
aplicações de segurança. Por exemplo, são fornecidas
informações que vão deste as taxas de falhas do
componente até o processo de desenvolvimento utilizado para reduzir as falhas sistemáticas (systematic
failures), em geral relacionadas com o software, e as
arquiteturas para enfrentar as falhas aleatórias (random failures), em geral relacionadas com o hardware.
Portanto, levando-se em consideração as arquiteturas propostas e a disponibilidade de um processador como o TMS570, decidiu-se por explorar três
possibilidades de implementação 1oo1D, usando
TMS570 1oo2D, usando TMS570, e 1oo2D, usando
microcontroladores comuns (MCU).
As implementações discutidas a seguir restringem-se aos processadores e os circuitos necessários
para a sua operação, de acordo com a arquitetura
considerada.

ISBN 978-85-8001-069-5

6.2. Implementação de 1oo2D  TMS570
Nessa implementação, cada um dos canais da
arquitetura será implementado com um chip
TMS570. Além dos canais, é necessário implementar
o votador, que decidirá qual dos canais terá seu valor
de saída colocada na saída do sistema. Essa arquitetura pode ser vista na figura 9, onde o módulo SS é
responsável por garantir que a saída possa ser colocada em um estado seguro (Safe State).
TMS570
CPU

diagnóstico

Votador

SS

TMS570
CPU

diagnóstico

diagnóstico

Figura 9. Implementação da 1oo2D  TMS570

O circuito dos canais terá um SFF inerentemente
alto, devido ao uso do TMS570. Resta determinar o
SFF do votador. Sem entrar em detalhes da sua implementação, pode-se antever um circuito de implementação relativamente simples e seguro, na medida
em que os canais ou estão operacionais ou suas saídas estão em estado seguro. Dessa forma, o votador
terá como entrada uma informação correta (e segura)
ou um estado seguro.
Com um circuito simples composto apenas de
componentes discretos (sem o uso de processadores),
o votador deve alcançar SFF de 90 (pois HFT1).
Isso implica no uso de diagnóstico conforme estabelecido na IEC61508, que envolve a detecção_de_falhas do tipo stuck-at, stuck-open, circuito de saída
aberto ou de alta impedância, curto_circuito entre
linhas de sinal (denominadas, em conjunto, de Modelo DC de falhas). Além dessas, devem ser detectados
curto_circuito entre dois pinos quaisquer de um circuito integrado, oscilações e variações de frequência.
Tantas falhas a serem detectadas implicam em um
desenvolvimento mais caro, sem mencionar o custo
do próprio produto.
Apesar das vantagens dessa implementação em
relação ao uso do TMS570 na arquitetura 1oo1D,
duas desvantagens são decisivas custo e espaço

4505

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

físico. A implementação de dois canais com TMS570
custa, pelo menos, o dobro do uso de um canal. Além
disso, é necessário considerar-se o custo para o desenvolvimento e produção do circuito do votador
externo e da sincronização dos dois canais.
O projeto visa o desenvolvimento de módulos
específicos do SIS. Dessa forma, o espaço disponível
para acomodar os circuitos já está determinado, e
oferece limitações adicionais ao projeto o uso de
dois processadores com as dimensões do TMS570,
de um votador e os circuitos de diagnóstico, está,
praticamente, descartado. Essa solução só seria viável se não houvesse alternativas para atingir o SIL
desejado.
6.3. Implementação de 1oo2D  MCU
Esta implementação da arquitetura foi elencada
por duas razões as dimensões do TMS570 e o uso de
HFT1.
Conforme discutido na implementação 1oo2DTMS570, essas MCUs são grandes para o espaço
disponível. Então, decidiu-se avaliar a possibilidade
de usar duas MCUs, mas de tamanho menor e mais
simples. Com isso, seria minimizado o problema de
espaço e, por serem mais simples, as taxas de falhas
tenderiam a ser menores. Além disso, com um
HFT1, passa-se a operar na segunda coluna da Tabela 1, fazendo com que o SFF deva ser maior do
que 90, o que é menos restritivo do que os 99
necessários na arquitetura 1oo1D.
Entretanto, essa implementação requer o desenvolvimento de outros circuitos de suporte  operação
dos processadores, circuitos esses que já fazem parte
da arquitetura interna do TMS570. Em linhas gerais,
são necessários os circuitos de diagnóstico e do votador, conforme pode ser visto na figura 10.
MCU

diagnóstico
diagnóstico
MCU

Votador

SS
diagnóstico

Figura 10. Implementação da 1oo2D  MCU convencionais

O circuito de diagnóstico deve ser implementado
de maneira a possibilitar SFF maior do que 90.
Conforme IEC 61508-2, isso implica em detecção de
falhas de acordo com o modelo DC de falhas (conforme listado anteriormente) para dados e endereços,
alteração de informações causadas por soft-errors
(erros transientes que podem ocorrer em dispositivos
com capacidade de armazenamento de informação
registradores, memória, linhas_de_transmissão, etc),
erros de execução ou codificação, modelo DC de
falhas para o cálculo de endereços, apontador de
programa e ponteiro de pilha e suas alterações devido
 soft-erros. Essa lista, na realidade, não está completa, pois foram consideradas apenas as necessidades

ISBN 978-85-8001-069-5

de diagnóstico da MCU. Um projeto detalhado, certamente, revelaria outros circuitos que deveriam ser
monitorados, aumentando ainda mais a complexidade do projeto e, consequentemente, seu custo e tamanho.
Por fim, em uma versão mais simplificada, podese assumir que os circuitos de diagnóstico são capazes de sinalizar a validade das saídas para o votador,
o que permitiria utilizar-se um circuito semelhante
quele discutido na implementação 1oo2D  TMS.
Do ponto de vista do espaço físico e levando-se
em consideração o tamanho do circuito de diagnóstico necessário, essa solução pode não trazer muito
ganho. Se por um lado os processadores são menores, eles demandam a construção de circuitos mais
complexos de diagnóstico, o que pode levar a perda
da vantagem de se usar processadores mais simples.
6.4. Comparação das implementações
A comparação entre as implementações propostas pode ser resumida na análise de três parâmetros
fundamentais custo de desenvolvimento e do produto (custo), espaço necessário para implementar o
hardware (tamanho) e nível de tolerância a falhas
(HFT).
Os parâmetros de comparação associados a cada
implementação estão apresentados na tabela 2. Na
tabela, cada arquitetura e parâmetro são qualificados
em termos relativos com as outras configurações.
Tabela 2. Comparação entre implementações

Custo
Tamanho
HFT

1oo1D
TMS570

1oo2D
TMS570

1oo2D
MCU

baixo
pequeno
0

alto
grande
1

alto
maior
1

Dessa forma, verifica-se que o custo da solução
1oo1D  TMS570 é menor que o das outras duas
implementações, que apresentam custos semelhantes.
No parâmetro tamanho do circuito, a solução
que deveria ser menor (1oo2D  MCU) termina por
ser a maior de todas. A principal causa disso é a
integração de uma quantidade considerável de circuitos de diagnóstico dentro do TMS570, que não existem nas MCUs convencionais e teriam que ser adicionados ao tamanho. Como resultado final, a arquitetura 1oo1D  TMS570 é a mais compacta.
Finalmente, as arquiteturas 1oo2  TMS570 e
1oo2  MCU apresentam como vantagem sobre a
1oo1D o fato de terem um nível de tolerância a falhas maior, continuando a operar mesmo quando
ocorre uma falha perigosa. Entretanto, todas as três
implementações são levadas para um estado seguro o
que, do ponto de vista da segurança, reduz a importância dessa vantagem.
O resultado das análises levou a decisão de utilizar a implementação 1oo1D, pois é aquela de menor
custo, menor tamanho e que será colocada no estado
seguro em caso de falha perigosa.

4506

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

4 Conclusão
De acordo com o ciclo de vida especificado na
norma IEC 61508, na sua fase de realização de
hardware e software, o artigo apresentou o projeto da
arquitetura de hardware e software das portas de
entrada_e_saída de uma remota de ES e a escolha
justificada dos componentes-chave a serem usados
na implementação. As arquiteturas e suas possíveis
implementações foram discutidas e comparadas de
maneira a se chegar naquela mais favorável ao objetivo do projeto. Nessa discussão, partiu-se do princípio que a comunicação, entre as portas de entrada e
saída e a lógica das funções de segurança, será feita
através do mecanismo de black channel, técnica que
simplificou significativamente o desenvolvimento e a
aplicação de sistemas seguros que requerem a comunicação entre seus componentes.
 primeira vista, a análise das arquiteturas e suas
possibilidades de implementação parecem ser meros
balizadores gerais para o desenvolvimento futuro,
podendo ser alterados a qualquer momento, quando
forem identificadas inconsistências. Entretanto, no
caso de sistemas que visam  segurança_funcional,
essas decisões são muito mais definitivas, devido ao
alto custo associado com o desenvolvimento (e retrabalho, no caso de erros) que é delineado e induzido
pela norma. Esse fato levou a uma importante mudança de paradigma na forma como são desenvolvidos os projetos antes de desenhar qualquer circuito
ou linha de código é necessário definir a arquitetura
que será usada no projeto de maneira que seja possível alcançar o SIL desejado. Esse enfoque, conhecido
como top-down, é de difícil aplicação direta devido
 quantidade de fatores que devem ser considerados
além dos fatores funcionais comuns a qualquer sistema devem ser considerados fatores adicionais relacionados com os níveis de tolerância a falhas e de
segurança_funcional (safety), representados na norma
pelos parâmetros HFT (nível de tolerância a falhas),
DC (cobertura de diagnóstico) e SFF (fração de defeitos seguros) que podem ser alcançados. O resultado dessas análises levou a escolha de duas arquiteturas candidatas a 1oo1D e a 1oo2D.
Entretanto, a análise pura e simples das arquiteturas sugeridas na norma não é suficiente. Em geral,
é necessário analisar algumas informações dos níveis
de menor abstração, onde estão expressas as restrições típicas de implementação esse fato é flagrante
quando se percebe que a arquitetura 1oo2D admite
duas implementações possíveis mas com características bem diferentes. Foram analisadas as implementações 1oo1D (que usa o TMS570), 1oo2D-TMS570 e
1oo2D-MCU. Em particular, as restrições típicas da
implementação estão, também, relacionadas com os
requisitos do projeto RIO-SIL. Foram consideradas
restrições tais como as dimensões físicas esperadas
para cada implementação, a disponibilidade de componentes adequados a implementação de funções de
segurança e o custo de cada um desses componentes.
Também foram considerados os custos de desenvolvimento, que são maiores do que aqueles de um
ISBN 978-85-8001-069-5

projeto convencional, onde não existem restrições
de projeto que visam  segurança_funcional (safety).
O resultado das comparações leva a escolha da
arquitetura 1oo1D com processador TMS570 ou
MCU equivalente em recursos para alcançar segurança_funcional, uma vez que essa arquitetura oferece
o menor custo, menor dimensão física e desempenho,
no caso de falha perigosa, adequado ao SIL 3 desejado.
A necessidade de análise das arquiteturas para
tolerância a falhas e segurança_funcional não é novidade. Formalmente, ela está presente desde que se
iniciou a normatização desse tipo de sistema. Entretanto, a aplicação da norma IEC 61508 em sua última
versão de 2010 representa um novo desafio para os
desenvolvedores de sistemas intrinsecamente seguros. Nessa direção, a equipe de desenvolvimento tem
enfrentado esses novos desafios, buscando o aperfeiçoamento de suas técnicas e a adequação de suas
metodologias de projeto. Esse artigo retrata a conquista de um desses (novos) obstáculos.
Agradecimentos
Este trabalho foi parcialmente financiado pela Finep
 Rede E3  Projeto RIO-SIL 01.11.0154.00.
Referências Bibliográficas
Dunn, W.R. (2003). Designing safety-critical
computer systems. Computer 36 (11)
(novembro) 40 - 46.
Bell, Ron. (2011). Introduction and Revision of IEC
61508. In Advances in Systems Safety, org.
Chris Dale e Tom Anderson, 273-291. Springer
London.
IEC (2010). International Electrotechnical Commission IEC 61508, part 1 to 7 Functional
Safety of Electrical, Electronic and Programmable Electronic Safety-Related Systems.
httpwww.iec.chfunctionalsafety.
Jin, H., M. A. Lundteigen, e M. Rausand. (2011).
Reliability performance of safety instrumented
systems A common approach for both low-and
high-demand mode of operation. Reliability
Engineering  System Safety 96 (3) 365373.
Lundteigen, Mary Ann, e Marvin Rausand. (2009).
Architectural constraints in IEC 61508 Do they
have the intended effect? Reliability
Engineering  System Safety 94 (2).
Neumann, P. (2003). Virtual automation network reality or dream. In Industrial Technology,
2003 IEEE International Conference on, 2994 999 Vol.2.
Neumann, Peter. (2007). Communication in
industrial automationWhat is going on?
Control Engineering Practice 15 (11)
(novembro) 1332-1347.
ProfibusPROFIsafe.
httpwww.profibus.comtechnologyprofisafe.
Acesso em dez. de 2011.
4507