XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

MOTOR DE SIMULAÇÃO BASEADO EM MODELOS CPN APLICADO A UM SISTEMA PARA TREINAMENTO DE
OPERADORES

1

FLÁVIO TORRES FILHO, 1,2 MARIA DE FÁTIMA Q. VIEIRA

1

Laboratório de Interfaces Homem-Máquina, Departamento de Engenharia Elétrica, Universidade Federal de
Campina Grande
Caixa Postal 10105, 58.109-970 Campina Grande, PB, Brasil
E-mails flavio.filho@ee.ufcg.edu.br, fatima@dee.ufcg.edu.br

2

Centre for Excellence in Signal  Image Processing, Dept of Electronic  Electrical Engineering, University
of Strathclyde - Scotland, UK
Abstract  This paper presents the integration of a set of Colored Petri Nets (CPN) models that represents the behavior of the
supervision and control system of an electric substation. The models integration was aimed at building the simulation engine of
an operator training simulator. The simulator engine is also integrated with a tridimensional virtual reality representation of the
control room of an electric substation. This work continues a project during which the human interface environment was modeled
both in CPN and virtual reality and adds the plant model to constitute the model based simulator engine.
Keywords  Simulation Engine, Colored Petri Nets, Electrical Substation, Operator Training System
Resumo  Este trabalho apresenta a integração de um conjunto de modelos construídos em Redes de Petri Coloridas (CPN) os
quais representam o comportamento do sistema_de_supervisão_e_controle de subestações_elétricas. Os modelos integrados constituem o motor_de_simulação de um ambiente para treinamento_de_operadores. O motor_de_simulação é também integrado a uma
representação em realidade_virtual da sala de controle da subestação. Este trabalho dá continuidade a um projeto durante o qual o
ambiente da interface com o usuário foi modelado tanto em CPN quanto em realidade_virtual e adiciona o modelo da planta para
constituir o motor_de_simulação baseado em modelos.
Palavras-chave  

1

ma. Enquanto ferramenta de apóio ao estudo do erro
humano o simulador oferece um ambiente controlado
no qual é possível evidenciar a relação entre o erro e
o projeto da interface do usuário com o sistema,
visando a concepção de interfaces mais ergonômicas.
Outros simuladores já foram desenvolvidos para
o contexto de sistemas_elétricos, a exemplo do
SAGEOTS (Leite et al, 2002), que é o resultado da
integração do supervisório SAGE com um simulador
de sistemas_elétricos_de_potência - o OTS (Operator
Training Simulator) do EPRI (Electric Power Research Institute). Um outro exemplo é o sistema computacional ASTRO (Ambiente Simulado para Treinamento de Operadores) desenvolvido pelo CEPEL
ELETROSUL para operar integrado ao SAGE. Há
também o sistema STPO (Simulador para Treinamento de Proteção e Operação de Sistemas Elétricos)
desenvolvido na linguagem DELPHI para representar
uma subestação da COELCE, no qual é possível
simular faltas e reconfigurar o sistema (Bezerra et al,
2007). O STPO foi integrado a um ambiente_virtual
de ensino-aprendizagem para permitir o treinamento
 distância.
Este trabalho se insere no contexto do projeto do
simulador desenvolvido no LIHM (Laboratório de
interfaces homem máquina). Como já foi mencionado este ambiente proporciona o controle e a monitoração do sistema elétrico não apenas através do supervisório, mas também através de painéis de controle representados no ambiente_virtual tridimensional.
Contrastando com os trabalhos citados, cujos
motores de simulação foram construídos com base

Introdução

Durante o trabalho de supervisão e controle de
sistemas_elétricos um grande número de informações
é disponibilizado aos operadores, que precisam responder de forma rápida e correta aos eventos aos
quais o sistema está submetido. Dada a complexidade das tarefas realizadas, e os graves acidentes que o
erro humano pode causar, o treinamento eficiente e
eficaz desses profissionais é essencial.
Neste contexto, um simulador pode desempenhar um papel importante, recriando uma variedade
de cenários de treinamento. Os cenários podem consistir em situações de rotina com o sistema elétrico
operando em condições normais e em situações de
exceção ou criticas, a exemplo de ocorrências que
demandam a recomposição do sistema. Além disso, o
uso de simuladores elimina os riscos associados 
operação do sistema real durante a realização de um
treinamento.
Este trabalho está inserido no contexto de desenvolvimento de um simulador para apoiar o estudo do
erro humano na operação destes sistemas, o qual
pode também ser utilizado no treinamento_de_operadores. O simulador reproduz, em realidade_virtual, a
sala de controle de uma subestação_elétrica, com os
níveis de operação via supervisório e via painel de
controle. Neste ambiente os operadores são imersos
em uma réplica virtual do ambiente de trabalho, na
qual podem exercitar e demonstrar o domínio dos
procedimentos e a habilidade na operação do siste-

1252

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

em linguagens de programação, este motor_de_simulação é construído a partir de modelos formais os
quais representam o comportamento dos objetos do
ambiente simulado.
O formalismo adotado na modelagem é o de Redes de Petri Coloridas (CPN) (Jensen, 1992). Os
modelos representam o comportamento dos equipamentos encontrados na planta industrial (modelo da
planta). Foram também construídos modelos para
representar o conjunto de recursos de interação disponíveis ao operador para realizar a tarefa de supervisão e controle. O modelo dos painéis que representa o comportamento dos objetos encontrados nos
painéis da sala de controle (Nascimento  Turnell,
2003). E, o modelo do supervisório, que representa
os objetos de interação representados nas telas do
supervisório (Scaico et all, 2001).
Apesar dos modelos da interface com os painéis
(modelo dos painéis) e da interface com o supervisório (modelo do supervisório) já existirem, ainda não
havia o modelo da planta para completar a representação do ambiente real, nem a conexão entre os modelos para constituir o motor_de_simulação. O objetivo deste trabalho foi integrar os modelos CPN da
planta e da interface em painéis e supervisório para
compor o motor_de_simulação. A integração consistiu
em implementar uma comunicação bidirecional entre
os modelos de interface (painéis e supervisório) e o
modelo da planta, compatibilizando a sintaxe e semântica destes modelos viabilizando sua comunicação por ocasião da interação com o usuário (no supervisório ou em um dos painéis) ou da ocorrência de
eventos na planta (subestação_elétrica).
O motor_de_simulação poderia ter sido concebido
utilizando uma linguagem de programação, a exemplo de Java ou C++. No entanto, a notação gráfica, a
semântica simples e a notação matemática passível
de verificação das Redes de Petri, facilitam a verificação do comportamento do sistema, eliminando
potenciais erros de codificação. Além do mais, uma
estrutura modular, baseada em uma biblioteca de
objetos facilita a configuração de novos cenários de
simulação, minimizando o esforço dos tutores. Na
construção dos modelos e durante sua execução foi
utilizado o ambiente CPN Tools, o qual permite que
as simulações sejam executadas em tempo_real. Enquanto a comunicação entre os modelos foi viabilizada através da biblioteca COMMSCPN, que permite a troca de mensagens TCPIP entre modelos CPN.
Este artigo está organizado da seguinte forma.
Na seção 2, é apresentado o projeto do simulador e o
modelo da planta (subestação). Na seção 3, é apresentada a estratégia de integração dos modelos. Na
seção 4, é apresentada a configuração de um cenário
típico no ambiente modelado e validado o comportamento do motor_de_simulação. Na última seção são
apresentadas as considerações sobre os resultados
obtidos e apresentadas propostas de continuidade
para este trabalho.

2 Simulador para o treinamento_de_operadores
Em subestações_elétricas, o sistema elétrico de
potência pode ser operado em diferentes níveis através de terminais de computador, através de painéis
na sala de controle ou através da manipulação direta
dos equipamentos no pátio da subestação.
Neste projeto, estes três níveis de operação do
sistema_elétrico_de_potência foram modelados em
Redes de Petri Coloridas pelo GIHM. Integrados,
eles compõem o motor_de_simulação do ambiente
concebido para o estudo do erro e para o treinamento
de operadores de subestações_elétricas. Na Figura 1,
é apresentada uma vista do mundo virtual do simulador. Trata-se da representação do ambiente da sala de
controle de uma subestação, com painéis de supervisão e controle e uma estação de trabalho executando
um software supervisório.

Figura 1. Sala de controle de uma subestação_elétrica, representada
no mundo virtual do simulador

Na Figura 2 é apresentado um esquema que ilustra a arquitetura do simulador. Os modelos em redes
de Petri compõem o motor_de_simulação e são responsáveis pela representação do comportamento da
planta e dos objetos que compõem sua interface com
o usuário (Vieira et all, 2007).
A comunicação entre modelos ocorre da seguinte forma
 Na sala de controle virtual, o operador pode
interagir com objetos representados nos painéis de
controle ou no supervisório. Essa interação resulta
no envio de uma mensagem ao modelo da interface
correspondente
 Em seguida, o modelo CPN, correspondente
(painéis ou supervisório), muda seu estado e envia
uma solicitação ao modelo da planta, que irá executar
o comando (ou não, em caso de simulação de falha) e
enviará uma mensagem para os modelos da interface,
em resposta  solicitação

Figura 2. Arquitetura do Simulador

1253

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

 Ambos os modelos do comportamento da
interface irão evoluir de acordo com a mensagem
recebida e enviarão uma mensagem para a representação virtual da interface correspondente
 As representações virtuais serão atualizadas
de acordo com as mensagens recebidas, finalizando a
operação.
A comunicação dos modelos CPN com suas representações no ambiente_virtual tridimensional já
havia sido explorada por Freitas (Freitas et al, 2006).
Neste trabalho será focalizada a composição do motor_de_simulação, a partir da introdução do modelo
da planta e da viabilização da comunicação entre os
modelos CPN (modelo da IHM e modelo da planta).
O modelo da planta (subestação) representa o comportamento dos equipamentos da subestação. No
estágio atual, representa disjuntores, chaves seccionadoras e as linhas_de_transmissão associadas. A
seguir, é apresentada uma descrição sucinta dos modelos que constituem o motor_de_simulação, com
ênfase no modelo da planta, um dos focos deste trabalho.

da em Scaico et all (2001).
2.3 Modelo da planta industrial
Em subestações_elétricas, os equipamentos localizados no pátio da subestação compõem a planta
industrial. Estes equipamentos e dispositivos podem
ser operados remotamente via programa supervisório
ou via painéis na sala de controle, ou diretamente no
seu respectivo painel de comando. Neste trabalho
foram modelados disjuntores, chaves seccionadoras
e as linhas_de_transmissão, compondo um modelo de
planta simplificado. O modelo CPN que representa o
comportamento dos disjuntores é ilustrado na Figura
3.
Os lugares Aberto, Fechado e Defeituoso modelam o estado dos disjuntores. E as fichas que ocupam
esses lugares são do tipo Equipamento. Estas fichas
consistem de uma dupla (LT, Disp) na qual o primeiro elemento identifica a linha de tensão associada ao
dispositivo e segundo elemento identifica o disjuntor
propriamente dito. Essa estrutura permite compor
uma representação única para cada disjuntor no pátio
da subestação.
As transições Abrir e Fechar representam ações
do operador ao manipular o equipamento, permitindo-lhe comandar a abertura e o fechamento respectivamente. As transições FalhaA e FalhaB modelam ocorrências que deixam o dispositivo inoperante.
Por fim, a transição Evento modela distúrbios na rede
de distribuição que causam a abertura do disjuntor.
As funções sendcampoP e sendcampoS
premitem a comunicação do modelo da planta com
os modelos de interface painel de comando e supervisório. A comunicação se dá através do envio de
mensagem aos modelos da interface sempre que o
disjuntor muda seu estado de Aberto para Fechado
(ou vice-versa), mantendo a consistência entre os
estados dos modelos da interface. Na implementação
dessas funções foram utilizadas outras funções da
biblioteca COMMSCPN, descrita na próxima sessão.
O modelo das chaves seccionadoras (figura 4) é
semelhante ao modelo de disjuntores apresentado.

2.1 Modelo da interface via painéis de comando
Os elementos de interação representados neste
modelo são aqueles tipicamente encontrados nos
painéis de comando de uma subestação_elétrica (botões, chaves, alarmes, etc) associados  supervisão e
controle de dispositivos e equipamentos (disjuntores,
seccionadoras, banco_de_capacitores, etc).
Este modelo está detalhado em Nascimento 
Turnell (2003).
2.2 Modelo da interface via software supervisório
Neste modelo são descritos os mecanismos de
navegação na interface do supervisório e o comportamento dos elementos de interação disponíveis ao
operador do sistema a partir do supervisório (disjuntores, seccionadoras e chaves de comando localtelecomando).
A descrição detalhada deste modelo é encontra-

Figura 3. Modelo de Disjuntores

1254

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

Figura 4. Modelo de chaves seccionadoras

 Manter os modelos independentes, e utilizar
funções da biblioteca de comunicação para a troca de
mensagens.
A segunda opção foi escolhida visando manter a
independência dos modelos, facilitando a análise e
verificação das partes. A independência de modelos
permite também que os modelos sejam executados
em plataformas computacionais distintas, conectadas
via internet.

Entretanto, este modelo possui os lugares Abrindo e Fechando, os quais representam estados transitórios durante as operações de abertura e fechamento
desses dispositivos. O lugar de fusão DJAberto é
necessário para garantir que uma chave seccionadora
seja aberta apenas quando o disjuntor, a ela associado
na mesma linha de tensão, já estiver aberto.
Na figura 5 é apresentado o modelo CPN para
uma linha_de_transmissão. Nesse modelo, uma linha
de transmissão possui dois estados Energizada e
Desenergizada. A mudança entre estados depende da
situação dos equipamentos e dispositivos conectados
 linha.

3.1 Biblioteca COMMSCPN
A biblioteca COMMSCPN possibilita que um
modelo CPN se comunique com um processo externo
através de mensagens, no padrão TCPIP. O processo
externo pode ser qualquer processo capaz de receber
e enviar mensagens TCPIP, o que inclui outros modelos CPN (Gallasch  Kristensen, 2001). A arquitetura geral da biblioteca é composta dos três módulos
principais, descritos a seguir
 Camada de comunicação contém os mecanismos básicos de transporte do protocolo TCPIP
e todas as funções primitivas relacionadas  sockets.
 Camada de Mensagens responsável pela
conversão dos dados em fluxo de bytes para que haja
troca de mensagens entre CPN Tools e as aplicações
externas.
 Camada de Gerenciamento de Conexão
permite que processos externos abram, fechem, enviem, e recebam múltiplas conexões.

Figura 5. Modelo de linha_de_transmissão

Uma linha_de_transmissão energizada terá as
chaves seccionadoras e disjuntores, associados, fechados. Para efetivar a mudança do estado de uma
linha Energizada para Desenergizada, o disjuntor
associado deve estar aberto.

3.2 Envio e recebimento de mensagens para os
equipamentos no campo
Nesta sessão será detalhada a comunicação bidirecional entre os modelos de equipamentos (disjuntores
e seccionadoras) e os demais modelos de interface
que compõem o motor_de_simulação modelo do
supervisório e modelo dos painéis. Destaca-se que a
comunicação apresentada por Freitas diz respeito 
comunicação entre um modelo em CPN e a representação em realidade_virtual. Neste caso explora-se a
comunicação entre os modelos que constituem o
motor_de_simulação.

3 Composição do motor_de_simulação
Nesta seção, é apresentada a estratégia adotada
na integração dos modelos, visando compor o motor
de simulação. Para esse propósito foram consideradas as seguintes soluções
 Integração de todos os modelos em um único arquivo, adotando lugares de fusão para efetuar a
troca de informações entre os modelos.
1255

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

A figura 6 ilustra uma página do modelo da
planta, cuja sequência de lugares e transições promove o recebimento de mensagens oriundas dos modelos de interface. Esta rede consiste de duas partes
um segmento relativo ao recebimento de mensagens
vindas do modelo dos painéis ( esquerda) e outro
relativo ao recebimento de mensagens vindas do
modelo do supervisório ( direita).

A depender da lista de comandos, que ocupa o
lugar MSGIN, poderão ser habilitadas as transições
ABRIR ou FECHAR, as quais realizam, respectivamente, a abertura e o fechamento de disjuntores. Ou
seja, com o disparo de uma dessas transições um
comando realizado sobre um painel, ou no supervisório, é executado. No instante do disparo, os modelos
da IHM, painéis e supervisório, são também realimentados com o novo estado do dispositivo.
Isso ocorre através da execução das funções
associadas a estas transições sendcampoP e
sendcampoS.
Se ocorrer a situação na qual um comando causa um estado no qual o dispositivo já se
encontra, as transições ConfirmaAberto e
ConfirmaFechado, retiram o comando da
lista e confirmam o estado do dispositivo para
os modelos da interface.
Se for recebido um comando para um
dispositivo que se encontre no estado DefeituFigura 6. Página do modelo de campo para o recebimento de mensagens envia- oso a transição ComandoInvalido é habilitadas pelos modelos de interface
da e ao disparar retira o comando da lista.
A seguir, são descritos os componentes desComo resultado, o comando não é executado e neta rede.
nhuma mensagem é enviada aos modelos da IHM.
 Lugares IniciaProcP e IniciaProcS responsáveis por habilitarem as transições AvaliarConnP e AvaliarConnS , respectivamente, quando a rede entra no modo de simulação.
 Transições AvaliarConnP e AvaliarConnS que ao serem disparadas, causam a
execução das funções associadas aos arcos de
saída e avaliam se há um novo dado para ser
recebido no canal de comunicação correspondente. Se houver, a função actreceive retorna
uma ficha do tipo EDISP e a função
Nactreceive retorna empty. Não existindo um
novo dado, a função actreceive retorna empty e
a função Nactreceive retorna uma ficha do
Figura 7. Proc.MSG(DJ) do modelo de campo para execução de comandos
tipo EDISP.
nos disjuntores
 Lugares AllowRcvP e AllowRcvS
quando uma ficha ocupa esses lugares, as transições
MSGINP e MSGINS são respectivamente habi3.3 Troca de mensagens com o modelo de painéis
tadas, permitindo que uma nova mensagem seja
Para compor o motor_de_simulação, os modelos
recebida na conexão correspondente.
da interface via painéis deve enviar comandos para o
 Transições MSGINP e MSGINS quanmodelo da planta industrial, e deve ser realimentado
do uma dessas transições é disparada ocorre o recepor ele. Ou seja, sempre que um equipamento muda
bimento de uma mensagem através do canal de code estado no pátio da subestação deve ser enviada,
municação correspondente.
aos painéis, uma mensagem de atualização. A seguir,
As mensagens, ou comandos, recebidos ocupam
é descrita a modelagem deste comportamento.
uma lista no lugar de fusão MSGIN, na ordem de
A figura 8 ilustra como os comandos são enviachegada. Esse lugar aparece em outras duas páginas
dos
ao modelo de campo. O Lugar de fusão
do modelo, nas quais a execução dos comandos receCOMCAMPO está presente em todas as sub-redes
bidos do meio externo ocorre. Proc.MSG(DJ) e
do modelo que representam chaves nos painéis. E
Proc.MSG(Sec) realizam o tratamento dos comandos
uma lista de fichas pode ocupar esse lugar, onde cada
de abertura ou de fechamento, relativos aos disjuntoficha representa um comando originado da manipures e chaves seccionadoras, respectivamente.
lação de uma chave.
Na figura 7 é ilustrada a rede da página
Proc.MSG(DJ). Os lugares Aberto e Fechado representam os estados dos disjuntores e realizam a fusão
com os lugares homônimos da figura 3.

1256

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

A rede do modelo responsável por receber as
mensagens do campo é ilustrada na figura 10. O
funcionamento dessa rede é análogo ao que foi descrito na seção 3.2 para a rede ilustrada na figura 6.

Figura 8. Envio de comandos aos equipamentos do campo na
interação com dispositivos nos painéis

As fichas são do tipo ListaCMD, e são compostas por triplas (Armário, Chave, EstadoCampo). O
primeiro elemento da tripla identifica o painel no
qual a chave se encontra, o segundo elemento identifica a chave propriamente dita, e o terceiro elemento
identifica o estado no qual deve ser colocado o equipamento no campo. Assim, ao manipular uma chave
para fechar um disjuntor, será inserida uma ficha
nesse lugar contendo no terceiro elemento o valor
Fechado.
Uma mensagem de comando é enviada a cada
disparo da transição EnviarCmd. Isso ocorre através
da execução da função sendmsg associada a essa
transição. O processo de recebimento de mensagens
é modelado pela rede da figura 9, semelhante quela
descrita na figura 6 da seção 3.2.
O lugar de fusão EstadoCampo é ocupado por

Figura 10. Página do modelo supervisório para o recebimento de
mensagens enviadas pelo modelo de campo

O tratamento das mensagens recebidas pelo modelo, e relacionadas aos disjuntores, é feito pela subrede (página) ilustrada na figura 10. Esta rede é semelhante quela apresentada na figura 7, cujo funcionamento foi descrito na seção 3.2. O envio de
mensagens ocorre sempre que o operador atua sobre
um objeto no sinótico da planta. A navegação no
sinótico e o comando de seccionadoras e
disjuntores foi modelado por Scaico et all
(2001). Neste trabalho, o estado do objeto
muda apenas com a confirmação da execução
do comando pelo campo.
4 Validação do motor_de_simulação

Figura 9. Página do modelo de painéis para o recebimento de mensagens enviadas pelo modelo de campo

fichas que representam o estado de todos
os equipamentos do campo, e também está
presente em todas as sub-redes que modelam o comportamento de chaves. Dessa
forma, é possível verificar se o estado de
uma chave no painel corresponde ao estado do equipamento no campo.

Para verificar os modelos que constituem
o motor_de_simulação foram feitas análises
com cenários típicos de operação da planta,
utilizando simulações automáticas e interativas, com a geração do gráfico de ocorrência.
No processo de validação foi utilizada a
biblioteca MSC.sml, para obter diagramas de

3.4 Troca de mensagens com o modelo
supervisório
De modo análogo ao modelo da interface via Painéis, o modelo da IHM via
sistema_supervisório envia comandos aos
equipamentos no pátio, e sempre que
ocorre uma mudança no estado do equipamento, o modelo da interface é realimentado pelo modelo de campo.

Figura 11. Página do modelo do supervisório para execução de comandos nos
Disjuntores

sequência de mensagens (MSCs). A partir destes foi
1257

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

analisada a sequência de dispositivos manipulados e
a troca de informações entre os modelos. A seguir é
apresentado um dos cenários simulados e os respectivos diagramas de sequência de mensagens.
4.1 Descrição do Cenário
O cenário modelado consistiu na abertura indevida da seccionadora SC32J54, no painel LT12J5.
No campo, a seccionadora não abriu, uma vez que o
disjuntor (DJ12J5) na mesma linha de tensão encontrava-se fechado. O operador, percebendo o erro
fechou-a imediatamente, concordando seu estado
com o estado do campo. Em seguida, o operador
abriu o disjuntor DJ12J5 no painel e, realizou nova
tentativa de abertura da seccionadora SC32J54, através do supervisório, dessa vez com sucesso.
Figura 12. MSC - Situação de erro operacional

4.2 Análises dos resultados
Para o cenário descrito, foi realizada a simulação
interativa e foram gerados os diagramas de sequência
de mensagem (MSC) apresentados nas figuras 12 e
13. A figura 12 representa a tentativa de abertura da
chave seccionadora, a qual foi frustrada uma vez que
existe a restrição das seccionadoras só serem abertas
se o disjuntor correspondente já estiver aberto. E a
figura 15 retrata o procedimento correto, com a abertura do disjuntor (via painel de comando) e, posteriormente a abertura da seccionadora (via supervisório).
Nos diagramas, há três eixos, que correspondem
respectivamente ao modelo dos painéis, da planta e
do supervisório, e  troca de mensagens entre eles. A
troca de mensagens, no MSC, ilustra quando os objetos mudam de estado e a consistência das informações nos três modelos.
Na figura 13, por exemplo, o comando DJ12J5
Abrir é enviado ao modelo da planta pelos painéis,
quando uma ficha (LT12J5, DJ12J5, Aberto) ocupa o
lugar de fusão COMCAMP, e a transição EnviarCmd dispara (Figura 8). Na planta, o comando é
recebido no disparo da transição MSGINP (Figura
6), quando uma ficha (LT12J5, DJ12J5, Aberto)
passa a ocupar a lista no lugar de fusão MSGIN.
Finalmente, o disjuntor é aberto com o disparo da
transição Abrir (Figura 7), e duas mensagens
DJ12J5 Aberto são enviadas aos modelos de interface, confirmando o novo estado do equipamento.
Essas mensagens enviadas pelo campo são recebidas respectivamente nos modelos do painel e do
supervisório com o disparo das transições ReceiveMSG e MSGIN (figuras 9 e 10, respectivamente). Desta forma, os modelos de interface são sempre
atualizados pelo modelo da planta quando o estado
de um equipamento muda de Aberto para Fechado
(ou vice-versa). Entretanto, caso o equipamento
encontre-se no estado Defeituoso, comandos enviados  planta não são executados e, por conseguinte
nenhuma mensagem de confirmação é enviadarecebida.

Figura 13. MSC - Abertura do disjuntor DJ12J5 (via painel) e da
seccionadora SC32J54 (via supervisório).

5 Conclusões e trabalhos futuros
Neste trabalho foi viabilizada a comunicação bidirecional entre os modelos de interface (painéis e
supervisório) e o modelo da planta industrial (subestação). Com a integração dos modelos constitui-se o
motor_de_simulação.
A construção do motor_de_simulação a partir de
modelos apresenta-se como uma solução mais flexível que a codificação em uma linguagem de programação. Com o formalismo de redes de Petri foi também possível realizar a verificação e a validação dos
modelos constituintes.
No estágio atual da pesquisa, o motor_de_simulação está sendo aclopado  representação do mundo
virtual, cujo comportamento já foi modelado.
Como proposta de continuidade deste trabalho
sugere-se o refinamento do modelo da planta, incluindo novos equipamentos e dispositivos encontrados
no pátio de subestações, a exemplo de transformado-

1258

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

Silva, Victor Navarro A. L. da  Linden, Ricardo 
Ribeiro, Guilherme Ferreira  Pereira, Maria de
Fátima L.  Lannes, Rogério Seabra  Standke,
Celso Rubens (2009). Simuladores para
treinamento_de_operadores de sistema e de
instalações do setor_elétrico. XII ERIAC 
Encontro Regional Iberoamericano de Cigré,
Puerto Iguazú, Argentina.
Vieira, M. F., Scaico, A., Nascimento Neto, J. A.,
Santoni, C.,  Mercantini, J. M. (2007). A realtime interface simulator for operators training a
proposed architecture. 2007 summer simulation
multiconference, (pp. p. 460-467). San diego,
CA, US.

res, banco_de_capacitores, dentre outros. A partir
desta extensão pretende-se construir uma biblioteca
de modelos de equipamentos e dispositivos que facilite a representação no simulador de uma variedade
de instalações. Propõe-se também estender o modelo
do supervisório, aumentando o realismo do simulador.
Agradecimentos
Os autores gostariam de agradecer a CAPES (Coordenação de Aperfeiçoamento de Pessoal do Ensino
Superior) por apoiar esta pesquisa com uma bolsa de
estudo para um dos autores.
Referências Bibliográficas
Bezerra, H  Barroso, G. C.  Sampaio, R. F.  Leão,
Ruth Pastôra Saraiva  Soares, J. M. (2007).
Sistema simulador para treinamento de proteção
e operação de sistemas_elétricos. In
ICECE2007 - Conferência Internacional em
Educação em Engenharia e Computação, Santos.
Anais da Conferência Internacional em
Educação em Engenharia e Computação, 2007.
p. 90.
CPN
Tools
(2006).
Disponível
em
httpwiki.daimi.au.dkcpntools.
Freitas, Rodrigo Choji de Vieira, M. F. Q.
Perkusich, Angelo (2006). Representando a IHM
de uma subestação através de modelos formais e
realidade_virtual. SBSE - Simpósio Brasileiro de
Sistemas Elétricos, Campina Grande, PB, Brasil.
Gallasch, G. E.  Kristensen, L. M. (2001).
COMMSCPN A Communication Infrastructure
for External Communication with DesignCPN.
In Proc. of Third Workshop and Tutorial on
Practical Use of Coloured Petri Nets and the
CPN Tools, pages 7591. Department of
Computer Science, University of Aarhus,
Denmark.
Jensen, K. (1992). Coloured Petri Nets  Basic
Concepts, Analysis Methods and Pratical Use 
Vol. 1. Ed. Spring-Verlag, USA.
Leite, O R. Rodrigues J. J. Oliveira, J. G. (2002) O
uso de simuladores no treinamento de
operadores da Chesf como ferramenta para
disseminação de conhecimentos na operação de
sistemas_elétricos. Projeto de PD da Chesf em
parceria com o CEPEL 2002.
Nascimento, J. A. N., Turnell, M. F. Q. V. (2003).
Biblioteca de modelos de objetos da IHM de
sistemas_elétricos em HCPN. VI SBAI 
Simpósio Brasileiro de Automação Inteligente,
Bauru, SP, Brasil.
Scaico, A., Vieira, M. F. Q., Perkusich, A. (2001).
Modelagem da Navegação de Interfaces com o
Usuário de Sistemas de Automação Industrial. V
SBAI Simpósio Brasileiro de Automação
Inteligente, Canela, RS, Brasil.

1259