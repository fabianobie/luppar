Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

ESTIMACAO DE PARAMETROS DE SISTEMAS NAO LINEARES POR BUSCA DE
CUCO VIA VOOS DE LEVY
Daniel K. Souza, Gideon V. Leandro, Gustavo Oliveira, Eduardo P. Ribeiro


Departamento de Engenharia Eletrica
Universidade Federal do Parana
Curitiba, Parana, Brasil

Emails danielSouza@ufpr.br, gede@eletrica.ufpr.br, gustavo@eletrica.ufpr.br,
edu@eletrica.ufpr.br
Abstract In this work we applied the optimization algorithm cuckoo search via Levy flights (BC) in the
parameters estimation of systems once the structure of the system is known or identified. Some improvements
were realized in the BC with focus on the parameters estimation, that can also be used in any optimization
problem. The results show the superiority of this method when compared with the fast nondominated sorting
genetic algorithm (NSGA-II).
Keywords Parameters estimation, systems identification, cuckoo search via Levy flights, optimization
algorithm, non scented genetic algorithm.
Resumo Nesse trabalho aplicamos o algoritmo_de_otimizacao busca de cuco via voos de Levy (BC) na
estimacao_de_parametros de sistemas uma vez que a estrutura do sistema e conhecida ou identificada. Algumas
melhorias foram realizadas no BC com foco em estimacao dos parametros, mas que tambem podem ser utilizadas
em qualquer problema de otimizacao. Os resultados demonstram a superioridade desse metodo em comparativo
com o algoritmo_genetico de ordenacao nao dominado rapido (NSGA-II).
Palavras-chave .

1

avancados foram empregados. Samad e Mathur
(1992) utilizaram estimadores de parametros com
redes_neurais artificiais (RNA) para uma dada
estrutura de modelo parametrizada treinada por
aprendizado_supervisionado. Yao e Sethares (1994)
usaram os algoritmos_geneticos (GA) para resolver
o problema de identificacao de parametros para
filtros_digitais IIR lineares e nao lineares. Schwaab
et al. (2008) propuseram o uso de otimizacao por
enxame de partculas (PSO) para estimacao de
parametros nao lineares apresentando bons resultados estatsticos.
Como os algoritmos de otimizacao tem um
papel importante na identificacao_de_sistemas caixa
preta, e tambem motivados pelos recentes avancos
nesta area, este artigo propoe o uso de um novo
tipo de algoritmo evolucionario (EA), o BC para
a estimacao_de_parametros.
Normalmente em problemas praticos a estrutura perfeita ou parametros do modelo nao sao conhecidos. Assim serao utilizados, neste artigo, problemas bem discutidos anteriormente por Aguirre
et al. (2010), Piroddi e Spinelli (2003) e Zhu (2005)
para avaliar a qualidade de estimacao do algoritmo
aqui proposto em comparacao com tecnicas recentes apresentadas na literatura.
Esse artigo esta organizado da seguinte maneira Na secao 2, o problema da estimacao de
parametros e descrito, na secao 3 o BC e apresentado, na secao 4 as modificacoes propostas aqui
para o BC sao detalhadas, na secao 5 a metodologia
utilizada e definida, somente entao na secao 6 os
resultados sao mostrados e discutidos e finalmente

Introducao

Na area de identificacao_de_sistemas, a maioria
dos fenomenos sao primeiramente modelados como
sistemas_lineares para facilitar o entendimento dos
seus comportamentos com uma matematica menos
complexa. Assim que a tecnologia evolui, melhores modelos sao necessarios para atingir as novas
demandas de qualidade dos processos. Como resultado, uma pesquisa mais profunda sobre o comportamento do sistema frequentemente leva a modelos
nao lineares. Parcialmente isso explica por que
a identificacao_de_sistemas_nao_lineares tem sido
uma area bem ativa (Ljung, 2010) (Billings, 1980)
(Ljung, 2007).
Uma atividade chave no procedimento de identificacao_de_sistemas_nao_lineares, para a classe de
modelo e a estrutura escolhida, e a estimacao de
parametros que faz com que o modelo represente
a dinamica pretendida.
Para estimar parametros de sistemas_nao_lineares o metodo dos mnimos_quadrados ordinarios
(MQO) foi amplamente utilizado devido a sua simplicidade, velocidade e matematica bem entendida
num tempo em que o poder computacional disponvel era relativamente baixo. Mais tarde foi
descoberto que problemas que requerem um modelo de rudo tornariam o modelo_nao_linear nos
parametros, prejudicando a estimacao_de_parametros sem tendencias por estimadores baseados em
MQO (Kumar e Moore, 1981).
Para trabalhar com nao linearidades nos parametros, alguns algoritmos heursticos de otimizacao

769

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

na secao 7, tem-se as conclusoes.
2

1. Cada cuco bota um ovo de cada vez, e bota seu
ovo num ninho escolhido aleatoriamente. Isso
e feito substituindo-se o ovo antigo por outro
gerado atraves de um voo de Levy aplicado
sobre o ovo anterior.

Definicao do Problema

O processo de identificacao_de_sistemas e iterativo
com essas atividades principais Testes dinamicos
e aquisicao_de_dados - Escolha da classe do modelo
e estrutura - Estimacao de parametros - Validacao
do modelo (Goodwin, 1977).
Este trabalho foca na atividade de estimacao
de parametros e tem, como pre-requisito, a escolha
da classe do modelo e estrutura.
A identificacao_de_sistemas e embasada na
construcao de um modelo_matematico M com parametros  que se comporta aproximadamente como
o sistema real S (Aguirre et al., 2010).
Existe um conjunto de dados Z que inclui
tanto sinais de entrada e sada do sistema S. Se os
sinais de entrada de Z forem tomados e aplicados
as entradas do modelo M , o conjunto de dados
ZM e produzido.
Entao se torna possvel definir uma funcao de
custo J(Z, ZM ) que mede quao longe o conjunto
de dados ZM esta do conjunto de dados medidos
Z. Minimizando-se J(Z, ZM ), pela escolha dos
parametros  do modelo M , obtem-se a estimacao
 que melhor aproxima M de S.
3

2. Os melhores ninhos sao transferidos as proximas geracoes. Essa regra e responsavel por
garantir a convergencia da solucao atraves de
elitismo.
3. O numero de ninhos anfitrioes e fixo, e o ovo
botado pelo cuco e descoberto pela anfitria
com uma probabilidade pa .
3.2.1

..................
incio
Funcao objetivo f(x), x  (x1 , ..., xd )T 
Gera uma populacao inicial de
n ninhos anfitrioes xi (i  1, 2, ..., n)
enquanto (t <GeracaoMaxima) ou (criterio_de_parada)
Toma um cuco aleatoriamente por voos de Levy
avalia a sua qualidadepertinencia Pi
Escolhe um ninho j entre n aleatoriamente
se (Pi > Pj ),
substitui j pela nova solucao
fim se
Uma fracao (pa ) dos piores ninhos sao abandonados
e novos sao construdos
Mantem melhores solucoes
(ou ninhos com solucoes de qualidade)
Ordena as solucoes e acha a melhor atual
fim enquanto
Pos processa os resultados e visualizacao
fim incio

Busca de Cuco Por Voos de Levy

A BC foi originalmente proposta por Yang e Deb
(2009) e foi comparado com o PSO e com o GA
onde mostrou bons resultados sobre uma ampla
gama de problemas de otimizacao.
3.1

Comportamento de Procriacao dos Cucos

Cucos sao passaros que nao criam seus filhotes.
Ao inves, as mamaes cuco colocam seus ovos nos
ninhos de femeas de outras especies esperando que
elas incubarao os filhotes de cuco como seus. Porem
se a anfitria descobre que os ovos nao sao dela, ou
ela simplesmente descarta os ovos estranhos, ou
abandona o ninho e constroi um novo ninho em
outro lugar.
3.2

Pseudo Codigo

3.3

Voo de Levy

Um grande contribuidor do desempenho do BC
e o voo de Levy que alem de estar intrnseco ao
metodo BC, e um tipo de caminhada aleatoria
responsavel por explorar o espaco de busca por
solucoes. Muitos animais as vezes desenvolvem
voos com caractersticas tpicas do voo de Levy. O
voo de Levy e uma busca espacial eficiente em que
as mudancas de direcao sao isotropicas e aleatorias,
os segmentos da trajetoria sao retilneos e seus
comprimentos seguem uma distribuicao de Levy
(Mandelbrot, 1983). Os tubaroes, por exemplo,
alternam entre o movimento browniano quando
a caca e abundante em uma determinada regiao
proxima e o movimento por voo de Levy quando
a caca esta escassa nessa regiao(Humphries, 2010).
Um exemplo do voo de Levy com 50 passos pode
ser observado na figura 1 com a origem como ponto
de partida.
O caso particular para o qual Mandelbrot usou
o termo voo de Levy e definido pela funcao de

Algoritmo Busca de Cuco

Cada ovo representa uma solucao candidata num
dado espaco de busca multidimensional e sua qualidade esta diretamente relacionada com a probabilidade de sobrevivencia dessa solucao. Para
simplificacao de um primeiro algoritmo, Yang e
Deb definiram que cada ninho contem apenas um
ovo, ou seja, cada ninho e um conjunto de solucoes
candidatas contendo somente uma solucao no BC.
Ao longo das geracoes dos passaros cuco e possvel
observar que a estrategia funciona como um EA.
O algoritmo segue tres regras ideais

770

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

4.1
50

Simulacao numerica de processos estocasticos
estaveis de Levy

O metodo utilizado por Yang em seu codigo apresenta um calculo simplificado do vetor s de passo
do voo de Levy conforme pode ser observado na
equacao 3.

0

a
s  q

x ().kbk
50

Onde a e b sao vetores com dimensao n de variaveis aleatorias independentes normalmente distribudas em que x e calculado atraves da equacao
12.

100
100

(3)

0

100

200

300

400

500

600

Figura 1 Um exemplo de 50 passos de um voo
de Levy em duas dimensoes com   0.5,   1,
  1.5,   1.

Onde (z) e a funcao de Euler . (4)
Para evitar possiveis efeitos colaterais de uma
simplificacao como essa, foi decidido utilizar na
ntegra o metodo de Mantegna (1994).
Em comparativo com outros metodos computacionais para geracao de numeros aleatorios com
uma distribuicao de Levy, o metodo de Mantegna
apresentou calculos mais simples (Leccardi, 2005),
o que favorece uma implementacao em hardware,
como por exemplo um ASIC (Application Specific
Integrated Circuit), para obtencao de um processamento muito mais rapido. Caso uma implementacao por hardware nao seja uma opcao de projeto,
o algoritmo de McCulloch e mais indicado devido
a sua maior velocidade de processamento por software.
O algoritmo selecionado para fazer o calculo do
comprimento dos passos do voo de Levy e baseado
no metodo de Mantegna e foi obtido no apendice
do artigo de Leccardi. E possvel observar que
esse algoritmo, para calcular C(), utiliza um metodo de calculo polinomial de valores dados alguns
pontos conhecidos, ao inves de resolver a integral
da equacao 5 numericamente obtendo-se C1 () e
C2 (), conforme proposto por Mantegna.

sobrevivencia da distribuicao dos comprimentos
dos passos, U , como pode ser visto na equacao 1.
(
1
P r(U > u) 
uD

 u < 1,
 u  1.

v
!
u
u (1 + ).sin( . )

2
t
x () 
1
2
( 1+
2 )..2

(1)

Onde D e um parametro relacionado a dimensao fractal e a distribuicao e um caso particular da
distribuicao de Pareto. Mais tarde pesquisadores
reformularam a questao permitindo que a distribuicao dos comprimentos dos passos seja qualquer
distribuicao cuja funcao de sobrevivencia tenha
uma cauda do tipo de potencia conforme pode ser
visto na equacao 2.

P r(U > u)  O(uk ),
para k que satisfaz 1 < k < 3.
(2)
Aqui a notacao O e a notacao matematica do
Grande-O.



4

2

 q  q
2



( 2 ) .C 2 ()



2 ()
2.x
1


.
q .e
dq
.x () 0



Z 

1
K()  1
 .
cos
+ 1 .C() .eq dq
 0
e
(5)

Z

BC modificada

Nesta secao propoe-se duas modificacoes no BC
original (Yang, 2010b) e utilizando-se como ponto
de partida o codigo disponibilizado pelo proprio
autor (Yang, 2010a)



onde

1. Simulacao numerica de processos estocasticos
estaveis de Levy

.
K() 


2. Calculo de direcao isotropica

771

+1
2.

1


 s
.



. +1
2
(1 + ).sen


.
2



(6)

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

4.2

Calculo de direcao isotropica

300

Um voo de Levy e uma caminhada aleatoria em que
os comprimentos dos passos tem uma distribuicao
de probabilidade do tipo cauda_pesada. Quando
definida como uma caminhada num espaco de dimensao maior que um, os passos sao realizados em
direcoes aleatorias isotropicas.
Na implementacao do algoritmo original no
MATLAB, Yang (2010b) sugere a utilizacao da
funcao randn com dimensao igual ao numero de
coordenadas do ninho conforme pode ser visto na
figura 2.

250
200
150
100
50

1

2
3
4

 Get a cuckoo and generate new ...
solutions by random walk
function sgetacuckoo(s,star)
stepsize0.05
sstar+stepsize*randn(size(s))

0

1

2

3

4

Figura 3 Histograma do comprimento de 10000
vetores bidimensionais gerados atraves da funcao
randn no MATLAB.

Figura 2 Implementacao da isotropia do algoritmo
original no MATLAB (Yang, 2010b).
Da trigonomia, o versor v de um vetor v carrega a informacao de direcao conforme pode ser
observado na equacao 7, enquanto kv k e a magnitude desse vetor.

1
2

v  randn(10000,3)
v  bsxfun(@rdivide,v,sqrt(sum(v.2,2)))

3
4
5

v  kv k.v

0

plot3(v(,1),v(,2),v(,3),.)
axis equal

(7)
Figura 4 Codigo sugerido por Aina e Jonas (2012)
para geracao de vetor unitario de 3 dimensoes.

Portanto o produto interno da escalar stepsize
por um vetor gerado pela operacao randn tem o
objetivo de criar um vetor com direcao aleatoria
isotropica e magnitude constante igual a 0.05 e que
desempenha um passo da caminhada aleatoria. No
voo de Levy, esse vetor tem sua magnitude calculada atraves da simulacao_numerica de processos
estocasticos de Levy.
Como nessa implementacao os vetores euclidianos resultantes da operacao randn nao apresentam
modulo unitario, surge, como efeito colateral, um
desvio na distribuicao de probabilidade dos comprimentos dos passos atraves da adicao de mais
uma variavel aleatoria, o comprimento do vetor de
direcao gerado.
Para demonstrar esse efeito, 10000 vetores de
direcao bidimensionais foram gerados conforme
implementacao original em que a amplitude deles
foi calculada e o histograma levantado.
Como pode ser observado na figura 3, a
amplitude dos vetores gerados nao e unitaria.
Objetivando-se corrigir essa distorcao, esses vetores foram transformados em versores mantendo-se
a direcao isotropica e aleatoria.
Isso foi alcancado atraves da divisao dos vetores pelas suas respectivas magnitudes, conforme
sugestao de Aina e Jonas (2012). A operacao pode
ser vista na figura 4.
Alem de resolver o problema apontado de distorcao, esse tipo de implementacao ainda permite

a geracao de um versor n-dimensional, para isso
basta alterar a dimensao 3 na linha 1 do codigo da
figura 4 para a dimensao desejada. O resultado dos
vetores tridimensionais utilizando-se como ponto
de partida a origem pode ser observado na figura
5.
5

Metodologia

Com uma estrutura matematica ja conhecida e
constante, a relacao entre os sinais de entrada e
sada de ZM sera funcao exclusiva do vetor de
parametros estimados . E aqui que entra o BC.
Como um algoritmo_de_otimizacao, ele sera responsavel por resolver o problema apresentado na
secao 2 atraves da determinacao de  de forma a
minimizar a funcao de custo J(Z, ZM ()) dado o
conjunto de dados Z.
5.1
5.1.1

Parametros do BC
Algoritmo do voo de Levy

De acordo com o algoritmo de Mantegna selecionado, e preciso definir os parametros da distribuicao de Levy zs  f (, , n, N ).

772

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

Tabela 1 Parametros utilizados no calculo da
distribuicao de Levy.
Parametro
Valor

1.5

1
n
1
N
matrix 

0.8
0.6
0.4
0.2
0
0.2
0.4

5.1.2

0.6

criterio_de_parada

Assim como o GA, o BC tambem precisa de um
criterio_de_parada para interromper a evolucao da
populacao de solucoes. Em geral, dois criterios de
parada distintos sao usados em EAs

0.8

0.5
0.5

0

1. Parada quando o algoritmo atinge um determinado numero de avaliacoes da funcao objetivo.

0
0.5

0.5

2. Parada quando a evolucao da populacao entra
em saturacao.

Figura 5 Dez mil versores tridimensionais gerados
isotropica e aleatoriamente.

O criterio_de_parada que e proposto aqui para
identificacao leva em consideracao a saturacao da
taxa media de evolucao. A razao para isso e

Onde  define o ndice da distribuicao e controla as propriedades de escala do processo estocastico zs ,  seleciona a unidade de escala do processo,
n e o numero de variaveis estocasticas independentes w calculados pela equacao 10 (Mantegna, 1994)
e N e a matriz de entrada que define somente a
dimensao da matriz de resultados.
O calculo de zs e feito atraves da equacao 8.
zs 



 .z

1. Geralmente para a identificacao_de_sistemas
as coordenadas do erro mnimo global sao
desconhecidas.
2. Quando a evolucao da populacao entra em
saturacao, as chances sao boas de que a melhor
solucao ate entao esta proxima do mnimo
global.

(8)

A saturacao da taxa media de evolucao sera
configurada por dois parametros, StallGenLimit e
TolFun. Quando a taxa de evolucao das ultimas
StallGenLimit geracoes for menor que TolFun, o
algoritmo interrompe novas geracoes.

Como pode ser visto na equacao 9, z e uma
media ponderada de n variaveis estocasticas w
geradas pela equacao 10.
(
Pn
z  1n . k1 wk  n > 1,
(9)
zw
 n  1.
v

w  K()  1 .e C() + 1.v

6

(10)

O problema de estimacao dos parametros e resolvido atraves de uma otimizacao que muitas vezes se
torna multi objetivo (MOP, Multi Objective Optimization) quando conjuntos de solucoes diferentes
atendem os requisitos de desempenho. EAs parecem uma escolha natural para resolver MOPs
porque podem encontrar multiplas solucoes em
uma rodada de simulacao. Para avaliar os resultados do estimador de parametros por BC (EPBC)
proposto, um comparativo sera feito com os resultados do estimador de parametros com o NSGA-II
(EPNSGAII) obtidos por Aguirre et al. (2010).
No artigo do Aguirre et al. (2010) um EA multiobjetivo (MOEA) chamado NSGA-II (Deb et al.,
2002) foi aplicado com sucesso para a estimacao
de parametros de alguns exemplos ja explorados
na literatura.
Segundo Deb et al. (2002) o NSGA-II lida bem
com os principais pontos de crtica do NSGA, com

Nessa equacao, a variavel estocastica v e calculada atraves de duas variaveis estocasticas normais
x e y como pode ser observado na equacao 11. Ja
K() e um parametro da transformacao nao linear
e e calculado atraves da equacao 6.
x
v p

y

Resultados

(11)

Os desvios padrao de x e de y sao selecionados
assim y  1 e x calculado pela equacao 12.
v

u
u (1 + ).sin .
2

x ()  t
(12)

1
 1+
..2 2
2
Conforme pode ser visto na tabela 1, a dimensao da matriz de resultados sera igual a dimensao
do vetor de parametros a serem identificados .

773

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

melhores resultados se comparado com a estrategia
de evolucao pareto-arquivada (PAES) e paretoforca EA (SPEA).
Dentre os exemplos abordados, dois foram selecionados para testar o desempenho do algoritmo
aqui proposto. Eles possuem as seguintes caractersticas



w(k)


y(k)

(14)

onde a entrada u(k) e um processo auto regressivo
de segunda ordem com polos em z  0.9 e 0.95
excitado por um rudo branco gaussiano com media
zero e variancia  2  0.25.

1. Sistema output error polinomial (OEP) linear
nos parametros
2. Sistema output error racional (OER) nao linear nos parametros
6.1

 0.75w(k  2) + 0.25u(k  1)
0.2w(k  2)u(k  1)
 w(k) + e(k)

Parametros do EPBC utilizados

Como ambos os exemplos sao SISO (Single Input
Single Output), a funcao de custo selecionada para
ser minimizada foi o erro medio quadratico (MSE
Mean Squared Error ) aplicado ao erro de sada
conforme descrito pela equacao
J(Z, ZM )  M SE(y  y)

Figura 6

Sistema OEP.

(13)
Re-escrevendo na representacao NARMAX

Nestes exemplos o parametro StallGenLimit
foi configurado relativamente alto e o parametro
TolFun foi configurado bem baixo para evitar a
desistencia da evolucao muito precocemente assim como um aumento da duracao da simulacao
MonteCarlo.
Para completar a parametrizacao do BC, a
populacao inicial foi fixada em 15 elementos (PopulationSize), e a probabilidade de descoberta de
ovos estranhos pela anfitria (pa ) foi fixada em 0,25
(DiscoveryRate). Resumindo, o BC foi configurado
de acordo com a tabela (2).

y(k) 0.75y(k  2) + 0.25u(k  1)
 0.2y(k  2)u(k  1)  0.75e(k  2)
+ 0.2e(k  2)u(k  1) + e(k)
(15)
Na simulacao livre, frequentemente esse sistema apresenta comportamento instavel conforme
pode ser observado na figura 7.
30
y(k)
u(k)

Tabela 2

Conjunto de configuracoes do EPBC.
Parametro BC Valor
StallGenLimit
1000
PopulationSize
15
TolFun
1e-20
DiscoveryRate
0.25

20

10

0

10

20

6.2

Construcao dos Modelos dos Exemplos

30

Os sistemas S dos exemplos, aqui tambem explorados, foram construdos no Simulink objetivando-se
gerar o conjunto de dados Z que inclui tanto os
sinais de entrada e sada do sistema S.
Seguindo-se as recomendacoes do MATLAB
(2013) para melhores resultados, a semente inicial
dos blocos geradores de rudo gaussiano foi configurada para a funcao randseed, que gera um numero
primo aleatorio e maior que 30.
6.3

0

50

100

150

200

250

300

Figura 7
Instabilidade do sistema OEP. Max.
e mn. de y(k) sao 6, 95.1023 e 1, 90.1017 respectivamente.
Observou-se que um aumento da quantidade
de amostras utilizadas nos sinais de entrada e sada
desse sistema implica um aumento da incidencia de
instabilidade do sistema. Esse comportamento traz
uma dificuldade adicional na estimacao devido a
possibilidade de gerar inumeros pontos de mnimo
na funcao de custo.
Os resultados obtidos das 1000 rodadas MonteCarlo mostram que utilizando-se a EPBC, foi

Exemplo OEP

O primeiro exemplo aqui abordado trata da identificacao de parametros de um modelo para um sistema OEP proposto por Piroddi e Spinelli (2003)

774

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

possvel estimar os parametros do modelo conforme mostra a tabela (3) na coluna  com um
comprimento de 300 amostras na simulacao livre
do sistema S no Simulink.
Tabela 3
EPBC sobre
ref
n
1 0.75
2 0.25
3 -0.2

equation error 

Resultados do modelo OEP com
1000 rodadas Monte Carlo.
min
max
med
std. dev.
m
M


0.7497
0.7500
0.7500
0.0000
0.0316
0.3408
0.2336
0.0402
-0.2001 -0.2000 -0.2000
0.0000

Se os resultados forem comparados agora com
aqueles obtidos pelo Aguirre et al. (2010) na tabela
4, e tambem possvel ver que para 300 amostras, os
desvios padrao  do EPBC para os parametros 1
e 3 sao iguais a zero, enquanto o EPNSGAII obteve 0,005. Ja o parametro 2 foi melhor estimado
pelo EPNSGAII.
Tabela 4
Resultados do modelo OEP com
EPNSGAII sobre 1000 rodadas Monte Carlo.
ref
min
max
med
std. dev.
n
m
M


1 0.75 0.7350
0.7690
0.7500
0.0050
2 0.25 0.2330
0.2650
0.2500
0.0050
3 -0.2 -0.2210 -0.1790 -0.2010
0.0050

6.4

O seguinte sistema OER e nao linear nos parametros e foi tirado de Zhu (2005).

y(k)



0.3w(k1)w(k2)+0.7u(k1)
1+w(k1)2 +u(k1)2

 w(k) + e(k)

(16)

onde a entrada u(k) e uma sequencia uniformemente distribuda com media zero e variancia  2
igual a 0.33 e e(k) e um rudo branco com media
zero e variancia  2 igual a 0.01. Esse problema foi
escolhido porque de acordo com o Aguirre et al.
(2010) ele representa uma estimacao_de_parametros
desafiadora.

Figura 8

Tabela 5
Resultados do modelo OER com
EPBC sobre 1000 rodadas Monte Carlo.
ref
min
max
med
std. dev.
n


m
M
1 0.3 0.0874 0.5552 0.3008
0.0745
2 0.7 0.6182 0.7882 0.6981
0.0266
3
1
-0.4115 2.5834 0.9693
0.5121
4
1
0.7476 1.2415 0.9971
0.0837
Se os resultados forem comparados agora com
aqueles obtidos pelo Aguirre et al. (2010) na tabela
6, e tambem possvel ver que para uma simulacao
de 1000 amostras, os desvio padrao  do EPBC
foi aproximadamente metade do estimador de parametros NSGA-II. Isso significa que ele foi mais
eficiente na indicacao dos valores de parametros
reais.
Tabela 6
EPNSGAII
ref
n
1 0.3
2 0.7
3
1
4
1

Exemplo OER

(
w(k)

0.3y(k  1)y(k  2) + 0.7u(k  1)
+ e(k)
1 + y(k  1)2 + u(k  1)2
(17)
Os resultados obtidos das 1000 rodadas MonteCarlo mostram que utilizando-se a EPBC, foi
possvel estimar os parametros do modelo conforme mostra a tabela (5) na coluna  com um
comprimento de 1000 amostras na simulacao livre
do sistema S no Simulink.
y(k) 

Resultados do modelo OER com
sobre 1000 rodadas Monte Carlo.
min
max
med std. dev.
m
M


-0.25 0.834 0.293
0.142
0.454 0.905 0.703
0.062
-2.659 4.175 1.044
0.939
0.452 1.773 1.016
0.225

7

Conclusoes

Nesse artigo propos-se um algoritmo de estimacao
que aplica o BC na estimacao_de_parametros dada
a estrutura do sistema. O algoritmo foi acurado,
rapido, facil de implementar e ajustar. Alem disso
foram propostas algumas modificacoes no BC afim
de melhora-lo.
Para destacar o seu desempenho os sistemas
dos exemplos escolhidos foram nao lineares, sendo
o primeiro de sada instavel e o segundo nao linear
tambem nos parametros o que representa uma complexidade adicional para o processo de estimacao.
Os resultados demonstram que o algoritmo
aqui proposto alem de obter sucesso na tarefa da
estimacao_de_parametros, foi em geral mais acurado
no comparativo com o NSGA-II.

Sistema OER.

Ele pode ser re-escrito usando a representacao

775

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

Mandelbrot, B. (1983). The Fractal Geometry
of Nature, Henry Holt and Company, San
Francisco.

Referencias
Aguirre, L. A., Barbosa, B. H. e Braga, A. P.
(2010). Prediction and simulation errors in
parameter estimation for nonlinear_systems,
Mechanical Systems and Signal Processing
24(8) 2855  2867.

Mantegna, R. N. (1994). Fast, accurate algorithm
for numerical simulation of levy stable
stochastic processes, Phys. Rev. E 49 4677
4683.

Aina e Jonas (2012). How to generate a unit
vector pointing in a random direction with
isotropic distribution of direction? Disponvel em <httpstackoverflow.com
questions9750908how-to-generate-aunit-vector-pointing-in-a-randomdirection-with-isotropic-dist>.
Acesso em 31 de dezembro de 2013.

MATLAB (2013). Gaussian noise generator,
MATLAB online documentation, The
MathWorks Inc., Natick, Massachusetts.
Piroddi, L. e Spinelli, W. (2003). An identification
algorithm for polynomial narx models based
on simulation error minimization, International Journal of Control 76(17) 17671781.

Billings, S. (1980). Identification of nonlinear
systems A survey, Control theory and applications, IEEE Proceedings D 127(6) 272285.

Samad, T. e Mathur, A. (1992). Parameter
estimation for process control with neural
networks, International Journal of Approximate Reasoning 7(3-4) 149164.

Deb, K., Pratap, A., Agarwal, S. e Meyarivan,
T. (2002). A fast and elitist multiobjective
genetic algorithm Nsga-ii, Evolutionary
Computation,
IEEE Transactions on
6(2) 182197.

Schwaab, M., Biscaia, E. C., Jr., Monteiro,
J. L. e Pinto, J. C. (2008). Nonlinear
parameter estimation through particle swarm
optimization, Chemical Engineering Science
63(6) 15421552.

Goodwin, G. C. (1977). Dynamic system identification experiment design and data analysis,
Developmental Psychology Series, Academic
Press.

Yang, X.-S. (2010a). Cuckoo search (cs) algorithm.
Diponvel em <httpwww.mathworks.
commatlabcentralfileexchange29809cuckoo-search-cs-algorithm>.
Acesso
em 11 de fevereiro de 2014.

Humphries, N. E. (2010). Environmental context
explains levy and brownian movement patterns of marine predators, Nature 465 1066 
1069.

Yang, X.-S. (2010b). Nature-inspired metaheuristic
algorithms, 2 edn, Luniver Press, University
of Cambridge, Frome, BA11 6TT, United
Kingdom.

Kumar, R. e Moore, J. B. (1981). Detection
techniques in least squares identification,
Automatica 17(6) 805  819.

Yang, X.-S. e Deb, S. (2009). Cuckoo search via
levy flights, Nature Biologically Inspired Computing, 2009. NaBIC 2009. World Congress
on, pp. 210214.

Leccardi, M. (2005).
Comparison of three
algorithms for levy noise generation, Fifth
EUROMECH Nonlinear Dynamics Conference, pp. 16.

Yao, L. e Sethares, W. (1994). Nonlinear parameter estimation via the genetic algorithm,
Signal Processing, IEEE Transactions on
42(4) 927935.

Ljung, L. (2007). Identification of nonlinear
systems, LiTH-ISY-R 2784, Linkoping
University, The Institute of Technology,
Department of Electrical Engineering, Automatic Control.

Zhu, Q. (2005). An implicit least squares algorithm for nonlinear rational model parameter
estimation, Applied Mathematical Modelling
29(7) 673  689.

Ljung, L. (2010). Perspectives on system identification, Annual Reviews in Control 34(1) 1  12.

776