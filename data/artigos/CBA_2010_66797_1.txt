XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

PROCESSO UNIFICADO APLICADO AO PROJETO E DESENVOLVIMENTO DE
UM SOFTWARE COMPATIVEL AS ANALISES DE PROTECAO E QUALIDADE DA
ENERGIA ELETRICA EM UM SISTEMA DE DISTRIBUICAO REAL
Hermes M. G. C. Branco, Renato M. Monaro, Daniel Barbosa, Ulisses Chemin Netto,
Mario Oleskovicz, Denis V. Coury, Stanley E. Tokuno, Osvaldo R. M. Parreira


Departamento de Engenharia Eletrica - EESCUSP
Av. Trabalhador Saocarlense, 400 - CEP 13566-590 - Sao Carlos-SP


Companhia Paulista de Forca e Luz - CPFL
Rodovia Eng. Miguel Noel Nascentes Burnier, Km 2,5 - CEP 13088-900 - Campinas-SP
Emails hermescb@usp.br, monaro@usp.br, dbarbosa@usp.br, uchenin@usp.br,
olesk@sc.usp.br, coury@sc.usp.br, stanley@cpfl.com.br, osvaldoparreira@cpfl.com.br
Abstract This paper presents the software developed to assist the analysis of protection and power quality in
an actual power distribution system. The computer application allows analysis of protection and power quality in
an integrated environment, and makes easy the identification of the correlation between them. The software was
developed based on the object orientation paradigm through the concepts of the unified process. It is expected
that this kind of application can be important in the analysis and statistics process related to the protection and
performance evaluation of any power distribution system.
Distribution Power System, Protection, Power Quality, Unified Process, UML, Object Orienta-

Keywords
tion.

Resumo Este artigo apresenta um software desenvolvido para auxiliar as analises de protecao e qualidade
da energia eletrica em um sistema de distribuicao real. O aplicativo computacional, alem de permitir analises
de protecao e qualidade_da_energia em um ambiente integrado, facilita a identificacao da correlacao entre as
areas. O software foi desenvolvido de acordo com o paradigma de orientacao_a_objetos, seguindo os conceitos do
processo_unificado. Espera-se que a utilizacao de uma aplicacao como esta seja de importancia no processo de
analise e estatsticas no que diz respeito ao desempenho da protecao e a avaliacao de um sistema de distribuicao
de energia qualquer.
Palavras-chave .

1

protecao provindos de problemas relacionados a
QEE. Portanto, um eficiente cruzamento entre as
informacoes dos dispositivos de protecao e dados
de medicoes de QEE e uma tarefa de relevante importancia para um melhor entendimento das varias situacoes adversas a que um sistema de distribuicao possa estar ou vir a ser submetido.

Introducao

A Qualidade da Energia Eletrica (QEE) e uma
area que requer o conhecimento e analise de diversas situacoes nao desejadas que, possivelmente,
estejam presentes nos sinais de tensao eou corrente, nos sistemas_de_distribuicao_de_energia_eletrica (Bollen and Gu, 2006). Contudo, nem sempre todas as analises requeridas podem ser efetuadas adequadamente, pois ha uma grande quantidade de dados disponveis que devem ser rapidamente pre-processados e compilados para facilitar o trabalho de analise do corpo tecnico envolvido. Este fato torna necessario um aplicativo
que auxilie no processamento e analise dos dados
disponveis provindos dos varios equipamentos de
protecao e medicao instalados em campo sobre o
sistema em observacao. Outro desafio que tambem deve ser superado consiste no armazenamento
das informacoes relevantes em um banco_de_dados
adequadamente estruturado.

Alem dos pontos levantados, vale ressaltar que
o entendimento das causas dos eventos de QEE relacionados com os de protecao pode apontar pontos frageis do sistema de distribuicao, ou mesmo
contribuir para um estudo do desempenho do sistema como um todo.
Neste contexto, idealizou-se um software que
viesse a auxiliar na identificacao de eventos de protecao e de QEE possivelmente correlacionados e
que permitisse analises conjuntas das oscilografias
tanto dos reles como das medicoes de QEE. Tal
software deveria tambem possibilitar o armazenamento das informacoes obtidas com os medidores
de QEE e com os reles em uma unica base de
dados, facilitando assim o acesso e a difusao das
informacoes entre os tecnicos de uma empresa.

Sabe-se que os desligamentos provocados por
defeitos podem provocar interrupcoes no fornecimento da energia, bem como elevacoes eou afundamentos_de_tensao em diversos pontos da rede
de distribuicao. Em alguns casos pode ocorrer
tambem prejuzos no desempenho do sistema de

Pela pratica, sabe-se que a maioria dos softwares adotados no setor eletrico sao de grande porte
e seu desenvolvimento e norteado por metodos
procedurais. Isto ocasiona dificuldades na integra-

4851

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

cao entre os modulos desenvolvidos por diferentes
equipes, e elevados investimentos para manutencao e atualizacoes (Agostini et al., 2002). Alem
disto, novas metodologias sao constantemente desenvolvidas e precisam ser integradas aos sistemas
ja desenvolvidos. Cabe lembrar que em softwares construdos sob paradigmas procedurais, esta
integracao nem sempre e uma tarefa facil.

2.1

A APOO pode ser definida como uma tecnica
na qual se esta interessado primordialmente na
clareza e organizacao do projeto, adotando uma
representacao clara e eficiente do mundo real (domnio da aplicacao), de forma a facilitar ao maximo o desenvolvimento e a manutencao do software (Agostini et al., 2002).
A analise enfatiza uma investigacao do problema e dos requisitos, ja o projeto enfatiza
uma solucao conceitual que satisfaca os requisitos, e nao sua implementacao propriamente dita
(Larman, 2002). Durante a analise orientada a
objetos o objetivo e encontrar e descrever os conceitos (objetos) relativos ao domnio do problema.
Durante o projeto orientado a objetos ha uma enfase na definicao dos objetos de software e como
eles colaboram para a satisfacao dos requisitos.
A APOO facilita a implementacao do projeto de software atraves de uma linguagem de programacao orientada a objetos. Neste paradigma
de programacao existem objetos definidos como
componentes de software reutilizaveis que modelam coisas do mundo real. A tecnologia de objetos
pode ser definida como um esquema de empacotamento que permite criar unidades de software com
significado proprio, que sao amplamente direcionadas as aplicacoes particulares. Objetos devidamente encapsulados, com interfaces publicas que
ocultam suas estruturas internas privadas, ficando
assim protegidos de efeitos colaterais em futura
manutencao no software (Agostini et al., 2002).
Um objeto e constitudo por atributos, ou seja,
dados associados a ele, e tambem metodos, que
sao tarefas que o objeto realiza ou formas de manipular seus atributos. Na fase de projeto defini-se
classes, atraves das quais os objetos serao instanciados. Na definicao da classe sao estipulados os
atributos e metodos que fazem parte desta classe
especfica. As classes podem ser associadas ou se
relacionarem de modo a criar outras classes.
Um tipo especial de associacao e a heranca. A
heranca e um aspecto fundamental da programacao orientada a objetos, porque permite que os objetos descendentes (subclasses) herdem atributos
e comportamentos de outros objetos base (superclasse), resumindo assim o volume de codigo novo
que deve ser projetado, escrito e testado a cada
novo projeto que e desenvolvido. O polimorfismo
e outra caracterstica importante da orientacao a
objetos que permite que dois metodos tenham o
mesmo nome, mas programem comportamentos
diferentes.
Utilizar uma abordagem de implementacao
e projetos modulares, orientada a objetos, pode
tornar os grupos de desenvolvimento de software
muito mais produtivos, visto que os programas

Em virtude dos aspectos acima citados, varios
trabalhos tem apontado a utilizacao do paradigma
de orientacao_a_objetos como uma excelente alternativa para o desenvolvimento de aplicacoes voltadas para o setor eletrico. A maioria dos trabalhos
encontrados tratam de aplicacoes de fluxo de potencia (Losi and Russo, 2005 Nor et al., 2004).
Varios trabalhos sao voltados para a modelagem e simulacao_de_sistemas eletricos (Agostini
et al., 2002 McDermott, 2006). Existem tambem
trabalhos voltados para ferramentas de analises de
sistemas eletricos (Peharda et al., 2007), estudos
de distorcoes harmonicas (Chindris et al., 2007) e
monitoramento (Qiu and Wimmer, 2000).
Sendo assim, este trabalho tem por objetivo
aplicar Analise e Projeto Orientados a Objetos
(APOO), por meio do Processo Unificado (PU)
(Larman, 2002), para o desenvolvimento de um
software compatvel as analises de protecao e QEE
voltado a um sistema_de_distribuicao_de_energia
real.

2

Analise e Projeto Orientados a Objetos
(APOO) e a Programacao Orientada a Objetos

Conceitos Sobre as Tecnicas de Projeto
e Desenvolvimento Empregadas

Para a obtencao de melhores solucoes quando do
desenvolvimento de um software, deve-se seguir
um processo detalhado para a analise_dos_requisitos do sistema que se pretende desenvolver. Devese fazer, ainda, uma analise do domnio buscando
identificar os principais conceitos relacionados ao
software a ser desenvolvido. Posteriormente, fazse necessario um maior detalhamento dos requisitos e conceitos ate entao estabelecidos e dos
relacionamentos existentes entre estes conceitos.
Durante a implementacao do sistema, busca-se
atender os requisitos necessarios para o desenvolvimento do software contemplando os conceitos
identificados. Tambem faz-se uso de rotinas de
validacao e verificacao do software para assegurar
que os requisitos foram atendidos.
O processo anteriormente descrito envolve
analisar e projetar o software do ponto de vista
da orientacao_a_objetos. Para permitir um melhor entendimento do trabalho desenvolvido serao
introduzidos nesta secao alguns conceitos relacionados a engenharia_de_software que foram empregados no desenvolvimento deste.

4852

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

orientados a objetos sao mais faceis de entender,
corrigir e modificar (Agostini et al., 2002). Isto
se deve a uma das grandes vantagens advindas da
programacao orientada a objetos, que e a reutilizacao de software (reutilizacao de classes).
2.2

projeto e organizado em uma serie de mini projetos que caracterizam as iteracoes. O resultado
de cada iteracao e um sistema executavel, mas incompleto. Este processo permite que o sistema
cresca incrementalmente ao longo do tempo por
meio de cada iteracao. Embora cada iteracao, em
geral, contemple novos requisitos, a cada nova iteracao, pode-se prever melhoramentos e adaptacoes
do software ja produzido em outras iteracoes.
Alguns dos benefcios do desenvolvimento iterativo sao

Unified Modeling Language (UML)

A UML (Blaha and Rumbaugh, 2005) e uma linguagem grafica que permite aos desenvolvedores
representarem seus projetos orientados a objetos
utilizando uma notacao comum. Esta linguagem
e um esquema de modelagem grafica amplamente
utilizada no mundo para a compilacao de softwares orientados a objetos. Dos diagramas disponveis na UML aponta-se os diagramas de Classe, de
Casos de Uso e o diagrama de Sequencia como os
mais utilizados pelos desenvolvedores de software.
Estes diagramas serao comentados a seguir.
Diagrama de Casos de Uso ilustra um
conjunto de casos de uso para um sistema, os atores e a relacao entre os atores e os casos de uso
(Larman, 2002). Os atores representam os usuarios e outros sistemas que interagem com o sistema
modelado, enquanto os casos de uso representam
o comportamento do sistema em resposta a interacao com um ator. Este diagrama objetiva facilitar
a comunicacao entre a equipe de desenvolvimento
e os futuros usuarios do software, para que estes
possam interagir mais facilmente na obtencao dos
requisitos.
Diagrama de Classe define a estrutura
do sistema a se desenvolver. Nele sao expostos
todos os conceitos (classes) do domnio que serao implementados no software (Blaha and Rumbaugh, 2005). O diagrama de Classe ilustra as
classes que compoem o sistema, os atributos e metodos de cada classe, bem como o relacionamento
entre estas classes.
Diagrama de Sequencia fornece uma visao completa das operacoes realizadas entre atores
e objetos, alem das operacoes realizadas entre objetos (Larman, 2002). No diagrama de Sequencia
cada objeto e representado por uma linha vertical,
que simboliza a vida do objeto. Enquanto o objeto
detem o controle, sua linha de vida e representada por uma caixa retangular na vertical, caso
contrario e representado por uma linha tracejada.
2.3

 Mitigacao precoce de altos riscos
 Progresso visvel desde o incio e
 Realimentacao, envolvimento do usuario e
adaptacao imediatos.
Alem de usar iteracoes, o PU incentiva outras
praticas como
 APOO e programacao orientada a objetos
 Atacar problemas de alto risco ja nas iteracoes iniciais
 Envolver continuamente o usuario no processo
 Construir uma arquitetura central coesa nas
iteracoes iniciais
 Aplicar casos de uso e
 Modelar visualmente o software com UML
(Blaha and Rumbaugh, 2005).
Um projeto organizado segundo o PU divide
o trabalho e as iteracoes ao longo de quatro fases
principais, a saber.
Concepcao Fornece uma visao aproximada
das tarefas a serem realizadas pelo sistema, apresentando um escopo e estimativas vagas para o
projeto.
Elaboracao Visao refinada, com implementacao iterativa da arquitetura central e resolucao
dos altos riscos. Aqui se identificam a maioria dos
requisitos, conseguindo-se um escopo e estimativas
mais realistas acerca do software a ser desenvolvido.
Construcao Implementacao iterativa dos
elementos restantes e preparacao para implantacao.
Transicao Testes do software e implantacao
na linha de producao.
O PU descreve varias atividades de trabalho,
dentro de disciplinas a serem desempenhadas ao
longo do desenvolvimento de um software. Neste
trabalho serao citados os principais artefatos (produto de uma atividade) relacionados com as disciplinas a seguir

Processo Unificado (PU)

O processo de desenvolvimento de um software
descreve uma abordagem para a construcao, implantacao e manutencao de um software. O PU
surgiu como um processo de desenvolvimento de
software visando a construcao de sistemas orientados a objetos (Larman, 2002).
Das varias praticas incentivadas pelo PU a
que mais se destaca e o desenvolvimento iterativo, de acordo com o qual o desenvolvimento do

 Modelagem de Negocio inclui a modelagem
de objetos do domnio

4853

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

Sistema compatível  análise dos fenômenos relacionados  QEE

 Requisitos analise_de_requisitos para uma
aplicacao e

Cadastrar Equipamento

 Projeto Todos os aspectos relacionados com
o projeto, incluindo arquitetura geral, objetos, bancos de dados, entre outros.

Cadastrar localização

Incluir Eventos

E importante lembrar que durante uma iteracao o trabalho deve envolver todas as disciplinas,
e dependendo da fase em que se esteja, o esforco e
maior em uma determinada disciplina. A Figura
1 ilustra varias iteracoes de um projeto e o esforco demandado por disciplina em cada iteracao
ao longo das fases do PU.
Fases
Disciplinas

ConElaboração
cepção

Construção

Eng.

Consultar Eventos de Proteção

Consultar Eventos de QEE

Consultar Eventos Correlacionados

Transição

Figura 2 Diagrama de casos de uso.

Modelagem
de Negócio
Caso de Uso

Requisitos
Projeto

Engenheiro de proteção ou de qualidade

Interessados e

Engenheiro de proteção ou de qualidade, gerentes e diretores das companhias

Interesses
Pré-condições

Implementação

Consultar eventos correlacionados

Ator Principal

elétrica, consumidores
Cadastrado do equipamento de aquisição e sua localização
Informações da proteção e da QEE inseridas na base de dados

Pós-condições
Fluxo Básico

Iterações

Listagem dos eventos e disponibilização das oscilografias ao usuário
1)

Usuário seleciona subestação em que realizar consulta

2)

Usuário seleciona alimentador em que realizar consulta

3)

Usuário seleciona o período em que quer verificar ocorrências
de eventos de proteção e QEE correlacionado

Figura 1 Disciplinas e fases do PU.

4)

Usuário indica a tolerância de erro no sincronismo dos relógios
dos equipamentos

5)

Observando a Figura 1 percebe-se que nas iteracoes iniciais, que compreendem as fases de concepcao e elaboracao, existe uma enfase maior nas
disciplinas de requisito e de projeto. Ja nas ultimas iteracoes o esforco concentra-se principalmente na implementacao, pois os requisitos e o
projeto central ja estabilizaram por meio de sucessivas realimentacoes e adaptacoes.
3

Software busca eventos de qualidade ocorridos no alimentador
indicado e eventos de proteção ocorridos em todos os
alimentadores da sustação indicada, apontando como possíveis
eventos correlacionados aqueles eventos ocorridos em horários
próximos, considerando o tempo de tolerância indicado

6)

Software fornece a lista de possíveis eventos correlacionados
para os parâmetros de busca fornecidos

7)

Usuário faz análises desejadas e emite relatórios desejados

8)

Fim do caso de uso

Figura 3 Caso de uso Consultar eventos correlacionados.

Modelagem do Software Proposto
De posse das informacoes contidas nos casos
de uso foi possvel construir um modelo de domnio parcial para a aplicacao. Este modelo e representado atraves da notacao do diagrama de classes
da UML. Um modelo de domnio permite visualizar e relacionar conceitos do domnio, alem de
ilustrar uma abstracao das classes conceituais.
O domnio do aplicativo e apresentado pela
Figura 4. Por esta, nota-se que existe uma classe
conceitual Informacoes que alem de seus atributos tempoIncio e formadeOnda e composta por
outras classes conceituais Localizacao e Equipamento. A classe conceitual Informacoes pode se
especializar em InfProt e InfQEE(VTCD). As informacoes sao obtidas por meio de arquivos no padrao COMTRADE (C37.111-1991, 1991 C37.1111999, 1999) ou em formato proprietario do fabricante do medidor de QEE. As formas de obtencao das informacoes tambem estao representadas
por suas respectivas classes conceituais. Perceba
que AnaliseProt e uma classe conceitual no dom-

Como apontado pela teoria do PU, iniciou-se a
fase de analise por meio da investigacao das funcionalidades do aplicativo a ser desenvolvido. Por
meio de consultas aos usuarios determinou-se os
principais casos de uso, representados atraves do
diagrama de casos de uso da Figura 2. Examinando a Figura 2 percebe-se que e possvel cadastrar equipamentos de protecao e medidores de
QEE, cadastrar a localizacao destes equipamentos, incluir informacoes dos eventos de protecao
e de QEE, consultar os eventos de protecao e de
QEE ja cadastrados e verificar a possibilidade de
correlacao entre eventos.
A Figura 3 ilustra como foi o modelo adotado
para documentacao dos casos de uso. Produziuse um documento escrito para cada caso de uso
do software, no qual especificou-se de forma detalhada a sequencia tpica do fluxo de informacoes,
pre e pos condicoes alem de sequencias alternativas. A Figura 3 exemplifica a descricao do caso
de uso Consultar eventos correlacionados.

4854

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

nio investigado e que AnaliseQEE e ProtXQEE
herdam as caractersticas de AnaliseProt e ainda
apresentam seus proprios atributos.

tempo

InfProteção

Localização

-instantes  vector <float>
-Unidade  string

-tipoFalta  string
-tempoFim  float

-Subestação  string
-alimentador  string

+getInstantes()  vector <float>
+getUnidade()  string
+setInstantes()  void
+setUnidade()  void

+getTempoFim()  float
+getTipoFalta()  string
+setTempoFim()  void
+classificaFalta()  void

+getSubestacao()  string
+getAlimentador()  string
+setSubestacao()  void
+setAlimentador()  void

1

1

InfoCanais
informacaoCanalAnalogico
informacaoCanalDigital

Prot X QEE

AnaliseQEE

Tolerância

COMTRADE91
anoPadrao
numCanaisAnalogicos
numCanaisDigitais
frequenciaLinha
numFrequenciaAmostragem
amostragens
ultimaAmostra
canaisDeEntrada
cabecalhoDeInformacoes
Inicio
Fim

Fase

COMTRADE99

+getPontos()  vectot <float>
+getUnidade()  string
+setPontos()  void
+setUnidade()  void

1
1..*

Informações

1

-TempoInicio  float

1

+getTempoInicio()  float
1
+setTempoInicio()  void

-Marca  string
-Modelo  string

1

+getMarca()  string
+getModelo()  string
+setMarca()  void
+setModelo()  void

Equipamento
Marca
Modelo

Figura 6 Exemplo do diagrama de classes.

Arquivo Qualimetro

Informações
tempoInicio
formaDeOnda

ParametrosConfig
EventosVTCD
EventosVTLD

Ressalta-se que e durante a modelagem dinamica de objetos que o projetista exercita seu raciocnio por meio dos detalhes exatos de quais objetos
precisam existir e de como colaboram por meio de
mensagens e metodos (Rabelo et al., 2008). Logo,
existe um relacionamento entre as modelagens estatica e dinamica, que as tornam complementares
no projeto orientado a objetos.
Nesta etapa do desenvolvimento projetou-se
o banco_de_dados responsavel por armazenar as
informacoes obtidas por meio de equipamentos de
protecao e medidores de QEE. Para a implementacao do software optou-se por utilizar a linguagem
de programacao C++, dispondo da interface de
programacao C++ Builder. O sistema de gerenciamento de banco_de_dados adotado foi o MySQL.

Fornece
InfQEE(VTCD)

InfProteção
TipoFalta
tempoFim

multiplicadorTempo
InformacoesExtras

Localização
Subestação
alimentador
pontoMedição

AnáliseProt
PeríodoBusca
QtOcorrencias

Fornece

tipoEvento
Fase
Duração

Figura 4 Modelo de domnio Parcial.

Durante o projeto orientado a objeto sao desenvolvidos diagramas de sequencia para os principais casos de uso. Na Figura 5 representa-se como
ocorre as trocas de mensagens entre os objetos durante uma operacao de Consulta de eventos de
Protecao e QEE correlacionados.

Eng.
1 Relacionar Prot X QEE

Equipamento

FormadeOnda
-pontos  vector<float>
-unidade  string

4

BaseDados
Prot X QEE

Apresentacao do Software Compatvel
as Analises de Protecao e QEE

2 SubEstação

O primeiro procedimento que deve ser realizado
para a utilizacao do software e a inclusao dos dados coletados (registrados em campo), sendo que e
preciso informar o local de instalacao do medidor
de QEE ou do dispositivo de protecao que registrou cada um dos eventos, bem como a marca e o
modelo do equipamento utilizado.
Com o auxlio do software e possvel realizar buscas de eventos de protecao ou de QEE e
analisa-los isoladamente. Para tanto, indica-se o
intervalo de tempo no qual se pretende verificar a
ocorrencia de eventos e se aponta a subestacao e
o alimentador desejado - no caso de consulta de
eventos de protecao - e a subestacao, o alimentador desejado, e ponto de instalacao do medidor de
QEE - no caso de consulta de eventos de QEE.
Para cada evento pode-se verificar as formas de
onda registradas possibilitando fazer as analises e
comentarios pertinentes a cada situacao.
Outra possibilidade contemplada no software
e buscar eventos de protecao e QEE possivelmente
correlacionados. Esta busca baseia-se no horario
de ocorrencia dos eventos. Logo, assume-se que os
relogios dos equipamentos estejam sincronizados,
admitindo contudo, certa faixa de tolerancia. Esta
faixa de tolerancia e adotada porque na pratica
as empresas de energia atualmente nao possuem

3 ListaAlimentadores
4 Alimentador
5 PeriodoBusca
6 Tolerancia
7 BuscarEventos

8 ConsultarBase
9 Eventos
10 EventoProtecao

12 ListaPossiveisRelações

InfProtecao

11 EventoQEE

InfQEE

13 ADDRelaçãoEmRelatorio

...

...
...

...

...

Figura 5 Parte do diagrama de sequencia do sistema.

Alem de uma visao dinamica de objetos, mostrada no diagrama de sequencia, e util criar uma
visao estatica das definicoes de classes com um diagrama de classes de projeto (Rabelo et al., 2008).
A Figura 6 exemplifica algumas das classes projetadas. Ao contrario do modelo de domnio, que
mostra as classes do mundo real, o diagrama de
classes de projeto mostra as classes de software.
Observa-se que, apesar do diagrama de classes de
projeto nao ser o mesmo que o modelo de domnio,
alguns nomes de classe, atributos e associacoes sao
semelhantes.

4855

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

todos os relogios de seus equipamentos sincronizados.
Para realizar este tipo de consulta, deve-se escolher a subestacao e o alimentador onde se deseja analisar os eventos de QEE. Posteriormente,
aponta-se o perodo de observacao e um intervalo
de tempo de tolerancia entre os ajustes dos relogios dos equipamentos. O software busca na base
de dados todos os eventos de protecao que ocorreram na mesma subestacao indicada para buscar eventos de qualidade, e lista lado a lado os
eventos de QEE e de protecao que ocorreram no
mesmo instante (perodo), levando em consideracao o tempo de tolerancia de sincronismo entre os
relogios. Com isto, espera-se reduzir bastante o
trabalho dos responsaveis (corpo tecnico das concessionarias de energia) por este tipo de analise,
pois resta ao analista verificar as formas de onda
dos eventos listados como possveis eventos correlacionados, para emitir seu parecer em um relatorio tecnico.

Cabe ressaltar que um software em seu ciclo de vida deve sofrer constantes melhoramentos
e revisoes ate atingir um estagio de maturidade.
Um passo futuro no desenvolvimento deste software seria a possibilidade de uma analise automatizada das formas de onda, e dos relacionamentos entre os eventos de protecao e os disturbios
na qualidade_da_energia eletrica. Este melhoramento tornaria o produto ainda mais atrativo. A
adocao de APOO tem fundamental importancia
para estes melhoramentos futuros e para provavel
manutencao, pois possibilita um menor esforco na
realizacao destas tarefas.
Agradecimentos
Os autores agradecem o apoio da Fundacao de
Amparo a Pesquisa do Estado de Sao Paulo (FAPESP), do Conselho Nacional de Desenvolvimento
Cientfico e Tecnologico (CNPq) e da Coordenacao de Aperfeicoamento de Pessoal de Nvel Superior (CAPES). Agradecem, tambem, ao Laboratorio de Sistemas de Energia Eletrica (LSEE)
da Escola de Engenharia Eletrica de Sao Carlos
(EESCUSP) pela infra-estrutura, bem como a
Companhia Paulista de Forca e Luz (CPFL) pela
cooperacao durante o desenvolvimento deste.
Referencias
Agostini, M. N., Decker, I. C. and Silva, A. S.
(2002). Desenvolvimento e implementacao de
uma base computacional orientada a objetos
para aplicacoes em sistemas_de_energia_eletrica, Sba Controle  Automacao Sociedade
Brasileira de Automatica 13 181189.

Figura 7 Consulta de ocorrencias de eventos correlacionados.

Blaha, M. and Rumbaugh, J. (2005). Objectoriented modeling and design with UML, Pearson Education.

A Figura 7 ilustra uma busca de eventos correlacionados. Observando esta figura percebe-se
que as formas de onda de corrente provenientes do
equipamento de protecao e as formas de onda de
corrente registradas pelo medidor de QEE, para os
dois eventos listados como possivelmente correlacionados, sao bem proximas. Isto e um indicativo
de que realmente os registros referem-se a mesma
ocorrencia.
5

Bollen, M. H. J. and Gu, I. Y. H. (2006). Signal processing of power quality disturbances,
IEEE.
C37.111-1991, I. S. (1991).
IEEE Standard
Common Format for Transient Data Exchange(COMTRADE) for Power Systems,
IEEE Inc.
C37.111-1999, I. S. (1999).
IEEE Standard
Common Format for Transient Data Exchange(COMTRADE) for Power Systems,
IEEE Inc.

Conclusoes

O software desenvolvido tem como objetivo auxiliar os engenheiros nas analises referentes aos
eventos de protecao e aos disturbios de QEE, facilitando a identificacao da correlacao entre os mesmos. Vale destacar a importancia desta aplicacao
no processo de analise e estatsticas no tocante ao
desempenho da protecao e a avaliacao do sistema
de distribuicao, no que diz respeito a QEE.

Chindris, M., Tomoiaga, B. and Bud, C. (2007).
Model and Object Oriented Program to
Analyse the Harmonic Distortion and Asymmetry in Power Systems, PowerTech 2007 .
Larman, C. (2002). Utilizando UML e Padroes,
3a edicao, Bookman, Sao Palulo.

4856

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

Losi, A. and Russo, M. (2005). Dispersed generation modeling for object-oriented distribution load flow, IEEE Transactions on Power
Delivery 20(2 Part 2) 15321540.
McDermott, T. E. (2006). An open source distribution system simulator, IEEE Power Engineering Society General Meeting, 2006, p. 4.
Nor, K. M., Mokhlis, H. and Gani, T. A. (2004).
Reusability techniques in load-flow analysis
computer program, IEEE Transactions on
Power Systems 19(4) 17541762.
Peharda, D., Hebel, Z. and Barta, A. (2007).
Power system topology assessment and preestimation in an object oriented environment,
AFRICON 2007 pp. 17.
Qiu, X. and Wimmer, W. (2000). Applying
object-orientation and component technology toarchitecture design of power system
monitoring, Power System Technology, 2000.
Proceedings. PowerCon 2000. International
Conference on, Vol. 2.
Rabelo, R. A. L., Lopes, W. N. M., Carneiro, A.
A. F. M. and Braga, R. T. V. (2008). Analise,
projeto e implementacao orientados a objetos
aplicados ao planejamento_da_operacao energetica de sistemas_hidrotermicos de potencia,
Congresso Brasileiro de Automatica, 2006.

4857