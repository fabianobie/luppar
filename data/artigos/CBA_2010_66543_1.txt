XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

NAVEGAÇÃO DE ROBÔS MÓVEIS COM ÊNFASE EM PLANEJAMENTO E SUPERVISÃO
DE TRAJETÓRIAS
ÍTALO J. L. BATISTA, GIOVANNI C. BARROSO, OTACILIO DE M. ALMEIDA
Laboratório de Automação e Robótica, Depto. de Engenharia Elétrica , Universidade Federal do Ceará
Caixa Postal 6007, 60.775-640, Fortaleza, CE, BRASIL
E-mails italoloiola@gmail.com, gcb@fisica.ufc.br, otacilio@dee.ufc.br

ANTONIO T. VARELA, JOSÉ R. B. SOUSA
Laboratório de Inovação Tecnçógica , Depto. da Indústria, Instituto Federal de Educ. Tecnológica do Ceará
Av. 13 de maio, 2081 - Benfica, 60040-005, Fortaleza, CE, BRASIL
E-mails themoteo@edu.ifce.com, renato@edu.ifce.br
Abstract
 The problem of trajectory planning in the context of mobile robotics is basically a given point of origin and destination, create a sequence of actions that will cause the robot to leave the point of origin and arrive at the destination point. This
paper presents the modeling of a navigation system for mobile robots integrated with planner trajectories through Colored Petri
Nets. The model presented here can simulate several situations, such as the representation of the world around the robot, interaction with the environment, trajectory planning, battery analysis, as well as how to serve as a basis for implementation in a real
mobile robot and optimization of the system.
Keywords
 Mobile robot, Trajectory planning, Colored Petri Nets.
Resumo
 O problema do planejamento_de_trajetória no contexto da robótica_móvel consiste basicamente em dado pontos de origem e destino, criar uma seqência de ações que fará com que o robô saia do ponto de origem e chegue ao ponto de destino.
Este trabalho apresenta a modelagem de um sistema de navegação para robôs_móveis integrado a um planejador de trajetórias
por meio de Redes de Petri Coloridas. O modelo apresentado consegue simular varias situações tais como a representação do
mundo em volta do robô, interação com o ambiente, planejamento_de_trajetória, e análise das baterias, bem como servir de base
para implementação em um robô_móvel real e otimização do sistema.
Palavras-chave
 .

1

Em geral, os sistemas de navegação de robôs_móveis
autônomos possuem os blocos principais como mostrado na Figura 1. Cada um dos blocos apresentados
constitui áreas de pesquisa que podem ser tratadas
individualmente dentro do estudo da robótica.
A percepção representa a interface do robô com seu
ambiente de trabalho. Este nível é composto por sensores e algoritmos para tratamento das informações
coletadas. Em seguida as informações são passadas
para o nível de decisão que é responsável pela inteligência e tomada de decisões, de acordo com as informações obtidas através do nível de percepção (Borenstein, 1996).
O planejador de trajetórias é um dos principais problemas na navegação de robôs_móveis. Normalmente,
este planejador divide-se em duas fases a primeira é
o planejamento_de_caminhos, onde é feita a escolha
de um melhor caminho a ser seguido pelo robô. Essa
etapa pode ser resumida como (Pederosa et. al.,
2003) dado um robô_móvel com localização e orientação iniciais, uma posição e orientação alvo e um
conjunto de obstáculos localizados no espaço, encontre um caminho contínuo para o robô do estado inicial até o objetivo sem que haja colisão com os obstáculos ao longo do percurso. A trajetória gerada indica, além das posições e orientações do robô no espaço, os perfis de velocidades e acelerações com que o
robô deve se deslocar. Apesar de aparentemente sim-

Introdução

A tarefa de construir um robô com características
humanas é uma tarefa difícil. Seres humanos possuem
características muito difíceis de serem modeladas.
Nosso sistema de visão é apurado, nossa reação a
uma situação inesperada é quase que instantânea,
nossos movimentos são coordenados inconscientemente para manter o equilíbrio do corpo. Nosso sistema_de_controle de energia opera de forma bastante
otimizada.
A navegação de robôs_móveis autônomos está relacionada s técnicas que fornecem os meios para que
um robô_autônomo se mova de forma segura de um
local a outro do ambiente. Encontrar um caminho de
uma determinada posição até um destino é um dos
problemas fundamentais da robótica_móvel autônoma. Muito embora a navegação de robôs possa ser
descrita com base nesta breve definição, existem muitos aspectos de projeto envolvidos configurações do
ambiente, modelo do robô, elenco de tarefas e critérios de desempenho. Sendo assim, o desenvolvimento
de sistemas de navegação autônomos envolve desafios extremamente complexos para o trabalho de projeto (Borenstein, 1996).

5036

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

desenvolvido um modelo de navegação autônomo
para robôs_móveis baseado em Redes de Petri Coloridas (Jensen, 2009), com enfoque principal no planejador de trajetórias. O modelo proposto baseia-se
na de integração dinâmica através de protocolos
TCPIP e UDPIP, entre uma ferramenta matemática
computacional, responsável pelos cálculos do planejador de movimentos e uma ferramenta para simulação da Rede de Petri Colorida. Para o desenvolvimento do modelo proposto, foram considerados os
aspectos construtivos do protótipo do robô_móvel,
respeitando-se sempre as restrições não-holonômicas,
que impedem a realização de alguns movimentos.
Este trabalho está organizado da seguinte forma Na
Seção 2, é apresentada a teoria que fundamenta este
trabalho, o planejamento_de_trajetórias, Redes de
Petri e vários aspectos relacionados  suas aplicações. O modelo proposto e todos os seus detalhes são
descritos na Seção 3. Os experimentos realizados e
resultados obtidos são discutidos e analisados na Seção 4. Finalmente, as conclusões e propostas futuras
estão reunidas na Seção 5.

ples, este problema não está completamente solucionado. A segunda etapa é o gerador de trajetória que
é responsável por determinar as restrições temporais
para a execução de um determinado caminho, gerando, desta forma, uma trajetória viável para o robô.
O nível controlador é responsável por garantir que o
robô siga a trajetória escolhida pelo nível superior.
Desta forma, este nível garante que as velocidades e
acelerações impostas pelo nível de geração de trajetória sejam executadas de forma correta. Por isso,
muitas vezes, o controlador é considerado como um
nível de rastreamento_de_trajetórias.

2

Robôs Móveis e Redes de Petri

Figura 1. Diagrama de blocos de um sistema de navegação para
robôs_móveis.

Pela descrição dos níveis hierárquicos da arquitetura
de navegação, é possível notar o nível de complexidade que envolve a modelagem, projeto e implementação de robôs_móveis autônomos.
As redes de Petri (Murata, 1989) e suas extensões
constituem uma classe de modelos conceituais utilizada na modelagem de diversos tipos de sistemas
computacionais paralelos. Por exemplo, têm-se usado
redes de Petri para modelar protocolos_de_comunicação, processos de manufatura, arquiteturas de computadores etc. Tais modelos possibilitam a representação de sistemas paralelos, os quais podem então ser
simulados, por exemplo, nos níveis funcional e lógico, incluindo ou não aspectos de temporização.
As redes de Petri têm demonstrado ser eficientes na
modelagem e análise de sistemas_a_eventos_discretos.
Este fato deve-se, em grande parte,  existência de
um conjunto de técnicas para análise estrutural e dinâmica de redes de Petri, permitindo a validação
formal de importantes propriedades de um modelo,
tais como inexistência de livelocks e deadlocks, reiniciabilidade do sistema modelado (após a realização
de um conjunto de tarefas), limitabilidade dos recursos modelados, dentre outras (Jensen, 2009).
Em resumo, redes de Petri e suas extensões representam um amplo campo de estudo, o qual pode ser explorado no que se refere  área de robótica, buscando-se soluções alternativas no tocante  modelagem,
simulação, análise e síntese de tais sistemas robóticos.
Tendo em vista todas as vantagens das abordagens
baseadas em Redes de Petri, principalmente relacionadas ao poder de análise, neste artigo é proposto e

2.1 Planejamento de Trajetórias
O planejamento_de_trajetórias, sob vários tipos
de restrições, é um campo muito vasto de pesquisas
na área da robótica_móvel. Com o intuito de subsídio
para este artigo, apresenta-se a seguir alguns aspectos
mais importantes deste assunto. O planejamento básico de trajetória para os robôs_móveis refere-se  determinação de um caminho entre uma configuração
inicial do robô e uma configuração final, de tal forma
que o robô não colida com nenhum obstáculo no ambiente, e que a movimentação planejada seja consistente com as restrições cinemáticas do veículo.
A maioria dos planejadores de caminhos sem colisão
existentes foi compilada por Latombe (Latombe,
1991) e são denominados planejadores geométricos,
pois se resumem  sequência de semi-retas ligando a
configuração inicial até a final. Quando o robô possui
restrições cinemáticas os caminhos sem colisão calculados pela maioria dos planejadores não são diretamente executáveis pelo robô. Para resolver esse
problema, deve-se adaptar o caminho que o robô
possa percorrer. Uma possível técnica de adaptação
foi proposta por Laumond et al (Laumond et al,
1994). Esta abordagem faz surgir a necessidade de
calcular caminhos que sejam executáveis diante das
restrições não-holonômicas. Um método bastante
utilizado para isso foi proposto por Reeds e Shepp
(Reeds e Shepp, 1990), que é composto por concatenações de segmentos de reta e arcos de círculo de
raio mínimo. O problema torna-se ainda mais complicado quando o ambiente é não controlado e dinâmico, ou seja, os obstáculos e o alvo se movem. A

5037

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

de Tarefas Robóticas. Mellado e Canepa (2003) usaram uma RP com três níveis, dividiram o sistema do
robô_móvel em três tipos de rede a rede do ambiente,
a rede do agente e a rede do objeto, assim, o nível do
ambiente descreve o ambiente dos robôs, o nível do
agente modela o comportamento geral dos robôs_móveis e o nível do objeto representa características
específicas de um dado robô (saber missões, tarefas e
mapas rodoviários).
As redes de Petri têm sido aplicadas em todas as áreas da robótica, modelagem e simulação, incluindo a
especificação, validação e geração do código para o
controle dos robôs (Mellado e Canepa, 2003). Isto
torna o projeto desses sistemas bem mais simples,
reduzindo o tempo e os custos de desenvolvimento.
Em ambientes não-estruturados é impossível modelar
completamente o ambiente que os robôs_móveis navegam e trabalham, eventos assíncronos requerem um
modelo que incorpore a informação do sensor durante a execução de uma tarefa.
As Redes de Petri Coloridas têm sido aplicadas com
sucesso em vários projetos de sistemas a eventos
discretos. O modelo de RPC para os sistemas_dinâmicos, permite um projeto mais detalhado da interação de suas partes constituintes, inclusive podendo
ser implementados como software de supervisão.

literatura apresenta diversos modelos de geradores de
trajetória que podem ser aplicados para diferentes
tipos de robôs (Petrosa et. Al., 2003 Oriolo et. al.,
2000).
O objetivo deste trabalho é desenvolver um modelo para navegação baseado em RPC com ênfase em
planejamento e supervisão de trajetórias para guiar
um robô_móvel não-holonômico com acionamento
diferencial.
2.2 Redes de Petri (RP)
Redes de Petri (Murata, 1989) consistem em
uma linguagem visual de especificação desenvolvida
para sistemas nos quais a comunicação e a sincronização entre processos e compartilhamento de recursos desempenham papeis importantes. Existem hoje
várias classes de redes de Petri.
Em geral, técnicas de análise de RPs são tradicionalmente usadas para inferir determinadas propriedades
da rede, as quais podem ser usadas tanto para verificação como para a validação da especificação. Devese observar que as propriedades analisadas da rede
precisam ser interpretadas para serem usadas na validação. Por exemplo, um deadlock encontrado no
modelo pode ser tanto um estado final válido do sistema quanto um problema a ser evitado.

3 Arquitetura do Sistema
2.3 Redes de Petri Coloridas (RPC)
RPCs consistem em uma técnica formal com
embasamento matemático para descrição de sistemas,
especialmente apropriada para modelagem_de_sistemas_a_eventos_discretos (Jensen, 2009). Dentre suas
principais características, podem-se citar Descrição
distribuída das condições Representação explicita da
dependência causal Representação gráfica do sistema e de seus aspectos dinâmicos e Disponibilidade
de técnicas de análise.
As RPCs são extensões das RPs, adicionando-lhes
recursos para a definição e manipulação de tipos de
dados. Historicamente, convencionou-se designar os
tipos em RPC como cores, em contraste com as
redes originalmente propostas, nas quais todas as
fichas são iguais, ou seja, sem cor.

3.1 Descrição da Plataforma
A tarefa definida para o robô é navegar pelo ambiente. Uma vez conhecido o ambiente, com seus
obstáculos e particularidades, gera-se uma trajetória
cartesiana ótima, respeitando os limites e características do robô_móvel.
Assume-se um robô_móvel tal como descrito no diagrama_de_blocos da Figura 2.

2.4 Trabalhos Relacionados
As aplicações de redes de Petri na modelagem e
em controle_de_sistemas da área de robótica têm sido
estudadas nas últimas décadas. Este fato é percebido
facilmente na robótica industrial, como por exemplo,
em Sistemas Flexíveis de Manufatura (FMS), e no
desenvolvimento de robôs autônomos para ambientes
não-estruturados. Em Carvalho (2005) e Milutinovic
e Lima (2002), que propõem um Modelo de Tarefas
Robóticas de um robô, usando RP através do estabelecimento de um sistema que faça avaliações qualitativa e quantitativa das tarefas desse robô. Na mesma
Sava e Alla (2001) usou RP hibridas para modelagem

Figure 2. Diagrama de blocos do robô_móvel.

Sensores de obstáculos, colisão e captura provêem as
informações utilizadas pelo sistema de navegação. Os
sensores de obstáculos estão dispostos  frente do
5038

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

podem surgir obstáculos não previamente conhecidos
durante a trajetória do robô. Dessa forma, considerando um espaço de trabalho limitado e povoado por
obstáculos poligonais estáticos, o método completo
de planejador da trajetória consiste no seguinte algoritmo
 Gerar um caminho geométrico usando algum dos métodos compilados por Latombe
(1991)
 Dividir o caminho geométrico em n vértices,
ou usar os vértices previamente calculados
pelo planejador geométrico
 Calcular os caminhos de Reeds e Shepp
(1990)
 Para cada caminho encontrado deve-se checar a ocorrência de colisões com os obstáculos, esse passo é realizado pelo modelo de
navegação baseado em RPC.
 Caso encontre algum obstáculo, deve-se
aumentar o número de vértices ou gerar uma
configuração intermediária neste trecho em
particular. Os passos anteriores devem ser
repetidos

robô. O sensor de colisão detecta as colisões contra
obstáculos. Os sensores captam estímulos provenientes do ambiente e os transmitem para o sistema de
navegação. A cada instante o sistema de navegação
recebe os sinais captados pelos sensores e determina
a ângulo de ajuste para correção da direção de movimento do robô_móvel. Após o ajuste de direção de
movimento, o robô avança um passo na trajetória
pré-estabelecida.
Na Figura 3 é mostrado o protótipo de um robô_móvel experimental que está sendo utilizado como plataforma_de_testes (trabalho ainda não concluído). O
robô é composto por periféricos, dentre eles sonares
baseados em ultra-som, sensores de infra-vermelho,
ambos utilizados neste trabalho para detecção de
obstáculos e medição_de_distâncias para alimentar o
sistema de navegação do robô. É incorporado ao robô
um sistema de comunicação_sem_fio, conferindo assim uma maior flexibilidade no tratamento das informações obtidas pelos sensores, com um propósito de
monitoramento. Os movimentos de rotação e translação são efetuados por dois motores de corrente contínua acoplados diretamente s rodas de tração do robô, e outras duas rodas apenas para apoio. Esta configuração é bastante utilizada por robôs_móveis em
diversas aplicações na literatura especializada (Borenstein, 1996). O circuito de processamento e controle é baseado em quatro microcontroladores
PIC18F452 de fabricação da Microchip interligados
por meio de uma rede CAN. Quanto  sua geometria,
ele possui forma cilíndrica com 0,80m de altura e
0,30m de raio.

Na Figura 4 pode ser visto um diagrama da arquitetura da RPC proposta e conforme destacado, o módulo
planejador de trajetórias que foi adicionado ao modelo em questão.
Para facilitar  definição e manipulação da RPC proposta, a mesma está organizada em uma árvore de
páginas RPC. Uma página pode ser considerada como uma RPC simples, cuja semântica depende de
outras páginas eou superpáginas. A associação entre
uma página e suas subpáginas é feita por meio de
transições de substituição e lugares portas. Uma transição de substituição é associada a uma subpagina.
Cada lugar ligado a uma transição de substituição é
um lugar-porta. Cada lugar-porta na superpágina é
associado a um lugar na subpágina (denominado,
lugar-soquete).

Figure 3. Robô móvel experimental.
Figure 4. Hierarquia da RPC proposta com a inclusão do módulo
planejador de trajetória.

3.2 Modelo de Navegação integrado ao planejador
de trajetória
3.2.1 Considerações do planejador de caminhos

Neste trabalho é proposto um planejador de trajetórias dinâmico para robôs não-holonômicos com
acionamento diferencial que atua em conjunto com
um modelo de navegação baseado em RPC que foi
proposto em Batista et. al. (2007). A sua aplicação é
voltada para ambientes estruturados estáticos e fechados. O ambiente é inicialmente conhecido, mas

As abordagens atuais de planejamento de caminho podem ser divididas basicamente em três grupos
métodos que utilizam mapas de rotas (roadmaps),
métodos que utilizam funções de potencial (potential
fields) e métodos_de_decomposição em células (cell
decomposition).
5039

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

O modelo de planejamento_de_trajetórias implementado neste projeto baseia-se no método de decomposição aproximada em células.
O método de decomposição em células consiste em
dividir o espaço livre do robô em regiões simples
(células), de forma que um caminho entre quaisquer
duas configurações em uma mesma célula possa ser
facilmente obtido (Latombe, 2001).
Os métodos baseados em decomposição em células
podem ser divididos ainda em exatos e aproximados
Métodos exatos de decomposição em células decompõem o espaço livre em um conjunto de células cuja
união cobre exatamente o espaço livre.
Métodos aproximados de decomposição em células
dividem o espaço livre em um conjunto de células de
forma predefinida cuja união está estritamente contida no espaço livre.
O método aproximado geralmente dá origem a sistemas mais simples de planejamento_de_trajetórias. E
por isto, o método aproximado tem sido mais utilizado na prática.

3.2.3 Integração CPN ToolsMatlab
A integração entre o Modelo de Navegação desenvolvido no CPN Tools e o planejador de trajetória
desenvolvido no Matlab foi realizada através da utilização de protocolos TCPIP e UDPIP (Tanenbaum,
1996).

Figura 5. Estrutura de integração entre o CPN Tools e o Matlab.

Assim, as ferramentas podem se comunicar em uma
mesma máquina (modo local) ou em máquinas diferentes (modo remoto) dentro de uma rede. A estrutura do processo de integração entre o CPN Tools e o
Matlab é mostrada na Figura 5.

3.2.2 Considerações matemáticas do gerador de
trajetórias
A idéia básica é utilizar os pontos cartesianos
calculados pelo planejador e, em conjunto com os
raios de curvatura, traçar uma trajetória que combine
retas e semicírculos. As retas serão trechos de retas
entre os pontos fornecidos e os semicírculos irão depender dos raios de curvaturas informados (Melo,
2007). O primeiro passo é encontrar o ângulo de inclinação  inicial do robô. A equação 1 é utilizada
para encontrar o

3.3 Técnica de Análise e Validação do Modelo Proposto
As técnicas de análise e validação para RPCs
são, em geral, adaptações de técnicas utilizadas para
RPs LugarTransição. Desta forma, para análise e
validação de uma RPC, pode-se empregar simulação,
grafo de ocorrência e cálculo de invariantes (Jensen,
2009).
A simulação consiste em executar a rede, interativa e
automaticamente, e avaliar o comportamento do sistema modelado, possibilitando visualizar o resultado
de uma seqência de eventos. A simulação automática também permite investigar questões sobre o desempenho do sistema (Jensen, 2009).
Neste trabalho é abordada a técnica de simulação
para a análise da RPC proposta.

i .

 i  arctan

( y f  yi )

(1)

( x f  xi )

As inclinações das outras retas da trajetória são encontradas de maneira análoga. O ponto tangente é
determinado pelas equações 2 e 3 onde r é o raio de
curvatura.
x

r(sec f + seci ) + yi  y f  xi tani + x f tan f

4

Modelo e resultados de simulação

(2)

tan f  tani

y  r sec  i + x tan  i + y i  x i tan 

(3)

4.1

O enfoque principal deste artigo é o planejamento_de_trajetórias, portanto alguns módulos do modelo
de navegação não serão mostrados neste artigo, apenas os módulos que foram alterados com a integração
do planejador em questão, para maiores detalhes do
modelo de navegação ver o trabalho de Batista et. al.
(2007).
Para a modelagem, análise e simulação da RPC proposta utilizou-se a ferramenta CPN Tools, que se
trata de um programa computacional, executado nos
ambientes Windows e Linux, para modelagem, análi-

O cálculo do centro da circunferência e os coeficientes é determinado pelas equações 4.

a  1 + tan 2  i

Simulação da RPC

(4)

b  2 y i tan  i  2 x  2 y tan  i  2 x i tan 2  i
c  y i2  2 y i y  2 y i x i tan  i + 2 yx i tan  i +
x i2 tan 2  i  r 2 + x 2 + y 2
5040

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

Na figura 7 é mostrada a interface de comunicação
gerada pelo código de planejamento_de_trajetórias
desenvolvido no Matlab, esse planejador fornece a
trajetória de referencia do robô_móvel de duas formas informa o posicionamento do robô ( x , y e  )
a cada passo de evolução no rastreamento da trajetória e a outra forma é através de uma matriz com os
pontos inicial e final de cada segmento de reta com
suas respectivas inclinações angulares  . Este planejador permite também a visualização do traçado cartesiano de referência cinemática e dinâmica da trajetória do robô_móvel.

se e validação de RPCs. A rede foi executada de forma exaustiva, a fim de avaliar o comportamento dinâmico da navegação de um robô_móvel. Inicialmente o robô encontra-se no estado inativo aguardando
uma trajetória de referência.
Na Figura 6 é mostrada a primeira página do modelo
a ser executada, o módulo planejamento_de_trajetória.

Figura 6. Módulo Planejador de Trajetórias da RPC proposta.

A estrutura deste módulo planejador é apresentada a
seguir
 Lugar Aguarda Planejamento modela o
estado inicial da rede em que o robô está inativo, porém, não está desligado.
 Lugar Aguardando Conexão, uma ficha
neste lugar significa que a conexão externa
já pode ser estabelecida.
 A transição Conectar estabelece uma conexão (neste caso, Con1) com o JavaCPN
utilizando a porta 9000.
 Lugar Planejando modela o estado em
que o robô está executando um planejamento do caminho.
 Lugar Gerando modela o estado em que o
robô está executando uma geração de trajetória.
 Lugar Obstáculo Detectado modela momento que o robô intersecta um obstáculo.
 Transição Caminho de Desvio modela o
planejamento de uma nova trajetória que
permite o desvio do obstáculo.
 Transição Trajetória de Referencia modela o final do processo de planejamento executado pelo robô. Além disso, recebe (função RecebedoMatlab ()) do Matlab as trajetórias de referência traj.
 Lugar Trajetórias recebe do Matlab, por
meio do disparo da transição Trajetória de
Referencia fichas traj que indicam as trajetórias de referência.
 Lugar Trajetórias Planejada modela o fim
do planejamento_de_trajetória do robô e que
deve ser rastreada pelo mesmo.

Figura 7. Interface de comunicação do planejador de trajetória no
Matlab.

A página principal do modelo é apresentada na Figura 8, que mostra a situação logo após a geração da
trajetória inicial de referência, modelado pela presença de fichas no lugar Trajetoria de Referencia da
RPC recebida do Matlab
 1(1,2087,"DeslocamentoLinear - 1")
 1(2, 946, "Deslocamento Angular - 1")
 1(3,943,"DeslocamentoLinear - 2")
 1(4,486,"DeslocamentoAngular - 2")
 1(5, 1880,"Deslocamento Linear - 3").

Figura 8. Modulo Principal da RPC proposta.

A transição circundada de verde indica que a mesma
está habilitada e pode ser disparada. O disparo da
transição Sequencia de Trajetorias modela o início
da trajetória. A marcação deslocamento linear - 1
indica que será rastreado o primeiro segmento de
reta, isto é realizado por meio do disparo da transição
Inicializa Robo, a partir de então, inicia-se o ciclo
de rastreamento da trajetória. A primeira seção deste

5041

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

ciclo corresponde ao Sensoriamento, em seguida o
robô inicia a Navegação, onde o modelo utiliza os
dados provindos dos sensores do robô para produzir
uma nova trajetória de referência. No caso de detecção de algum obstáculo, ocorre a inclusão de uma
ficha no lugar Obstaculo Detectado e o comportamento de planejamento_de_trajetória será novamente
acionado com o disparo da transição Planejar Caminho de Desvio, a partir daí ocorre a geração de uma
configuração intermediária neste trecho em particular. Portanto, o módulo de planejamento_de_trajetória
deverá ser novamente executado, como mostrado na
Figura 6. Terminada a seção de Navegação, o sistema inicia a seção de Atualização, onde a posição
do robô é alterada no ambiente. O robô então avança
na direção estabelecida pela seção de Navegação. Na
seção de Atualização destaca-se o módulo de Odometria, que é responsável pela simulação do controlador de movimentos e a localização do robô.
Para testar a aplicabilidade do modelo integrado ao
planejador de trajetória, utilizou-se um exemplo de
simulação da navegação de um robô_móvel em um
ambiente estruturado estático e fechado. Na Figura 9
é mostrado o ambiente de trabalho em questão, formado por paredes em forma de polígonos e vê-se
também o traçado cartesiano de referência indicando
o começo e o fim da trajetória a ser executado pelo
robô_móvel, utilizando o modelo RPC proposto.

Figura 10 Modulo Mapeamento.

Na simulação mostrada nas Figuras 9 e 10, observase também que não foi encontrado nenhum obstáculo
na trajetória de referência, isto é representado pela
marcação do lugar Guarda Mapa, que possui fichas
com quatro elementos, por exemplo, a ficha
1(1,10,"Traj.FRENTE","Deslocamento Linear - 1"),
no qual o primeiro elemento representa a ordem dos
movimentos do robô, o segundo o quanto o robô se
deslocou em centímetros em cada passo de mapeamento, o terceiro a trajetória de referência seguida
em cada passo de mapeamento (trajetória inicial ou
trajetória de desvio) e o quarto indica qual das trajetórias, inicialmente planejadas, foi executada. De
posse desta marcação, analisando-se o terceiro elemento, nota-se que existem apenas trajetórias do tipo
Traj.INICIAL, ou seja, o robô manteve-se na trajetória de referência inicial durante todo o percurso. Já
em casos em que obstáculos são encontrados, este
mesmo elemento traz informações do tipo
Traj.DESVIO, com isso podemos saber quantos e
aonde foi encontrado cada obstáculo, como foi contornado, etc.
Na Figura 11 é mostrado o procedimento de desvio
de obstáculo. No momento que intersecta um obstáculo o planejador, parcela preta acrescentada ao ambiente, é gerada uma nova trajetória intermediária
entre a configuração inicial e final deste trecho (pontos amarelos). Pode-se observar que se consegue obter uma nova trajetória que impede o robô de colidir.

Figura 9. Traçado final da trajetória do robô_móvel.

Os testes de simulação do modelo RPC mostraram
que ao final da execução de 60000 passos da rede, a
trajetória de referencia foi concluída e a rede ficou no
estado de aguardar que uma nova trajetória fosse
carregada, enquanto que no módulo de Mapeamento visto na Figura 10, observaram-se as 568 fichas
do lugar Guarda Mapa da rede, as quais representam incrementos de posição da trajetória seguida pelo
robô a cada 10 cm, ou seja, o rastreamento completo
do robô foi de 5680 cm.
Ao longo de toda a simulação da rede, diversos dados
considerados importantes para a análise do desempenho do robô podem ser coletados. (Batista et. al.,
2007). Os resultados apontam que o uso do formalismo proposto é capaz de determinar políticas de
controle, de análise e de identificação de conflitos
com facilidade antes da implementação do sistema.

Figura 11 Parte da trajetória do robô_móvel com colisão.

5042

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

Borenstein, H. R. (1996). Navigation Móbile Robots
Systems and Techniques, AK Peters..
Carvalho, H. J. R., Sousa, R. V., Yoshizawa, A. R.,
Porto, A. J. V. e Inamasu R. Y. (2005).
Modeling of a control architecture for a minirobot navigation using petri nets Proceedings of
the 18th International Congress of Mechanical
Engineering. Ouro Preto, MG, Brazil.
Jensen K. and Kristensen L. M., Coloured Petri Nets
 Modelling and Validation of Concurrent
Systems, Springer-Verlag Berlin Heidelberg
2009.
Latombe, J. C. (1991). Robot Motion Planning,
Kluwer Academic Press. ISBN 0-7923-912902.
Laumond, J. P., Jacobs, P. E., Taix, M. and Murray,
R. M. (1994). A motion planner for
nonholonomic mobile robotcs and Automation
10(5).
Mellado, E.L., Canepa, H.A. (2003). A Three-level
Net Formalism for the Modeling of Multiple
Mobile Robot Systems, Proceedings of IEEE
International Conference on Systems, Man and
Cybernetic, Vol. 3, Washington, DC, USA, pp.
2733-2738.
Melo, L. F., 2007. Proposta de simulador virtual para
sistema de navegação de robôs_móveis utilizando
conceitos de prototipagem rápida, Tese de
doutorado, Universidade Estadual de Campinas,
Campinas, SP.
Milutinovic, D. and Lima, P. (2002). Petri Net
Models of Robotic Tasks, Proceedings of the
2002 IEEE International Conference on
Robotics and Automation, Vol. 4, Washington,
USA, pp. 4059-4064.
Murata, T. (1989). Petri nets Properties, analysis and
applications. Proceedings of the IEEE, v. 77, n.
4, p. 541-580.
Oriolo, G Panzieri, S. and Ulivi, G. (2000). Learning
optimal trajectories for nonholonomic systems,
International Journal of Control 73(10).
Pedrosa, D. P. F., Alsina, P. J. e Medeiros, A. A. D.
(2003). Um método de geração de trajetorias
para robôs_móveis não-holonômicos, Simpósio
Brasileiro de Automação Inteligente, Bauru, SP.
Reeds, J. A. and Shepp, L. A. (1990). Optimal paths
for car that goes both forwards and backwards,
Pacific Journal of Mathematics 145(2).
Sava, A.T., Alla. H. (2001). Combining Hybrid
Petri Nets and Hybrid Automata, IEEE
Transactions on Robotics and Automation, Vol.
17, No. 5, pp. 670-678.
Tanenbaum, A. S. (1996), Computer Netword. 3rd.
Ed. S.1. Pratice-Hall, Inc., Upper Saddle
River, New Jersey.

Foram realizadas várias simulações com trajetórias
diferenciadas, com e sem obstáculos e, em todas o
robô realiza a sua tarefa, ou seja, alcança o destino
especificado e retorna para um estado em que aguarda uma nova rota. Ao longo de cada simulação, foi
possível extrair dados como nível de tensão da bateria, número de obstáculos contornados, tomadas de
decisão, distância percorrida, referência cinemática e
dinâmica da trajetória, conforme o exemplo apresentado anteriormente.
5 Conclusões
A navegação de robôs_móveis autônomos está
relacionada s técnicas que fornecem os meios para
que um robô_autônomo se mova de forma segura de
um local a outro do ambiente. Encontrar um caminho
de uma determinada posição até um destino é um dos
problemas fundamentais da robótica_móvel autônoma. Um algoritmo de planejamento_de_trajetória deve
garantir um caminho até o destino, ou indicar se o
destino é inacessível.
Neste trabalho foi apresentado um modelo para navegação de robôs_móveis baseado em RPC integrado
a um planejador de trajetórias que tem como propósito a geração de uma melhor trajetória possível a ser
executada pelo robô_móvel, respeitando-se as restrições cinemáticas e físicas do robô assim como os
obstáculos fixos ou móveis do ambiente. O modelo
foi analisado e validado através de simulação, na qual
mostrou que o robô é capaz de realizar uma trajetória
planejada mesmo na presença de obstáculos. Assim,
o modelo RPC se comportou de forma eficiente e
várias situações práticas no funcionamento de um
sistema de navegação foram simuladas, utilizando-se
o modelo proposto. Portanto, se o formalismo matemático e a validação foram obtidos e preservados em
um modelo do robô-ambiente, espera-se que a implementação, no robô_móvel apresentado na seção
3.1, apresente bons resultados.
Perspectivas para futuros trabalhos se concentrarão
em projetar o sistema_de_controle, percepção e decisão apropriados, bem como acompanhar a evolução
cinemática e dinâmica do robô_móvel de forma simulada e experimental, o que permite a construção
completa de um sistema de navegação. Assim, chegase a um modelo híbrido no qual o comportamento do
sistema é determinado pela interação entre duas dinâmicas uma contínua e outra a eventos_discretos.
Referências Bibliográficas
Batista, I. J. L., Barroso, G. C. e Varela, A. T.
(2007). Navigation Model for Mobile Robots
Based on Coloured Petri Nets, 13th IEEE IFAC
International Conference on Methods and
Models in Automation and Robotics, Szczecin,
Poland.

5043