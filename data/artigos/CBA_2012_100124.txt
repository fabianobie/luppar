Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

DESENVOLVIMENTO DE UM SOFTWARE PARA AUTOMACAO DE PROCESSOS
UTILIZANDO LOGICA FUZZY
Bruno Sielly J. Costa, Clauber Bezerra, Luiz Affonso Guedes


Instituto Federal de Educacao Ciencia e Tecnologia do Rio Grande do Norte
Campus Natal - Zona Norte
Natal, RN, Brasil



Instituto Federal de Educacao Ciencia e Tecnologia do Rio Grande do Norte
Campus Santa Cruz
Santa Cruz, RN, Brasil

Universidade Federal do Rio Grande do Norte
Departamento de Engenharia de Computacao e Automacao
Natal, RN, Brasil

Emails bruno.costa@ifrn.edu.br, clauber.bezerra@ifrn.edu.br, affonso@dca.ufrn.br
Abstract This paper presents the design and implementation of a software that allows modeling, building
and editing fuzzy inference systems. The software was developed using Java language and it provides a simple,
functional and very intuitive user interface and also has a freeware license. The developed system allows use
the inference rules created in industrial process control, supporting communication through OPC protocol. The
main features of developed system are flexibility, robustness, reliability and ease of expansion.
Keywords

Fuzzy logic, Software Engineering, Process Automation.

Resumo Este artigo apresenta o projeto e implementacao de um software que permite a modelagem, construcao e edicao de sistemas de inferencia fuzzy. O software, que foi desenvolvido utilizando a linguagem Java,
apresenta uma interface simples, funcional e bastante intuitiva, alem de possuir uma licenca freeware. O ambiente desenvolvido permite ainda a aplicacao das regras de inferencia criadas no controle_de_processos_industriais,
utilizando o padrao OPC para comunicacao com os equipamentos de campo. As principais caractersticas do
sistema desenvolvido sao flexibilidade, robustez, confiabilidade e facilidade de expansao.
Palavras-chave

.

Introducao

Em muitas aplicacoes envolvendo a automacao de
processos_industriais, existe a necessidade de classificar o estado atual de uma variavel para que
esta aplicacao possa tomar decisoes a respeito dos
proximos passos a serem executados por ela.
A logica_fuzzy, proposta em 1965 por Lofti
Zadeh (Zadeh, 1965), permite o tratamento de informacoes vagas, imprecisas e ambguas. Ela e
uma ferramenta que vem se mostrando adequada
a solucao de problemas na area de automacao de
processos, principalmente que envolvam a tomada
de decisoes, pois proporciona uma analise de dados semelhante ao raciocnio humano.
Alem disso, a utilizacao da logica_fuzzy no
controle_de_processos e de facil implementacao,
nao necessitando de modelos_matematicos complexos. A logica_fuzzy utiliza apenas um conjunto
simples de regras, que sao baseadas na experiencia
dos operadores ou especialistas em determinado
processo_industrial.
A utilizacao da logica_fuzzy no controle de
processos foi proposta pela primeira vez por
Ebraim Mamdani no controle de uma maquina a
vapor (Mamdani, 1974). Mamdani ja havia tentado controlar esse processo com outros tipos de
controladores, porem todos sem sucesso.

ISBN 978-85-8001-069-5

Anos depois, estudos mostraram que um controlador_fuzzy era mais eficiente do que um controlador convencional no controle dos processos de
aceleracao, frenagem e parada dos trens no metro
de Sendai no Japao (Yasunobu et al., 1983). O
controlador_fuzzy proporcionava aceleracao e frenagem mais suaves, paradas mais precisas nas plataformas alem de reduzir o consumo_de_energia.
Alem dessas, varias outras aplicacoes envolvendo logica_fuzzy surgiram nos ultimos anos,
como controle de eletrodomesticos, aeronaves
nao tripuladas, elevadores, dentre outras (Pinto,
2010). Neste aspecto, existe uma grande demanda
por ferramentas de software que possibilitem aos
usuarios a aplicacao dos conceitos inerentes a logica_fuzzy em processos de automacao_industrial.
Na literatura podemos encontrar alguns toolboxes
implementados para trabalhar com logica_fuzzy.
Hall e Hathaway (Hall and Hathaway, 1996)
descrevem um toolbox de logica_fuzzy integrado
a plataforma MathWorks Matlab, com uma interface grafica amigavel para construcao e edicao
de sistemas de inferencia fuzzy. Chuan (Chuan
et al., 2004) apresenta um toolbox de logica
fuzzy baseado na linguagem do Scilab e o mostra como uma alternativa gratuita ao software da
MathWorks.
A proposta deste trabalho e apresentar um

4130

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

completo e poderoso software para manipulacao
de regras de inferencia da logica_fuzzy. Este software, chamado JFuzZ, pode ser utilizado em diversas aplicacoes que envolvam a automacao de
processos_industriais, pois ele possui uma estrutura que permite a comunicacao em tempo_real
com uma grande variedade de equipamentos de
campo, possibilitando assim a aplicacao das regras criadas em diversos tipos de processos.
2

varios conjuntos_fuzzy utilizados para classificar
o nvel de um tanque. Observe que o nvel de
4,7m pertence tanto ao conjunto baixo, como ao
conjunto normal, onde em cada conjunto esse nvel
possui um grau de pertinencia.

Logica Fuzzy

A logica classica classifica um dado como pertencente ou nao a um determinado conjunto, ou seja,
a classificacao e feita com base em apenas dois possveis valores verdadeiro ou falso. Dessa forma,
uma variavel de processo possui apenas dois estados pre-definidos e complementares, por exemplo,
o nvel de um tanque pode estar alto ou baixo,
a temperatura de uma caldeira pode estar quente
ou fria, uma valvula pode estar aberta ou fechada,
etc.
Porem, muitas vezes esses dois estados nao
sao suficientemente representativos para determinada aplicacao. Por exemplo, imagine que em um
sistema_de_controle_de_nvel definimos que o nvel
de um tanque esta alto quando ele for igual ou
superior a 5m e baixo caso contrario. Isso nos levaria a concluir que 4,99m e um nvel baixo e 5m
e um nvel alto, onde na verdade esses dois valores
sao muito proximos e deveriam ser tratados pelo
controlador de forma semelhante.
Alem disso, podemos tambem concluir, de
acordo com esses criterios, que um nvel de 0m
e outro de 4,99m serao tratados da mesma forma
pelo controlador pois os dois sao considerados baixos, porem isso nao deveria ocorrer pois os valores
representam situacoes bem diferentes do processo.
A teoria_dos_conjuntos_fuzzy, desenvolvida por
Lofti Zadeh (Zadeh, 1965), permite tratar a incerteza existente em um conjunto de dados. Dessa
forma, ela se torna uma ferramenta adequada ao
tratamento de dados que possuam uma certa imprecisao, se aproximando mais do raciocnio humano, possibilitando assim automatizar diversas
tarefas de automacao_industrial.
Esses conjuntos serviram de base para o desenvolvimento da logica_fuzzy, que permite classificar uma informacao como sendo parcialmente
pertencente a um conjunto. De acordo com a teoria_dos_conjuntos_fuzzy, uma informacao pode pertencer apenas parcialmente a um conjunto, alem
de que ela pode pertencer a mais de um conjunto
simultaneamente. A classificacao e feita de acordo
com uma ponderacao entre os conjuntos a que ela
pertence.
A pertinencia indica o quanto um elemento
pertence a um determinado conjunto. Para medir
esse grau sao utilizadas as funcoes de pertinencia,
como as mostradas na figura 1. Nessa figura temos

ISBN 978-85-8001-069-5

Figura 1 Conjuntos fuzzy.

2.1

Sistema de inferencia fuzzy

Os sistemas de inferencia fuzzy sao ferramentas
computacionais que utilizam uma serie de conceitos da logica_fuzzy para tomar decisoes automaticamente sem intervencoes humanas. A estrutura
basica de um sistema de inferencia e mostrada na
figura 2.

Figura 2 Sistema de inferencia fuzzy.
Essa estrutura e formada por quatro elementos que interagem entre si para a partir de um
conjunto de valores de entrada, gerar um conjunto
de valores de sada, que quantificam a decisao tomada pelo sistema. Sao eles
 Fuzzificador esse elemento converte um
conjunto de valores de entrada em valores
fuzzy. Para isso, ele utiliza funcoes de pertinencia pre-definidas, verificando o grau de
pertinencia para cada valor de entrada. Essas funcoes podem ser de varios tipos como
triangulares, trapezoidais e gaussianas.
 Base de conhecimento e composta por
uma base de dados e uma base de regras de inferencia. A base de regras armazena um conjunto de regras do tipo Se-Entao, formadas
por um antecedente (Se) e um consequente
(Entao). Essas regras sao criadas com base
nos valores da base de dados e sao utilizadas
para produzir a sada do sistema.
 Motor de inferencia utiliza a base de conhecimento para procurar respostas as entradas do sistema. Ele realiza comparacoes dos

4131

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

valores fuzzy de entrada com os antecedentes das regras e combina os seus consequentes
para gerar as sadas fuzzy do sistema.
 Defuzzificador realiza o processo contrario da fuzzyficacao. Ele transforma os valores fuzzy inferidos em valores de sada. Para
isso podem ser utilizados os metodos do centroide, do bissetor, media dos maximos, primeiro maximo e ultimo maximo.
O software proposto neste trabalho permite
a criacao de sistemas de inferencia baseados nos
modelos propostos por Mamdani (Mamdani and
Assilian, 1975) e Takagi-Sugeno (Takagi and Sugeno, 1985).
3

mitem a criacao e edicao de sistemas de inferencia
fuzzy. Uma vez criados e modelados, esses sistemas podem ser utilizados no controle_de_processos
industriais em geral, utilizando o protocolo de comunicacao OPC-DA.
O sistema foi desenvolvido com base numa arquitetura modular, onde cada modulo e responsavel por um conjunto de funcionalidades bem definidas do sistema. Esses modulos interagem entre si, de forma que cada modulo disponibiliza as
suas funcionalidades a outros modulos. A utilizacao dessa arquitetura facilita o desenvolvimento
e a manutencao do software. A figura 4 ilustra
os cinco modulos do JFuzZ, como tambem a interacao entre eles. Cada um desses modulos sera
descrito a seguir.

OPC

O padrao OPC (OLE for Process Control ) e um
protocolo de comunicacao baseado nas tecnologias
OLEDCOM da Microsoft (OPC, 2003). A ideia
desse protocolo e padronizar o formato com que os
dados de equipamentos de campo sao disponibilizados para os softwares de automacao_industrial.
Com isso, um software pode enviar ou receber dados para um equipamento independente do seu fabricante.
A arquitetura de funcionamento de uma aplicacao baseada no padrao OPC possui um software
chamado de servidor OPC. Esse servidor geralmente e disponibilizado pelo fabricante do equipamento e se comunica com o PLC (Programmable
Logic Controller ) atraves do protocolo proprietario do fabricante. O servidor disponibiliza os dados do PLC para as aplicacoes cliente utilizando
o padrao OPC de forma que um programa cliente
pode acessar dados de diferentes fabricantes utilizando uma interface de comunicacao unica.
A figura 3 ilustra essa ideia, onde um conjunto
de aplicacoes utilizam interfaces OPC para acessar dados de diferentes servidores OPC atraves de
uma rede de computadores.

Figura 4 Modulos do JFuzZ.

4.1

Modulo de edicao fuzzy  configurador

Esse modulo configura uma serie de informacoes
necessarias ao sistema de inferencia, tais como o
tipo e o nome das variaveis, definicao de quais variaveis de inferencia sao de entrada e quais sao de
sada, funcoes de pertinencia, ranges, metodos de
inferencia, etc. Apos realizadas essas configuracoes, esse modulo disponibiliza essas informacoes
ao modulo de Engine Fuzzy.
4.2

Modulo de Engine Fuzzy

Esse e o modulo responsavel por realizar o processo de inferencia propriamente dito. Ele coleta
as informacoes do sistema de inferencia, disponibilizadas pelo modulo de configuracao, e atraves dos
parametros coletados, realiza as operacoes matematicas sobre os valores de entrada, gerando um
conjunto de valores de sada. O Engine Fuzzy implementa os principais metodos encontrados na literatura para sistemas de inferencia fuzzy, os quais
sao mostrados na figura 5.
Figura 3 Arquitetura OPC-DA.
4.3
4

Arquitetura do sistema

O JFuzZ foi desenvolvido utilizando a linguagem
Java e possui uma serie de ferramentas que per-

ISBN 978-85-8001-069-5

Modulo de Comunicacao

Esse modulo e responsavel pela troca de informacoes entre o sistema de inferencia e o processo. Ele
e composto por uma lista de interfaces de comunicacao industrial, sendo cada uma delas capaz de

4132

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

 Dados Basicos sao os dados referentes as
configuracoes basicas do sistema de inferencia, tais como tipos de normas, metodos de
implicacao, agregacao e defuzzificacao.

Figura 5 Metodos implementados no sistema de
inferencia.
comunicar-se com um protocolo de comunicacao
diferente.
Esse modulo e projetado de forma que o sistema de inferencia nao precisa preocupar-se com
os detalhes de comunicacao com o processo. Os
dados do processo sao disponibilizados ao sistema
de inferencia de forma transparente, ou seja, independente da interface de comunicacao utilizada
com o processo. Assim, esse modulo entrega os
dados num formato generico para que eles sejam
utilizados pelo sistema de inferencia.
Uma das interfaces desenvolvidas no sistema e
a OPC, pois ela permite a comunicacao com uma
grande quantidade de equipamentos de campo que
utilizam esse protocolo, ja que o mesmo e bastante
adotado atualmente na industria.
4.4

 Entrada armazena informacoes relacionadas as variaveis de entrada do sistema, tais
como nomes, ranges e informacoes de servidores e variaveis do processo. Tambem armazena informacoes de todas as funcoes de
pertinencia associadas a cada variavel de entrada.
 Sada sao os dados a respeito das variaveis
de sada. Guarda informacoes tais como nomes, ranges e informacoes de servidores e variaveis do processo. Alem disso, este bloco
armazena as informacoes de todas as funcoes
de pertinencia associadas a cada variavel de
sada.
 Regras dados a respeito das regras de inferencia definidas no sistema_fuzzy.

Modulo de Configuracao de Tags

O modulo configurador de tags converte as variaveis disponibilizadas pelo modulo de comunicacao
em varias de inferencia. Esse modulo permite associar uma variavel de inferencia a uma expressao aritmetica que combine diferentes variaveis de
processo. Essa expressao e criada utilizando uma
serie de operacoes aritmeticas disponibilizadas por
esse modulo.
Para exemplificar a utilidade desse modulo,
imagine que seja necessario utilizar uma variavel
de erro no sistema de inferencia. Geralmente essa
variavel nao esta explicitamente disponvel no processo, mas pode ser calculada atraves da diferenca
entre o setpoint e o valor lido de uma das variaveis
do processo.

O sistema JFuzZ foi desenvolvido utilizando sete
ambientes graficos, que disponibilizam as funcionalidades do sistema aos usuarios. Cada uma
desses ambientes e suas funcionalidades serao descritas nas proximas subsecoes.

4.5

5.1

Modulo de persistencia

Esse modulo e responsavel pelo armazenamento e
recuperacao de todas as informacoes do sistema
de inferencia fuzzy. Durante o projeto do JFuzZ
optou-se pela utilizacao de arquivos de texto para
realizar esse armazenamento.
Todos os parametros de configuracao dos sistemas de inferencia criados podem ser gravados
em um arquivo estrutural, de extensao .FUZ. Os
dados armazenados nos arquivos podem ser divididos em quatro grupos distintos, conforme mostra
a figura 6. Sao eles

ISBN 978-85-8001-069-5

Figura 6 Estrutura de dados do JFuzZ

5

Funcionalidades do Sistema

Editor basico de sistemas de inferencia fuzzy

O editor de sistemas de inferencia permite configurar o numero de variaveis de entrada e sada, os
nomes das variaveis, os links de variaveis do sistema com variaveis de processo dentre outras configuracoes basicas do sistema de inferencia. Esse
ambiente e mostrado na figura 7, onde os campos
destacados sao
1. Barra de ttulos exibe o tipo do sistema
de inferencia e o nome do arquivo aberto atualmente.

4133

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

Figura 8 Ambiente de edicao de funcoes de pertinencia.

Figura 7 Ambiente de edicao de sistemas de inferencia.
2. Barra de menus permite abrir, salvar e
editar os sistemas de inferencia, bem como
acessar os outros ambientes graficos.
3. Variaveis de entrada exibe as variaveis
de entrada do sistema, permitindo a adicao,
remocao e edicao de variaveis.
4. Variaveis de sada exibe as variaveis de
sada do sistema, permitindo a adicao, remocao e edicao de variaveis.
5. Regras de inferencia exibe as regras de
inferencia do tipo Se-Entao do sistema, permitindo a adicao e remocao de regras.
6. Configuracoes do sistema selecao de metodos e ajustes das funcoes de inferencia.
7. Nome da variavel mostra e permite modificar o nome de uma variavel de entrada ou
sada do sistema.
8. Campos informativos exibem outras informacoes sobra a variavel, tais como o seu
tipo, a tag a qual ela esta ligada, seus limites
de operacao, etc.
5.2

Editor de funcoes de pertinencia

Permite a visualizacao e edicao de todas as funcoes de pertinencia associadas a todas as variaveis
de entrada e sada do sistema. Permite tambem
modelar as funcoes de acordo com os tipos disponveis e com os parametros de configuracao e de
range.
A figura 8 ilustra esse ambiente, com os seguintes campos destacados
1. Barra de menus permite adicionar, remover e salvar funcoes de pertinencia do sistema
de inferencia.

ISBN 978-85-8001-069-5

2. Grafico principal este grafico exibe todas
as funcoes de pertinencia da variavel selecionada.
3. Legenda relaciona as funcoes mostradas no
grafico aos seus respectivos nomes.
4. Nome e tipo da variavel exibe o nome e
tipo da variavel selecionada.
5. Range define os limites mnimo e maximo
de valores que a variavel podera atingir.
6. Funcao atual seleciona uma das funcoes de
pertinencia existentes.
7. Nome da funcao este campo de texto e
usado para mostrar e modificar o nome da
funcao de pertinencia selecionada.
8. Parametros configuracao dos parametros
de modelagem do comportamento da funcao.
O numero de parametros depende do tipo da
funcao de pertinencia.
5.3

Editor de regras de inferencia

Baseado nas descricoes das variaveis de entrada e
sada definidas no editor basico, esse ambiente permite criar regras de inferencia de forma simples,
bastando apenas selecionar e associar cada variavel a um valor fuzzy. Essa associacao e opcional,
quando nenhum valor e selecionado, a variavel em
questao e ignorada para aquela regra na etapa de
inferencia. A figura 9 ilustra esse ambiente, destacando os seguintes campos
1. Variaveis de entrada campos com os nomes de todas as variaveis de entrada do sistema para a criacao da regra de inferencia.
2. Variaveis de sada campos com os nomes
de todas as variaveis de sada do sistema para
a criacao da regra de inferencia.
3. Valores fuzzy campo de selecao com todos
os valores fuzzy disponveis para cada variavel.

4134

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

4. Conector logico conector de ligacao das
associacoes das variaveis de entrada com os
seus respectivos valores fuzzy.

2. Consequentes cada coluna grafica azul
mostra como a variavel de sada e usada em
cada regra. Os valores para cada variavel de
sada sao mostrados no topo da coluna.
3. Regras de inferencia cada linha de graficos representa uma regra de inferencia.
4. Forma de sada agregada o ultimo grafico
da tela mostra como a sada de cada regra e
combinada para formar a sada agregada.
5. Defuzzificacao a linha indica o valor de
sada do defuzzificador para a forma de sada
gerada.

Figura 9 Ambiente de edicao de regras de inferencia.

6. Entradas caixa de texto para insercao de
valores de entradas para o sistema.
5.5

5.4

Visualizador de regras

Neste ambiente sao exibidos os antecedentes e consequentes de cada regra. Para cada uma delas, os
valores fuzzy selecionados para as variaveis de entrada e sada sao ilustrados na forma de graficos,
de acordo com as funcoes de pertinencia associadas. Alem disso, o ambiente exibe a forma que
representa a operacao de agregacao, calculando e
identificando os valores para as variaveis de sada,
de acordo com as entradas do sistema e dos parametros gerais de configuracao. A figura 10 ilustra
esse ambiente, onde os campos em destaque sao

Modulo de controle

O modulo de controle e o ambiente de execucao
dos sistemas de inferencia fuzzy aplicados a um
determinado processo_industrial. Apos criado no
editor basico de sistemas de inferencia, tal sistema
fuzzy deve ser carregado no modulo de controle
para incio da execucao.
Nesse ambiente, o operador pode monitorar
o processo de controle atraves de informacoes numericas e graficos de tendencias em tempo_real.
Alem disso, o operador pode alterar os valores de
referencia do sistema a qualquer momento, sendo
o controlador capaz de ajustar-se para seguir a
nova referencia. A figura 11 ilustra esse ambinete,
onde os campos destacados sao
1. Configuracao do sistema de inferencia
atual botao de acesso ao editor basico de
sistemas de inferencia. A partir dele, o editor
carregara o sistema de inferencia atualmente
utilizado no modulo de controle. Se nenhum
sistema de inferencia fuzzy encontra-se carregado, um novo sera criado.
2. Carregamento de sistema de inferencia
existente botao de acesso ao editor basico
de sistemas de inferencia. A partir dele, o
modulo de controle carregara um sistema de
inferencia previamente definido, a partir de
um arquivo .FUZ.
3. Informacoes basicas informacoes sobre o
sistema de inferencia carregado.

Figura 10 Ambiente de visualizacao de regras de
inferencia.
1. Antecedentes cada coluna grafica amarela
mostra como a variavel de entrada e usada
em cada regra. Os valores para cada variavel
de entrada sao mostrados no topo da coluna.

ISBN 978-85-8001-069-5

4. Setpoint campo de definicao da referencia
do sistema_de_controle.
5. Dados de variaveis valores de tempo-real
das variaveis do sistema.
6. Perodo de atualizacao intervalo de atualizacao do sistema_de_controle, dado em milissegundos. Pode ser limitado a taxa de atualizacao do meio de comunicacao.

4135

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

7. Execucao da tarefa inicia e finaliza a execucao da tarefa de controle, de acordo com o
perodo de atualizacao definido.
8. Variaveis ativas lista de variaveis ativas, e
passveis de monitoramento.
9. Geracao de graficos a partir de selecao
realizada na lista das variaveis, gera um grafico de tendencia com os valores das variaveis,
atualizado a cada ciclo de controle. Varios
graficos podem ser gerados, com diferentes
combinacoes de variaveis.

6

Validacao

Para validar o JFuzZ, aplicamos o mesmo no controle de um processo real. O processo escolhido
foi o controle_de_nvel de um lquido em um tanque. Para isso, utilizamos uma planta experimental composta por dois tanques acoplados da Quanser (Quanser, 2004).
Essa planta consiste em dois tanques acoplados verticalmente com um reservatorio de agua
abaixo deles. Uma bomba envia agua do reservatorio para o tanque superior, que por sua vez possui um orifcio na sua base que permite o fluxo da
agua para o tanque inferior. Alem disso, o tanque
inferior tambem possui um orifcio que permite a
sada da agua desse tanque de volta para o reservatorio.
Neste experimento utilizaremos o JFuzZ para
controlar o nvel do tanque superior da planta,
onde esse nvel pode variar de 0cm a 30cm. A
figura 13 mostra a arquitetura do sistema_de_controle implementado. O JFuzZ se comunica com
um servidor OPC, que se comunica com um CLP
ligado a um sensor que indica o nvel do tanque.

Figura 11 Ambiente de visualizacao do controlador_fuzzy.

5.6

Registrador de Variaveis

Este ambiente, que e mostrado na figura 12, permite ao usuario registrar uma variavel de inferencia no sistema. Ele possibilita que seja feita uma
busca por tags em algum servidor OPC conectado
na rede. Essa busca e facilitada com o auxlio de
uma mascara de busca, que permite filtrar os resultados da busca. Alem disso, nesse ambiente e
disponibilizado uma calculadora de tags, que permite associar a variavel de inferencia a uma expressao aritmetica envolvendo uma ou mais tags
do processo.

Figura 12 Ambiente para edicao de tags calculadas.

ISBN 978-85-8001-069-5

Figura 13 Arquitetura do controlador implementado.
Para controlar esse processo utilizamos a estrategia_de_controle_fuzzy multiestagio descrita
por Costa et al. (2012). Nessa estrategia o tanque e dividido em tres partes superior, central e
inferior, onde cada uma dessas partes possui um
sistema_de_controle_fuzzy diferente.
Utilizando as funcionalidades do JFuzZ criamos um sistema de inferencia baseado no modelo
de Mamdani para controlar o processo. Nesse sistema as variaveis de entrada sao o erro e a variacao do erro do nvel do tanque. Ja a variavel de
sada e o sinal de controle, que e a tensao aplicada
a bomba. Para cada uma dessas variaveis criamos um conjunto de valores fuzzy e em seguida
tres tabelas de associacao entre os valores de entrada (Costa et al., 2012).
Criado o conjunto de regras, iniciamos um experimento com o setpoint em 15cm e apos a estabilizacao do nvel do tanque alteramos o setpoint
para 20cm. Por fim, alteramos mais uma vez o
setpoint para 10cm. Com isso, verificamos que
para todos os setpoints utilizados o controlador se

4136

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

comportou de maneira satisfatoria. A figura 14
mostra os resultados obtidos utilizando o JFuzZ
no controle do processo descrito.

Costa, B. S. J., Bezerra, C. G. and de Oliveira,
L. A. H. G. (2012). A multistage fuzzy controller Toolbox for industrial applications,
IEEE International Conference on Industrial
Technology .
Hall, L. and Hathaway, R. (1996). Fuzzy logic
toolbox - software review, IEEE Transactions
on Fuzzy Systems 4(1).
Mamdani, E. H. (1974). Application of fuzzy algorithms for simple dynamic plant, Proceedings of Institute of Electrical Engineering
121 15851588.

Figura 14 Controle do nvel do tanque com setpoint variavel.

7

Conclusao

Neste artigo apresentamos um software para criacao e edicao de sistemas de inferencia fuzzy. Esse
software permite criar sistemas de inferencia baseados nos modelos de Mamdani e Takagi-Sugeno.
O software disponibiliza um conjunto de ambientes graficos bastante intuitivos que facilitam a criacao desses sistemas de inferencia.
Alem disso, o software e gratuito e desenvolvido utilizando a linguagem Java, o que
o torna independente de plataforma. O software completo esta disponvel no endereco
httpwww.dca.ufrn.br brunojfuzz.rar.
Esse software permite a utilizacao de uma serie de interfaces de comunicacao, o que permite a
aplicacao do sistema de inferencia a um processo
industrial. No desenvolvimento deste artigo, utilizamos uma interface de comunicacao OPC, pois se
trata de um padrao de comunicacao amplamente
utilizado nos dias de hoje. Porem, devido a estrutura modular do sistema, outras interfaces de
comunicacao podem ser facilmente agregadas no
futuro.
Agradecimentos

Mamdani, E. H. and Assilian, S. (1975). An experiment in linguistic synthesis with a fuzzy logic controller., International Journal of ManMachine Studies 7(1) 113.
OPC (2003). Opc data access custom interface
specification 3.0, Technical report, Opc Foundation.
Pinto, R. L. (2010). Aplicacao de um sistema
especialista fuzzy para reducao de manobras
de dispositivos shunts chaveados automaticamente por um compensador estatico, Dissertacao de mestrado, COPPE, Universidade
Federal do Rio de Janeiro.
Quanser (2004). Coupled tanks user manual, Technical report, Quanser.
Takagi, T. and Sugeno, M. (1985). Fuzzy identification of system and its applications to
modeling and control, IEEE Transactions on
Systems, Man and Cybernetics pp. 116132.
Yasunobu, S., Miyamoto, S. and Ihara, H.
(1983).
Fuzzy control for automatic
train operation system, Proceedings of 4th
IFACIFIPIFORS - International Congress
on Control in Transportation Systems pp. 33
39.
Zadeh, L. (1965). Fuzzy sets, Information Control
8 338353.

Agradecemos ao Instituto Federal de Educacao,
Ciencia e Tecnologia do Rio Grande do Norte,
campus Natal Zona Norte e campus Santa Cruz,
e ao Departamento de Engenharia de Computacao e Automacao da Universidade Federal do Rio
Grande do Norte por disponibilizar a estrutura
necessaria ao desenvolvimento desta pesquisa.
Referencias
Chuan, F., Zengqi, S. and Ling, S. (2004). Design and implementation of scilab fuzzy logic
tooibox, IEEE International Symposium on
Computer Aided Control Systems Design .

ISBN 978-85-8001-069-5

4137