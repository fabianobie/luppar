Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

REDES DE PETRI COLORIDAS TEMPORIZADAS PARA ANALISE DE SOCS
Silveira, J. A. S., Castro, H. S., Cortez, P. C., Barroso, G. C., Ferreira, J. M.,
Mota, R. G., Fiallos, M. A., Castro, G. H.



LESC - DETI - UFC

Departamento de Fsica, UFC


DETI - UFC

Emails jarbas@lesc.ufc.br, helano@lesc.ufc.br, cortez@lesc.ufc.br, gcb@fisica.ufc.br,
joaomarcelo@lesc.ufc.br, rafael@lesc.ufc.br, mario@deti.ufc.br, george@lesc.ufc.br
Abstract The design of communication architectures suitable for modern SoCs (System on Chips) has been
a challenging task. One promising alternative to solve these problems are Networks on Chips (NoCs), providing
scalability as the main feature. Analysis and NoCs implementation are a complex task. In this sense, a model
that allows, at design time, a performance evaluation of NoC becomes very attractive. Coloured Petri nets allow
a detailed modeling of discrete event systems and support evaluation of temporal aspects with great precision.
In this paper we propose a model based on Hierarchical timed coloured Petri nets for temporal evaluation of a
NoC. The model validation is made by comparison to an CABA (Cycle Accurate Bit Accurate) implementation
and a OMNET++ simulation. We use the metrics mean latency through flows with and without concurrence.
The results proved the model efficiency in the latency time predictability, with negligible error, even in heavy
traffic, when compared with the CABA model.
Keywords

Network-on-chips, Coloured Petri Nets, Modelling.

Resumo O projeto de arquiteturas de comunicacao adequadas para os modernos SoCs (System on Chips)
tem sido uma tarefa desafiadora. As NoCs (Network-on-Chips) apresentam-se como uma solucao bastante promissora para solucao de projetos, oferecendo escalabilidade como principal caracterstica. As NoCs, em sua
grande maioria, sao de analise e implementacao complexas. Neste sentido, um modelo que possibilite, em tempo
de projeto, uma avaliacao_de_desempenho de NoCs, torna-se bastante atrativo. As redes de Petri coloridas possibilitam uma modelagem detalhada de eventos de sistemas_discretos, alem de suportar avaliacao de aspectos
temporais com grande precisao. Neste artigo propomos um modelo em redes de Petri coloridas temporizadas para
avaliacao temporal de uma NoC. O modelo e validado atraves de comparacao com uma implementacao CABA
(Cycle Accurate Bit Accurate) e uma simulacao utilizando o simulador OMNET++. Utilizamos as metricas de
tempo medio de latencia atraves de fluxos com e sem concorrencia. Os resultados comprovaram a eficiencia do
modelo na previsibilidade de tempos de latencia, com erros desprezveis, mesmo em situacoes de trafego intenso,
quando comparados com o modelo CABA.
Palavras-chave

.

Introducao

As estruturas de comunicacao para circuitos integrados modernos podem ser consideradas como
um desafio em projetos de SoCs. O crescimento
do numero de nucleos nos modernos circuitos integrados vem provocando uma crise de projeto, uma
vez que os projetistas nao conseguem responder a
crescente demanda por circuitos integrados de alta
integracao. (Ali et al., 2008)
As estruturas de comunicacao para circuitos
integrados tem o seu comportamento fortemente
definido pelo tipo de aplicacao que o SoC ira executar, sendo o trafego caracterstico da aplicacao
de grande importancia na analise de desempenho
do sistema. Neste sentido, estas estruturas necessitam de ferramentas de analise de desempenho
em tempo de projeto, ou seja, que possibilitem
conhecer o comportamento temporal sob determinadas condicoes de trafego antes mesmo de serem
implementadas, pois para a construcao dessas estruturas e necessario um grande esforco de implementacao.
As NoCs vem sendo alvo de pesquisa por va-

ISBN 978-85-8001-069-5

rios anos e podem ser consideradas hoje como uma
das solucoes mais promissoras para a estrutura de
interconexao dos modernos SocS, quando comparadas com solucoes classicas, como barramentos e
conexoes ponto a ponto (Marculescu et al., 2009).
Devido a necessidade de analise em tempo de
projeto, um modelo para analise de desempenho
faz-se extremamente necessario. Existem varios
tipos de modelos disponveis para analise de desempenho em NoCs e praticamente sao tres as
variaveis dominantes esforco de implementacao
do modelo, precisao dos resultados e tempo de simulacao. Normalmente os modelos de pequeno
esforco de implementacao sao de baixa precisao
e pequeno tempo de simulacao, enquanto os modelos de grande esforco de implementacao sao de
grande precisao, mas longo tempo de simulacao
(Pasricha and Dutt, 2008).
Baseado no exposto acima, neste artigo propomos a modelagem de uma NoC utilizando redes
de Petri coloridas, temporizadas e hierarquicas.
O modelo foi desenvolvido na ferramenta CPN
Tools versao 3.2.2. (CPNTools, 2012). A NoC
modelada possui dimensao 3x3, tecnica de cha-

3322

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

veamento wormhole e roteamento XY. O modelo
possui precisao de flits e pode apresentar resultados tpicos de avaliacao de NoCs, como tempo
de latencia de pacotes por fluxo, trafego aceito e
distribuicao de latencias. Toda a analise e injecao
de trafego esta inclusa no modelo, o que facilita
a avaliacao e posterior mudanca de parametros de
analise. O modelo foi validado atraves de uma implementacao com precisao de bit e ciclo em VHDL
e SystemC e com uma simulacao em OMNET++
(Varga, 2012). De acordo com os resultados, o modelo apresentou um menor esforco de implementacao, quando comparado a implementacao do modelo CABA, uma precisao excelente e um tempo
de simulacao aproximadamente 2 vezes menor que
modelos com precisao similares.
2

Trabalhos Relacionados

Muito dos trabalhos de modelagem em NoCs sao
baseados em teoria das filas (Foroutan et al.,
2010 Yunus et al., 2011 Youhui et al., 2010 Guz
et al., 2007 Kiasari et al., 2008). Nesta abordagem os autores elaboram uma visao dos estados
de funcionamento da NoC e obtem uma cadeia de
Markov para, a partir da mesma, coletar os dados
de analise como, por exemplo, o tempo medio do
pacote na rede. Um dos grandes limitantes desta
solucao e a explosao de estados, problema comum
em sistemas modelados por cadeias de Markov.
Para contornar esse problema os autores buscam
uma reducao desses estados, para obter uma melhor visibilidade dos mesmos e assim tornar possvel sua analise.
Em (Blume et al., 2007) os autores utilizaram
um modelo de redes de Petri DSPNs (Deterministic and Stochastic Petri Nets). Nesta abordagem
de redes de Petri as transicoes podem ser instantaneas ou temporizadas, com tempos de transicao determinsticos ou probabilsticos. Os autores
modelam comunicacao entre dois processadores e
memoria via uma estrutura de comunicacao usual
do tipo barramento. Estes dados sao confrontados com uma implementacao em FPGA e apresentam bons resultados, com erros menores que
6. Os autores tambem modelam uma NoC 2x2,
mas apresentam metricas pouco usuais em NoCs,
tais como a taxa de transferencia efetiva entre dois
nos vizinhos, o que dificulta a avaliacao da aplicabilidade do modelo. Embora as DSPNs tenham
muitos recursos de modelagem, as mesmas tem limitacao quanto ao crescimento de quantidade de
lugares, arcos e transicoes, pois nao aceitam funcoes nos arcos e lugares, atraves da insercao de
cores. Nos iremos mostrar que as redes de Petri
coloridas possuem um forte poder de modelagem,
com uma visualizacao simples, e podem apresentar metricas precisas e usuais em NoCs.
Em (Bazzaz et al., 2009) um modelo em redes
de Petri coloridas sem restricoes de tempo e imple-

ISBN 978-85-8001-069-5

mentado e simulado em CPN Tools. Nesta abordagem, os autores modelam o roteador da NoC e
reproduzem varias instancias, conectando-as atraves de lugares, representando assim os links de
comunicacao em uma NoC. Os autores apresentam resultados de uma NoC 4x4, mas nao fazem
uma validacao do modelo, nem comparam com
outro modelo ou simulador. Alem disso, os autores apresentam somente um resultado, que e o
percentual de trafego nos roteadores em um cenario de trafego com distribuicao uniforme. Baseado somente nesta metrica nao e possvel, por
exemplo, estimar o tempo de atraso de um pacote
na presenca de congestionamento. A limitacao do
modelo apresentado em (Bazzaz et al., 2009) pode
ser contornada utilizando uma rede de Petri temporizada, que permite modelar o atraso de cada
flit na rede, podendo medir com precisao o tempo
de cada pacote na rede, mesmo em situacao de
trafegos intensos.
Neste sentido, com base nas consideracoes expostas sobre os modelos descritos anteriormente,
neste trabalho propomos um modelo de excelente
precisao, tempos de simulacao significativamente
menores que modelos de mesma precisao, metricas usuais para analise de desempenho em NoCs,
grande facilidade na insercao de novas metricas e
topologias de NoCs e que utiliza como tecnica de
modelagem as redes de Petri coloridas, hierarquicas e temporizadas.
3

Modelagem em Redes de Petri

As redes de Petri coloridas (RPCs) sao uma linguagem grafica para a construcao de modelos de
sistemas_a_eventos_discretos e analise de suas propriedades. As RPCs combinam a capacidade de
modelagem das redes de Petri com a capacidade de
manipulacao de dados de uma linguagem de alto
nvel (Jensen and Kristensen, 2009). A linguagem de programacao das RPCs e a CPN ML, que
e uma linguagem de programacao funcional baseada na linguagem Standard ML (Ullman, 1998).
As RPCs sao usadas para modelagem_de_sistemas
reais mais complexos, visto que as mesmas permitem a construcao de modelos mais compactos com
varios nveis de abstracao atraves de uma representacao grafica mais legvel (Jensen and Kristensen, 2009). Aos modelos RPC e possvel associar
restricoes de tempo, a partir das quais, pode-se
capturar os tempos de ocorrencias de eventos e
permanencia em estados do sistema. Isto significa
que podem-se usar os modelos RPC para analise
de desempenho para se investigar metricas, tais
como, retardo (delay), vazao (throughput) e tamanho de filas (queue lengths), alem de modelagem e validacao de sistemas_em_tempo_real.
Modelos RPC podem conter diferentes nveis
de abstracao. Eles podem ser construdos como
um conjunto de modulos (subredes) quando se

3323

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

esta modelando sistemas reais mais complexos.
Os modulos se comunicam atraves de interfaces
bem definidas. O conceito de modulo em RPC e
baseado em um mecanismo de estruturacao hierarquica, o qual permite que um modulo possua
submodulos que podem ser reusados em diferentes
partes do modelo.
As RPCs sao uma ferramenta apropriada para
a modelagem de NoCs, visto que as mesmas modelam importantes caractersticas das NoCs, tais
como modularidade, capacidade de manutencao
e expansao (maintainability and expandability).
Estas caractersticas tornam o modelo original
mais facil para futuras modificacoes eou expansoes. O CPN Tools e uma ferramenta automatizada para edicao, simulacao e analise de desempenho de modelos RPC. O usuario do CPN Tools
trabalha diretamente com a representacao grafica
do modelo RPC (Jensen and Kristensen, 2009).
As redes de Petri coloridas possuem dois tipos
de nos lugares e transicoes. Arcos direcionados ligam os lugares as transicoes e as transicoes aos lugares. Os lugares representam o estado do sistema
modelado e a cada lugar pode-se associar uma ou
mais fichas. Cada ficha possui um valor associado,
chamado historicamente de cor. O estado do sistema e, entao, representado pelo numero de fichas
(e suas cores associadas) em cada lugar da rede.
Fichas em um determinado lugar representam a
marcacao daquele lugar. As transicoes representam a ocorrencia de eventos no sistema. Quando
uma transicao ocorre, ela remove fichas de seus
lugares de entrada (lugares com arcos saindo dos
mesmos e chegando na transicao) e adiciona fichas
a seus lugares de sada (lugares cujos arcos comecam na transicao e terminam neles).
As expressoes associadas aos arcos determinam quantas e quais as fichas saem dos lugares
de entrada e chegam aos lugares de sada da transicao. As expressoes sao inscricoes posicionadas
proximo aos arcos. As transicoes tambem possuem expressoes booleanas de guarda. Quando
uma guarda e verdadeira, a transicao pode ocorrer, desde que as outras condicoes de habilitacao
da mesma sejam verdadeiras.
Usando modelos RPC com restricoes de
tempo, podem-se fazer medidas de desempenho,
tais como tempo medio de espera, retardo, tempo
de vazao, etc. Em um modelo RPC com restricoes de tempo, as fichas podem carregar um selo
de tempo, em adicao a sua cor. Assim, um modelo RPC possui um relogio global que representa
o tempo do sistema modelado.
A distribuicao de fichas nos lugares, seus selos
de tempo e o relogio global formam a marcacao
temporizada. Mesmo em uma RPC hierarquica,
existe somente um relogio global. O selo de tempo
especifica o tempo em que uma ficha esta pronta
para ser usada, ou removida, pela ocorrencia de
uma transicao.

ISBN 978-85-8001-069-5

Retardos de tempo podem ser implementados
tanto nos arcos como nas transicoes. Um retardo
de tempo associado a uma transicao obriga que
este valor de tempo seja adicionado ao selo de
tempo de todas as fichas temporizadas que chegam
nos lugares de sada da transicao. Um retardo de
tempo associado a um arco de sada de uma transicao, adiciona este retardo somente as fichas que
serao colocadas no lugar de chegada deste arco.
4

A NoC modelada

A NoC modelada possui topologia em malha, chaveamento wormhole, algoritmo de roteamento do
tipo ortogonal e determinstico e tamanho 3x3,
conforme pode ser visualizado na Figura 1.
A topologia em malha e uma das mais regulares e mais utilizadas em NoCs. A sua estrutura
regular facilita a sua reproducao, pois um roteador
e conectado a outro via links, possibilitando a criacao de qualquer topologia K-ary n cubes (Ghozati
and Wasserman, 1999).

Figura 1 Topologia da NoC modelada neste trabalho.
O roteador, formado pelos buffers de entrada
e os circuitos de arbitragem e roteamento, utiliza
uma arbitragem descentralizada. Isto permite ao
roteador um menor tempo de servico e possiblita
que a rede apresente menores latencias (Moreno
et al., 2011). Os buffers, presentes na entrada de
cada canal do roteador, sao parametrizaveis.
O chaveamento wormhole e uma tecnica que
diminui a latencia da rede e reduz o espaco requerido nos buffers do roteador. Nesta tecnica, os
pacotes sao separados em menores unidades chamadas flits, que sao distribudas ao longo do caminho de destino na rede. A tecnica usa dois flits
de controle, sendo um flit de cabecalho, que inicia
o pacote, e um flit de terminacao, que finaliza o
pacote. O flit de cabecalho contem todas as informacoes de roteamento e estabelece um caminho
na rede.
O roteamento XY e uma tecnica pertencente
a classe de algoritmos DOR (Deflection Orthoghonal Routing), que e um algoritmo largamente utilizado e de simples implementacao. O mesmo con-

3324

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

siste em estabelecer o caminho do pacote inicialmente nas coordenadas X e, somente apos encontrar a coordenada X de destino, os pacotes passam
a trafegar no eixo Y.
O tamanho dos pacotes pode variar de acordo
com o trafego injetado na rede. Ja o flit, que e
a menor unidade que trafega em uma NoC, e fixo
para uma dada estrutura de rede. Em nosso modelo, os flits tem largura fixa enquanto os pacotes
podem ter tamanho variavel. Maiores detalhes da
rede modelada serao vistos nas secoes seguintes.
5

Tabela 1 Descricao das variaveis da NUPLA.
Variavel
nPack
nF
Or
tI
tD
oL
Rout
aux1, aux2
ox, oy
dx, dy
lx, ly
t
payload

Descricao
Ordem do pacote
Ordem do Flit
Lugar de origem do flit
Tempo de criacao do pacote
Tempo de chegada do pacote no destino
Carga oferecida do pacoteflit
Parametro de Roteamento
variaveis auxiliares
Coordenada X e Y de origem
Coordenada X e Y de destino
Coordenada X e Y local
Tipo do flit
Dado do pacote

O modelo da NoC

O modelo aqui proposto representa uma NoC 3x3
em que cada no possui um roteador, 5 canais de
comunicacao com buffers de entrada e modulos de
arbitragem e roteamento para cada canal. Cada
no esta interligado a outro atraves de canais de entrada e sada. O modelo e hierarquico, contendo
um modulo principal, em que o modelo e representado de forma mais abstrata, conforme pode
ser visualizado na Figura 2. Cada roteador e modelado atraves de uma sub-rede. Por exemplo, a
transicao R11 (Figura 2) esta associada a uma
sub-rede de nome ROUTER 11. Cada roteador e
identico ao outro e pode ser instanciado atraves
de uma clonagem de pagina no CPN Tools. Os
roteadores sao interligados atraves de lugares de
entrada e sada. Por exemplo, o lugar L11E representa o canal leste de sada do roteador R11
e tambem o lugar de entrada do canal oeste do
roteador R21. Ja o lugar PE11 representa o elemento de processamento, que e a origem dos flits,
que representa o trafego na rede.
A modelagem do roteador utiliza uma
abordagem baseada em sua estrutura fsica. O
modelo, atraves de arcos, lugares e transicoes,
representa os blocos logicos do roteador, enquanto as fichas representam os flits. No nosso
modelo cada ficha representa um flit e transporta
informacoes tais como coordenadas de origem e
de destino. A n-upla tem sua descricao apresentada na Tabela 1. No CPN Tools a n-upla
(nPack,nF,Or,tI,tD,oL,Rout,aux1,aux2,ox,oy,dx,
dy,lx,ly,t,payload) e representada como uma
variavel do tipo PRODUCT, que permite o
concatenamento de variaveis de diferentes tipos.
Podemos destacar como partes principais do
roteador os modulos de memorizacao dos flits e os
modulos de roteamento e arbitragem. Os modulos
de memorizacao sao em numero de 5 para cada roteador, representando os buffers dos canais local,
norte, sul, leste e oeste. Cada buffer tem o seu
tamanho controlado pelo valor de uma constante,
possibilitando simulacao com diferentes valores.
No modelo RPC as temporizacoes assumem
valores discretos e estao associadas ao disparo das
transicoes. Para garantir as caractersticas temporais da NoC, o tempo das transicoes foi ajustado

ISBN 978-85-8001-069-5

de acordo com os tempos registrados no modelo
CABA. Neste modelo cada flit gasta um ciclo de
clock para entrar no buffer e quatro ciclos para
roteamento e arbitragem do flit de cabecalho. No
modelo RPC este tempo foi adicionado ao modulo
de arbitragem e roteamento, representando assim
o tempo de servico total do roteador. Este tempo
foi definido como uma constante no inicio da simulacao permitindo facilmente sua mudanca, possibilitando simulacoes com roteadores com tempos
de servico variados.
Os modulos de roteamento e arbitragem, para
efeitos de modelagem, estao sintetizados em uma
unica transicao, que concentra a temporizacao de
servico do roteador. Para cada tipo de flit identificado (flit de cabecalho, payload ou terminador) e
atribudo o tempo correspondente de cada evento,
em conformidade com os tempos reais de execucao no modelo CABA. Esta transicao tambem verifica, atraves da funcao de guarda, se o canal de
destino do flit esta disponvel. O flit entao e encaminhado ao lugar de arbitragem, que no modelo
representa a entrada do buffer do roteador adjacente, que e um lugar compartilhado a subrede de
outro roteador. Esta simplificacao e possvel devido ao recurso de hierarquia do CPN Tools, que
permite que lugares sejam compartilhados como
entrada e sada em outras subredes.
O lugar para onde cada flit e encaminhado na
ocorrencia de uma transicao de roteamento (canais de sada do roteador, como norte, sul, leste ou
oeste), e definido pelas funcoes nos arcos que interligam cada transicao de roteamentoarbitragem
ao respectivo canal de destino. Como o roteador
tem arbitragem descentralizada, para cada transicao de roteamento existe um arco em direcao a
cada lugar de sada, que representa os canais de
sada do roteador. Na funcao de cada arco esta
o algoritmo de roteamento (XY). O tipo de algoritmo pode ser facilmente mudado, sendo necessaria somente uma mudanca nestas funcoes de
roteamento.
Para medirmos o tempo que cada pacote leva
de sua origem ate o seu local de destino, subtramos o tempo em que o flit terminador chega ao
destino do tempo de criacao do pacote. Para isso,

3325

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

U
A
A
F

F





U

U

A
F

e

e



e

F  

F  
F  
M  
N

M  
N

M  

N




f 



f 

P

f 



f

P

P

f
f 

f 

f

f

f

A
F



L

f

U
R
R

e

R
R

A
F

U

L

e

f 

f

f

R
R

e

f



f

L

f

f 

f

e

f

A
F



L

U



f
f
F  

N

f 



L

L

L



L

f 



L

M  



L





P


f

f

P

f
f

f

f

f

f

f 

L

f

P

f

f
f 

f

A




f 


U

F

f 

f 



f

F  
f 
N



f 


f 

M  

N
M  

f

f

F  

f
f 

e

f

e



f

L

f

e
R
R

A
F



L

U
e

A
F

f

f 



L

f 

M  

e

f

F  

f 

N
L





L

N


f 


f 

M  

L





L

f

M  

f 

f 

f

L



f

f
f 

f
L



L

f
f 
F 

f

e
L

R
R



f

f
f

f

f

R

L

P

f

f

R



P

f

f
f 

f 




f

P

R
e

f



f

F  

f 

f
R

U

f



f 

f

e

f

f



R
R

F  

N

f

f 

f

e

e

f

f 

f
R
R

L

e

f

Figura 2 Modulo principal do modelo em Redes de Petri.
quando o flit de cabecalho entra na rede, atraves
do buffer de entrada do roteador, o mesmo tem
seu tempo de criacao armazenado em ficha, que e
inserida na variavel tC do flit terminador. Assim, a ficha que representa o flit terminador de
pacote carrega o tempo de criacao do pacote em
sua N-UPLA. Quando esta ficha chega ao local
de destino, o tempo de cada pacote e calculado,
conforme a equacao 1, em que tD representa o
tempo de chegada do ultimo flit do pacote.
T imeP acket  tD  tC
6

(1)

Validacao do modelo

Para validar o modelo proposto utilizamos dois
tipos de trafego com concorrencia e sem concorrencia. Para fins de comparacao utilizamos uma
implementacao de uma NoC em VHDL com geracao e analise de trafego em SystemC e uma simulacao em OMNET++. Nesta secao descrevemos
os detalhes da validacao do modelo.
A implementacao da NoC em VHDL seguiu o
mesmo padrao adotado no modelo possui topologia em malha classica 3x3, com roteadores com
controle_de_fluxo onoff, arbitragem em roundrobin, chaveamento wormhole, com algoritmo de
roteamento XY e sistema de memorizacao com
buffers FIFO circulares na entrada dos canais. O
roteador apresenta cinco links full-duplex com tamanho de flits parametrizavel.
A abordagem utilizada na arquitetura do roteador e a descentralizada. Cada uma das cinco

ISBN 978-85-8001-069-5

portas possui um conjunto composto por um modulo de memorizacao, um modulo de roteamento e
um modulo de arbitragem, ao inves de um circuito
unificado de roteamento e arbitragem (RA). A
abordagem de RA centralizado permite a interligacao de somente um canal por turno enquanto
a descentralizada permite a conexao de todos os
cinco canais no melhor caso, funcionando como a
abordagem centralizada no pior caso. Esta NoC
foi descrita em VHDL e o trafego foi injetado e coletado utilizando-se modulos escritos em SystemC.
Para a simulacao no OMNET++ utilizamos
o pacote HNoCs (HNoCs, 2012), que e uma implementacao de codigo aberto de um ambiente de
simulacao de NoCs. A implementacao seguiu as
mesmas especificacoes utilizadas no modelo, utilizando chaveamento wormhole, arbitragem roundrobin, controle_de_fluxo baseado em creditos, topologia em malha, com tamanho 3x3, e algoritmo de
roteamento XY. Algumas modificacoes foram necessarias para a adequacao ao modelo RPC e para
a implementacao feita em VHDL e SystemC. Entre as modificacoes feitas estao o tamanho da rede,
o tipo de arbitragem, o modo como as cargas oferecidas sao variadas, o tamanho do flit, o tempo
de servico do roteador, o atraso relacionado aos
links e o numero de pacotes gerados que trafegaram pela rede.
Para fins de validacao e ajuste do modelo, inicialmente realizamos a simulacao de trafego sem
concorrencia, ou seja, somente um fluxo trafegando na rede. Conforme podemos observar na
Figura 3, o fluxo tem 4 hops de distancia. As si-

3326

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

1500
500

1000

CABA
modelo RPC
Simulador

0

Figura 3 Fluxos de ajustes com e sem concorrencia.

Latência Média (em ciclos)

2000

CNF (Chaos Normal Form)  Latência Média  Fluxos 3111 e 2112

0.2

0.4

0.6

0.8

1.0

100

150

200

250

Carga Oferecida

Figura 5 Latencia media fim a fim para o fluxo
de ajuste com concorrencia.

CABA
Modelo RPC
Simulador

50

Latência Média (em ciclos)

CNF (Chaos Normal Form)  Latência média  Fluxo 13  31 (4 HOPS)

0.2

0.4

0.6

0.8

1.0

Carga Oferecida

Figura 4 Latencia media fim a fim para o fluxo
de ajuste sem concorrencia.
mulacoes, tanto no modelo, como nas implementacoes em VHDL e OMNET++, utilizaram os mesmos parametros de simulacao. Foram enviados
100 pacotes de 30 flits, com carga oferecida variando de 10 a 100. Os atrasos de tempo de servico do roteador e entrada de um flit na rede foram
os mesmos verificados na simulacao em VHDL,
os quais foram utilizados nos tempos de transicao do modelo RPC e no ambiente de simulacao
OMNET++. A metrica, tempo de latencia media
fim a fim, e calculada como o tempo medio gasto
desde a criacao do pacote ate quando o ultimo flit
chega ao elemento de processamento de destino.
Tabela 2 Valores de latencia (em ciclos) para o
fluxo sem concorrencia.

na rede.
As simulacoes para os fluxos com concorrencia foram realizadas seguindo as mesmas metricas
e condicoes das simulacoes sem concorrencia e os
resultados sao apresentados na Figura 5 e na Tabela 3. Pudemos constatar o mesmo desempenho
do modelo RPC, apresentando erros desprezveis
quando comparado ao modelo CABA. As simulacoes em OMNET++ apresentaram resultados satisfatorios, mas pode-se observar um desempenho
inferior em termos de precisao, quando comparado
com os fluxos sem concorrencia. Quanto ao tempo
de simulacao, o modelo RPC confirmou o bom desempenho, apresentando um tempo de simulacao
aproximadamente 2 vezes menor que o modelo em
CABA (tempo aproximado de 13 minutos para
o modelo RPC e de 26 minutos para o modelo
CABA).
Tabela 3 Valores de latencia (em ciclos) para o
fluxo com concorrencia.
Mean Latency - 31 to 11 and 21 to 12
Taxa

CABA

RPC

OMNET

Erro RPC

10-40

58,5

58,7

60

0,34

Erro OMNET
2,56

50

454,5

455

308,5

0,11

-32,12

60

949,5

949,9

803,5

0,04

-15,38

70

1295,5

1296,4

1157,5

0,07

-10,65

80

1543,5

1543,9

1422

0,03

-7,87

90

1790,5

1791,6

1645

0,06

-8,13

100

1939,5

1940,1

1793,5

0,03

-7,53

Mean Latency - 13 -> 31 (4 HOPS)
Taxa

CABA

RPC

OMNET

Erro RPC

Erro OMNET

10-80

54

54

56

0,00

3,70

90

103

103,5

107

0,49

3,88

100

252

252

253

0,00

0,40

7
Conforme podemos observar nos resultados
das simulacoes (Figura 4 e Tabela 2, o modelo RPC apresenta erro desprezvel em relacao
ao modelo CABA. O simulador OMNET++ tambem apresentou uma boa precisao, apresentando
erros menores que 6.
Nos testes de fluxos com concorrencia utilizamos uma abordagem de concorrencia interna.
Conforme podemos observar na Figura 3 o fluxo
do no 31 para o no 11 disputa o canal a East do
roteador 21, que transporta o fluxo do no 21 para
o no 12, representando uma concorrencia interna

ISBN 978-85-8001-069-5

Conclusao

Neste artigo apresentamos a modelagem de estrutura de comunicacao para SoCs utilizando redes
de Petri coloridas, temporizadas e hierarquicas.
O modelo apresentado possui precisao de ciclo e
apresentou resultados tpicos de avaliacao de estruturas de comunicacao em SoCs como tempo
de latencia de pacotes por fluxo. Toda a analise e injecao de trafego foram contempladas no
proprio modelo, o que facilitou a avaliacao e posterior mudanca de parametros de analise. O modelo foi validado atraves de uma implementacao

3327

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

com precisao de bit e ciclo em VHDL e SystemC
e com uma simulacao em OMNET++. De acordo
com os resultados o modelo apresentou um menor
esforco de implementacao, quando comparado a
implementacao do modelo CABA, uma precisao
excelente e um tempo de simulacao aproximadamente 2 vezes menor que modelos com precisao
similares. Os erros verificados no modelo RPC
podem ser considerados desprezveis quando comparado a implementacao em CABA. A precisao
do modelo foi semelhante antes e apos o tempo de
saturacao da rede, revelando o poder de analise
do modelo para situacoes de trafego intenso.
Devido ao espaco reduzido nao foi possvel
apresentar outras etapas de validacao do modelo,
como fluxos com diferentes saltos na rede e outras situacoes de contencao, como concorrencia externa por recursos da rede.
Como trabalhos futuros, estamos trabalhando
na geracao de novas metricas, como trafego aceito
e distribuicao de latencias, alem de modelos com
diferentes topologias e algoritmos_de_roteamento.
Como aplicacao do modelo estamos realizando simulacoes para estudar o efeito do tempo de servico do roteador no tempo de latencia medio e no
ponto de saturacao da rede.
Referencias
Ali, M., Welzl, M. and Zwicknagl, M. (2008).
Networks on chips Scalable interconnects
for future systems on chips, Circuits and
Systems for Communications, 2008. ECCSC
2008. 4th European Conference on, pp. 240
245.

perties and routing strategies, Computers 
Electrical Engineering 25(3) 155  168.
Guz, Z., Walter, I., Bolotin, E., Cidon, I., Ginosar, R. and Kolodny, A. (2007). Network delays and link capacities in application-specific
wormhole nocs, VLSI Design .
HNoCs (2012).
Hnocs
Modular opensource simulator for heterogeneous nocs,
httpwebee.technion.ac.ilmatricssoftware.html.
Ultimo acesso April, 13, 2012.
Jensen, K. and Kristensen, L. (2009). Coloured
Petri Nets Modelling and Validation of Concurrent Systems, Springer Berlin Heidelberg.
Kiasari, A., Rahmati, D., Sarbazi-Azad, H. and
Hessabi, S. (2008). A markovian performance
model for networks-on-chip, Parallel, Distributed and Network-Based Processing, 2008.
PDP 2008. 16th Euromicro Conference on,
pp. 157 164.
Marculescu, R., Ogras, U., Peh, L.-S., Jerger,
N. and Hoskote, Y. (2009). Outstanding
research problems in noc design System,
microarchitecture, and circuit perspectives,
Computer-Aided Design of Integrated Circuits and Systems, IEEE Transactions on
28(1) 3 21.
Moreno, E., Marcon, C., Calazans, N. and Moraes, F. (2011). Arbitration and routing impact on noc design, Rapid System Prototyping (RSP), 2011 22nd IEEE International
Symposium on, pp. 193 198.

Bazzaz, H. H., Sirjani, M., Khosravi, R. and
Taheri, S. (2009). Modeling networking issues
of network-on-chip a coloured petri nets approach, Proceedings of the 2nd International
Conference on Simulation Tools and Techniques, Simutools 09, pp. 2212210.

Pasricha, S. and Dutt, N. (2008). On-Chip Communication Architectures, System on Chip
Interconnect, Morgan Kaufmann.

Blume, H., von Sydow, T., Becker, D. and Noll,
T. G. (2007). Application of deterministic
and stochastic petri-nets for performance modeling of noc architectures, J. Syst. Archit.
53(8) 466476.

Varga,
A. (2012).
Omnet++ discrete
event
simulation
environment,
httpwww.omnetpp.org. Ultimo acesso
April, 13, 2012.

CPNTools (2012).
Cpn tools 3.2.2,
httpcpntools.org. Ultimo acesso April,
13, 2012.
Foroutan, S., Thonnart, Y., Hersemeule, R.
and Jerraya, A. (2010). A markov chain
based method for noc end-to-end latency
evaluation, Parallel Distributed Processing,
Workshops and Phd Forum (IPDPSW), 2010
IEEE International Symposium on, pp. 1 8.

Ullman, J. D. (1998). Elements of ML Programming, Prentice Hall.

Youhui, Z., Weimin, Z., Xiaoguo, D. and Siqing,
G. (2010). A performance analytical approach based on queuing model for network-onchip, Parallel Architectures, Algorithms and
Programming (PAAP), 2010 Third International Symposium on, pp. 354 359.
Yunus, S., Marsono, M. and Ibrahim, I. (2011).
Modeling router hotspots on network-onchip, Advanced Communication Technology
(ICACT), 2011 13th International Conference on, pp. 896 900.

Ghozati, S. and Wasserman, H. (1999). The k-ary
n-cube network modeling, topological pro-

ISBN 978-85-8001-069-5

3328