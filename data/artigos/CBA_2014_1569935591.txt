Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

ALGORITMO DE PROPAGAÇÃO WAVEFRONT ASSOCIADO AO GENÉTICO PARA
OTIMIZAÇÃO DE TRAJETÓRIAS
LUIS F. F. SOUZA, FELIPE C. T. CARVALHO, LENIR A. JÚNIOR, GABRIELA L. REIS, MÁRCIO F. S. BARROSO,
EDUARDO B.PEREIRA
Laboratório de Estudos em Controle e Modelagem, Departamento de Engenharia Elétrica , Universidade
federal de São João del-Rei
Caixa Postal 110, 36307-352, São João del-Rei, Minas Gerais, Brasil
E-mails lnandoffs@hotmail.com, felipecarvalho50@gmail.com,
lenirjr@yahoo.com.br, gabireis10@yahoo.com.br, barroso@ufsj.edu.br,
ebento@ufsj.edu.br
Abstract This article reports the summary of results of a project involving an autonomous robot applied to exploratory navigation and mapping of unknown environments. The mapping was accomplished by the integration of information captured by ultrasonic sensors and the robots compass associated with the Decomposition method in approximate Cells. In this way, the application of this technique to model the real environment resulted in a virtual model represented by a two-dimensional array. Furthermore, after constructing the map, in other words, the physical space representation, the purposed of this work was to optimize trajectories formed between the robots initial position to the target set by the user. Therefore, this work was also propose a case
study for the definition of optimization parameters. For this, in this project were used as reference techniques Wavefront Propagation Algorithm Chamfer method associated with the Genetic Algorithm to generate and optimize trajectories by means of an
objective function. Thus, this objective function evaluates each individual of the population according to displacement, number
of curves and iteration path solution generated. Finally, the point of greatest relevance of this work is the formulation of a method
to optimize trajectories.
Keywords Exploratory Navigation, Mapping Environments, Optimization of Trajectories, Approximate Cells, Wavefront Algorithm, Genetic Algorithm.
Resumo Este artigo apresenta a síntese dos resultados de um projeto envolvendo um robô_autônomo aplicado  navegação_exploratória, mapeamento_de_ambientes desconhecidos e otimização_de_trajetórias. O mapeamento foi realizado por meio da integração das informações captadas dos sensores_ultrassônicos e bússola do robô associado ao método de Decomposição em Células
Aproximadas. Neste sentido, a aplicação dessa técnica proporcionou modelar o ambiente real em um virtual representado por um
array bidimensional. Além disso, após a construção do mapa, ou seja, a representação do espaço físico, o objetivo deste trabalho
foi de otimizar trajetórias formadas entre a posição inicial do robô até a meta estipulada pelo usuário. Assim, nesse trabalho também foi proposto um estudo de caso para a definição dos parâmetros de otimização. Para isso, utilizaram-se como referência as
técnicas de Algoritmo de Propagação Wavefront método Chamfer associado com o Algoritmo Genético para gerar e otimizar trajetórias por meio de uma função objetivo. Dessa forma, essa função objetivo avalia cada indivíduo da população quanto ao deslocamento, número de curvas e iteração solução do trajeto gerado. Por fim, o ponto de maior relevância desse trabalho está na
formulação de um método para otimização_de_trajetórias.
Palavras-chave .

1

pria posição no ambiente, baseado no que se pode
perceber e no conhecimento prévio daquele. A segunda concerne  definição de um objetivo para onde
se deseja ir e a última é o planejamento a fim de
alcançá-lo. Diante desses desafios, determinar a
própria localização é uma capacidade básica para
executar qualquer tarefa de navegação. Assim, é
fundamental que o robô consiga determinar a posição
e orientação em que se encontra dentro do ambiente,
para que ele possa responder para onde vou?" e
planejar como chego ao meu destino?" e assim
cumprir as tarefas programadas (Wolf et al., 2009).
Neste contexto, segundo Velagic et al., (2006), o
planejamento_de_trajetórias (path planning) é um dos
pontos chave para a navegação de robôs autônomos.
Na literatura, esse planejamento de rotas é tradicionalmente dividido em duas categorias planejamento
local e global. Na primeira categoria, esses métodos
utilizam sistemas de visão embarcada, sensores_ultrassônicos e ópticos para percepção do ambiente.
Por outro lado, já no planejamento global é necessário o conhecimento prévio do ambiente. Desta forma,
uma ferramenta frequentemente utilizada para esse

Introdução

O século XXI chega com grandes avanços na
robótica que fazem com que ela se apresente como
algo do cotidiano nas vidas dessa geração. Assim, é
comum ver robôs_industriais que soldam, pintam e
movimentam grandes peças. Além disso, também é
possível citar os robôs que atuam em laboratórios
farmacêuticos, em salas de cirúrgicas ou nas atividades diárias de pessoas necessitadas de atenção especial. Ou em outros contextos, até robôs que procuram
e desativam minas, encontram sobreviventes em
zonas de desastres naturais e realizam tarefas agrícolas como fumigar e realizar a colheita (Secchi, 2012).
Entretanto, para os robôs conseguirem realizar
essas funções é necessário que o mesmo realize as
atividades de reconhecimento e de navegação do
ambiente no qual está inserido. Dessa forma, segundo Leonard e Durrant-Whyte (1991), o problema de
navegação pode ser sumarizado de maneira simples,
em três perguntas onde estou?, para onde vou? e
como chego ao meu destino?. A primeira se refere
ao problema de localização, que é definir a sua pró55

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

motores, seis sensores de toque, uma bússola e três
ultrassônicos. Nesse projeto, um microprocessador
teve a função de processar as informações referentes
ao mapeamento e o deslocamento do robô pelo ambiente. Já o outro ficou a cargo de computar o movimento vertical realizado nos sensores_ultrassônicos
conectados na plataforma superior móvel do robô.
Por outro lado, além desse movimento vertical, esse
robô também foi projetado para realizar o deslocamento horizontal do sensor ultrassônico conectado na
região frontal do protótipo. A seguir a Figura 1 exibe
a foto do robô mencionado.

tipo de planejamento é o Algoritmo de Propagação
Wavefront. Este algoritmo baseia-se na propagação
de ondas que representam a distância do robô a qualquer ponto do ambiente (Al-Jumaily and Leung,
2005 Amir and Iraji, 2009). Porém, em muitos casos
uma questão de grande relevância está associada na
otimização do planejamento_de_trajetórias, visando
economia de recursos. Nessa analise em específico
implica diretamente na redução do trajeto a ser percorrido, minimizando assim o tempo e a energia do
sistema para realizar a tarefa.
Dessa forma, dentre esses métodos de otimização, podem se destacar o Algoritmo Genético, na
qual é uma das mais difundidas e estudadas técnicas
de Computação Evolucionária (CE). A principal
vantagem da utilização dessa técnica está pela sua
flexibilidade, relativa simplicidade de implementação
e eficácia em realizar busca global em ambientes
adversos (Tanomaru, 1995). Os Algoritmos Genéticos (AG) foram inicialmente propostos por Holland
na década de 70 (Holland,1975) utilizando o conceito
Darwinista de evolução das espécies. Neste sentido,
esse algoritmo realiza uma busca por possíveis soluções dentro do espaço de procura. Por isso, dentre os
algoritmos_evolutivos, os Algoritmos Genéticos
surpreendem por encontrar soluções de problemas de
otimização extremamente complexos, com um custo
computacional relativamente baixo se comparado a
métodos de categoria por busca exaustiva. Além
disso, ele também apresenta uma particularidade
importante por ser extremamente adaptável a diversos problemas, sendo esta característica predominante para a sua vasta utilização (Goldberg, 1989).
Portanto, diante de todas essas questões citadas,
este trabalho apresenta a síntese dos resultados de um
projeto envolvendo um robô_autônomo capaz de
navegar e mapear ambientes desconhecidos. Esse
mapeamento é possível por meio da integração do
sistema odométrico aliado s informações captadas
de seus sensores_ultrassônicos e bússola referente ao
ambiente no qual se deseja mapear. Para isso, o objetivo específico desse estudo foi de aplicar técnicas de
reconhecimento de ambientes integradas a identificação e otimização das trajetórias, utilizando respectivamente os métodos de Decomposição em Células,
Algoritmo de Propagação Wavefront método Chamfer e Algoritmos Genéticos. Desta forma, esse trabalho visa otimizar trajetos a serem percorridos pelo
robô. Neste caso, tendo como restrição que o mesmo
consiga descrever o seu percurso evitando colisões
com os obstáculos presentes no espaço físico.
2

Figura 1. Robô construído.

Assim, de posse do robô foi possível definir o
cenário ao qual ele seria inserido, sabendo-se previamente de suas limitações. Assim, o cenário de pesquisa foi definido como sendo uma arena construída
de madeira MDF com espessura de 20 mm, na cor
branca e com área de 2,0 m x 2,2 m. Posteriormente,
nesta arena foi colada fita isolante, sendo esta com
largura de 19 mm, para formar uma matriz de oito
linhas e oito colunas. Dessa maneira, cada elemento
desta matriz teve a forma de um quadrado de lado de
22 centímetros, sendo esse tamanho definido diante
das dimensões aproximadas do robô. Já os obstáculos
foram construídos de isopor tendo o formato de um
cubo de arestas de 22 centímetros. Para exemplificar,
a Figura 2 exibe o cenário montado.

Propósito

O robô projetado neste trabalho foi montado utilizando peças do kit LEGO modelo Mindistorms.
Tais kits são compostos de blocos com unidades de
processamento, partes móveis e de instrumentação
(Ferrari et al., 2002).
Desta forma, na construção desse robô foram
utilizados dois microprocessadores, seis servo-

Figura 2. Cenário com os obstáculos.

3

Decomposição em células

Conforme Ottoni (2000), o método de decomposição em células pode ser dividido em exato e apro56

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

ximado. O método exato divide o espaço físico em
um conjunto de células cuja união cobre exatamente
o espaço livre. Por outro lado, o método aproximado
divide o espaço físico em um conjunto de células de
forma predefinida cuja união está estritamente contida no espaço livre.
Nota-se que no método aproximado, todas as células possuem a mesma forma, a qual é bastante
simples e definida a priori. Como consequência desta
característica, tem-se que em geral não é possível
modelar o ambiente na forma exata como ele está
definido, sendo necessário que algumas aproximações sejam feitas. Devido a esta característica, o
método aproximado de decomposição em células é
dito não completo, ao contrário do método exato.
Contudo, a principal vantagem do método aproximado sobre o exato é a de fazer a decomposição do
ambiente em células por meio da iteração da mesma
computação, que será simples por causa da forma das
células. Assim, o método aproximado geralmente dá
origem a sistemas mais simples de planejamento de
trajetórias do que os que utilizam o método exato. E
por isso, o método aproximado tem sido mais utilizado na prática (Latombe, 1991).
Diante dos argumentos apresentados acima, esse
trabalho foi desenvolvido utilizando o método de
decomposição em células aproximado. Dessa forma,
foi possível propor a modelagem do ambiente real
em um virtual formado por uma array bidimensional
no software LabVIEW.

maneira, no próximo passo de iteração, ele passará a
ter a resposta daquele elemento de menor valor em
sua vizinhança acrescido de uma unidade. Como
exemplo, supondo que o elemento array(i, j +1) seja
o valor mínimo dentro do sub-array, então é atribuído  posição array(i, j) o valor array(i, j + 1) + 1,
para a execução desse método. Por fim, este processo
se repete até completar todo o array bidimensional.
Vale mencionar que esse Algoritmo de Propagação Wavefront pode ser dividido em outros dois
métodos, sendo na literatura chamados de Manhattan
e Chamfer. O primeiro analisa o deslocamento somente nas células adjacentes ao elemento do array
em questão. Já o método Chamfer consiste por analisar também as células das diagonais. Neste contexto,
é possível encontrar um caminho mais direto até o
objetivo, porém, ele pode não ser compatível com as
dimensões do robô por determinar caminhos que, em
geral, passam muito próximos das extremidades dos
obstáculos (Al-Jumaily and Leung, 2005). Portanto,
neste caso, optou-se por realizar o planejamento de
trajetórias tendo como referência no método de
Chamfer. Entretanto, para sanar esse problema, foi
estipulada a restrição do robô poder se deslocar na
diagonal apenas se não houver obstáculos adjacentes
a sua posição atual no ambiente. Por exemplo, para o
robô se deslocar da posição (i, j) para a posição (i+1,
j+1) é necessário que a posições (i, j+1) e (i+1, j)
sejam espaços livres.
5 Algoritmo Genético

4 Algoritmo de Propagação Wavefront
Algoritmos Genéticos (AGs) são métodos_computacionais de busca baseados nos mecanismos de evolução natural e na genética. Em AGs, uma população de
possíveis soluções para o problema, evolui após algumas gerações do método, tal que estas são limitadas
pelo número máximo de gerações. Assim, conforme a
aptidão ou qualidade inerente a cada indivíduo desta
população ocorre a seleção dos indivíduos mais aptos a
sofrerem reprodução. Já com o auxílio dos operadores
genéticos de cruzamento e de mutação estes indivíduos
transferirão sua carga genética s gerações futuras.

Para a implementação desse trabalho foi utilizado o Algoritmo de Propagação Wavefront por ser um
dos principais métodos para planejamento de rotas
em mapas discretos (Murray and Jennings, 1997), e
também por permitir uma busca sistemática de possíveis trajetórias (LaValle, 2006). Portanto, neste caso,
pelo motivo da modelagem do ambiente ter sido
realizada pela técnica de decomposição em células
aproximadas, esse algoritmo se enquadrou e atendeu
as restrições impostas do projeto. Para isso, é importante salientar que os obstáculos dispostos no ambiente real ao ser modelado para a interface virtual são
tratados como sendo formado por células inteiras,
mesmo eles ocupando total ou parcialmente cada
célula.
Segundo Arantes et al., (2010), a execução do
Algoritmo de Propagação Wavefront começa desde o
primeiro elemento do array bidimensional, que representa o mapa do ambiente, e avalia para cada uma
de suas células e sua respectiva vizinhança. Neste
caso, esse array também é chamado de array(i, j), o
qual possui a função de armazenar as informações
referentes ao ambiente real. Já a vizinhança pode ser
considerada como sendo um sub-array de dimensões
33 dentro do array bidimensional. Nesse sub-array,
busca-se o menor valor dos elementos. Então, se o
elemento central array(i, j) do sub-array é diferente
de obstáculos, posição inicial do robô e meta. Dessa

Dessa forma, essas análises probabilísticas são concebidas a partir de metáforas biológicas, de modo
que há uma tendência de que na média, os indivíduos
representem soluções cada vez melhores  medida
que o processo evolutivo continua (Tanomaru, 1995).
Assim, esses algoritmos estão menos propensos
a uma estagnação, em máximos e mínimos locais, do
que algoritmos de busca tradicionais. Além disso, a
utilização dessa população de soluções torna a busca
dos Algoritmos Genéticos paralela intrínseca e extrinsecamente. Isto é, a possibilidade de otimizar os
vários parâmetros ao mesmo tempo e a habilidade de
avaliar várias soluções simultaneamente (Takahashi
and Martins, 2004).
Diante desses fatores apresentados foi utilizado
na fase de otimização_de_trajetórias desse trabalho o
Algoritmo Genético mono-objetivo de codificação
binária. Dessa forma, cada parâmetro a ser otimizado

57

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

esta interface virtual também foi possível visualizar o
trajeto percorrido pelo robô, representado pelo valor
5 no Array Deslocamento(i, j), sendo este situado do
lado inferior direito da Figura 3. Já o objetivo da
implementação deste array foi de modo ao programa
gravar o deslocamento realizado nessa etapa com o
intuito de evitar que o robô retorne a passar pela
mesma posição já percorrida. Isto é, que tenha prioridade em se deslocar em regiões que ainda não foram navegáveis, proporcionando dessa maneira o
mapeamento mais eficiente em ambientes mais elaborados.

neste problema consistiu nas características dos indivíduos, tendo a população fixada em 10 indivíduos.
Nesse caso, os operadores genéticos de cruzamento
foram do tipo uniforme com probabilidade de 80,
já o índice para a mutação foi definido sendo igual a
3. Por fim, a geração da população inicial foi obtida de forma aleatória.
6 Resultados
Os resultados desse trabalho serão divididos em
três tópicos, sendo estes mapeamento_de_ambientes,
trajeto Wavefront e otimização das trajetórias. A
seguir serão detalhados cada um desses itens.
6.1 Mapeamento de ambientes
Nessa etapa do trabalho todo o desenvolvimento
da programação do robô foi implementada utilizando
o software LabVIEW. Dessa forma, por meio desse
software e do método de Decomposição em Células
Aproximadas foi possível desenvolver um programa
para o robô realizar o mapeamento_de_ambientes.
Neste caso, primeiramente, foi necessário conectar o microprocessador responsável por mapear o
ambiente via bluetooth com o computador. Com isso,
o computador pode receber e processar os dados para
gerar a interface virtual mostrada na Figura 3. Assim,
o usuário poderá ter acesso ao mapeamento realizado
pelo robô por meio do monitoramento do Array Mapeamento(i, j), sendo este composto por dez linhas e
dez colunas. Esses parâmetros foram definidos com
estas dimensões porque a região que se deseja mapear foi modelada por uma matriz de oito linhas e oito
colunas. Já para delimitar as extremidades desse
array, ele foi completado com as outras duas linhas e
duas colunas restantes. Assim, ao iniciar o mapeamento, essas linhas e colunas das extremidades são
preenchidas com o valor 1, já as demais são todas
completadas com o valor 0. Os valores 0 e 1 representam, respectivamente, célula livre e presença de
obstáculos. Desta forma, foi utilizado o valor 1 na
periferia do array para delimitar o ambiente real e,
desta maneira, evitar que o robô saia do ambiente no
qual se deseja mapear.
Já analisando do lado esquerdo da interface virtual da Figura 3 pode-se observar a posição inicial do
robô no ambiente, sendo esta localizada na linha 1 e
coluna 2. Logo abaixo é possível visualizar a orientação inicial inclinado para o leste. Do outro lado nesta
mesma interface visual exibe as informações atuais
referentes ao mapeamento final, nesse caso, o robô
chegou até a posição (1,1) com inclinação leste.
Assim, para a conclusão dessa etapa de mapeamento,
a cada momento, o robô se desloca apenas pelas
células adjacentes, sendo uma célula por vez e coleta
as informações referentes ao ambiente proposto.
Nesse caso, o robô não pode se deslocar da posição
(i, j) para a posição (i+1, j+1), ou seja, não há deslocamento pelas diagonais da célula. Assim, o percurso
deslocado pelo robô foi de 5,865 metros. Aliás, com

Figura 3. Interface virtual para o usuário representando o mapeamento obtido.

Além disso, vale mencionar que para o robô
executar o seu trajeto nessa fase de mapeamento, foi
definido as seguintes ordens de prioridade, sendo
estas respectivamente deslocar para frente, girar para
direita e virar para esquerda. Entretanto, caso os
trajetos a frente e nas laterais estejam bloqueados ou
já foram percorridos, então o robô irá apenas girar
para o lado esquerdo sem mudar de posição. Isto é,
continuar na mesma linha e coluna, para desta forma
tentar encontrar uma possível trajetória para se locomover e continuar mapeando o ambiente.
Ao final do processo, como pode ser observado
por meio do Array Mapeamento(i, j), localizado do
lado superior direito da Figura 3, é possível perceber
que o mapa construído pelo robô foi condizente com
o ambiente real mostrado na Figura 2. Isso pode ser
explicado, porque nas posições referentes aos obstáculos na arena, essas foram preenchidas por seu valor
representativo, sendo este igual a 1 na interface visual do Array Mapeamento da Figura 3. Por fim, na
parte inferior esquerda dessa mesma figura exibe as
informações e os valores mínimos medidos em centímetros obtidos dos três sensores_ultrassônicos do
robô referente  posição atual do robô no ambiente.
Esses sensores da LEGO modelo Mindstorms coletam informações que variam de 5 a 255 centímetros e
têm precisão de aproximadamente três centímetros.

58

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

iterações totais e convergentes, essas serão explicadas com mais detalhes no item 6.3, uma vez que para
a execução do Algoritmo de Propagação Wavefront
de origem não se utiliza mais que uma iteração para
obter a resposta.

6.2 Trajeto Wavefront
Nesta etapa utilizou-se o Algoritmo de Propagação Wavefront método Chamfer para obter a formulação das possíveis trajetórias. Para isso, na sua implementação no software LabVIEW, além do conhecimento prévio do ambiente, sendo este obtido no
item 6.1, também é necessário que o usuário informe
a meta a ser alcançada pelo robô. Por outro lado,
geralmente a posição de referência ou inicial do robô
é considerada como sendo a atual do mesmo no ambiente, porém nesta implementação também há a
possibilidade dela ser escolhida pelo usuário. Neste
caso, a posição inicial do robô e a meta foram escolhidas sendo, respectivamente, as posições (1,1) e
(8,8). Além disso, nesse caso, a inclinação inicial do
robô foi leste.
Já para a aplicação desse método, primeiramente, foi necessário satisfazer as condições impostas na
expressão (1) (Arantes et al., 2010). Para isso, foram
utilizados as seguintes variáveis e valores para representar os diferentes elementos do ambiente, sendo
estes Ob 
para indicar obstáculos e delimitação do ambiente R 
para representar o
robô e M  1 para simbolizar a meta ou o objetivo.
Para facilitar o entendimento, no item 6.3 desse trabalho será explicado com mais detalhes o motivo da
utilização desses valores.
M  L < R < Ob

Figura 4. Interface virtual para o usuário do algoritmo Wavefront
método Chamfer.

6.3 Otimização das trajetórias
Nessa fase do projeto foi implementado um programa de otimização_de_trajetórias tendo como referência o Algoritmo de Propagação Wavefront método
Chamfer nos softwares LabVIEW e Matlab. Já a
associação dessa técnica com o Algoritmo Genético
foi montado apenas no Matlab. Assim, o LabVIEW
foi usado para controlar o robô e fornecer uma interface visual ao usuário, já o outro software foi utilizado para gerar os parâmetros para a otimização dos
trajetos.
Dessa maneira, esse programa foi idealizado de
forma que a cada iteração computacional, o Array
Trajetórias(i, j), permite retornar um possível trajeto.
Porém, diante dessa nova implementação, agora as
trajetórias encontradas poderão convergir ou não até
a meta.
Para o trajeto convergente, o percurso obtido no
Array Trajetórias(i, j), representado pelo deslocamento do valor
, será redefinido multiplicando
os elementos do Array Wavefront(i, j), do item 6.2,
que traçam e formam o trajeto por um fator de convergência, nomeado Fc. Posteriormente, a resposta
obtida dessa operação será somada aos valores do
Array Auxiliar(i, j). Vale ressaltar, que ao início esse
array é preenchido com os valores do Array Wavefront(i, j), já após o termino de cada iteração, esse
Array Auxiliar(i, j) é redefinido sendo igual ao Array
Trajetórias(i, j) da iteração anterior. A seguir essa
abordagem ser pode representada por meio da equação (2), sendo esta fundamentada de forma empírica
originada nesse trabalho. Nesse caso, T(i, j), W(i, j) e
A(i, j) representam respectivamente o Array Trajetórias(i, j), Wavefront(i, j) e Auxiliar(i, j).

(1)

Já o espaço físico livre, indicado pela variável L,
foi usado o método Wavefront para redefinir o seu
preenchimento. Dessa forma, é possível observar
esse preenchimento por meio do Array Wavefront(i,
j) no lado superior esquerdo da Figura 4. De posse
desse array, foi possível obter um trajeto entre a
posição inicial até a meta, deslocando o valor
,
referente  posição do robô, pelos valores de mínimos das vizinhanças do sub-array 33 dentro do
Array Chamfer(i, j), sendo inicialmente este array
preenchido com os valores do Array Wavefrront(i, j).
Vale ressaltar que a posição central (2,2) do subarray assume, a cada momento durante o deslocamento, a posição atual do robô virtual no Array
Chamfer(i, j). Desta forma, por meio deste array
localizado no lado inferior esquerdo da Figura 4 é
possível visualizar o trajeto obtido pela utilização do
Algoritmo de Propagação Wavefront método Chamfer.
Por fim, além das informações referentes  meta
e  posição inicial do robô no ambiente, também é
possível observar do lado direito da Figura 4, que na
primeira iteração desse método obteve-se a trajetória
solução. Neste caso, a distância calculada entre a
posição inicial do robô até a meta neste percurso foi
de 3,123 metros, contendo neste trajeto a presença de
quatro curvas, sendo duas de 90 e duas de 45. Vale
ressaltar, que inicialmente a inclinação do robô é
leste, por isso, foi necessário atribuir mais uma curva
de 90 graus em seu trajeto, resultando nas quatro
curvas totais. Por fim, com relação s informações de

T(i, j)  W(i, j)*Fc + A(i, j)

59

(2)

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

Nessa formulação, vale mencionar que ao final
de cada iteração os valores referentes  meta e posição inicial do robô poderão ser redefinidos. Assim, é
necessário que após cada iteração esses valores sejam
atualizados para os seus valores iniciais para atender
a expressão (1) para a validação do método.
Já para obter os melhores parâmetros, sendo esses Fc, Fd, Fpl e Fpd, foi utilizado o Algoritmo Genético. Dessa forma, como forma de avaliação desses
indivíduos gerados em cada população, foi definida a
função custo ou objetivo, exibida na equação (3).

Assim, diante das possíveis trajetórias convergentes, o programa irá realizar uma comparação
atribuindo como referência o melhor deslocamento
até o momento, sendo o percurso inicial obtido pelo
Algoritmo de Propagação Wavefront. Já a variável
que armazena a informação referente ao melhor deslocamento, ela se inicia com o valor igual a 10. Esse
valor foi definido porque nesse ambiente formado
pela matriz bidimensional de oito linhas e oito colunas, o pior deslocamento será percorrendo 38 células
do Array Trajetórias(i, j). Assim, multiplicando 38
elementos pelo valor de 0,255, sendo este o tamanho
real em metros de cada célula da matriz, resulta no
valor 9,69. Por isso, foi adotado inicialmente o valor
igual a 10 para representar o melhor deslocamento,
uma vez que qualquer percurso em um trajeto convergente obtido será menor do que este valor e por
consequência atualizará o valor dessa variável. Já o
melhor número de curvas foi definido inicialmente
sendo igual a 38, ou seja, analisando também o pior
caso. Portanto, caso o percurso atual do Array Trajetórias(i, j) tiver o deslocamento menor, ou se igual,
mas sendo este com menor presença de curvas que o
melhor até o momento, então esse novo trajeto será
armazenado no Array Otimização(i, j) e as variáveis
que representam o melhor deslocamento e presença
de curvas serão atualizados.
Por outro lado, caso o percurso exceder o melhor
deslocamento até o momento e não chegar até a meta. Assim, como forma de penalizar este trajeto divergente, repetirá de forma análoga ao processo
anterior convergente, porém, dessa vez o trajeto
obtido será multiplicado por um fator de divergência,
Fd. O intuito dessa remodelagem é para que nas
próximas iterações o programa encontre trajetos
diferentes dos adquiridos até o momento.
Além disso, como forma de tentar gerar trajetos
mais retilíneos, ou seja, evitar curvas no percurso,
também foi implementado nesse trabalho o fator de
preferência lateral, Fpl, e diagonal, Fpd. Dessa forma, na etapa para selecionar a direção do trajeto a ser
formado, considerou-se o sub-array 3x3 com os seus
valores preenchidos por meio do Array Trajetórias(i,
j). Assim, analisando como referência a posição
central (2,2) do sub-array referente a posição atual
do robô virtual no Array Trajetórias(i, j). Nesse caso,
a intenção é de subtrair na posição sentido desse
sub-array pelo fator de preferência lateral ou diagonal, sendo esta posição sentido correspondente a
direção anterior do robô virtual. Para facilitar o entendimento, considere que a direção anterior do trajeto que está se formando esteja em (i, j+1), ou seja,
leste. Então neste caso, será subtraído o valor do subarray na posição (i, j+1) pelo fator de preferência
lateral. Com isso, essa posição referente a direção
anterior será atualizada para um valor menor, já que
o objetivo desse método é de se deslocar pelos pontos de mínimos do sub-array 3x3. Portanto, como
análises dos possíveis resultados, esse método tenderá a fornecer trajetos mais retilíneos quanto for possível, sendo esse propósito ideal para essa aplicação.

Objetivo  D*0,75 + C*0,2 + I*0,05

(3)

As variáveis D, C e I representam respectivamente o menor deslocamento, número de curvas do
percurso e a iteração solução do programa. Assim,
por meio da equação (3) é possível perceber que ela
avalia com prioridades os trajetos com o melhor
deslocamento. Já em segundo plano, 20 dessa
equação analisa o número de curvas e por fim 5
foram destinados para avaliar a iteração solução.
Nesse caso, esta equação foi fundamentada com
esses parâmetros de forma empírica e originada nesse
trabalho para atender as prioridades comentadas.
Neste caso, toda essa rotina desenvolvida para
gerar possíveis as trajetórias se repete até que o número de iterações convergentes seja igual a 5, ou
caso as iterações totais, ou seja, convergentes mais
divergentes, forem igual a 25.
Já para a determinação do valor que representa a
posição do robô, uma vez que o espaço livre está em
constante mudança no Array Trajetórias(i, j). Nesse
trabalho foi proposta a seguinte equação (4), na qual
é responsável por modificar e atualizar esse array.
X(k+1)  C*Fa + X(k)

0  k  25

(4)

Analisando a equação (4), X armazena o valor
atual do Array Trajetórias(i, j), k é o número de iterações, nesse caso, variando entre o intervalo de 1 ao
número de iterações totais, Fa é o fator de convergência ou divergência e C é uma constante dependente do método de Wavefront associado ao ambiente proposto. Dessa forma, para a análise mensurável
do valor da posição do robô foi considerado o pior
caso, isto é, o máximo valor possível de X(25), já
que 25 representa o número máximo de iterações.
Além disso, outra condição analisada foi avaliando o
pior mapa ou ambiente de estudo formado por 10
linhas e 10 colunas. Nesse caso, o maior valor obtido
no preenchimento pelo método de Wavefront foi
igual a 32, como ilustra a Figura 5. Assim, implicará
nas seguintes condições X(0)  C  32.
Já as limitações dos fatores de convergência, divergência, preferência lateral e diagonal a serem
otimizados com o uso do Algoritmo Genético foram
definidos em um intervalo de 0 a 10. Assim, o pior
caso será considerando Fa  10. De posse de todos
esses dados, é possível concluir que X(25) resultará
no valor 8032. Portanto, para obedecer a expressão

60

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

45. Por fim, nesse método obteve duas iterações que
convergiram até a meta em um total de 25, resultando assim, na função objetivo com o valor de 2,8922.

(1) é necessário que o valor referente  posição do
robô seja maior que X(25), nesse caso ele foi definido sendo
. Assim, nesta mesma análise, o
valor correspondente ao obstáculo foi escolhido
sendo igual a
, já que obrigatoriamente esse
valor tem que ser maior que a posição do robô.

Ob
Ob
Ob
Ob
Ob
Ob
Ob
Ob
Ob
Ob

Ob
32
Ob
10
10
11
12
13
14
Ob

Ob
31
Ob
9
Ob
Ob
Ob
Ob
14
Ob

Ob
30
Ob
8
Ob
1
2
Ob
15
Ob

Ob
29
Ob
7
Ob
Ob
2
Ob
16
Ob

Ob
28
Ob
6
Ob
Ob
3
Ob
17
Ob

Ob
27
Ob
6
5
4
4
Ob
18
Ob

7 Discussões

Ob Ob Ob
26 26 Ob
Ob 25 Ob
Ob 24 Ob
Ob 23 Ob
Ob 22 Ob
Ob 21 Ob
Ob 20 Ob
19 20 Ob
Ob Ob Ob

Analisando e comparando os resultados obtidos,
tendo como referência o algoritmo Wavefront método Chamfer, foi possível perceber que houve uma
contribuição desse trabalho para a formulação e otimização_de_trajetórias. Isso pode ser explicado porque analisando o mapa proposto nesse trabalho, embora os deslocamentos dos dois trajetos apresentem a
mesma dimensão, o trajeto otimizado possui a metade de curvas que o do método tradicional. Neste
caso, essa diferença é de grande relevância, uma vez
que o robô gasta mais tempo para girar 90 quando
comparado a se deslocar para frente. Dessa forma,
podem-se associar fatores importantes, como menor
consumo_de_energia e tempo na locomoção do trajeto. Além disso, outro fator importante é o tempo
relativamente baixo de processamento para obter a
melhor solução do Algoritmo Genético. Isso porque
o tempo necessário para obter a resposta foi de
7,169216 segundos.
Já um ponto negativo, foi o alto número de iterações divergentes, ou seja, 23 em um total de 25.
Nesse caso, essa característica já era esperada, uma
vez que nessa abordagem se o deslocamento atual for
maior que o melhor até o momento, esse é considerado como um trajeto divergente. Além disso, nesse
método após obter o melhor trajeto, só poderá computar mais uma nova iteração convergente se esse
tiver o mesmo deslocamento do melhor.
Por fim, vale ressaltar que para mapas considerados fáceis, ou seja, ambientes sem ou com poucos
obstáculos a utilização do Algoritmo de Genético
nesse trabalho já converge nas primeiras gerações.
Isso é possível, porque nesses casos com valores
diferentes dos fatores, Fc, Fd, Fpl e Fpd é possível
obter o mínimo da função custo de avaliação. Porém,
para mapas mais elaborados a convergência da função objetivo fica próxima de 100 gerações. Vale
ressaltar também que para alguns casos e dependendo da aplicação é recomendável aumentar o número
de gerações para obter melhores respostas.

Figura 5. Representação do pior mapa preenchido pelo método de
Wavefront.

Já para a conclusão desse trabalho, todo esse
procedimento se repete durante 100 gerações ou até
que a função custo se estabilize em um período de no
mínimo 10 gerações com oscilações da função objetivo em torno de 1. Assim, para esse ambiente
proposto, foi possível obter a resposta dos parâmetros otimizados na geração 45 por convergência.
Dessa forma, os parâmetros obtidos foram Fc 
0,9917, Fd  0,0929, Fpl  0,7468 e Fpd  0,8094,
sendo o tempo de processamento de 7,169216 segundos, em um computador Intel Core 2 Quad
CPU Q9400 com 4GB de memória Ram, clock de
2,66 GHz e sistema operacional de 64 Bits.

8 Conclusão
Tendo em vista todos os resultados obtidos, a
principal contribuição desse trabalho está associada
em apresentar uma nova abordagem para a formulação e otimização_de_trajetórias em mapas discretos.
Nesta análise, por meio da implementação dos Algoritmos de Propagação Wavefront associado ao Genético foi possível obter o melhor trajeto para o mapa
em análise nesse trabalho. Assim, vale ressaltar que
para novos ambientes, os parâmetros otimizados pelo
Algoritmo Genético, Fc, Fd, Fpl e Fpd podem variar
visando resultar como reposta o trajeto otimizado.

Figura 6. Interface virtual para o usuário da otimização de
trajetórias.

Ao final da execução do programa é possível observar o trajeto gerado por meio do Array Otimização(i, j) localizado no lado inferior esquerdo da Figura 6. Já ao outro lado dessa mesma figura, pode-se
visualizar que na terceira iteração desse algoritmo foi
obtido o trajeto otimizado. Neste caso, esse percurso
encontrado teve o deslocamento de 3,123 metros,
contendo a presença de duas curvas, sendo essas de

61

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

to para um robô Autônomo Estratégia Baseada
em Autômatos Celulares e no Algoritmo Wavefront. XVIII Congresso Brasileiro de Automática, Bonito, MS, Brasil.
Carvalho, F.C.T. and Barroso, M. F. S. (2013).
Identificação e sintonia de um Controlado PID
de Posição de um Manipulador Robótico com
Quatro Graus de Liberdade Utilizando
Algoritmo Genetico. XI Congresso de Procução
Científica da UFSJ, São João del-Rei, MG,
Brasil.
Ferrari, M. Ferrari, G. and Hempel, R. (2002).
Building Robots With Lego Mindstorms. United
States of America Syngress Publishing pp.
279-310.
Goldberg, D. E. (1989). Genetic algorithms in search
optimization and machine learning. Reading,
Massachusets Addison-Wesley.
Holland, J. (1975).Adaptation in natural and artificial
systems, Ann Arbor, Michigan University of
Michigan Press.
Latombe, J. C. (1991). Robot Motion Planning. Boston, United States of America 2nd edition,
Kluwer Academic Publishers.
LaValle, S. M. (2006). Planning Algorithms, Cambridge University Press. Disponível em
httpplanning.cs.uiuc.edu.
Leonard, J. J. and Durrant-Whyte, H. F. (1991).
Mobile robot localization by tracking geometric
beacons, IEEE Transactions on Robotics and
Automation 7 376-382.
Murray, D. and Jennings, C. (1997). Stereo Vision
Based Mapping and Navigation for Mobile Robots, Proceedings of the 1997 IEEE Conference
on Robotics and Automation.
Ottoni, G. L. (2000). Planejamento de Trajetórias
para Robôs Móveis em Ambientes Desconhecidos. In XIII  Congresso Brasileiro de Automática. Florianópolis, SC, Brasil, p. 22392244.
Secchi, H. A. (2012). Uma Introdução aos Robôs
Móveis. Instituto de Automática  INAUT.
Universidade Nacional de San Juan  UNSJ 
Argentina.
Takahashi, R. H. C. and Martins, F. V. C. (2004).
Avaliação e Interpretação do Operador mAG no
Algoritmo Genético Real-polarizado. XXXVI
Simpósio Brasileiro de Pesquisa Operacional,
São João del-Rei, MG, Brasil.
Tanomaru, J. (1995). Motivação, Fundamentos e
aplicações de Algoritmos Genéticos, II
Congresso Brasileiro de Redes Neurais - III
Escola de Redes Neurais.
Velagic, J., Lacevic, B. and Perunicic, B. (2006). A
3-level Autonomous Mobile Robot Navigation
System Designed by Using ReasoningSearch
Approaches, Robotics and Autonomous Systems
54 9891004.
Wolf, D. F., do Valle Simões, E., Osório, F. S. and
Junior, O. T. (2009). Robótica móvel inteligente
Da simulação ás aplicações no mundo real,
XXIX Congresso da SBC. Jornada de
Atualização em Informática.

Desta forma, essa análise possibilita obter percursos
iguais ou melhores quando comparado  técnica de
origem do Algoritmo de Propagação Wavefront método Chamfer.
Esse trabalho também apresentou que é possível
desenvolver um robô_móvel e autônomo integrado ao
sistema de mapeamento e navegação_exploratória,
podendo este ser utilização em tempo_real. Neste
sentido, analisando o método de Decomposição em
Células Aproximadas, é possível perceber que os
resultados obtidos foram satisfatórios, uma vez que o
ambiente real foi mapeado de forma coerente. Vale
mencionar também que as dimensões do ambiente
mapeado contribuíram para se obter esses resultados,
sendo a área mapeada com dimensões menores que o
alcance máximo dos sensores utilizados. Por outro
lado, a utilização desse método para mapeamento de
ambientes resulta na somatória do erro odométrico de
posição do robô, podendo este afetar no ambiente
mapeado. Assim, como forma de solucionar ou minimizar esse problema, a intenção será de implementar técnicas de controle nos atuadores do robô.
Por fim, para trabalhos futuros, pretende-se propor a continuação desse trabalho. Nesse caso, o objetivo será de otimizar os parâmetros Fc, Fd, Fpl e Fpd
analisando um estudo para o caso geral. Ou seja,
obter os melhores parâmetros fixos desse método
proposto para diversos ambientes. Além disso, uma
nova abordagem consiste na otimização_de_trajetórias
utilizando dessa vez apenas a técnica de Algoritmos
Genéticos. Nessa nova análise, cada indivíduo representará um trajeto formado entre a posição inicial do
robô até a meta. Assim, a intenção dessa nova pesquisa será de comparar esses métodos tendo como
parâmetros de avaliação o melhor deslocamento,
número de curvas e o tempo de processamento para a
solução do mapa. Portanto, o intuito é de melhorar
ainda mais os resultados obtidos nesse trabalho.
Agradecimentos
 Fundação de Amparo a Pesquisa do Estado de
Minas Gerais (FAPEMIG), ao CNPq e  CAPES
pelo apoio financeiro,  Universidade Federal de São
João del-Rei (UFSJ) pelo apoio logístico e infraestrutura física, e aos amigos do Grupo de Controle e
Modelagem  GCOM.
Referências Bibliográficas
Al-Jumaily, A. and Leung, C. (2005). Wavefront
Propagation and Fuzzy Based Autonomous Navigation, International Journal of Advanced Robotic Systems 2(2) 093102.
Amir and Iraji, R. (2009). Robot Path Planning Using
Wavefront Approach with Wallfollowing, 2nd
IEEE International Conference on Computer
Science and Information Technology 0 417 420.
Arantes, J. M. O., Abdalla Júnior M. A. and Nepomuceno, E. G. (2010). Navegação e Mapeamen-

62