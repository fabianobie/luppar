Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

CONTROLE DE UM VEÍCULO QUADRIRROTOR USANDO UM SISTEMA DE CAPTURA DE
MOVIMENTOS
LEANDRO L. GOMES, LUCAS LEAL, TIAGO ROUX OLIVEIRA, JOSÉ PAULO V. S. DA CUNHA
Departamento de Eletrônica e Telecomunicações, Faculdade de Engenharia
Universidade do Estado do Rio de Janeiro
Rua São Francisco Xavier 524, sala 5001E  20550-900
E-mails leandrolgms@gmail.com, lupleal@gmail.com, tiagoroux@uerj.br, jpaulo@ieee.org

Abstract The use of unmanned aerial vehicles (UAVs) on academic research has been increasing due, mainly, to their low
cost. This project aims to develop an algorithm to control an unmanned aerial vehicle by visual servoing using a motion capture
system as a sensor. By using the quadcopter AR.Drone and the Vicon System as a sensor, an algorithm has been developed,
which integrates these platforms to generate the control actions for solving problems involving robotics, visual servoing and control. Based on the target tracking problem, where the goal is to make the vehicle to follow a moving target, a Proportional Derivative control was implemented in discrete time, where the error signal is the difference between the target position and the vehicle position, measured by the Vicon System. Experimental results illustrate the performance of this control system.
Keywords Quadcopter, Visual servoing, PD Control, Motion capture system, UAV.
Resumo O uso de veículos_aéreos_não_tripulados (VANTs) como base em pesquisas acadêmicas vem aumentando gradativamente devido, principalmente ao seu baixo_custo de implementação. Este projeto visa o desenvolvimento de um algoritmo de
controle de um veículo aéreo não tripulado por servovisão, utilizando um sistema_de_captura_de_movimentos como sensor. Utilizando o quadricóptero AR.Drone como veículo e o sistema de captura Vicon, foi desenvolvido um algoritmo que integra essas
duas plataformas a fim de gerar ações de controle para a resolução de problemas em servovisão robótica e controle. Baseando-se
no problema de rastreamento de alvo, onde o objetivo é fazer o veículo seguir um alvo móvel, foi implementado um controle
Proporcional-Derivativo (PD) em tempo_discreto, no qual o sinal de erro é a diferença entre a posição do alvo e a do veículo, obtidas pelo sistema Vicon. Resultados experimentais ilustram o desempenho desse sistema_de_controle.
Palavras-chave .

1

exemplo é o trabalho de (Krajník, et al., 2011), que
desenvolveram uma plataforma de pesquisa em robótica. Outros trabalhos também se destacam em áreas
como navegação_autônoma visual com desvio de
obstáculo (Eresen, et al., 2012) e rastreamento_visual
por pontos de fuga (Gomez-Balderas, et al., 2012).
No Instituto Federal de Tecnologia de Zurique, o
grupo de pesquisa do Professor Raffaello DAndrea
vem desenvolvendo diversas aplicações usando veículos quadrirrotores. A Flying Machine Arena com
dimensões de 10 m x 10 m x 10 m e mais uma sala
de controle anexa, conta com uma infraestrutura com
câmeras de captura de movimentos, espumas de
absorção de impactos e plataformas de recarga de
baterias. Nessa arena são testados e validados os
algoritmos de controle propostos, destacando-se
trabalhos no campo de construção robótica_aérea
(Willmann, et al., 2012) habilidades esportivas e
geração de trajetórias sem colisões para uma frota de
VANTs (Augugliaro, et al., 2012).
Para este trabalho foi escolhido o AR.Drone, um
quadricóptero comercializado pela Parrot, que tem
sido usado por diversos grupos de pesquisa (e.g.,
(Ahn, 2011), (Sun, 2012)) devido ao seu custo relativamente baixo e  integração com diversas plataformas usando o seu kit de desenvolvimento de software (SDK), disponibilizado pelo fabricante.
Apesar de diversos trabalhos abordarem a modelagem clássica (Morar  Nascu, 2013) (Minh  Ha,
2010), há poucos que abordam uma modelagem

Introdução

A utilização de veículos_aéreos_não_tripulados
(VANTs ou UAVs  Unmmaned aerial vehicles)
vem se tornando frequente em pesquisas acadêmicas,
pelo seu baixo_custo e a possibilidade de realização
de tarefas onde a presença humana é dispensável ou
até mesmo impossibilitada.
Os VANTs podem ser autônomos, isto é, seu
controle é realizado por uma programação previamente carregada em seu sistema, ou controlado remotamente. O último modo é o mais empregado hoje
em dia, no qual um piloto fica responsável em controlar a maioria das ações remotamente, característica
essa que fez com que essas aeronaves se popularizassem em atividades onde o risco ao ser humano é alto,
como em ações militares e inspeções em áreas de
risco.
Uma classe desses veículos, a dos quadricópteros (quadrirrotores), vem se popularizando, principalmente por ter uma mecânica simples, boa manobrabilidade e sua capacidade da realizar voos pairados, característica essa que o diferencia dos outros,
como os aviões por exemplo.
A pesquisa com quadricópteros já está bem desenvolvida, como na Universidade da Pensilvânia
(Mellinger, et al., 2010), em que um conjunto de
quadricópteros foi utilizado para realizar manobras
precisas inerentes em tarefas complexas. Outro

1474

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

Embora o sistema não tenha mobilidade, pois
deve ser recalibrado quando é deslocado, para projetos que demandem testes em ambientes controlados,
o sistema Vicon MX é uma confiável e preciso, pois
gera dados a uma frequência de atualização de até
1000 Hz e precisão melhor que 1 mm (Vicon, 2013),
que são grandes vantagens quando o comparamos a
outros sistemas de posicionamento, por exemplo o
GPS (Global Positioning System) que possuem uma
taxa de atualização de poucas amostras por segundo
e precisão de alguns metros.
Para a utilização dos sistemas em conjunto, foi
necessária a criação de uma plataforma de integração
dos sistemas desenvolvida por (Gomes  Leal,
2014). Esta foi composta por um notebook portando
um sistema operacional Linux, no qual foi desenvolvido um algoritmo de acordo com os SDKs fornecidos pelo fabricante do AR.Drone e pela Vicon. Este
algoritmo foi escrito em linguagem C++, embora o
SDK do AR.Drone só forneça bibliotecas na linguagem C. Logo, para se conseguir a compilação do
mesmo foram feitas modificações em sua estrutura
para a adequação na aplicação deste trabalho. A
Figura 2 descreve a arquitetura de integração das
plataformas.

simplificada do veículo e que usem um sistema de
captura de movimento preciso para a obtenção da
medida de posição necessária para o controle em
malha_fechada (Krajník, et al., 2011).
2

Sistema Vicon

O sistema Vicon MX é um sistema de captura
de movimento composto por um grupo de câmeras
de alta velocidade e uma unidade de processamento,
interligadas por cabos de rede de alta velocidade. A
unidade de processamento é ligada a um microcomputador (Host-PC). No mesmo, há instalado o software Tracker do sistema Vicon que configura e cria
os objetos a serem utilizados no projeto. Na Figura 1
pode-se verificar como os componentes são ligados
fisicamente.

Figura 1  Interligação dos componentes do sistema Vicon MX.

Cada câmera possui uma eletrônica interna que
realiza a maioria do processamento de dados, uma
unidade estroboscópica com LEDs que geram luz
quase infravermelha, uma lente e filtro óptico. As
câmeras geram pontos em tons de cinza gerados pela
imagem dos marcadores esféricos reflexivos (tags)
fixados no objeto capturado. Em seguida, usam algoritmos para encontrar os centroides e determinam
quais alvos são válidos.

Figura 2 - Fluxo da informação no sistema integrado.

3

Modelagem

Um modelo_matemático de um sistema dinâmico é um conjunto de equações que representa a dinâmica de um dado sistema com precisão satisfatória
para uma aplicação bem definida. O modelo_matemático pode assumir diferentes formas, portanto, dependendo do sistema considerado e das circunstâncias particulares, um modelo pode ser mais complexo
que outros (Ogata, 2010).
Para este trabalho foram definidos dois sistemas
de coordenadas. O primeiro é inercial, fixo no ambiente e é, também, o referencial usado pelo sistema de
captura Vicon MX

A unidade de processamento é responsável pela
sincronização das câmeras e transmissão_de_dados,
via cabo Ethernet, para o microcomputador Host-PC.
O software Vicon Tracker 1.3 instalado no Host-PC
cria um ambiente_virtual 3D a partir dos dados obtidos pelas câmeras e sua unidade de processamento,
possibilitando a manipulação dos dados de cada tag,
criação de um objeto composto por múltiplos tags,
obtenção de gráficos de velocidade, aceleração e
rotações, dentre outras funcionalidades. A Vicon
fornece junto com o Tracker, um kit de desenvolvimento de software (SDK) que possibilita utilizar os
dados obtidos pelo sistema por um software de terceiros, ou seja, um programa que se comunica com o
Vicon Tracker e utiliza as informações adquiridas
por ele. No SDK estão descritas todas as funções de
controle e tratamento de dados, assim como parâmetros de sincronização de vídeo, taxa de quadros,
dentre outros. Neste trabalho foram utilizadas as
bibliotecas em linguagem C++ para sistemas Linux.



,

,

,

(1)

Conforme a Figura 3. O segundo é um referencial
móvel


,

,

,

(2)

com a origem dos eixos fixada no centro de gravidade do veículo (Figura 3).

1475

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

le das funções de 0,01 (Figura 5). Foi escolhido esse
valor de entrada pois a área de captura era pequena
(4 m) em relação ao tamanho do veículo. Valores
maiores das variáveis de controle fariam o veículo se
mover rápido demais, o que reduziria a resolução das
medidas.
Com os dados obtidos das respostas a degraus, utilizou-se iterativamente a ferramenta System
Identification Toolbox para se obter uma função de
transferência que modelasse adequadamente cada
grau de liberdade de interesse do veículo. Para isto, o
gráfico obtido em simulação teria que ter um comportamento semelhante ao medido experimentalmente para cada função de controle do AR.Drone.
Embora cada função de controle do
AR.Drone deva apresentar um comportamento distinto, ou seja, cada parâmetro da função de controle
teria que fornecer uma função_de_transferência particular, percebeu-se que essas apresentavam resultados
similares quando utilizada a ferramenta System Identification Toolbox. Portanto decidiu-se adotar uma
única função_de_transferência para todas as funções
de controle. Para a validação da função_de_transferência obtida

Figura 3 - Sistemas de coordenadas.

Para se projetar um controle para veículos quadrirrotores, é necessário conhecer seu modelo_dinâmico e seus parâmetros. Entretanto, em vez de modelar o quadricóptero como um veículo quadrirrotor
padrão, i.e., considerando as velocidades dos rotores
como entradas e os ângulos de Euler como saídas, foi
usado um modelo considerando o controlador embarcado no A.R.Drone (Figura 4). Uma vez que este
controlador embarcado é capaz de definir e manter a
orientação e a velocidade vertical do veículo
(Krajník, et al., 2011), não há muita liberdade para
lidar com o quadricóptero (Beard, 2008).

2

1
,
0,05

(3)

foi realizada uma simulação no Simulink, correspondente ao experimento com o AR.Drone, aplicando o
mesmo valor de entrada e medindo a resposta a essa
entrada.
Após seguidas tentativas, foi obtida a curva
de resposta da função_de_transferência  entrada a um
degrau com amplitude 0,01 (Figura 6), que teve uma
assertividade de 94,91 quando comparada aos
valores obtidos experimentalmente com o AR.Drone.
Para fazer essa comparação, foi usada a função compare do MATLAB, que compara dados de uma resposta ao degrau a uma função_de_transferência. O
resultado obtido pode ser visto na Figura 6.

Figura 4  Diagrama de blocos do modelo_dinâmico de cada grau
de liberdade de interesse do AR.Drone (Krajník, et al., 2011).

Com o intuito de obter um modelo que se aproxime da dinâmica de movimento do quadricóptero,
foi usada a ferramenta_computacional System Identification ToolBox do MATLAB para identificar a
função_de_transferência de cada uma das funções de
controle do AR.Drone (ComandoRoll, Comando
Pitch, ComandoYaw e ComandoGaz). Para a
obtenção desses parâmetros foi feito um código que
aplicava um degrau em cada função de controle do
quadricóptero e, com auxílio do sistema de captura
Vicon, era medida a posição do veículo em cada
instante de amostragem e os dados então guardados
em um arquivo. Esse procedimento foi repetido diversas vezes para taxas de amostragem de 100 Hz,
200 Hz e 300 Hz e para valores de entrada de contro-

Figura 5 - Resposta ao degrau  Pitch.

1476

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

frequência de 200 Hz para a realização do controle,
pois assim não houve a perda eventual de quadros, o
que pode ocorrer a taxas mais altas.
Como o sistema de captura amostra os dados
obtidos, foi necessário realizar o controlador em
tempo_discreto. Então, foi feita a discretização do
controlador PD descrito pela equação (4), seguindose a aproximação pelo método backward Euler
(strm  Wittenmark, 2011), na qual
"


Figura 6 - Gráfico de ajuste entre o modelo obtido e a resposta ao
degrau em um controle do AR.Drone.

4

Substituindo-se tkh, obtém-se

Controle

"

Uma vez que foi feita a modelagem_dinâmica
do AR.Drone, pode-se então projetar um controle
que se adeque ao modelo do veículo e que se adapte
s necessidades da aplicação proposta. Para o projeto
do controle, foi proposto o problema de rastreamento
de um alvo móvel.
Foi proposto um controle com ações Proporcional e Derivativa (PD), pois como a função_de_transferência do AR.Drone (H(s)) é de segunda ordem e
possui um integrador, um controlador do tipo PD
atenderia os requisitos do problema proposto.
A ação derivativa do controlador PD é proporcional  taxa de variação proporcional do sinal de
erro, o que pode produzir uma correção significativa
do erro antes que o mesmo se torne demasiadamente
grande. Portanto, é um controlador que antecipa o
erro e inicia uma ação corretiva mais cedo, para
estabilizar o sistema. Possui como desvantagem 
amplificação de sinais de ruído. Contudo, em nossa
aplicação, como o sistema de medição de posição
tem alta precisão, esse problema é reduzido (Ogata,
2010). Um controlador PD clássico em tempo contínuo é descrito pela equação


onde
cional e

,

,



"

"
"

"

,

(7)

onde h é o período de amostragem.
Com o controlador proposto foram feitas
simulações no MATLAB em que, embora o modelo
dinâmico foi obtido em tempo contínuo, o controle
foi projetado em tempo_discreto, conforme a Figura 7, pois o sistema de aquisição de posição amostrar
os dados.

Figura 7 - Diagrama da implementação do sistema_de_controle na
simulação

Utilizando aproximações sucessivas, foram obtidos os parâmetros
e
de maneira que o controle apresentasse uma resposta satisfatória, ou seja, foi
proposto como condição de aceitação que a resposta
ao degrau apresentasse um sobrepasso (overshoot) de
no máximo 25. Com esta definição, foi obtida a
resposta do sistema controlado apresentada na Figura
8, com
 1e
 0,07.

(4)

é o sinal de controle, Kp é o ganho proporé o tempo derivativo. O sinal de erro.


"

(6)

.

(5)

representa a diferença entre o sinal de referência e a
saída e os parâmetros de ajuste
e
são constantes positivas.
O sistema de captura Vicon MX, oferece
uma taxa de amostragem máxima de 1000 Hz. Entretanto, foi avaliado que com esta frequência de amostragem, não seria possível obter todos os dados que o
sistema enviaria para o computador onde seria desenvolvido o controle. Por isto, escolheu-se uma

1477

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

Figura 10 - Área de captura útil com marcações do alvo e do
AR.Drone.

Figura 8 - Resposta ao degrau obtida na simulação

5

Resultados Experimentais

Para a realização dos experimentos, foram demarcadas a posição de partida do AR.Drone e do
alvo, de modo que a distância entre eles seja máxima,
considerando o marcador central de ambos como
referencial na posição marcada na área de captura
(Figura 10). Após isto, foi configurado como alvo a
ser seguido, um carro de controle_remoto, e posicionados o AR.Drone e o alvo conforme Figura 11.
No computador onde está instalado o software
Vicon Tracker 1.3 são capturadas as imagens dos
marcadores e foram gerados objetos virtuais com
formatos referentes  disposição dos marcadores
(Figura 11). O Tracker então calcula automaticamente a posição e orientação de cada objeto criado (Figura 12).
No notebook, onde está instalado o Linux, é
executado o software_de_controle e também é gerado
um arquivo no qual fica gravado o registro das posições dos objetos para a posterior geração de gráficos.

Para a realização dos experimentos, foi utilizado um ambiente de teste localizado no Laboratório
de Controle e Automação da UERJ, local onde o
sistema de câmeras está instalado (Figura 9).
Primeiramente foi demarcada a área de captura
das câmeras do sistema Vicon no chão do laboratório
para se ter noção da área útil disponível. Também
foram definidos os pontos de partida do AR.Drone e
do alvo, que está exemplificado na Figura 10.
A instalação das câmeras foi concebida para
trabalhos com objetos que possam operar em alturas
abaixo de 1,3 metros.

Figura 9 - Laboratório de Controle e Automação da UERJ.
Figura 11 - Posicionamento do alvo (carro de controle_remoto) e
AR.Drone.

1478

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

Os resultados obtidos experimentalmente foram
comparados com os simulados e são apresentados na
Figura 15 e na Figura 16.

Figura 12 - AR.Drone e o alvo no ambiente_virtual do software
Vicon Tracker 1.3.

Com a execução do programa criado, usando os
parâmetros do controle simulado, foi constatado que
os ganhos
e
necessitavam de alguns ajustes,
pois o comportamento do quadricóptero não estava
de acordo com a simulação. Após alguns ajustes,
e
receberam os valores de 0,6 e 0,2, respectivamente. Os gráficos na Figura 13 e na Figura 14 apresentam os resultados experimentais da resposta ao
degrau do sistema_de_controle em malha_fechada com
os novos valores de
e .

Figura 15 - Comparação entre a simulação e o experimento referente ao eixo x

Figura 16 - Comparação entre a simulação e o experimento referente ao eixo y

Pode-se verificar que o sistema é estável, entretanto, ocorre um transitório em que a resposta do
sistema se comporta como um sistema de fase nãomínima. Isto pode ser relacionado ao sistema de
controle para a estabilização embarcado, e também 
dinâmica do quadricóptero. Também se verifica uma
demora de cerca de cinco segundos para a partida do
veículo. Isso se deve aos atrasos gerados pelos encadeamentos de rede dos sistemas AR.Drone e Vicon.
No gráfico das trajetórias no plano XY, pode-se
concluir que quando o alvo se move com uma velocidade baixa (Figura 17), o AR.Drone tem um desempenho melhor ao segui-lo. Quando a velocidade
do alvo é aumentada, o desempenho piora, porém
ainda é satisfatório, pois verifica-se na Figura 18,
uma distância de no máximo 0,15 m entre as posições do AR.Drone e do Alvo.
Para a realização de um experimento onde o veículo se moveria em alta velocidade, seria necessário
readequar o ambiente do laboratório.

Figura 13 - Gráfico da resposta ao degrau em malha_fechada
referente ao eixo x.

Figura 14 - Gráfico da resposta ao degrau em malha_fechada
referente ao eixo y.

1479

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

O controle proposto apresentou resultados satisfatórios, pois embora o modelo_matemático utilizado
não preveja algumas não-linearidades e transitórios
devido a decolagem e outros aspectos externos (efeito instabilizante da proximidade com paredes, etc.), o
controle manteve a resposta do sistema de acordo
com o proposto.
Espera-se uma larga utilização deste trabalho
em futuras aplicações, pois tanto o Sistema Vicon,
quanto o AR.Drone, possuem um grande potencial
para o desenvolvimento de diversos trabalhos em
múltiplas áreas de conhecimento, tais como identificação, controle_cooperativo e controle de formação
de sistemas_multiagentes.
Um vídeo de um dos testes realizados pode ser
visualizado em

Figura 17 - Gráfico da trajetória no plano XY com velocidade do
alvo baixa.

httpwww.youtube.comwatch?viIT3gnXgKw
O Projeto de Graduação em Engenharia Elétrica
com Ênfase em Sistemas Eletrônicos, no qual este
artigo foi baseado, (Gomes  Leal, 2014) encontrase disponível em
httpwww.lee.eng.uerj.brjpauloPG2014PGControle-Quadrirrotor-2014.pdf

Agradecimentos
Este trabalho foi realizado com recursos financeiros da Faperj, CNPq e CAPES.
Figura 18 - Gráfico da trajetória no plano XY com velocidade do
alvo moderada.

Referências Bibliográficas

6

Ahn, Y. M., (2011). Autonomous Navigation and
Localization of a Quadrotor, UrbanaChampaign s.n.
strm, K. J.  Wittenmark, B., (2011). ComputerControlled Systems - Theory and Design. 3 ed.
Mineola,Nova Iorque Dover Publications.
Augugliaro, F., Schoellig, A. P.  DAndrea, R.,
(2012). Generation of collision-free trajectories
for a quadrocopter fleet, Zrich s.n.
Beard, R. W., (2008). Quadrotor Dynamics and
Control, Provo,Utah s.n.
Eresen, A., Imamolu, N.  Efe, M. ., (2012).
Autonomous quadrotor flight with vision-based
obstacle avoidance. Expert Systems with
Applications, Janeiro, 39(1), pp. 894905.
Gomes, L.  Leal, L., (2014). Controle de um
Quadricóptero por Servovisão. Projeto de
Graduação em Engenharia Elétrica com Ênfase
em Sistemas Eletrônicos, UERJ, Rio de Janeiro,
RJ, Brasil.
Gomez-Balderas, J., Castillho, P., Guerrero, J. 
Lozano, R.,( 2012). Vision Based Tracking for
a Quadrotor. Journal of Intelligent  Robotic
Systems, Volume 65.

Conclusão

Durante o desenvolvimento do trabalho (Gomes
 Leal, 2014), pode-se observar a eficácia da estratégia de controle PD na resolução do problema do
proposto.
Pode-se verificar a dificuldade em se obter um
modelo_matemático realista do AR.Drone, levandose em consideração o seu sistema_de_controle_embarcado que, embora facilite sua estabilização e operação, introduz não_linearidades e dinâmica pouco
conhecidas. Apesar disso, utilizando-se a ferramenta
System Identification Toolbox do MATLAB, foi
obtido um modelo razoável que não leva em consideração as não-linearidades do controle interno, mas
possui 94 de correspondência com o comportamento real do veículo.
Nos testes preliminares do software criado, foi
verificado que com o sistema Vicon, operando na sua
taxa de quadros máxima de 1000 Hz, o notebook
onde o software é executado, não era capaz de processar as informações provenientes de cada quadro.
Portanto houve a necessidade de diminuir a taxa de
quadros para 200 Hz.

1480

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

Krajník, T., Vojtch, V., Fisr, D.  Faigl, J.,
(2011). AR-Drone as a Platform for Robotic
Research, Praga, República Tcheca s.n.
Mellinger, D., Michael, N.  Kumar, V., (2010).
Trajectory Generation and Control for Precise,
Philadélfia s.n.
Minh, L. D.  Ha, C., (2010). Modeling and Control
of Quadrotor MAV Using Vision-based
Measurement. Ulsan,Korea, s.n.
Morar, I.-R.  Nascu, I., (2013). Model
Simplification of an Unmanned Aerial, ClujNapoca, Romenia s.n.
Ogata, K., (2010). Engenharia de Controle Moderno.
5 ed. São Paulo Pearson Prentice Hall.
Siciliano, B., Sciavicco, L., Villani, L.  Oriolo, G.,
(2010). Robotics - Modelling,Planning and
Control. s.l.Springer.
Sun, Y., (2012). Modeling, Identification and
Control of a Quad-Rotor, Urbana, Illinois s.n.
Vicon, (2013). Vicon MX Hardware - System
Reference 1.4. s.l.s.n.
Willmann, J. et al., (2012). Aerial Robotic
Construction Towards a New Field of
Architectural Research. International Journal of
Architectural Computing, 10(3), pp. 439-459.

1481