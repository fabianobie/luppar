XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

ANALISE COMPARATIVA DOS METODOS DE AJUSTE DE CONTROLADORES
BASEADOS EM DADOS
D. Eckhard, M. Bergel, A. S. Bazanella
Departamento de Engenharia Eletrica
Universidade Federal do Rio Grande do Sul
Porto Alegre, Brasil


Emails diegoeck@ece.ufrgs.br, mebergel@hotmail.com, bazanela@ece.ufrgs.br
Abstract This work addresses data-based control design. The properties inherent to data-based design are
discussed under a common theoretical framework. The computational cost is estimated with relation to memory
space and number of elementar operations. Simulations present a comparision between the studied methods.
Data-based design, IFT, VRFT, CbT, Computational cost.

Keywords

Resumo Este trabalho trata de projeto_de_controladores_baseado_em_dados. Propriedades de cada metodo
sao discutidas a partir do mesmo referencial teorico. O custo_computacional de cada metodo e estimado em
relacao a espaco em memoria de dados e a operacoes matematicas elementares. Simulacoes apresentam um
comparativo entre os metodos estudados.
Palavras-chave

.

ning (IFT) e Correlation-based Tuning (CbT) sao
comparados com relacao ao objetivo de controle,
ao custo_computacional considerando espaco em
memoria e numero operacoes matematica envolvidas e ao desempenho da malha_de_controle de
cada metodo.
A Secao 2 apresenta as definicoes dos sistemas, notacao e o projeto_de_controlador por modelo de referencia. A Secao 3 apresenta tres metodos de projeto_de_controladores_baseado_em_dados
descrevendo suas caractersticas e diferencas. A
Secao 4 trata do custo_computacional dos metodos, apresenta estimativas da utilizacao de memoria de dados e quantidade de operacoes elementares de cada metodo. A Secao 5 apresenta um
exemplo ilustrativo enquanto que a Secao 6 e uma
breve conclusao.

Introducao

O projeto_de_controladores_baseado_em_dados consiste em ajustar os parametros de um controlador com estrutura fixa usando dados de entrada
e sada coletados de um processo. O ajuste e
feito diretamente, ou seja, sem o uso intermediario de um modelo identificado do processo. Os
metodos de ajuste de controladores - Virtual Reference Feedback Tuning (Campi et al., 2002), Frequency Domain Tuning (Kammer et al., 2000),
Correlation-based Tuning (CbT) (Karimi et al.,
2004) e Iterative Feedback Tuning (Hjalmarsson
et al., 1998) - foram desenvolvidos, assim como
o controle_adaptativo por modelo de referencia
(MRAC), utilizando a mesma formulacao atraves
da otimizacao de um criterio H2 . Eles se diferenciam do MRAC pois o ajuste dos parametros do
controlador nao e feito a cada instante de tempo,
mas somente apos coletar uma batelada de dadosm que usualmente e grande.
No contexto de controladores PID industriais
de baixo_custo, o metodo de Ziegler  Nichols predomina em vista da simplicidade de implementacao e do consequente baixo_custo_computacional
envolvido. No entanto, frente a crescente oferta
de microcontroladores de baixo_custo e alto_desempenho, outros metodos de ajuste de controladores, que gerem melhores resultados que os obtidos com o metodo de Ziegler  Nichols, comecam a ganhar espaco no contexto de controladores industriais. Este artigo propoe-se a analisar os
metodos de projeto_de_controladores baseado em
dados com o objetivo de avaliar a possibilidade
de implementacao destes metodos no firmware de
controladores industriais.
Neste trabalho os metodos Virtual Reference
Feedback Tuning (VRFT), Iterative Feedback Tu-

2
2.1

Preliminares

Definicoes do sistema e notacao

Considere um sistema linear invariante no tempo
com apenas um par entrada-sada (SISO)
y(t)  G(z)u(t) + (t),

(1)

onde z e o operador de avanco, G(z) e a funcao de
transferencia do processo, assumida como racional e propria, u(t) e o sinal de entrada de controle
e (t) e o rudo de processo. O rudo e um processo quasi-estacionario, o qual pode ser escrito
como (t)  H(z)e(t), onde e(t) e rudo branco
com variancia e2 . O processo e controlado por um
controlador linear invariante no tempo C(z, ), de
ordem p, o qual possui a estrutura especificada
abaixo.

1620

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

Hipotese 1 Parametrizacao linear

Considerando a hipotese (3), a funcao custo
(5) pode ser dividida em dois termos (Bazanella
et al., 2008)

C(z, )  T C(z),

J()  Jy () + Je ()

onde   D  Rp e C(z) e um vetor coluna composto de funcoes racionais fixas.

onde cada termo representa um objetivo de controle diferente

Alem disso e assumido que C(z, )G(z) possui
grau relativo positivo para todo   D . Algumas
das estruturas mais comuns de controladores sao
linearmente parametrizadas, sendo o mais comum
o controlador PID com polo derivativo fixo. O
PID pode ser escrito como
C(z, ) 



1

2

3

h

1

z
(z1)

(z1)
z

iT

 seguimento de referencia


Jy ()  E ((Td (z)  T (z, ))r(t))2 

 atenuacao do efeito do rudo


Je ()  E (S(z)(t))2 .

.

Uma vez que o modelo de referencia e escolhido, ele somente pode ser exatamente alcancado
com o controlador ideal
Td (z)
.
(7)
Cd (z) 
G(z)(1  Td (z))

A acao de controle u(t) e dada por
u(t)  C(z, )(r(t)  y(t)),

(2)

Este e o controlador que minimiza o criterio de seguimento de referencia Jy . Se e somente se o controlador ideal Cd (z) pertencer a classe de controladores considerada, o sistema em malha-fechada
podera se comportar exatamente como especificado pelo modelo de referencia. Vamos formalizar
esta hipotese

onde r(t) e o sinal de referencia, o qual e assumido quasi-estacionario e nao correlacionado com
o rudo, isto e
E r(t)e(s)  0 t, s

(3)

PN
onde Ef (t)  limN  N1
t1 Ef (t) e E e
o valor esperado (Ljung, 1987). O sistema em
malha-fechada (1)-(2) torna-se

Hipotese 2
d  D  C(z, d )  Cd (z)  Td C(z).

y(t, )  T (z, )r(t) + S(z, )(t)
T (z, ) ,

C(z, )G(z)
 C(z, )G(z)S(z, ).
1 + C(z, )G(z)

Esta hipotese sempre pode ser satisfeita se as
estruturas do modelo de referencia e do controlador forem escolhidas adequadamente. Para fazer
esta escolha, basta conhecer a estrutura da funcao
de transferencia do processo que se deseja controlar. O proximo exemplo demonstra este fato.
Exemplo
Considere um processo de segunda ordem com
a seguinte estrutura

A dependencia do parametro  foi explicitada no
sinal de sada y(t, ). Define-se ainda o conjunto
 de todos os controladores que tornam o sistema
em malha-fechada BIBO-estavel, ou seja,  ,  
T (z, ) e BIBO-estavel.
2.2

Projeto de controlador por modelo de referencia

G(z) 

E desejado que o sistema em malha-fechada possua um determinado desempenho o qual e especificado por um modelo de referencia descrito por
uma funcao de transferencia de ordem q

O erro entre o modelo de referencia e a sada do
sistema e definido por y(t, )  y(t, )  yd (t).
Deseja-se encontrar os parametros do controlador
que tornam a sada do sistema tao proxima quanto
possvel da sada desejada. Para tanto resolve-se
o seguinte problema de otimizacao.




J() , E (y(t, )  yd (t))2 .

kz
(z  z1 )(z  z2 )

(8)

onde z1 , z2  0, 1 representam os polos do processo e k  R representa o ganho estatico. Os
valores destes parametros sao desconhecidos e portanto nao sao utilizados na escolha do modelo de
referencia. Considere tambem que o controlador
e do tipo PID e possui a seguinte estrutura
iT

h
(z1)
z
C(z, )  1 2 3
1 (z1)
.
z

yd (t)  Td (z)r(t).

min J()

(6)

Logo, se a estrutura do modelo de referencia e de
primeira ordem
Td (z) 

(4)

1m
zm

(9)

entao para qualquer m  0, 1 a Hipotese 2 e atendida. A prova pode ser feita substituindo Td (z) (9)
e G(z) (8) em (7).

(5)

1621

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

3

o mesmo, e portanto o metodo VRFT encontra o
resultado desejado.
Como JVNR () e uma funcao quadratica, o problema de otimizacao e do tipo de mnimos_quadrados e a solucao e direta, diferentemente dos outros
metodos baseados em dados que sao iterativos.
Logo, a estimativa dos parametros do controlador N pode ser computada resolvendo a equacao normal

Metodos de ajuste baseado em dados

Os metodos de ajuste de controladores se diferenciam em dois aspectos. Primeiramente, cada
metodo resolve uma versao diferente do problema
(4). Tanto o metodo VRFT como o CbT eliminam o efeito do rudo na sada utilizando variaveis_instrumentais. Desta maneira eles minimizam somente a parcela Jy () (alguns trabalhos mais recentes sobre o VRFT tambem tratam
do caso geral, mas utilizam um controlador com
dois_graus_de_liberdade (Lecchini et al., 2002)).
O metodo IFT trata da funcao custo completa
J(), sem nenhum tipo de simplificacao. A segunda diferenca entre os metodos e a maneira
que cada um resolve o problema de otimizacao
(Bazanella et al., 2008 Karimi et al., 2004 Hjalmarsson et al., 1998 Campi et al., 2002). Logo,
os diferentes metodos nao divergem somente na
maneira de computar os valores otimos dos paramentros do controlador, mas eles tambem divergem sobre quais sao esses valores otimos.
3.1

 

"N
X

T

(t)(t)

t1

1 "

N
X



(t)u(t) ,

t1

(11)


onde (t)  C(z) Td1 (z)  1 y(t) e (t) 

C(z) Td1 (z)  1 ys (t), onde (t) e uma variavel
instrumental.
3.2

O metodo IFT

O IFT e um metodo iterativo que minimiza o criterio H2 generico, descrito por (6). Para procurar
o parametro  que minimiza o criterio e utilizado
o seguinte algoritmo

O metodo VRFT

i+1  i  i Ri J(i ),

O metodo VRFT possui duas caractersticas importantes. A primeira e que o metodo apenas
trata do problema de seguimento de referencia
(Jy ()). A segunda e que o VRFT e um metodo
direto (nao iterativo) o qual e uma caracterstica
muito conveniente na perspectiva de implementacoes praticas.
A ideia central do VRFT e transformar o projeto do controlador em um problema de identificacao do controlador ideal minimizando o erro de
predicao.
Dados de entrada u(t) e de sada y(t) do processo sao obtidos da operacao normal do processo
e age-se como se estes dados tivessem sido obtidos com o controlador ideal Cd (z) rodando em
malha-fechada. Para fazer isto calcula-se qual deveria ser seria o sinal de referencia que, quando
injetado no sistema em malha_fechada com o controlador ideal, geraria o sinal de sada obtido no
experimento, (r(t)  Td1 (z)y(t)).
De posse desta referencia_virtual e possvel
calcular um erro virtual (e(t)  r(t)  y(t)). Com
os dados e(t) e u(t) e possvel utilizar tecnicas
de identificacao para estimar qual o controlador
otimo - chamado Cd (z). Logo, a identificacao por
minimizacao do erro_de_predicao de Cd (z) consiste
em resolver o seguinte problema

onde i e o passo de iteracao e J(i ) e o gradiente da funcao custo com relacao a . A matriz Ri
deve ser definida positiva e comumente e utilizada
a Hessiana de J().
A implementacao das iteracoes depende de
uma estimativa do gradiente e possivelmente da
hessiana da funcao custo J(), o que nao e trivial
ja que J() tambem nao e conhecido. E mostrado
em (Hjalmarsson et al., 1998) que uma estimativa
nao polarizada de J() pode ser obtida a partir
de dados de dois experimentos em malha-fechada,
sendo que o sinal de referencia do segundo experimento e o erro entre a referencia e a sada do
primeiro experimento. A estimativa de J() e
calculada por

com

d i) 
J(
c i ) 
y(t,

N
X
t1

c i ),
y(t, i )y(t,

(12)

1
C(z, i )y2 (t, i ),
C(z, i )

onde y2 (t, i ) e a sada do segundo experimento.
Uma estimativa da hessiana da funcao custo e
dada por

min JVNR ()
PN
JVNR ()  N1 t1 (u(t)  C(z, )e(t))2 (10)

Ri 

N
X
t1

Note que JVNR () nao e o criterio que o VRFT
deveria minimizar, o qual e Jy (). Contudo,
quando a Hipotese 2 e satisfeita, entao o argumento que minimiza tanto Jy () como JVNR () e

3.3

T

c (t, i )y(t,
c i ),
y

(13)

O metodo CbT

A ideia principal do metodo e minimizar a correlacao cruzada entre a referencia e o sinal y(t, )

1622

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

(diferenca entre a sada desejada e a sada efetiva
do sistema), em vez de procurar o criterio que minimiza o custo H2 . Desse modo, o sistema obtido
em malha-fechada ira capturar as dinamicas do
sistema desejado, compensando as dinamicas do
processo nao modelado, de modo que nao reste
nenhuma informacao do sinal de referencia no sinal de erro em malha-fechada y(t, ).
O problema de otimizacao e baseado em encontrar os parametros do controlador que solucionam a seguinte equacao de correlacao
N
X

Tabela 1 Espaco em memoria
Metodo
Espaco em memoria
Identificacao
17 + 2N
VRFT
32 + 2N
IFT
34 + N
CbT
72 + N
modelos sao apenas utilizados para gerar uma variavel que esteja correlacionada com a sada do sistema. A obtencao de um modelo adequado para
projeto baseado em modelo exigiria a coleta de
uma quantidade muito maior de dados, alem da
intervencao humana no processo, o que justifica o
ajuste baseado em dados em detrimento do projeto baseado em modelo.
Um modelo de ordem s do sistema pode ser
obtido utilizando a estrutura ARX (AutoRegressive eXogeneous). Desta maneira, os parametros
do modelo sao obtidos atraves de mnimos_quadrados resolvendo uma equacao normal

(t)y(t, )  0,

i1

onde N e o tamanho dos dados do experimento e
(t) e uma variavel_instrumental que deve ser correlacionada com a referencia e descorrelacionada
com o rudo.
Este sistema de equacoes nao e linear e portanto sao utilizados algoritmos iterativos para encontrar o argumento que soluciona o sistema de
equacoes. O gradiente do algoritmo e calculado
como
N
X
J() 
(t)y(t, ).

  (X T X)1 XY
onde X  RN r e a matriz de regressao, Y  RN
e a matriz de sada, r e o numero de parametros
do modelo e N e o numero de amostras obtidas
em um experimento (Aguirre, 2004).

i1

Varias sao as possveis escolhas para a variavel
instrumental, mas a escolha que tem gerado melhores resultados e uma estimativa do gradiente da
sada com relacao aos parametros do controlador
c ) 
(t)  y(t,

4

C(z)G(z)r(t)
,
(1 + G(z)Cd (z))2

O objetivo desta secao e o de estimar a quantidade de recursos computacionais necessaria para
a implementacao e execucao dos algoritmos dos
metodos de ajuste estudados neste trabalho. Esta
analise sera dividida em duas parcelas, uma referente a quantidade de memoria de dados utilizada
por cada metodo e uma outra referente a quantidade de operacoes matematicas basicas envolvidas.
Este trabalho nao tem a pretensao de afirmar
que as implementacoes dos metodos foram feitas
da forma mais otimizada possvel. Portanto os
valores a seguir apresentados sao somente uma
estimativa da quantidade de operacoes matematicas demandada pelos metodos de ajuste estudados. Contudo, a partir desta analise pode-se
tracar um comparativo entre os diversos metodos.
Pode-se tambem observar a possibilidade da implementacao em tempo-real em microprocessadores de baixo_custo.
Alguns dos metodos necessitam de um modelo aproximado do processo para construcao das
variaveis_instrumentais. Esta identificacao nao necessita ser feita a cada iteracao, uma unica estimativa pode ser utilizada em todas as iteracoes.
A Tabela 1 apresenta a quantidade de memoria de dados utilizada por cada um dos metodos.
A Tabela 2 apresenta a quantidade de operacoes elementares utilizadas para a identificacao de

Apesar desse metodo partir de uma ideia diferente dos metodos anteriores, ele e muito parecido
com o metodo IFT. A diferenca entre os metodos
esta na maneira que e estimado o vetor y(t, ).
Enquanto que no metodo IFT esse vetor e calculado a partir de dados de dois experimentos, no
metodo CbT ele e computado a partir de um modelo reduzido identificado do processo.
Esta estimativa para J() e utilizada em
um algoritmo iterativo para procurar uma solucao
para o problema de otimizacao. Como no metodo
IFT, o metodo CbT tambem apresenta uma forma
de estimar a hessiana da funcao custo, de forma
que um algoritmo do tipo quase-Newton pode ser
utilizado para resolver o problema de otimizacao.
3.4

Estimativa do Custo Computacional

Identificacao do processo

Tanto o metodo VRFT como o CbT utilizam na
sua formulacao variaveis_instrumentais para lidar
com o rudo. Diversas maneiras podem ser utilizadas para obter estas variaveis_instrumentais.
Neste trabalho optou-se por gerar as variaveis
instrumentais utilizando modelos simplificados do
processo. Estes modelos identificados podem ser
de baixa qualidade, uma vez que nao sao utilizados diretamente no projeto do controlador. Estes

1623

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

Tabela 5 Custo computacional do algoritmo CbT
por iteracao

Tabela 2 Custo computacional da Identificacao
do processo
Operacao matematica
a  (X T X)
b  a1
c  XT Y
P  bc
Total

Quantidade de operacoes
elementares realizadas
(r 2 + r)N
(r 4 + 3r 3 )2
2rN
2r 2
(r 2 + 3r)N
+(r 4 + 3r 3 + 4r 2 )2

Operacao matematica
v  y(t, )
 )
w  y(t,
1 PN
c  f (t, ))  N
t1 vw
b  Q(i )1
i+1  i  bc
Total

um modelo com estrutura ARX, onde r e o numero de parametros e N e a quantidade de dados
amostrados.
Tabela 3
VRFT

r e o numero de parametros do modelo, s e a ordem do modelo, q e a ordem do modelo de referencia, p e a ordem do controlador e N a quantidade
de dados amostrados. Note que o CbT e um metodo iterativo que necessita de uma estimativa de
modelo. Logo, as operacoes envolvidas na identificacao devem ser somadas as operacoes de todas as
iteracoes para se obter o valor total de operacoes.
Na secao a seguir e apresentado um exemplo
que traca um comparativo entre os varios metodos de ajuste de controladores baseados em dados
estudados neste trabalho.

Custo computacional do algoritmo

Operacao matematica
(t)
(t)
P
T
a N
t1 (t)(t)
b  a1
P
T
c N
t1 (t) u(t)
  bc
Total

Quantidade de operacoes
elementares realizadas
4(p(p + q) + s)N
4p(p + q)N
2p2 N
(p4 + 3p3 )2
2pN
2p2
(10p2 + 8pq + 4s + 2p)N
(p4 + 3p3 2 + 4p2 )2

5
A tabela 3 apresenta a quantidade de operacoes elementares utilizadas no metodo VRFT,
onde r e o numero de parametros do modelo, s
e a ordem do modelo, q e a ordem do modelo de
referencia, p e a ordem do controlador e N a quantidade de dados amostrados. Note que o VRFT
nao e um metodo iterativo e portanto a quantidade de operacoes utilizadas limita-se as operacoes
da identificacao somadas as operacoes do metodo.

v  y(t, )
 )
w  y(t,
1 PN
c  J()  N
t1 vw
b  R1
i
i+1  i  i bc
Total

Exemplo Ilustrativo

O exemplo a seguir representa um processo termico onde deseja-se controlar a temperatura atraves da injecao de energia por um atuador resistivo. O processo e descrito pela seguinte funcao
de transferencia
G(z) 

(1  0.8851)(1  0.5434)z
.
(z  0.8851)(z  0.5434)

(14)

O sistema e perturbado por um rudo branco de
variancia e2  1o C. Um controlador do tipo PID
e utilizado em malha-fechada
iT

h
(z1)
z
C(z, )  1 2 3
1 (z1)
.
z

Tabela 4 Custo computacional do algoritmo IFT
por iteracao
Operacao matematica

Quantidade de operacoes
elementares realizadas
(4q + 1)N
(4p2 + 8(s + p))N
2pN
2p2 N + p + (p4 + 3p3 )2
2p2 + p
(6p2 + 10p + 8s + 4q + 1)N
+(p4 + 3p3 + 4p2 + 6p)2

Quantidade de operacoes
elementares realizadas
(4q + 1)N
4p2 N
2pN
2p2 N + p + (p4 + 3p3 )2
2p2 + 2p
(6p2 + 2p + 4q + 1)N
+(p4 + 3p3 + 4p2 + 6p)2

Deseja-se que o sistema em malha-fechada se comporte segundo o seguinte modelo de referencia
Td (z) 

0.184
.
z  0.816

Como visto no exemplo anterior, a Hipotese 2 e
atendida. O controlador ideal C(d , z) e definido
pelo vetor de parametros


d  1.6369 0.1840 1.6872 .

A Tabela 4 apresenta a quantidade de operacoes elementares utilizadas no metodo IFT, onde
q e a ordem do modelo de referencia, p e a ordem
do controlador e N a quantidade de dados amostrados no primeiro experimento do IFT. Note que
o IFT e um metodo iterativo e portanto a quantidade de operacoes apresentadas refere-se a apenas
uma iteracao. Caso mais iteracoes sejam utilizadas o numero de operacoes deve ser multiplicado
pelo numero de iteracoes para se obter o valor total de operacoes.
A Tabela 5 apresenta a quantidade de operacoes elementares utilizadas no metodo CbT, onde

O metodo de ajuste de controladores VRFT
foi utilizado para ajustar os parametros do controlador PID. Foram utilizadas 160 amostras de
entrada e sada do processo para ajustar os parametros do controlador. Os parametros encontrados pelo metodo sao


  1.6072 0.1826 1.4256 .

1624

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

Op
custo relacionado a este vetor de parametros
e J()  1.1448oC 1 . A Figura 1 apresenta a
resposta ao salto com este controlador.

Figura 2 Resposta ao salto com o controlador
obtido com o IFT (linha tracejada) e do modelo
de referencia (linha cheia).
Figura 1 Resposta ao salto com o controlador
obtido com o VRFT (linha tracejada) e do modelo
de referencia (linha cheia).

Tabela 6 Comparacao entre os metodos
Metodo Espaco em
Operacoes
memoria
Matematicas
VRFT
689
24152
IFT
194
216100
CbT
569
347376

O metodo de ajuste de controladores IFT
tambem foi utilizado para ajustar os parametros
do controlador PID. Foram utilizadas 160 amostras de entrada e sada do processo para ajustar
os parametros do controlador em cada iteracao.
Foram utilizadas 20 iteracoes do metodo. Os parametros encontrados pelo metodo sao




1.6653 0.1831 1.7228



Pode-se concluir com este exemplo que o metodo VRFT e aquele que possui menor custo_computacional. Este fato ja era esperado visto que o
metodo e nao iterativo. Dos metodos_iterativos,
o IFT possui um custo_computacional bem menor que o CbT. Em contrapartida vale lembrar
que o CbT apenas necessita de dados de um experimento enquanto que o metodo IFT necessita
de dados de dois experimentos especficos. Outras conclusoes podem ser feitas a partir do custo
J() enquanto o metodo CbT foi o que apresentou o menor custo o VRFT foi o que apresentou
o maior custo. Apesar da variacao entre os custos
apresentados pelos tres metodos, todos eles geraram excelentes resultados, que podem ser verificados visualmente pela resposta ao salto tracada
nas figuras apresentadas.

.

Op
custo relacionado a este vetor de parametros
e J()  1.0465oC. A Figura 2 apresenta a
resposta ao salto com este controlador.
Por fim, o metodo de ajuste de controladores CbT foi utilizado para ajustar os parametros
do controlador PID. Novamente foram utilizadas
160 amostras de entrada e sada do processo para
ajustar os parametros do controlador em cada iteracao. Foram utilizadas 20 iteracoes do metodo.
Os parametros encontrados pelo metodo sao




1.6243 0.1844 1.6745



.

Op
custo relacionado a este vetor de parametros
e J()  0.9989oC. A Figura 3 apresenta a
resposta ao salto com este controlador.
Tambem foi estimado o custo_computacional
de cada um dos metodos para este exemplo. Um
comparativo e apresentado na Tabela 6. Estao
computadas as operacoes envolvidas em todas as
iteracoes utilizadas.

6

Conclusoes

Neste trabalho foi avaliado o custo_computacional dos metodos de ajuste de controladores Virtual Reference Feedback Tuning, Iterative Feedback Tuning e Correlation based Tuning. O metodo VRFT utiliza apenas uma batelada de dados de processo e necessitam de uma estimativa
do modelo do processo para computar os parametros do controlador. Ja o CbT utiliza apenas
uma batelada de dados de processo por iteracao

1 Para facilitar a compreensao foi utilizada a raiz quadrada do custo, de maneira que a unidade de medida tenha
um significado fsico

1625

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

Campi, M. C., Lecchini, A. and Savaresi, S. M.
(2002). Virtual reference feedback tuning a
direct method for the design of feedback controllers, Automatica 38(8) 13371346.
Hjalmarsson, H., Gevers, M., Gunnarson, S. and
Lequin, O. (1998). Iterative feedback tuning
theory and applications, IEEE control systems magazine 18(4) 2641.
Kammer, L. C., Bitmead, R. R. and Bartlett, P. L.
(2000). Direct iterative tuning via spectral
anaysis, Automatica 36(9) 13011307.
Karimi, A., Miskovic, L. and Bonvin, D. (2004).
Iterative correlation-based controller tuning,
International journal of adaptive_control and
signal processing 18(8) 645664.
Lecchini, A., Campi, M. C. and Savaresi, S.
(2002). Virtual reference feedback tuning for
two degrees of freedom controllers, International journal of adaptive_control signal process
16 355371.

Figura 3 Resposta ao salto com o controlador
obtido com o CbT (linha tracejada) e do modelo
de referencia (linha cheia).
e tambem necessita de uma estimativa do modelo
do processo para computar os parametros do controlador. O metodo IFT utiliza duas bateladas de
dados por iteracao para computar os parametros
do controlador. O custo_computacional dos tres
metodos foi estimado neste trabalho, levando em
conta o espaco em memoria de dados e a quantidade de operacoes matematicas elementares utilizadas. Simulacoes numericas foram feitas utilizando os tres metodos, com as quais foram estimados tanto o custo_computacional quanto o custo
relacionado ao erro do modelo de referencia. Os
tres metodos geraram respostas bastante satisfatorias quando comparadas com o modelo de referencia. O metodo VRFT demandou menos recursos computacionais mas foi o que gerou o maior
erro com relacao ao modelo de referencia. Ja CbT
foi o metodo que demandou mais recursos computacionais mas em contrapartida gerou o menor
erro com relacao ao modelo de referencia. Os tres
metodos se mostraram aptos para implementacoes
em firmwares de controladores industriais.

Ljung, L. (1987). System identification theory for
the user, Prentice Hall, Englewood Cliffs, NJ,
EUA.

Agradecimentos
Este trabalho foi parcialmente financiado pelo
CNPq.
Referencias
Aguirre, L. A. (2004). Introducao a identificacao
de sistemas, UFMG, Belo Horizonte, Brasil.
Bazanella, A. S., Gevers, M., Miskovic, L. and Anderson, B. (2008). Iterative minimization of
H2 control performance criteria, Automatica
44(10) 25492559.

1626