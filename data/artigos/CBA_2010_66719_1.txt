XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

MÓDULO LABORATORIAL PARA EDUCAÇÃO EM CONTROLE, EM TEMPO REAL, BASEADO
EM LINUXRTAI
RENATO T. DE CARVALHO, HUGO R. BALDIOTI, NATHAN DE L. SILVA, FRANCISCO J. GOMES
Faculadade de Engenharia, Universidade Federal de Juiz de Fora
Rua José Lourenço Kelmer, sn - Campus Universitário Bairro São Pedro - CEP 36036-900 - Juiz de Fora MG
E-mails renato.carvalho@engenharia.ufjf.br, hugo.baldioti@engenharia.ufjf.br,
nathan.lima@engenharia.ufjf.br, chico.gomes@ufjf.edu.br

Abstract The present work details the design and implementation of a low cost laboratory plant, for control engineering_education, utilizing the LinuxRTAI, a FOSS system, for real time control. The developed laboratory plant is a double tanks system,
that allows simultaneous control of its level and temperature variables in this first step it was implemented the level control. It
was also developed an analog-digital-analog card totally based on the microcontroller PIC 16F877. The final results showed the
feasibility of LinuxRTAI as an effective real time kern, freely distributed and utilized, for developing low costs laboratories
modules for control engineering_education, as well encourages further developments on the developed module, including other
experimental developments.
Keywords Linux, RTAI, Control Education, FOSS, Real Time Control
Resumo O presente trabalho tem como objetivo mostrar o desenvolvimento de um módulo laboratorial para educação_em_controle_de_processos, em tempo_real, baseado no núcleo LinusRTAI, um sistema FOSS. O módulo laboratorial consiste de um sistema de tanques duplos, que possibilidade o controle de seu nível e temperatura, sendo que nesta etapa inicial foi implementado o
controle_de_nível. Para realizar a interface do ambiente computacional com o módulo físico foi desenvolvido um sistema de aquisição e transmissão_de_dados, baseado no microcontrolador PIC 16F877A. Os resultados obtidos mostraram a factibilidade de se
utilizar o LinuxRTAI como um núcleo de tempo_real efetivo, de livre distribuição e utilização, na confecção de módulos didáticos de baixo_custo para a educação_em_controle_de_processos, bem como encorajam desenvolvimentos posteriores no módulo e
outros desenvolvimentos experimentais.
Palavras-chave 

1

forma cooperativa com as redes ligadas aos diversos
FOSS, sem custo ou contrapartida envolvida.
Outro aspecto que chama a atenção, adicionalmente  utilização e disseminação do FOSS, é o fato
de que a educação_em_controle_de_processos ganha,
continuamente, maior visibilidade, destacando-se o
crescimento de artigos, congressos e periódicos na
área, explicado por razões estruturais, ligados  sua
base conceitual (Kheir,1996) e ao desenvolvimento
das Tecnologias de Informação e Comunicação 
TIC, com seu impacto sobre o desenvolvimento científico, tecnológico e conseqências sobre a formação
de especialistas na área (Murray,2002).
A engenharia é uma profissão prática, handson e, portanto, desde os primórdios da educação em
engenharia, laboratórios didáticos têm constituído
um dos fundamentos da graduação e, em muitos casos, da pós-graduação. Pode-se afirmar que, anteriormente  ênfase na componente científica, a maior
parte da formação do engenheiro ocorre nos laboratórios (Feisel, 2005). Por isto, sua utilização deve se
associar a uma visão clara dos objetivos educacionais
pretendidos em seu emprego e na formação propiciada pelo curso. Dentre estes objetivos Peterson (2002)
destaca pontos que explicitam a importância da atividade laboratorial como, p.ex., entender e utilizar
modelos conceituais coletar, analisar e interpretar
dados executar projetos sob demanda aprender com
falhas e erros desenvolver a criatividade comunicar,

Introdução

Governos de todas as partes do mundo começaram a lançar de iniciativas para colher os benefícios
do software_livre. Muitas dessas iniciativas ainda
estão em fase inicial, mas há uma tendência significativa para a sua incorporação. O governo federal
brasileiro é um grande incentivador do uso de padrões abertos, do licenciamento livre dos softwares e
a formação de comunidades, em especial de usuários
e
desenvolvedores
de
software
livre
(httpwww.softwarelivre.gov.br). O governo federal brasileiro planeja migrar, até um percentual de 80
por cento, todos os computadores do estado e instituições de propriedade estatal para o sistema operacional Linux nos próximos três anos. A Faculdade de
Engenharia da Universidade Federal de Juiz de Fora
está adotando esta linha de trabalho e vem estabelecendo diretrizes para desenvolver sistemas laboratoriais de baixo_custo para a educação_em_controle baseados em FOSS (Free and Open Source Software).
As vantagens ligadas ao software_livre são muitas, podendo ser citada a possibilidade de desenvolver trabalhos e solucionar problemas de forma colaborativa, agregando os conhecimentos disponibilizados pelos fóruns de desenvolvedores e interagindo de

271

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

de forma oral e por escrito, os resultados e conclusões obtidos e trabalhar em equipe.
A utilização intensiva de laboratórios, contudo,
esbarra em problemas que variam desde visões conceituais distorcidas dos educadores até questões operacionais práticas, como custos envolvidos com aquisição, manutenção, operação e atualização dos equipamentos, realidades estas comuns  nossa realidade
e que remetem  busca de soluções alternativas ou
complementares s atividades laboratoriais, sem perda ou alteração de seus conteúdos e objetivos.
Considerando-se estes aspectos, buscou-se associar os dois pontos abordados efetuando-se o desenvolvimento de módulos laboratoriais de baixo
custo, que podem ser utilizados para educação em
engenharia_de_controle, em tempo_real, operando
baseados inteiramente em softwares livres, ou seja,
FOSS. A rede colaborativa, a ausência de custos, a
oportunidade de intercambio de informações constituem, entre outros, fatores que justificam plenamente
esta proposta, cujos resultados iniciais, de um módulo para controle_de_nível, são aqui apresentados.
O trabalho está estruturado como segue a seção
2 apresenta o sistema computacional utilizado a seção 3 mostra o desenvolvimento do software, do
interfaceamento e a planta, objeto-alvo do controle e
finalmente a seção 4 os resultados obtidos são apreciados. As conclusões, na seção 5, encerram o presente trabalho.

Apesar de algumas poucas distribuições terem sido
feitas para suportar tarefas que necessitam de execução em tempo_real, o Linux é não-preemptivo (Bovet
 Cesati, 2000). Por essa razão, o escalonamento
seguindo tempo_real tem tempo de execução nãodeterminístico, o que ofusca seu uso na indústria.

2 Sistema Utilizado

3 Desenvolvimento

2.2 RTAI
RTAI www.rtai.org é um acrônimo para a expressão Real-Time Application Interface, um path
para kernel vanilla (puro). Seu desenvolvimento se
deu a partir do Politecnico di Milano, quando foi
necessário realizar simulações de cálculos aeroespaciais utilizando Linux. Com esse path é possível diminuir o tempo de execução e troca de tarefas e diminuir o tempo de resposta  interrupções, tornando
o sistema Linux preemptivo sem a necessidade de
migrar de distribuição.
O RTAI possui uma API amigável que permite desenvolver rotinas de tempo_real em CC++ utilizando o GCC. Com um HAL (Hardware Abstraction
Layer) que elimina funções latency killers nativas do
Linux, como impressão de caracteres no dispositivo
de saída e operações de leituraescrita em FIFOs, e
com modificação no escalonador do kernel, o RTAI
torna o uso do Linux possível em operações na indústria de um modo geral.

Dentre todo o repositório de softwares livres
disponíveis pela internet, talvez o mais notável é o
Linux, por ser, em termos de software, o nível mais
baixo num sistema computacional e possivelmente o
com maior número de colaboradores ao redor do
mundo ao logo de sua história. O módulo sugerido,
como veremos, faz uso desse SO (Operating System)
juntamente com um módulo que torna seu kernel full
preemptive.

3.1 O módulo laboratorial
O módulo laboratorial desenvolvido é constituído por dois tanques (um reservatório e o outro controlável), duas bombas, duas válvulas (que compõe a
válvula seletora de fluxo), um radiador (planejado
para futuras aplicações de controle_de_temperatura),
um computador e uma placa de comunicação entre o
computador e o sistema físico, desenvolvida como
parte integrante deste trabalho. Para sua execução
foram utilizados materiais convencionais, de baixo
custo, disponíveis no mercado. Assim, os tanques
são tambores de alumínio, as bombas são automotivas de combustível e o sistema_de_refrigeração utiliza
um radiador convencional. Os itens de maior custo
são os sensores, de nível e temperatura (figura 2).

2.1 Linux
Linux é o nome que se dá ao núcleo (kernel) de
(SO) desenvolvido pelo finlandês Linus Torvalds em
1993, inspirado no sistema MINIX, desenvolvido
pelo prof. Andrew S. Tanenbaum. Embora Linus
tenha dado o pontapé inicial, e seja a ele atribuído o
seu desenvolvimento, o Linux foi e ainda é fruto de
esforços de milhares de usuários e programadores ao
redor do mundo. Por ser distribuído sob a licença
GPL (GNU, 2007), qualquer pessoa pode modificálo para atender s suas necessidades. Assim, ele vem
sendo adotado para diversas utilidades indo muito
além de computadores, passando para celulares, tablets e vídeo-games.

3.2 O sistema mecânico do módulo
O sistema mecânico da planta é constituído pelas bombas e pela válvula seletora de fluxo. O nível
do tanque controlável é realizado pelas bombas, sendo uma responsável por encher o tanque e a outra por
esvaziar. No sistema mecânico completo da planta
existem dois fluxos independentes de líquido, um
referente ao controle_de_nível e outro ao controle de
temperatura (nesta aplicação foi utilizado o fluxo
referente ao nível do tanque).

272

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

crocontrolador. Uma foto do sistema desenvolvido
pode ser vista na figura 3 a seguir

Figura 1. Esquema simplificado da planta com os fluxos

O fluxo controlado foi o referente  malha que engloba, nessa ordem, o tanque 2, a bomba 2, o tanque
1, o radiador, a bomba 1, o seletor e novamente o
tanque 2. Nesse caso vale ressaltar que o tanque 2 é o
reservatório, o tanque 1 é o controlável, ou seja, onde
se deseja ter o controle do nível, o radiador fica desligado (não interferindo no sistema). Existem duas
formas de esvaziar o tanque 1 para se efetuar o controles de nível, sendo que ambos dependem do posicionamento dos tanques. Se o tanque 2 estiver numa
altura menor que o tanque 1 pode-se economizar
energia e esvaziar o tanque 1 pelo princípio dos vasos comunicantes, sem a necessidade do uso da
bomba. Caso os tanques estejam na mesma altura a
bomba 1 é ativada para esvaziar o tanque 1. Se houver necessidade de esvaziar com uma velocidade
maior o tanque controlável, a bomba 1 é ativada,
independente da altura dos tanques.

Figura 3. Interface de comunicação desenvolvida

Para o fechamento da malha foram utilizados dois
sensores
ópticos
de
distância,
modelo
GP2Y0A21YK, cuja saída analógica em função da
distância de reflexão é mostrada na figura 4 que apresenta comportamento totalmente não_linear, o que
introduz complexidades adicionais para implementação do controle em malha_fechada para o sistema.

Figura 4. Gráfico do Sensor- Tensão de saída pela distância
Figura 2. A planta real

O microcontrolador efetua a aquisição destes dados
analógicos, efetua sua digitalização e envia para o
computador, onde são processados, em tempo_real
pelo RTAI sendo a resposta enviada para os atuadores, utilizando para isto o canal digital analógico da
interface desenvolvida. Os atuadores usados para o
controle_de_nível são duas válvulas de 127VCA, e
duas bombas 12VCC. Para controlar a vazão das
bombas é utilizado o PWM (Pulse Width Modulation
ou Modulação de Largura de Pulso) que é uma maneira simples de se controlar motores. Vale ressaltar
que a placa desenvolvida permite, adicionalmente 
utilização dos quatro atuadores, que outros quatro
possam ser utilizados, sendo dois com alimentação
127VCA e os outros dois com alimentação 12VCC.

3.3 A placa de comunicação
Para se realizar o controle_em_tempo_real foi
necessário efetuar o desenvolvimento de uma placa
de comunicação que realizasse o processo de interface entre o computador e o módulo laboratorial utilizado. Para isto, foi utilizado um microcontrolador
PIC 16F877. A comunicação da placa com o computador é através da porta_serial RS-232 que é um padrão para troca serial de dados binários. Para que
isso fosse possível foi utilizado um circuito eletrônico que converte os sinais vindos da porta_serial do
computador, que variam entre -12V e +12V, para
sinais compativeis com o padrão TTL de 5V do mi-

273

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

3.3.1Microcontrolador
Na placa de aquisição desenvolvida foi utilizado, como base, o microcontrolador PIC16F877A,
desenvolvido pela Microchip. Pode-se observar na
Figura 5, o diagrama de pinos do microcontrolador
utilizado, que possui 8 conversores ADC de até 10
bits, 2 módulos CCP (Comparação, Captura e PWM)
e periférico de comunicação serial.

Figura 6. Exemplo de PWM

3.4 Sensor
O sensor de distância utilizado nesse trabalho
foi escolhido por sua facilidade de uso, pois o fabricante garante seu funcionamento entre as distâncias
de 10 a 80 centímetros do líquido e gera valores analógicos de tensão em sua saída correspondentes 
distância, de acordo com a figura 4. Trata-se de um
sensor IR (infra-vermelho), mais econômico que um
sonar e mais eficiente que outros IRs alternativos.
Maiores informações podem ser obtidas em
httpwww. pololu.comcatalog product136
A relação matemática entre a tensão de saída do
sensor versus a distância a que se encontra do objeto
refletido (mostrada na figura 4) é claramente não
linear, porém esta dificuldade pode ser atenuada utilizando-se a relação entre a tensão de saída e o inverso da distância medida, o que gera uma curva praticamente linearizada na faixa de trabalho do sensor.
De acordo com o fabricante, uma relação linear
mostra a distância do objeto refletido é aproximadamente igual a um fator de escala constante (27
V.cm) dividido pela tensão de saída do sensor.

Figura 5. Diagrama de Pinos - PIC16F877A

No sistema desenvolvido, o microcontrolador é responsável por converter os valores analógicos dos
sensores em valores digitais, enviar e receber os dados do computador através da porta_serial e acionar
todos os atuadores da planta.
3.3.2 PWM
A modulação_por_largura_de_pulso ou PWM
(Pulse-Width Modulation) é uma técnica comumente
utilizada em circuitos_digitais para controlar a velocidades de motores CC outra técnica possível para
controlar a velocidade de motores seria o controle
analógico, mas para o presente trabalho optou-se
pela técnica PWM, pois esta implementação foi possível utilizando apenas um bit, enquanto uma técnica
analógica exigiria bits adicionais, e consequentemente um conversor digitalanalógico.
O PWM gera um ciclo de ondas quadradas, como
mostrado na Figura 6, e a variação da largura do pulso possibilita que ocorra uma variação da tensão média aplicada ao motor, conseguindo assim controlar
sua rotação. Esta técnica, pela simplicidade e facilidade de implementação, foi selecionada para o presente trabalho.

Figura 7. Sensor IR utilizado

3.5 O sistema_de_controle
O programa de controle do Módulo Laboratorial é composto por 3 partes distintas integradas. A
primeira é constituída por um processo executado no
espaço do usuário que é responsável pelo processamento dos sinais gerados pelos sensores através de
um filtro noise-spike. Essa parte também possui um
PID digital através do qual a resposta s bombas
pode ser tatá de forma a otimizar o controle do nível.
A segunda parte é uma GUI (Graphical User Inter-

274

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

face) que torna o controle por parte do usuário amigável por mascarar os recursos de programação da
parte anterior através de uma interface_gráfica construída com widegets GTK (GPL). Nessa interface, o
operador pode inserir as constantes do PID (Kp, Ki,
Kd), o nível de líquido desejado e o controle manual.
Também é possível visualizar, em umas segunda
janela, o gráfico da evolução do nível do líquido,
conseguido através da biblioteca PLplot (GPL). A
terceira parte é um conjunto de FIFOs que são responsáveis pela comunicação entre a GUI e o processo de controle da planta (uma FIFO para a comunicação GUI-Processo, e outra FIFO para a comunicação no sentido contrário).

Na forma de um infograma, o núcleo do sistema em
tempo_real LinuxRTAI possui a seguinte estrutura
(figura 9)

3.6 O PID
Para obter melhor uso da planta, foi utilizado
um PI digital, sendo executado em tempo_real na
tarefa principal do sistema_de_controle da planta. Seu
código é uma implantação da equação

Figura 9. Infograma básico

A informação contida na FIFOESCRITA é uma
sequência de 48 bits na seguinte forma

Vn  k p 1  ki  en  k p en 1 ,

Tabela 1. Protocolo de escrita na FIFO

onde Vn representa a variação necessária na vazão

PWM (16)
Ki (8)

V da bomba no instante n, e en 1  h f  hn 1 o erro,
definido como a diferença entre o nível desejado e o
nível medido pelo sensor no instante n-1.

Iniciarinterromper (8)
Kp (8)
Ks (8)

A compreensão correta do protocolo é tarefa do Módulo de Controle.
As tarefas executadas pelo núcleo de tempo_real podem ser visualizadas na seqência de comandos a
seguir, na forma de um pseudo código, que detalha
as operações realizadas

3.6 A Interface Gráfica

Módulo
início
(8 bits) dado
(8 bits) comando
lerportaserial(dado)
escrevefifoescrita(dado)
lêfifoleitura(comando)
enviaportaserial(comando)
fim

Figura 8. Interface gráfica do controle da bomba

No âmbito do controle, baseado em LinuxRTAI, as
informações são adquiridas através da porta_serial,
processadas em tempo_real e então enviadas para o
atuador, efetuando o controle da bomba, em função
dos dados adquiridos. Utilizou-se, nesta primeira
tentativa de aplicação do sistema LinuxRTAI o controle PWM anteriormente descrito para o controle do
nível do tanque. A implementação do sistema envolveu, entre outras dificuldades, a questão dos ruídos associados s malhas_de_controle_de_nível. Observou-se, assim, muita oscilação do sinal proveniente do sensor, decorrente não só de ruídos elétricos do
sistema e do sensor, mas também da oscilação natural do líquido. (Esta situação pode ser vista na figura
10).

RTIME now
rtsetperiodicmode()
rtfcreate(FIFO, 4000)
task  rttaskinit(nam2num("SERTST"), 1, 0, 0)
res  rtspopen(COM1, BAUD, NUMBITS,
STOPBITS, RTSPPARITYODD,

RTSPNOHANDSHAKE,
RTSPFIFODISABLE)
rtspclearrx(COM1)
rtspcleartx(COM1)
rtmakehardrealtime()
tickperiod 
startrttimer(nano2count(TICKPERIOD))
now  rtgettime()
rttaskmakeperiodic(rttask, now + tickperiod,

275

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

tickperiod)
rtfget(FIFO, buffer, sizeof(buffer))
controle0  buffer
rtspreadtimed(COM1, controle0, 1, nano2count(MS100))

4 Resultados
Foram realizados diversos testes para se verificar as condições de operação do sistema desenvolvido. Pode-se registrar algumas dificuldades associadas ao ajuste do sensor e dos ganhos do sistema, dada os ruídos presente nas malhas_de_controle_de_nível.

Figura 12. Resposta para uma alteração de nível - PI

5 Conclusão
Pode-se concluir pela total factibilidade do desenvolvimento de módulos de baixo_custo, para operação_em_tempo_real, que podem ser utilizados na
educação_em_engenharia_de_controle. Merece destaque o fato que o sistema operacional utilizado, o núcleo LinuxRTAI, é FOSS, sendo, portanto, de livre
distribuição e utilização, o que representa um ganho
adicional para a proposta.
Adicionalmente s facilidades financeiras de obtenção e utilização do software_livre no presente desenvolvimento, há que se caracterizar os aspectos
positivos do FOSS, haja vista a construção do conhecimento compartilhado e o trabalho em rede. Assim, diversas dificuldades surgidas ao longo desta
implementação puderam ser superadas através de
troca de informações, compartilhamento de módulos,
e mesmo auxílio on-line da comunidade ligado ao
FOSS, particularmente ao LinuxRTAI. Fica claro
que é possível realizar funções de forma equivalente
ou até melhor do que as realizadas com softwares
proprietários, geralmente utilizados em muitas das
aplicações atualmente existentes nos laboratórios
universitários.
Uma questão interessante sobre a utilização do LinuxRTAI é que os códigos ao final do trabalho não
ficaram tão complicados e difíceis de entender porque, além da preocupação com a elaboração de um
programa com características didáticas, de fácil compreensão, a linguagem utilizada para a programação
facilitou no processo de desenvolvimento, tornando
o código menor do que o esperado.
Os resultados obtidos por este trabalho, que
terão continuidade no âmbito do curso de Engenharia
Elétrica da UFJF, estimulam a utilização dos FOSS,
nas diversas aplicações, quer nos ambientes laboratoriais acadêmicos, quer nos ambientes industriais,
para desenvolvimento ou treinamento_de_operadores.

Figura 10. Resposta para alteração de nível - PWM

A figura 10 mostra o resultado obtido para o
controlador no modo PWM quando foi inserida uma
perturbação na forma da alteração de referência do
tanque 1, que foi alterada de 20 para 40 do valor
final. Pode-se observar que o sistema demorou cerca
de 50s para alcançar a nova referência, valor este
compatível com as constantes do tempo do módulo
desenvolvido e componentes utilizados. Pode-se
também observar a presença de ruídos nos sinais
amostrados, bem como alguns picos, provenientes,
provavelmente, de oscilações no sinal do sensor.

Figura 11. Resposta para uma alteração de nível - PI

O gráfico 11 mostra a resposta do sistema para
uma alteração do nível de 40 para 55, mas utilizando agora uma estrutura PI no algoritmo velocidade. Dadas as sintonias utilizadas, observa-se um
comportamento muito parecido com o anterior, com
estrutura PWM. Observa-se ainda que os resultados
apresentam os ruídos característicos anteriormente
observados. A figura 12 mostra a ação da bomba e o
erro do sistema em relação  referencia.

Agradecimentos
Agradecimento ao Programa de Educação Tutorial do MECSESu pelo suporte para o desenvolvimento deste trabalho.

276

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

Richard Stallmans Personal Home Page, Disponível em httpwww.stallman.org. Acessado em 220022010
Sedra, A. S. and Smith, K. C., Microeletrônica. 5th
ed. Pearson Prentice Hall. 2007
The Free Software Definition, Disponível em
httpwww.gnu.orgphilosophyfree-sw.html.
Acessado em 220022010

Referências Bibliográficas
A Comunidade de Software Livre do Governo
Federal  Portal Software Livre, Disponível
em
httpwww.softwarelivre.gov.brcomunidadeno-governo. Acessado em 220022010
Aboutrtai  RTAI  Official Website, Disponível
emhttpswww.rtai.orgindex.php?modulepag
emasterPAGEuserop
viewpagePAGEid2MMNposition22
. Acessado em 220022010
Ações  Portal Software Livre, Disponível em
httpwww.softwarelivre.gov.brplanejamentocislacoes. Acessado em 220022010
International Free and Open Source Science
Foundation,
Disponível
em
httpwww.ifossf.org.
Acessado
em
220022010
Feisel, L. D. and A. J. Rosa,  The Role of the
Laboratory in Undergaduate Engineering
Education,
Journal
of
Engineering
Education, January, p. 121-130, 2005.
FOSS Government PolicyStrategic Importance of
FOSS  Wikibooks, collection of open-content
textbooks,
Disponível
em
httpen.wikibooks.orgwikiFOSSGovernmen
tPolicyStrategicImportanceofFOSS.
Acessado em 220022010
Free Software Foundation, Disponível em
httpwww.fsf.org. Acessado em 220022010
GNU
Project.
Disponível
em
httpen.wikipedia.org
wikiGNUoperatingsystem.
Acessado
em
22022010
Internacional Open Source Network, Disponível
em httpwww.iosn.net. Acessado em
220022010
Kheir, N. A, K. J. strm, D. Auslander, K. C.
Cheok, G. F. Franklin, M. Masten and M. Rabins,Control Systems Engineering Education,Automatica,vol.32, n.2,pp.147-166, 1996.
Murray, M. R., editor, Future Directions on Control, Dynamics and Systems Report , Control
in an Information Rich World, California Institute of Techonology, june, 2002.
Open Source Initiative, Disponível em
httpopensource.org
.
Acessado
em
220022010
Peterson, G. D, Feisel, L. D., A Colloquy on Learning Objectives For Engineering Education Laboratories, Proc.American Society for Engineering
Education,
Annual
ConferenceExposition, 2002
Pololu - Sharp GP2Y0A21YK0F Analog Distance
Sensor
10-80cm,
Disponível
em
httpwww.pololu.comcatalogproduct136.
Acessado em 220022010
Portal
Software
Livre,
Disponível
em
httpwww.softwarelivre.gov.br. Acessado em
220022010
277