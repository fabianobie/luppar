XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

BASES MÍNIMAS PARA A DIAGNOSE DE FALHAS DE SISTEMAS A EVENTOS
DISCRETOS. PARTE I EVENTOS ESSENCIAIS PARA A DIAGNOSE E
TRAJETÓRIAS PRIMAS
Saulo T. de Souza Lima, João Carlos Basilio, Stéphane Lafortune, Marcos V.
Moreira


COPPE - Programa de Engenharia Elétrica, Universidade Federal do Rio de Janeiro, 21949-900, Rio
de Janeiro, RJ, Brazil.



Department of Electrical Engineering and Computer Science, University of Michigan, Ann Arbor, MI
48109, USA.
Emails saulotelles@poli.ufrj.br, basilio@dee.ufrj.br, stephane@eecs.umich.edu,
moreira@dee.ufrj.br
Abstract The main purpose of a fault diagnosis system is to infer and inform the fault occurrence in a
system based on online information on the system behavior. One approach to fault diagnosis is through the
construction of a discrete-event model of the system whose fault occurrence must be diagnosed, and, based on
this model, a so-called diagnoser is constructed. Diagnosers are deterministic automata whose states are sets
formed with the states of the system automaton (plant) together with labels that indicate if the trace occurred
so far possesses or not the fault event. The decision regarding the fault occurrence (diagnosis) is taken by
considering only the observed events, i.e., those events whose occurrence can be recorded by sensors. This raises
the following question are all the observable events being used really necessary to diagnose the fault occurrence?
This paper presents the theoretical background for the development of a search algorithm to find all subsets of
the set of observable events (diagnosis bases) that can be used to diagnose fault occurrences.
Keywords

Discrete event systems, fault diagnosis, Sensor selection.

Resumo O objetivo de um sistema para diagnose_de_falhas é inferir e informar a ocorrência de falhas em
um sistema a partir de informações recebidas em tempo_real sobre o comportamento desse sistema. Uma das
maneiras de se abordar esse problema é por meio da construção de um modelo a eventos discreto do sistema
cuja ocorrência de falhas deve ser diagnosticada e, a partir desse modelo, são construídos os chamados diagnosticadores.Diagnosticadores são autômatos determinísticos cujos estados são conjuntos formados pelos estados do
autômato do sistema (planta), juntamente com marcações que indicam se a sequência de eventos ocorrida possui
ou não o evento associado  falha. A decisão sobre a ocorrência da falha (diagnose) é tomada considerando-se
somente os eventos que tenham sido observados, isto é, registrados pelos sensores. A seguinte pergunta pode,
então, ser feita todos os eventos observáveis que estão sendo utilizados são realmente necessários para se diagnosticar a ocorrência da falha em questão? Este artigo apresenta a base teórica para o desenvolvimento de um
algoritmo de busca capaz de encontrar todos os subconjuntos do conjunto dos eventos observáveis (bases para a
diagnose) capazes de diagnosticar a ocorrência de falhas.
Palavras-chave

.

Introdução

o comportamento do sistema, sem contudo levá-lo
a parar. Dessa forma, o objetivo de um sistema de
diagnose_de_falhas é inferir e informar a ocorrência
de falhas tendo como base somente os eventos que
tenham sido observados, isto é, registrados pelos
sensores.

Diagnose de falhas em sistemas_a_eventos_discretos (SEDs) tem despertado grande interesse
nos últimos anos (Sampath et al., 1995 Sampath et al., 1996 Debouk et al., 2000 Contant
et al., 2006 Jiang et al., 2003b Lunze e Schroder, 2001 Thorsley e Teneketzis, 2005 Qiu e Kumar, 2006 Jiang et al., 2003a Kilic, 2008 Zad
et al., 2005 Athanasopoulou et al., 2010). Uma
das razões para esse interesse é o fato de modelos a eventos_discretos poderem ser aplicados não
só a sistemas em que esses modelos são o mais
apropriado (sistemas de computação, redes_de_comunicação e de manufatura, por exemplo), como
também a diversos sistemas_dinâmicos de variáveis
contínuas (SDVC), uma vez esses sistemas podem
também ser modelados como SEDs dependendo
do grau de abstração.
As falhas a serem diagnosticadas são eventos
não-observáveis, isto é, eventos cujas ocorrências
não podem ser registradas por sensores e alteram

O problema da diagnose_de_falhas foi trazido
para o contexto de SED por Lin (1994), que introduziu o conceito da capacidade de se diagnosticar
a ocorrência de uma falha em um sistema. Logo
a seguir, Sampath et al. (1995) apresentaram condições necessárias e suficientes para a diagnose de
SED e propuseram a construção de um autômato
diagnosticador que permite tanto inferir sobre a
capacidade de diagnosticar as falhas presentes no
sistema quanto ser usado para realizar a diagnose
de falhas em tempo_real. O diagnosticador é, por
definição, um autômato no qual cada estado é formado por um conjunto de estados do autômato a
ser analisado. Os estados do diagnosticador são
construídos de forma a representar uma estima-

4809

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

tiva do estado atual do sistema, após a ocorrência
de um evento observável e possui marcações que
indicam se a sequência de eventos ocorrida possui
ou não a falha.
Sendo a diagnosticabilidade de um sistema dependente do conjunto de eventos observáveis, é
natural considerar a possibilidade de se diagnosticar a ocorrência de uma falha tendo como eventos observáveis somente parte daqueles que realmente podem ser observados. O problema de se
encontrar um subconjunto do conjunto de eventos observáveis que permite a diagnose_de_falhas
em SEDs já foi considerado em alguns trabalhos
(Debouk et al., 2002 Jiang et al., 2003b TravéMassuys et al., 2006). Em Debouk et al. (2002) e
em Jiang et al. (2003b), a formulação do problema
é feita no sentido de se encontrar a seleção de sensores que minimiza um funcional de custo (seleção
ótima), sendo que essa seleção precisa manter uma
dada propriedade por exemplo, escolher um subconjunto do conjunto de eventos observáveis que
possui menor cardinalidade (custo a ser minimizado) e que permita a diagnose_de_falhas (propriedade a ser mantida).
O objetivo deste artigo difere de todos os outros citados, já que o interesse é encontrar todos os
subconjuntos do conjunto de eventos observáveis
que permitam a diagnose_de_falhas em um SED,
situação ainda não abordada em publicações na
área de Diagnose de Falhas em SEDs. Nessa primeira parte do artigo, serão apresentados os fundamentos teóricos necessários para o desenvolvimento de um algoritmo de busca capaz de encontrar todos os subconjuntos do conjunto de eventos
observáveis que podem ser usados para diagnosticar a ocorrência de falhas.
Este artigo está estruturado da seguinte
forma. Na seção 2 será feita uma breve revisão dos
resultados sobre diagnose centralizada com observação parcial mais relevantes a esse artigo. Na seção 3 serão apresentados os chamados conjuntos
de eventos essenciais para a diagnose e na seção 4
será introduzido o conceito de trajetórias primas.
Comentários finais serão feitos na seção 5.
2

em Sampath et al. (1995) para a diagnosticabilidade de uma linguagem, a seguinte hipótese deve
ser introduzida.
A4. L é diagnostícavel com relação a Po  E  
Eo e Ef .
Seja, portanto, G0d  (Xd0 , Eo0 , fd0 , 0d , x00d ) um
diagnosticador supondo observação parcial, i.e.,
G0d é capaz de observar somente os eventos pertencentes a Eo0  Eo  por essa razão, G0d será referido como diagnosticador centralizado com observação parcial ou simplesmente diagnosticador
parcial. Com isso, o seguinte resultado pode ser
enunciado.
Teorema 1 (Basilio e Lafortune, 2009) Sejam Gd  (Xd , Eo , fd , d , x0d ) e G0d 
(Xd0 , Eo0 , fd0 , 0d , x00d ) diagnosticadores supondo observação total e parcial, respectivamente, i.e.,
Eo0  Eo e Eo0 6 . Então, Obs(Gd , Eo0 ) 
(Xd , Eo0 , fd , d , x0d ) (o observador de Gd com relação a projeção Poo0  Eo  Eo0 ) e G0d são iguais
considerando-se a seguinte equivalência de estados
xd



xd1 , xd2 , . . . , xdn   Xd , xdi  Xd 
n

x0d 
xdi  Xd0 .
i1

Além disso, fd0  fd .

2

Note que, como L(G0d )  L(Obs(Gd , Eo0 )) 
Poo0 (L(Gd )), sendo Poo0  Eo  Eo0 , então, embora a linguagem gerada pelo diagnosticador centralizado com observação total seja, por hipótese,
viva, a linguagem gerada por um diagnosticador
parcial não é necessariamente viva. Considere a
seguinte definição (Basilio e Lafortune, 2009).
Definição 1 (Ciclos escondidos e ciclos escondidos indeterminados) Suponha que x0d 
Xd0 tenha sido obtido agrupando-se os estados
xd1 , xd2 , . . . , xdn  Xd . Então existe um ciclo escondido em x0d se para algum i1 , i2 , . . . , ik  
1, 2, . . . , n, xdi1 , xdi2 , . . . , xdik  forma um ciclo em Gd . Além disso, se x0d é um estado incerto
e todos os estados xdi1 , xdi2 , . . . , xdik são certos,
então o ciclo escondido é denominado indeterminado.
2

Diagnose centralizada com observação
parcial

A definição de diagnosticabilidade de uma linguagem L (Sampath et al., 1995) leva em consideração
não somente a linguagem gerada, mas também o
conjunto de eventos observáveis e a partição dos
eventos de falha. A dependência da diagnosticabilidade em relação ao conjunto de eventos observáveis sugere que pode ser possível que uma linguagem L seja diagnosticável com relação  projeção
Po0  E   Eo0 (Ramadge e Wonham, 1989) e Ef ,
em que Eo0  Eo . Esse problema é denominado diagnose centralizada com observação parcial. Para
abordar esse problema, além das hipóteses feitas

Observação 1 De agora em diante no texto, os
ciclos indeterminados que não são escondidos serão referidos como ciclos observados indeterminados.
2
Os ciclos escondidos são representados nos diagramas de transição de estados dos diagnosticadores
parciais por laços tracejados os ciclos escondidos indeterminados serão rotulados como ihc (do
inglês indeterminate hidden cycle) e os ciclos escondidos em estados certos, em estados normais

4810

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

Teorema 3 (Basilio e Lafortune, 2009) Suponha que a linguagem L, gerada por G 
(X, E, f, , x0 , Xm ), em que E  Eo  Euo , seja
diagnosticável com relação a Po  E   Eo e
Ef  f   Euo . Então, L será diagnosticável com relação a Po0  E   Eo0 , Eo0  Eo , e
Ef  f  se, e somente se, G0teste não possuir
ciclos indeterminados, em que G0teste é definido
de acordo com a equação (1).
2

ou em estados incertos em que o ciclo escondido
é formado por estados normais ou por estados incertos de Gd que não formam um ciclo indeterminado serão rotulados simplesmente como hc, uma
vez que, conforme será visto mais  frente, eles
não levam a perda de diagnosticabilidade quando
se tem observação parcial dos eventos.
O teorema a seguir provê uma condição necessária e suficiente para a diagnose_de_falhas sob
observação parcial.

3
Teorema 2 (Basilio e Lafortune, 2009) Suponha
que a linguagem L seja diagnosticável em relação
 projeção Po e Ef . Então L será também diagnosticável em relação  projeção Po0  E   Eo0 ,
Eo0  Eo , e Ef  f  se, e somente se, G0d não
tiver nenhum ciclo indeterminado (observados e
escondidos).

Conjuntos de eventos elementares para
a diagnose

O resultado apresentado no teorema 2 traz as seguintes questões é possível encontrar diferentes
subconjuntos do conjunto de eventos observáveis
que também permitem que a linguagem gerada
por um autômato seja diagnosticável? Qual o subconjunto de eventos observáveis de menor cardinalidade necessário para a diagnose_de_falhas centralizada? Será possível, de forma sistemática, encontrar todos os subconjuntos Eo0 do conjunto de
eventos observáveis capazes de permitir a diagnose
de uma linguagem gerada por um autômato?
De forma a responder as questões acima, considere o autômato G  (X, E, f, , x0 , Xm ), em
que E  Eo  Euo , e suponha que a linguagem
L gerada por G seja diagnosticável em relação a
Po  E   Eo e Ef  f . Além disso, suponha que Eo0  Eo , Eo0 6 , e que Gd e G0d denotem, respectivamente, os diagnosticadores centralizados para G supondo observação total e parcial
dos eventos observáveis. Nesse ponto, as seguintes
definições são necessárias.

O teorema 2, embora apresente uma condição
necessária e suficiente para a diagnosticabilidade
centralizada da linguagem gerada por um autômato sob observação parcial, não permite identificar as sequências que levaram  perda de diagnosticabilidade. Quando for necessário obter essas sequências, deve-se considerar o seguinte autômato
G0teste  G0d kGd  (Xt , Eo , ft , t , x0t , Xmt ). (1)
Note que o estado xt de G0teste possui a seguinte
estrutura
xt  (x0d , xd ),
em que x0d  Xd0 e xd  Xd .

Definição 4 (Bases para a diagnose) O conjunto
Eo0 é uma base para a diagnose se L for diagnosticável com relação a Po0  E   Eo0 e Ef  f .
2

Definição 2 Um estado xt de G0teste é um estado
certo se x0d e xd forem ambos estados certos, e
incerto se xd for um estado certo e x0d for um
estado incerto.
2

Definição 5 (Bases mínimas para a diagnose) O
conjunto Eo0 é uma base mínima para a diagnose
se Eo0 é uma base para a diagnose e se, para todo
subconjunto não vazio Eo00 de Eo0 , L não for diagnosticável com relação a Po00  E   Eo00 e
Ef  f .
2

Definição 3 Um ciclo em G0teste será um ciclo indeterminado se o ciclo correspondente (observado
ou escondido) em G0d for indeterminado.
2
Da definição de G0teste dada pela Eq. (1), não é
difícil observar que

1
0
L(G0teste )  Poo
L(Gd )  L(Gd ),
0 (L(Gd ))

A partir das definições 4 e 5, tem-se que
o problema de se encontrar todos os conjuntos
Eo0  Eo para o qual L é diagnosticável com relação a Po0  E   Eo0 pode também ser formulado da seguinte forma dado um autômato
 uo ,
G  (X, E, f, , x0 , Xm ), em que E  Eo E
e supondo que Eo seja uma base para a diagnose,
encontre todos os conjuntos Eo0  2Eo  Eo , 
que também sejam bases para a diagnose de L.
De acordo com as definições 4 e 5, a diferença
principal entre uma base para a diagnose e uma
base mínima para a diagnose é com relação  natureza dos eventos. Os eventos de uma base mínima

1
em que a projeção inversa Poo
0 é em relação a Eo
e não em relação a E. É sabido que uma condição
necessária e suficiente para que a linguagem L seja
não-diagnosticável com relação a Po0 e Ef é a existência de sequências ambíguas sa em relação a Po0
e Ef . O resultado a seguir mostra que G0teste pode
ser utilizado não somente como um teste para a diagnosticabilidade, mas também para se encontrar
todas as sequências ambíguas sa  L com relação
a Po0 e Ef .

4811

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

são todos essenciais, no sentido de que a falta de
um dos eventos dessa base implica na perda de diagnosticabilidade da linguagem gerada. Por outro
lado, uma base não mínima possui eventos redundantes, no sentido de que nem todos os eventos da
base são necessários para diagnosticar a ocorrência da falha. Essas observações são formalizadas
na definição a seguir.

Teorema 4 Suponha que Ncetf denote o número
de conjuntos de eventos de uma trajetória de falha
de Gd e sejam Eetf,i , i  1, 2, . . . , Ncetf , os conjuntos de eventos de todas as possíveis trajetórias
de falhas de Gd . Então, uma condição necessária
para que Eo0  Eo seja uma base para a diagnose
de L (linguagem gerada por G) e Ef  f  é que
Eo0

Definição 6 (Conjuntos de eventos redundantes)
Suponha que o conjunto Eo0 seja uma base para a
diagnose e que Eo0 i  Eo0 , i  1, 2, . . . , Nb , denote
todas as bases mínimas para a diagnose que podem
ser formadas com os eventos pertencentes a Eo0 .
Então, o conjunto formado por todos os conjuntos
de eventos redundantes de Eo0 é

(2)

k
k
k
tal que j+1
, j+2
, . . . , n1
  Eo  Eo0 . É fácil verificar que xkdY,j , xkdY,j+1 , . . . , xkdY,n forma um
ciclo escondido indeterminado no estado x0dY N 
Xd0 que contém UR(xdY N , Eo  Eo0 ), que, de
acordo com o teorema 2, implica que L é nãodiagnosticável com relação a Po0  E   Eo0 e
Ef  f  contradizendo assim, a hipótese de
que Eo0 é uma base para a diagnose.
2

b

2
Suponha, agora, que xdY N , xdY , xdN  Xd denotem, respectivamente, estados incertos, certos e
normais de Gd . Sob a hipótese de que L é diagnosticável com relação a Po e Ef , é sempre possível
definir o seguinte subconjunto de Xd 


Eetf,i 6 , i  1, 2, . . . , Ncetf .

Demonstração Suponha que Eo0 seja uma
base para a diagnose e que, para algum k 
1, 2, . . . , Ncetf , Eetf,k  Eo0  . Então, para
algum xdY N  XYY N , existirá uma trajetória de
k
falha PYk  (xdY N , 0k , xkdY,1 , 1k , . . . , n1
, xkdY,n ),
xkdY,j  xkdY,n para algum j  1, 2, . . . , n  1

Ered (Eo0 )  Eo0  Eo0 1 , Eo0  Eo0 2 , . . . , Eo0  Eo0 N .

XYY N



Observação 2 Note que a condição imposta pelo
teorema 4 não é suficiente. Como será esclarecido
em exemplos apresentados mais  frente, é possível que a condição (2) seja satisfeita, embora Eo0
não seja uma base para a diagnose. A condição
necessária e suficiente para que Eo0 seja uma base
para a diagnose é aquela apresentada no teorema
2.
2

xdY N  Xd  (xdY  Xd    Eo )
fd (xdY N , )  xdY .

Note que para cada estado de XYY N é sempre possível definir, pelo menos, uma trajetória
PY  (xdY N , 0 , xdY,1 , 1 , . . . , n1 , xdY,n ) que satisfaz s seguintes condições (i) xdY,n  xdY,i
para algum i  1, 2, . . . , n  1, i.e., os estados (xdY,i , xdY,i+1 , . . . , xdY,n ) formam um ciclo (ii)
(xdY,i , xdY,i+1 , . . . , xdY,n ) é o único ciclo existente
na trajetória. O conjunto XYY N será referido como
conjunto de estados-origem de trajetórias de falha
(CEOTF) e a trajetória PY como trajetória de falha. Os elementos de XYY N são chamados estadosorigem de trajetórias de falha (ou simplesmente
estados-origem, quando o contexto assim o permitir).

Está claro que, para que a ocorrência da falha
seja diagnosticada, pelo menos um evento de cada
trajetória de falha deve ser observável. Este fato
leva  definição de conjuntos de eventos elementares para a diagnose.
Definição 8 (Conjunto de eventos elementares
para a diagnose - CEED) Suponha que Eetf,i ,
i  1, . . . , Ne seja um conjunto de eventos de uma
trajetória de falha of Gd . O conjunto de todos os
conjuntos de eventos elementares para a diagnose
de Gd é definido como se segue

Definição 7 (Evento de uma trajetória de falha,
conjunto de eventos de uma trajetória de falha)
A. Um evento   Eo é um evento de uma trajetória de falha se  pertence a qualquer trajetória
de falha definida para algum estado pertencente a
XYY N .
B. Um conjunto de eventos de uma trajetória de
falha (CETF), denotado por Eetf , é um conjunto
formado por todos os eventos de uma trajetória de
falha.
2

Eeed



Ee  Ee,1  Ee,2  . . .  Ee,Ne 
E

(Ee,1 , Ee,2 , . . . , Ee,Ne )  21 etf,1 
E

E

21 etf,2  . . .  21 etf,Ne ,
E

sendo 21 etf,i  Ee  2Eetf,i  Ee   1.

(3)
2

O algoritmo abaixo sugere uma forma sistemática
de se encontrar todos os conjuntos de eventos elementares para a diagnose de Gd .

A definição de conjunto de eventos de uma trajetória de falha permite que se chegue a uma condição necessária para que um conjunto Eo0  Eo
seja uma base para a diagnose.

Algoritmo 1

4812

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

Passo 1 Construa o diagnosticador centralizado
Gd e encontre o conjunto de estados-origem
de trajetórias de falha (XYY N ) de Gd . Defina
XYY N   NY N .

?


c

1

ed

3

d




XYY N ,
1

Passo 2 Para cada estado-origem xdY N,i 
i  1, 2, . . . , NY N construa uma árvore com
raiz xdY N,i , como se segue
(i) Defina Yd (xdY N,i )    d (xdY N,i ) 
fd (xdY N,i , )  xdY  e suponha que
Yd (xdY N,i )  nY N,i . Crie nY N,i descendentes de xdY N,i e rotule-os como xdY , em que
xdY  fd (xdY N,i , ),   Yd (xY N,i ). Rotule
os ramos (xdY N,i , xdY ) como 
(ii) Um nó rotulado como xdY , definido na
árvore, será uma folha se o estado xdY já tiver rotulado algum ancestral of xdY . Caso
contrário, defina d (xdY )  nY . Crie nY
descendentes de xdY e rotule-os como xdY,new ,
em que xdY,new  fd (xdY , ),   d (xdY N,i ).
Rotule os ramos (xdY , xdY,new ) como .

2



d
a


6

b

e


w

5


i


w



c

3
b

b

- 4

i

d

Figura 1 Autômato do exemplo 1.
Algoritmo 1, identificar suas folhas, e na sequência formar as trajetórias que se iniciam na raíz e
terminam nas folhas. Em particular, a árvore da
figura 3 possui 6 folhas, que definem as seguintes
trajetórias

Passo 3 Para cada árvore Ti , i  1, 2, . . . , NY N ,
identifique suas folhas xdY,i ,   1, . . . , Li ,
em que Li é o número de folhas da árvore

Ti . Forme trajetórias PY,i
,   1, . . . , Li ,
iniciando em xdY N,i e terminando em xdY,i ,
  1, . . . , Li (essas trajetórias são, na verdade, as trajetórias de falha que se iniciam
em xdY N,i ).
Passo 4 Forme os conjuntos de eventos de uma

trajetória de falha (CETFs) Eetf,i
, i 
1, . . . , NY N ,   1, . . . , Li utilizando as tra
jetória PY,i
obtidas no passo anterior.

1
PY,2



(4Y, 5N , c, 3Y , b, 4Y , c, 3Y ),

2
PY,2
3
PY,2
4
PY,2
5
PY,2
6
PY,2



(4Y, 5N , c, 3Y , b, 4Y , d, 4Y ),



(4Y, 5N , c, 3Y , a, 6Y , b, 3Y ),



(4Y, 5N , d, 4Y , d, 4Y ),



(4Y, 5N , d, 4Y , c, 3Y , b, 4Y ),



(4Y, 5N , d, 4Y , c, 3Y , a, 6Y , b,
3Y ).

Pode-se verificar então que os conjuntos de eventos associados a essa trajetória de falha são, res1
2
pectivamente, Eetf,2
 b, c, Eetf,2
 b, c, d,
3
4
5
Eetf,2
 a, b, c, Eetf,2
 d, Eetf,2
 b, c, d,
6
Eetf,2  a, b, c, d. Construindo-se árvores cujas raízes são rotuladas com os estados xdY N,1
e xdY N,3 são obtidas outras seis trajetórias, cujos conjuntos de eventos de trajetória de falha
1
2
(CETFs) são dados por Eetf,1
 d, e, Eetf,1


Passo 5 Com os CETFs obtidos no passo 4,
construa o conjunto formado pelos conjuntos
de eventos elementares para a diagnose, de
acordo com a equação (3).
2
Exemplo 1 Considere o autômato G  (X, E, f,
, x0 , Xm ) mostrado na figura 1 e suponha que
Eo  a, b, c, d, e e Ef  f . De acordo com o
algoritmo 1, para encontrar os conjuntos de eventos elementares para a diagnose, o primeiro passo
é identificar os estados-origem de Gd . Da figura
2 pode-se concluir que XYY N  xdY N,1 , xdY N,2 ,
xdY N,3 , em que xdY N,1  1N, 2Y , xdY N,2 
4Y, 5N  e xdY N,3  3Y, 5N . O próximo passo
do algoritmo 1 é construir uma árvore para cada
estado-origem. A figura 3 mostra a árvore construída de acordo com o passo 2 do algoritmo 1 para
o estado origem xdY N,2  4Y, 5N . Baseado nas
árvores, é possível, como descrito no passo 3 do

?

c

1N, 2Y 

1

d
R

e

a

3Y, 5N 
b

?

3Y  
b 


M

a c

4Y, 5N 

b

d

U

6Y 

1 De forma rigorosa, o grafo a ser construído no Algorithm 1 não é uma árvore pois nós distintos podem ter o
mesmo rótulo. A principal razão para a marcação de dois
nós diferentes com o mesmo rótulo vem do fato que o diagnosticador possui ciclos e, portanto, é possível que exista
mais de uma trajetória que leva de um estado-origem a um
estado certo.

c

4Y 
1

b
R

5N 

O

d

O

b

Figura 2 Diagnosticador centralizado do exemplo
1.

4813

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

e PNc associadas a dois ciclos de G0teste e que possuem, necessariamente, um ciclo no final, quais
sejam

4Y, 5N 

d

c

h4Y 

3Y  h

b

a

4Y  h

c

d
h6Y 

d
h4Y 

3Y 

h3Y 

b

b
h3Y 

PYc
PNc

c

4Y  h

a

b
3Y 

Figura 3 Árvore correspondente ao estado-origem
xdY N,1  4Y, 5N .
3
1
b, c, e, Eetf,1
 a, b, c, e, Eetf,3
 a, b,
2
3
Eetf,3
 a, b, c e Eetf,3
 a, b, d.
Assim, de acordo com o passo final do algoritmo 1, os seguintes conjuntos de eventos elementares para a diagnose (CEEDs) são obtidos

Eeed



a, b, d, a, b, c, d, b, d, b, c, d,
a, b, d, e, a, b, c, d, e, b, d, e,
b, c, d, e, a, c, d, a, c, d, e.

(4)
2

Observação 3 O exemplo 1 mostra que a menor
cardinalidade possível para um conjunto de eventos observáveis capaz de diagnosticar a ocorrência
do evento ed é igual b, d  2.
2
4

(5)
(6)

q não necessariamente igual a r, e que possuem
as seguintes propriedades (i) PYc e PNc começam e terminam, respectivamente, nos estados
xtY,q e xtN,r de G0teste  (ii) as segundas componentes dos estados de PYc são estados certos de
Gd  (iii) as segundas componentes dos estados de
PNc são estados normais de Gd ou estados incertos de Gd que não são estados de um ciclo indeterminado (iv) as primeiras componentes dos
estados de PYc e de PNc são estados incertos de
G0d que formam um dos ciclos indeterminados responsáveis pela perda de diagnosticabilidade (v)
xtY,i (xtN,i0 ) não são necessariamente diferentes de
xtY,j (xtN,j0 ) para qualquer i, j  q, q + 1, . . . , n
(i0 , j 0  r, r + 1, . . . , m) (i.e. essas trajetórias
podem ter um ou mais ciclos internos).
De forma a associar sequências com trajetórias é necessário estender PYc e PNc em direção ao
estado inicial de G0teste . Isso pode ser feito da seguinte forma

6Y 

4Y 

 (xtY,q , Y,q , . . . , Y,n , xtY,q ),
 (xtN,r , N,r , . . . , N,m , xtN,r ),

P 0Y
P 0N




(xt0 , Y,0 , . . . , Y,q1 , PYc ),
(xt0 , N,0 , . . . , N,r1 , PNc ).

(7)
(8)

Defina sY e sN como
sY
sN

Trajetórias primas e cobertura para
uma trajetória com ciclos inerentes




Y,0 . . . Y,q1 (Y,q . . . Y,n1 Y,n ) ,
N,0 . . . N,r1 (N,r . . . N,m1 N,m ) ,

em que   N. Note que, como Poo0 (sY ) 
Poo0 (sN ), então trajetórias definidas pelas equações (7) e (8) guardam as mesmas informações que
as sequências sY e sN , necessárias para o acréscimo de eventos a Eo0 com o intuito de tornar L
diagnosticável com relação a Po00 e Ef . Considere
as seguintes definições.

Para cada ciclo indeterminado de G0d , devem existir dois traços arbitrariamente longos sY , sN 
Ld que satisfaçam s seguintes condições (i)
fd (x0d , sY )  xdY e fd (x0d , sN )  xdN , em que
xdY (xdN ) é um estado certo (respectively, normal or uncertain) de Gd que pertence a um ciclo
de estados certos (respectivamente, normais ou incertos, mas que não formam um ciclo indeterminado)  (ii) Poo0 (sY )  Poo0 (sN )  s0Y N , em que
s0Y N é tal que fd0 (x00d , s0Y N )  x0dY N , com x0dY N
pertencente a um ciclo indeterminado de G0d . Portanto, para cada ciclo indeterminado (mas não escondido) de G0d , devem existir, pelo menos, dois
ciclos em Gteste , com as seguintes características
(i) um ciclo formado por estados cujas primeiras
componentes sejam estados x0dY N de G0d , alcançados através do traço s0Y N e, cujas segundas componentes sejam estados certos xdY de Gd , alcançados através do traço sY  (ii) outro ciclo formado
por estados cujas primeiras componentes sejam as
mesmas do ciclo anterior (x0dY N ), e cujas segundas
componentes sejam estados normais xdN de Gd ou
estados incertos de Gd que não são estados de um
ciclo indeterminado, ambos alcançados através do
traço sN . Suponha duas trajetórias fechadas PYc

Definição 9 (Trajetórias primas) Considere o
autômato G  (X, E, f, , x0 , Xm ) que satisfaz s hipóteses A1A3.
Uma trajetória
(x0 , 0 , x1 , 1 , . . . , n1 , xn ) de G que se inicia no
estado inicial x0 é uma trajetória prima se satisfizer s seguintes condições
1. xi 6 xj para todo i 6 j e i, j 
0, 1, 2, . . . , n  1
2. k  0, 1, 2, . . . , n  1 tal que xn  xk .
2
Todas as trajetórias primas de G podem ser encontradas através da construção de uma árvore T
com raíz x0 , de forma similar  árvore obtida de
acordo com o algoritmo 1.
Algoritmo 2 (Algoritmo para a obtenção de todas as trajetórias primas de um autômato)

4814

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

Passo 1 Rotule a raíz de T com x0 .

Exemplo 2 Considere a parte de um autômato
mostrada na Figura 4(a) e a árvore correspondente, na Figura 4(b). Considere a trajetória com ciclos inerentes Plc  (3, 32 , 2, 22 ,
2, 23 , 3, 31 , 1, 12 , 2, 23 , 3).
Embora existam
muitas formas de se definir P0 , o procedimento
para a obtenção de sua cobertura é o mesmo.
Considere agora a seguinte possibilidade P0 
(0, u, 1, 13 , Plc ). Seguindo a árvore através de
P0 , a primeira trajetória prima a ser formada é
Pcpp,1  (0, u, 1, 13 , 3, 32 , 2, 22 , 2), que termina
na folha rotulada com 2X. A segunda trajetória
prima é obtida como se segue retorne até que o
primeiro nó rotulado com 2 seja alcançado (rotulado na Figura 4(b) com 2 para fins de clareza)
e, na sequência, siga a árvore através da continuação de P0 depois do estado 2 (estado de P0 em
que a busca parou no passo anterior) até que uma
nova folha seja alcançada (rotulada com 3X na
Figura 4(b)). A nova trajetória prima encontrada
é, portanto, Pcpp,2  (0, u, 1, 13 , 3, 32 , 2, 23 , 3).
De forma a obter a próxima trajetória prima, é
necessário retornar ao ancestral de 3 com mesmo
rótulo (rotulado na Figura 4(b) com 3), e proceder como no passo anterior. No presente caso,
a nova folha alcançada é 1X, que leva a Pcpp,3 
(0, u, 1, 13 , 3, 31 , 1). Como anteriormente, se faz
necessário retornar ao ancestral de 1 com mesmo
rótulo (nó rotulado com 1, na Figura 4(b)) e seguir a árvore como descrito por P0 até que uma
nova folha seja alcançada. Porém, embora o último estado de P0 tenha sido alcançado, ele não
corresponde a uma folha da árvore. Nesse caso,
é necessário voltar ao estado de P0 que corresponde ao primeiro estado de Pl e continuar através de P0 até que uma folha seja alcançada (folha rotulada com 2XX na Figura 4(b)). Portanto, foi encontrada a última trajetória prima de
P0 , que é Pcpp,4  (0, u, 1, 12 , 2, 23 , 3, 32 , 2). O
conjunto C(P0 )  Pcpp,1 , Pcpp,2 , Pcpp,3 , Pcpp,4  é
uma cobertura para P0 pois todos os eventos de
P0 foram utilizados. É importante observar que
se o processo tivesse sido continuado, a próxima
trajetória prima a ser encontrada seria Pccp,5 
(0, u, 1, 12 , 2, 22 , 2), que, claramente, é diferente
de todas as trajetórias primas da cobertura encontrada. Entretanto, como os eventos 12 e 22 já
foram levados em conta, a trajetória Pccp,5 é uma
trajetória prima redundante para C(P0 ).
2

Passo 2 Defina (x0 )  n0 e x  f (x0 , ),  
(x0 ). Crie n0 descendentes de x0 e rotuleos com x e os correspondentes ramos (x0 , x)
com .
Passo 3 Um nó rotulado com x, definido na árvore, será uma folha se o estado x já tiver rotulado algum ancestral de x. Caso contrário,
defina (x)  n e xnew  f (x, ),   (x).
Crie n descendentes de x e rotule-os com
xnew e os correspondentes ramos (x, xnew )
com . Repita esse passo até que todos os
estados xnew sejam folhas.
Passo 4 Identifique todas folhas xl de T e forme
todas as possíveis trajetórias que se iniciam
na raíz e terminam em xl .
2
Seja
Plc  (xl , l , xl+1 , l+1 , . . . , n1 , xn , n , xl ) (9)
uma trajetória que se inicia e termina no mesmo
estado de G, em que xi não é necessariamente
diferente de xj , i 6 j, i, j  l, l + 1, . . . , n e
defina a seguinte trajetória com ciclos inerentes
P0  x0 , 0 , x1 , 1 , . . . , xl1 , l1 , Plc ).

(10)

Definição 10 (Trajetórias primas para cobertura) Considere a trajetória com ciclos inerentes P0 definida na equação (10). Uma trajetória
prima para cobertura de P0 é qualquer trajetória
prima que pode ser obtida de P0 .
2
Definição 11 (Cobertura para uma trajetória
com ciclos inerentes). Denote por C(P0 ) 
P0,cpp1 , P0,cpp2 , . . . , P0,cpp  o conjunto formado
por  trajetórias primas para cobertura de P0 e suponha que E0,cppi , i  1, 2, . . . , , e EP0 sejam os
conjuntos de eventos que aparecem em P0,cppi e
P0 , respectivamente. Então C(P0 ) será uma cobertura para P0 se e somente se i1 E0,cppi 
EP0 .
2
Observação 4 Das definições 9, 10 e 11 pode-se
concluir que qualquer trajetória prima é uma trajetória prima para cobertura, e consequentemente,
uma cobertura para si própria.
2

5

Com isso, o seguinte lema pode ser enunciado,
cuja prova está mostrada em Lima (2010).

Conclusão

Nessa primeira parte, foram apresentados os conceitos e teoremas fundamentais para o desenvolvimento de um algoritmo de busca de todas as bases mínimas para a diagnose_de_falhas em sistemas
a eventos_discretos, o qual consistirá na segunda
parte do presente artigo (Lima et al., 2010).

Teorema 5 Suponha duas trajetórias do autômato G, Plc e P0 definidas de acordo com as Equações (9) e (10), respectivamente. Então, sempre
existirá uma cobertura C(P0 ) para P0 .
2

4815

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

1

u

event systems, IEEE Transactions on Robotics
and Automation 19(2) 310323.

Y

1

21
6

12
0

31

2
23

Jiang, S., Kumar, R. e Garcia, H. E. (2003b). Optimal sensor selection for discrete-event systems
with partial observation, IEEE Transactions on
Automatic Control 48(3) 369381.

22

*

?


q

v

i

j

13

32
3

Kilic, E. (2008). Diagnosability of fuzzy discrete event
systems, Information Sciences 178(3) 858870.

(a)
0

u
1

13

3

12

3 h

32

2

31

2 h

h1X

21

Lima, S. T. S. (2010). Diagnose centralizada de falhas de sistemas_a_eventos_discretos robusta 
perda permanente de sensores, Tese de Mestrado,
UFRJCOPPE - Programa de Engenharia Elétrica.

v

22

Lima, S. T. S., Basilio, J. C., Lafortune, S. e Moreira,
M. V. (2010). Bases mínimas para a diagnose de
falhas de sistemas_a_eventos_discretos. Parte II
algoritmo de busca, XVIII Congresso Brasileiro
de Automática, Bonito, MS. (submetido para
apresentação).

21 23

h2

1

22

31

h3

32

23
1

h3X

h2X

1 h

2XX

Lin, F. (1994). Diagnosability of discrete event systems and its applications, Discrete Event Dynamic Systems Theory and Applications 4 197
212.

(b)
Figura 4 Autômato simplificado e árvore para
o cálculo da cobertura para uma trajetória com
ciclos inerentes.

Lunze, J. e Schroder, J. (2001). State observation
and diagnosis of discrete-event systems described
by stochastic automata, Discrete Event Dynamic
Systems Theory And Applications 11(4) 319
369.

Agradecimentos
Os autores agradecem ao CNPq e ao NFS, EUA,
pelo apoio financeiro que tornou possível a realização desse trabalho.

Qiu, W. e Kumar, R. (2006). Decentralized failure
diagnosis of discrete event systems, IEEE Transactions on Systems, Man and Cybernetics, Part
A 36(2) 384395.

Referências

Ramadge, P. J. e Wonham, W. M. (1989). The control of discrete-event systems, Proceedings of the
IEEE 77 8198.

Athanasopoulou, E., Lingxi, L. e Hadjicostis, C.
(2010). Maximum likelihood failure diagnosis in
finite state machines under unreliable observations, IEEE Transactions on Automatic Control
55(3) 579 593.

Sampath, M., Sengupta, R., Lafortune, S., Sinnamohideen, K. e Teneketzis, D. (1995). Diagnosability of discrete-event systems, IEEE Trans. on
Automatic Control 40 15551575.

Basilio, J. C. e Lafortune, S. (2009). Robust codiagnosability of discrete event systems, Proceedings
of the American Control Conference, St. Louis,
Missouri, pp. 22022209.

Sampath, M., Sengupta, R., Lafortune, S., Sinnamohideen, K. e Teneketzis, D. (1996). Failure diagnosis using discrete event models, IEEE Trans.
on Control Systems Technology 4 105124.

Contant, O., Lafortune, S. e Teneketzis, D. (2006).
Diagnosability of discrete event systems with
modular structure, Discrete Event Dynamic
Systems-Theory And Applications 16(1) 937.

Thorsley, D. e Teneketzis, D. (2005). Diagnosability of
stochastic discrete-event systems, IEEE Trans.
on Automatic Control 50 476492.

Debouk, R., Lafortune, S. e Teneketzis, D. (2000).
Coordinated decentralized protocols for failure
diagnosis of discrete event systems, Discrete
Event Dynamic Systems Theory and Applications 10 3386.

Travé-Massuys, L., Escobet, T. e Olive, X.
(2006).
Diagnosability analysis based on
component-supported analytical redundancy relations, IEEE Transactions on Systems, Man,
and Cybernetics  Part A Systems and Humans
36 11461160.

Debouk, R., Lafortune, S. e Teneketzis, D. (2002).
On an optimization problem in sensor selection,
Discrete Event Dynamic Systems Theory and
Applications 12 417445.

Zad, S. H., Kwong, R. e Wonham, W. (2005). Fault diagnosis in discrete-event systems incorporating
timing information, Automatic Control, IEEE
Transactions on 50(7) 10101015.

Jiang, S., Kumar, R. e Garcia, H. E. (2003a). Diagnosis of repeatedintermittent failures in discrete

4816