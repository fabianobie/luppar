Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

VANTAGENS DO DESENVOLVIMENTO INTERNO DE SISTEMAS DE AUTOMAÇÃO
E CONTROLE O CASO DA LIASA  LIGAS DE ALUMÍNIO SA
EMERSON M. A. ALVES1, RENATO D. MAIA2, GLÊNIO M. MENDONÇA1, GLAUBER N. GOMES1
1. Departamento de Processos, LIASA  Ligas de Alumínio SA

CEP 39270-000, Pirapora, Minas Gerais
E-mailsprocessos8@liasa.com.br, tecno@liasa.com.br, processos5@liasa.com.br
2. Departamento de Ciências da Computação,Universidade Estadual de
Montes Claros Departamento de Engenharia de Controle e Automação,Faculdade de Ciência e Tecnologia
de Montes Claros Instituto de Ciências Agrárias,Universidade Federal de Minas Gerais
E-mailrenato.dourado@unimontes.br
Abstract
 The goal of this paper is to discuss the advantages of internal project development, specifically the experience related to the work that was developed at LIASA  Ligas de Alumínio SA, a major producer of silicon metals. Since 1998, the
company has needed to quickly develop specific systems which had to be agile and easily modifiable. This flexibility and agility
was required  not only for updates and upgrades of primary automation systems  but also to test experimental systems that
were necessary to support complex industrial processes which is common in this type of industry. LIASAs approach to internal
development enabled the company to use the widest variety of available resources. This not only applied to classical automation
systems with programmable logic controllers and SCADA software, but also to the incorporation of new technologies from the
IT sector such as the use of industrial computers with data acquisition boards, and integration of these technologies using OPC
(OLE for Process Control). Internal development allowed us to design and develop new equipment  such as boards with microcontrollers  which are currently being used at the plant. Along with these innovations, weve also incorporated the development
of supervisory software and control systems, using cutting-edge multitasking application resources. These incorporate various
control algorithms, use standard network protocols like MODBUS TCPIP, communicate with database servers, and make use of
programming languages such as C++, C and Assembly (Assembly is being used to program microcontrollers in critical systems,
such as phase firing angles).Currently, the factory is using a multidisciplinary team which works as a production crew. This
framework has produced several lucrative patents for the company.
Keywords
 Automation, internal development, industrial computer, PLC, OPC, C++ Builder, Data acquisition.
Resumo
 Este trabalho tem como objetivo discutir as vantagens do desenvolvimento_interno de projetos, especificamente a experiência do trabalho desenvolvido na LIASA  Ligas de Alumínio SA, uma metalúrgica de grande porte produtora de silício
metálico. Desde 1998, a empresa tem a necessidade de rapidamente desenvolver sistemas específicos que demandam agilidade
nas constantes atualizações e melhorias. Essa flexibilidade é necessária não apenas para atualizações e upgrades dos sistemas
primários de automação, mas também para testar sistemas experimentais para dar suporte ao dinamismo dos processos_industriais complexos que são comuns nesse tipo de indústria. O processo de desenvolvimento_interno possibilitou a utilização dos mais
variados recursos disponíveis no segmento de automação, desde os clássicos sistemas com controladores lógico-programáveis e
softwares SCADA, até a incorporação das novas tecnologias da computação, com a utilização de computadores industriais com
placas de aquisição_de_dados e a integração dessas tecnologias utilizando OPC (OLE for Process Control). O desenvolvimento
interno permitiu a utilização da engenharia para projetar e desenvolver novos equipamentos  como placas de controle com microcontroladores  que estão atualmente em operação dentro do processo_industrial. Aliado a esses avanços, foi incorporado o
desenvolvimento dos softwares supervisórios e sistemas_de_controle utilizando recursos de aplicações multitarefa, que incorporam vários algoritmos de controle, a utilização não só de protocolos como MODBUS TCPIP, servidores de banco_de_dados, como também das linguagens C++, C e Assembly (a linguagem Assembly é utilizada para a programação_de_microcontroladores em
sistemas críticos, como, por exemplo, no controle de disparo de ângulo de fase com a utilização de tiristores). Atualmente, a usina tem uma equipe multidisciplinar que conduz os trabalhos em conjunto com as equipes de produção. Esse modelo tem produzido várias patentes e retorno financeiro para a usina.
Palavras-chave
 .

1 Introdução
A LIASA  Ligas de Alumínio SA foi fundada em
29 de novembro de 1966 pelo Engenheiro Metalurgista Dr. José Patrus da Sousa, professor das Universidades Federais de Ouro Preto e de Minas Gerais. A
empresa foi pioneira na produção de silício metálico
na América Latina e a primeira no mundo a utilizar
carvão vegetal como redutor na produção de silício
metálico. Atualmente, é a maior produtora de silício
metálico do hemisfério sul e está localizada em Pirapora  MG.
Especificamente na indústria metalúrgica, em

ISBN 978-85-8001-069-5

que ocorrem processos complexos e dinâmicos, a utilização da automação e controle tem crescido, podendo ser destacadas as seguintes potenciais áreas de
aplicação
Energia elétrica





Controle dos tapes transformadores
Controle das temperaturas de refrigeração
dos transformadores
Controle da qualidade_da_energia_elétrica
com a medição das harmônicas
Controle da demanda e controle da resistên-

3156

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.




cia dos eletrodos
Controle dos consumos energéticos e
Controle de fator_de_potência utilizando banco_de_capacitores.

Metalúrgica e processos










Controle do escorregamento dos eletrodos
Controle do posicionamento dos eletrodos
Controle das temperaturas da sola do forno
Montagem e confecção das cargas, considerando toda a estequiometria metalúrgica
Controle das curvas de aquecimento de materiais refratários
Controle da temperatura dos sistemas de refrigeração dos fornos
Controle e automação da injeção de gases
para o refino do material final
Controle de rotação dos fornos e
Controle dos níveis de silos e reservatórios.

Logística



Identificação e rastreamento de lotes de materiais e
Sistema de montagem de blending de materiais para compor especificações químicas.

A demanda por desenvolvimento de sistemas de
controle e automação está em função das potencialidades nas etapas do processo metalúrgico. Dessa forma, automação e controle passam a ser parte integrante do processo de produção metalúrgico.
A LIASA possui uma experiência bem sucedida
com a implantação do desenvolvimento_interno de
sistemas_de_automação e controle, que será apresentada neste artigo, cuja organização é a seguinte a Seção 2 apresenta uma comparação entre os modelos de
desenvolvimento de sistemas_de_automação e controle interno e por terceiros a Seção 3 detalha as arquiteturas de hardware e software dos sistemas de
automação desenvolvidos pela equipe da LIASA a
Seção 4 discute a utilização de banco_de_dados e a
geração de relatórios a Seção 5 comenta sobre o desenvolvimento_interno de placas de controle a Seção
6 apresenta um breve histórico sobre o desenvolvimento_interno de sistemas na LIASA e, por fim, a Seção 7 apresenta a conclusão.
2 Modelos de Desenvolvimento de Sistemas de
Automação e Controle
1.1 Desenvolvimento por Terceiros
O modelo de desenvolvimento de sistemas_de_automação e controle por terceiros é realizado de acordo
com as seguintes etapas
1.
2.

Descrição do escopo do projeto
Apresentação do escopo

ISBN 978-85-8001-069-5

3.
4.
5.
6.
7.
8.
9.
10.
11.
12.
13.
14.

Cotação com empresas terceirizadas
Contratação da empresa
Levantamento das necessidades
Entendimento do processo por parte da equipe de desenvolvimento
Elaboração do Memorial Descritivo
Elaboração do projeto
Aprovação
Desenvolvimento
Implantação
Startup
Testes e
Suporte.

Uma vez o sistema de automação e controle entregue, atendido o projeto inicial, com aceite do cliente, para que qualquer alteração seja realizada é necessário passar por algumas dessas etapas de desenvolvimento. Esse processo tem uma inércia natural,
mesmo em situações de testes ou alterações simples,
que pode inviabilizar as modificações, inibindo a implantação de algumas atualizações que frequentemente se fazem necessárias para atender  dinâmica do
processo_industrial. Outros fatores a serem considerados são os custos, não só os envolvidos na realização das alterações, mas também os de deslocamento
das pessoas envolvidas no projeto.
Outra desvantagem a ser destacada no contexto
desse modelo, além da impossibilidade de desenvolvimento rápido e emergencial, é o custo elevado de
suporte em caso de urgência.
O desenvolvimento por terceiros é vantajoso
somente com relação  eliminação do custo de manutenção de uma equipe interna, sendo justificado em
empresas que não possuem demanda elevada de sistemas_de_automação e controle ou empresas cujos
processos são estanques ou suficientemente desenvolvidos e padronizados, sem espaço para melhoria
contínua em termos de controle e automação.
2.2 Desenvolvimento Interno
Utilizando-se o modelo de desenvolvimento_interno
de sistemas_de_automação e controle, é possível montar uma equipe própria em um ambiente de criatividade. Nesse ambiente é possível impor um ritmo
dinâmico de trabalho que seja capaz de acompanhar
as necessidades de desenvolvimento para atender não
apenas s evoluções dos processos metalúrgicos, como também s demandas de alterações inerentes ao
ambiente não-linear e multivariável dos fornos de redução a arco submerso, consequência das constantes
mudanças nas características das matérias-primas e
alterações das características desejadas para os produtos finais, além de permitir adequações s mudanças nos conceitos operacionais.
O desenvolvimento_interno proporciona, ainda,
vantagens como a criação de inovações aplicadas ao
processo da empresa, gerando patentes.

3157

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

No contexto da LIASA  Ligas de Alumínio
SA, destaca-se a criação do Departamento de Automação com profissionais não apenas da área de Controle e Automação, mas também da Engenharia de
Processos. Essa estruturação, além de eliminar a etapa de entendimento do sistemaprocesso por equipes
externas, facilita a identificação de novas necessidades e a atualização da planta elimina-se por completo a difícil interface processoautomação.
Dentre os grandes avanços na Usina, vem se
destacando a possibilidade de desenvolvimento de
sistemas em caráter de teste. Os testes normalmente
são executados em paralelo com o sistema existente,
num processo piloto, e tratam das necessidades constantes de processos metalúrgicos, com períodos de
avaliação que podem ser diário, semanal ou mensal.
Essas implementações experimentais são realizadas
em curto espaço de tempo, sem envolver custos dispendiosos como os que poderiam ser gerados por
serviços terceirizados, proporcionando flexibilidade,
agilidade e total compatibilidade com as exigências
de um processo muito dinâmico.
Desde o início, as diretrizes da Diretoria e da
Gerência convergem para a manutenção e o fortalecimento de uma equipe multidisciplinar treinada e
preparada para que, no caso de um membro da equipe se ausentar, os demais sejam capazes de dar continuidade normalmente aos trabalhos, sejam eles testes,
startups, novas implementações ou manutenção.
3 Arquiteturas de Hardware e Software
O desenvolvimento_interno possibilitou a implantação de uma arquitetura de automação mais abrangente, não só com relação ao hardware, mas também
ao software. A clássica utilização de controladores
lógico-programáveis (CLPs) e softwares SCADA
(Supervisory Control and Data Acquisition) foi ampliada com a utilização de computadores industriais e
placas de controle e aquisição_de_dados, algumas delas desenvolvidas pela própria usina.
Comparado ao CLP, o processo baseado na
plataforma PC possui capacidade de processamento de dados maior uso de plataformas operacionais como o Windows XP e CE (entre outros) integração com drives como impressoras,
data-shows, redes, interface com o operador e
interação com modelos matemáticos como as
redes_neurais. O CLP leva vantagem em aplicações de intertravamento complexas, robustez
e adaptação fácil a painéis de controle. (Mecatrônica Atual, 2008).
Com a incorporação da computação na indústria, os custos de implantação de sistemas_complexos
praticamente são insignificantes quando comparados
queles dos sistemas clássicos que utilizam CLP. Por
exemplo o custo de um CLP com capacidade de processamento e memória similar ao de um computador
industrial, com 4 núcleos de processamento, 4 Gb de
ISBN 978-85-8001-069-5

memória RAM, 250 Gb de HD, placa de rede padrão
Gigabit Ethernet e slots de expansão para periféricos
é muito elevado.
Além dos custos mais acessíveis, as possibilidades tecnológicas proporcionadas pelos computadores industriais são superiores quelas nor-malmente
proporcionadas pelos sistemas baseados em CLP,
como, por exemplo a utilização de aplicações multitarefas (atualmente poucos CLPs oferecem essa possibilidade), de servidores de banco_de_dados e de todos os outros recursos disponibilizados pelos sistemas_operacionais e protocolos_de_comunicação comuns em redes_de_computadores. A Figura 1 mostra,
a título de exemplo, um computador_industrial utilizado na LIASA.

Figura 1. Computador industrial rack 19.

3.1 Linguagens de Programação
A equipe de desenvolvimento da LIASA utiliza as
linguagens de programação C e C++ e o ambiente de
desenvolvimento C++ Builder. Esse ambiente torna o
desenvolvimento de software mais ágil, uma vez que
possui vários recursos de programação organizados
em uma vasta biblioteca de componentes (Hollingworth et al., 2003).
As aplicações desenvolvidas com C++ têm se
mostrado confiáveis uma vez compiladas e testadas,
não apresentam problemas. Os sistemas_operacionais
utilizados na usina são o Windows XP e o Windows
7, que apresentam estabilidade e nenhum travamento,
tornando os sistemas com computadores industriais
confiáveis e robustos.
A utilização das linguagens C e C++ possibilita
a implementação de recursos matemáticos, estatísticos e de controle complexos, recursos esses difíceis
de implementar em controladores lógico-programáveis. A Figura 2 mostra a aplicação do sistema de
carregamento no C++ Builder.

Figura 2. Ambiente de Programação C++ Builder.

3158

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

3.2 Biblioteca de Componentes
Considerando o conceito de modularidade e reuso, ou
seja, o desenvolvimento de aplicações dentro do paradigma da orientação_a_objetos (Deitel e Deitel,
2005), foram desenvolvidas algumas classes especializadas em tarefas de controle. Aproveitando o poder
da IDE (Integrated Development Environment) do
C++ Builder, as classes foram transformadas em
componentes e agrupadas em um pacote denominado
LiasaDefault.bpl (Figura 3).

Figura 3. Gerenciador de projeto com o pacote de componentes
LIASA.

Na Figura 4 é possível visualizar a paleta de
componentes do grupo Liasa Processo, na qual estão
os componentes utilizados na usina, juntamente com
as paletas padronizadas do C++ Builder.

Figura 4. Utilização do pacote de componentes LIASA.

3.3 Aplicações Concorrentes
Atualmente, na LIASA, são comuns tarefas que devem ser executadas ao mesmo tempo, como, por exemplo, ler os valores do medidor de energia da concessionária pela porta_serial, ler as velocidades das
correias e os pesos das balanças por intermédio da
placa de aquisição_de_dados, tratar esses dados, processar algoritmos de controle e enviar o resultado pa-

ISBN 978-85-8001-069-5

ra uma placa de comando que controla a taxa de descarga da balança, trocar informações com os CLPs e
atualizar imagens na tela do software para mostrar o
processo de forma gráfica e amigável. Essas tarefas
devem ser realizadas em tempo_real. Segundo Maia
(2009), um computador opera em tempo_real quando
as ações realizadas por ele estão relacionadas com as
escalas de tempo dos processos externos. Uma aplicação que execute essas tarefas sequencialmente, ou
seja, que precise, por exemplo, aguardar a leitura de
dados da porta_serial para realizar a leitura da placa
de aquisição, processar o algoritmo de controle, enviar o valor resultante para a saída correspondente,
atualizar imagens, para novamente poder voltar ao início do processo de ler a porta_serial, está condenada ao fracasso, uma vez o tempo necessário para a
realização de todas essas operações irá provavelmente gerar atraso nas atualizações das imagens e o software aparentemente se comportará como se estivesse
travando. O operador, numa situação como essa, pode ficar confuso e realizar operações indevidas, clicando em botões para interagir com a planta, o que
pode ser perigoso e trazer sérias consequências (Filho, 2002).
Para resolver esse problema, surgiram as aplicações concorrentes, que são aquelas que executam
instruções importantes de processos sequenciais de
forma alternada, o que pode ser feito por meio da divisão da aplicação em múltiplas tarefas de um mesmo
processo ou utilizando-se múltiplos processos. Aplicações que possuem mais de uma tarefa podem tirar
proveito não só dos serviços do sistema operacional,
como também dos recursos de hardware, como processadores com mais de um núcleo de processamento
(Filho, 2002).
O sistema operacional Windows passou a dar
suporte a esse tipo de arquitetura multitarefa a partir
do Windows NT, com a utilização das threads. Threads são processos menores que podem ser executados dentro de um processo principal, que é a aplicação. Dessa forma, uma aplicação pode ter diversas
threads ou processos leves, que são executadas
concorrentemente pelo sistema operacional (na realidade, ao mesmo tempo para nossa percepção, o que
não é verdade, a menos que se tenha no computador
mais de uma CPU ou uma CPU com vários núcleos).
Na verdade, o sistema operacional programa pequenos intervalos de tempo para cada processothread, o
que gera uma ilusão de execução simultânea. Threads
e processos têm níveis de prioridade para gerenciar o
nível de concorrência caso duas threads ou dois processos devam ser executados, o sistema operacional
executa aquele(a) que tem maior prioridade (Filho,
2002).
3.4 Aplicações Distribuídas DCOM
De acordo com Hollingworth et al. (2003), COM
(Component Object Model) é uma tecnologia desenvolvida pela Microsoft, projetada para habilitar ele-

3159

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

mentos modulares de um programa a serem utilizados
por outros programas, ou seja, uma aplicação pode
acessar funções que estão implementadas em outra,
de forma transparente. COM é uma parte importante
do ambiente Windows e torna viável o mecanismo
para a programação orientada a objetos distribuídos
utilizando DCOM (Distributed Component Object
Model).
Dentro do contexto DCOM, a LIASA desenvolveu aplicações distribuídas, criando um espelhamento
baseado na arquitetura clienteservidor, via fibra ótica, permitindo o compartilhamento, de forma transparente, de funções entre objetos distribuídos.
O espelhamento foi projetado para que, na sala
de comando, o operador possa acompanhar o processo de formação da carga em tempo_real, processo
esse que é realizado pela aplicação remota, que fica a
uma distância de 300 metros, na casa de pesagem.
A Figura 5 apresenta o espelhamento. A aplicação do Forno 2 é uma aplicação cliente, enquanto a
aplicação da casa de pesagem é servidora a aplicação servidora recebe os parâmetros operacionais da
aplicação cliente e opera e de modo independente o
status mostrado pela aplicação cliente é acessado por
meio do acesso s funções exportadas pela aplicação
servidora (acesso_remoto), como se a função fizesse
parte da própria aplicação cliente.

Figura 5. Espelhamento da aplicação da casa de pesagem na sala
de comando.

posicionamento diferente.
A responsabilidade da montagem da carga é do
supervisório, desenvolvido em C++, e do computador
industrial, que amostra o peso de todas as balanças a
uma frequência de 100 Hz, realizando os cálculos estequiométricos e o processando o controle PID para a
descarga. O supervisório determina o destino da carga e envia as informações pertinentes para o CLP,
que é o responsável pelo posicionamento e por todo o
intertravamento das correias transportadoras. Uma
vez posicionadas e acionadas as correias transportadoras, um aviso é enviado ao supervisório, que inicia
o processo de montagem da carga. A comunicação
entre o CLP e o supervisório é realizada utilizando-se
o padrão OPC.
Segundo a OPC Foundation (2010), o OPC é
um padrão de comunicação aberto, que tem como
principal objetivo permitir a interoperabilidade vertical entre sistemas dentro de uma organização. A primeira versão funcional do OPC foi desenvolvida por
volta de 1996, como resultado do trabalho conjunto
entre diversos fornecedores de sistemas para automação_industrial. Desse esforço conjunto surgiu a OPC
Foundation, organização que define os padrões do
OPC e que busca constantemente a sua melhoria e
evolução.
Desde o seu surgimento, há mais de 10 anos,
novas especificações são elaboradas com o objetivo
de agregar mais funcionalidades ao padrão. A sigla
OPC significa OLE for Process Control ou OLE para
Controle de Processos. Baseado nas tecnologias Microsoft OLE COM (Component Object Model) e
DCOM (Distributed Component Object Model), o
OPC é um conjunto comum de interfaces, métodos e
propriedades de comunicação, agregados dentro de
uma especificação padronizada e aberta para acesso
público. Teoricamente, qualquer pessoa com conhecimentos sobre programação pode desenvolver aplicativos OPC basta acessar as especificações contidas
no site da OPC Foundation e desenvolver uma interface compatível. A arquitetura OPC clássica e a interface com os equipamentos de automação estão apresentadas na Figura 6.

3.5 OPC
Na planta existe a integração entre os sistemas clássicos que utilizam CLPs e os sistemas com computadores industriais. Para isso, foi utilizada a tecnologia
OPC (OLE for Process Control), de forma que, para
tarefas que demandam intertravamentos, acionamentos e controles que não necessitam de grande tratamento de dados, os CLPs são utilizados.
O sistema de carregamento da usina é composto
por 9 balanças dosadoras, que montam a carga de
800 kg em 40 s, em uma correia que faz parte de um
conjunto de 8 correias transportadoras, que são responsáveis pelo transporte e destinação das cargas para 16 silos diferentes. Nesse caso, cada silo é denominado destino e, a cada destino, corresponde um

ISBN 978-85-8001-069-5

Figura 6. Arquitetura clássica do OPC.

3160

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

OPC é uma tecnologia para conectividade entre
controladores_lógicos_programáveis, inversores de
frequência, medidores, sensores, instrumentos, IHM e
demais equipamentos de processo com qualquer tipo
de software. Antes do surgimento do OPC, para ter
acesso e controle sobre equipamentos de processo era
necessário que o fabricante fornecesse um driver de
comunicação, de modo que, para cada equipamento,
era necessário o desenvolvimento de rotinas para trabalhar com os drivers.

tilizar um servidor de banco_de_dados é que as transações são realizadas sobre os protocolos TCPIP utilizando uma porta de comunicação bem definida (no
caso do MySQL, a porta padrão é a 3306), de modo
que qualquer aplicação que tenha acesso ao servidor
pode realizar consultas ao banco_de_dados. O MySQL implementa várias políticas de segurança, sendo
elas de acesso, de leitura, de escrita, de exclusão e de
alteração da estrutura das tabelas.

4 Banco de Dados e Relatórios
O desenvolvimento_interno, utilizando as tecnologias
apresentadas na seção 3, permite o armazenamento
de grande quantidade de informações o registro do
peso de cada balança a cada 500 ms, o registro dos
status dos comandos dos equipamentos, os registros
dos parâmetros de processo inseridos pelos operadores e várias outras informações que são relevantes para cada processo. Para gerenciar essa grande quantidade de dados, foi utilizado um servidor de banco de
dados TCPIP, o MySql. Com os dados disponíveis
na base de dados, é possível relatórios que auxiliam
nas análises dos processos como exemplo, a Figura 7
mostra a tela do relatório de montagem de carga.
Figura 8. Status de funcionamento MySQL Server 5.1.

5 Desenvolvimento Interno de Placas de Controle

Figura 7. Tela do relatório de cargas.

MySQL é um banco_de_dados relacional, ou seja, permite uma separação organizada dos dados em
tabelas diferentes, sendo que dados repetidos são referenciados por índices, de modo que os resultados
das consultas são montados dinamicamente, o que
diminui o tamanho do banco_de_dados e aumenta a
velocidade de processamento das consultas. A linguagem utilizada pelo MySQL é a SQL (Structured
Query Language), que é a mais comum para acesso a
banco_de_dados. O padrão SQL foi definido em 1986
e desenvolvido pela IBM (MySQL.Org, 2010).
A Figura 8 apresenta a estrutura do banco de
dados processo, que contém as tabelas de operação
do sistema de carregamento.
Foi escolhido o MySQL por ser um software_livre, por utilizar a linguagem SQL, e pelo excelente
desempenho (MySQL.Org, 2010). A vantagem de u-

ISBN 978-85-8001-069-5

Com o desenvolvimento_interno, foi possível produzir, a custos baixos, placas de controles projetadas
pela equipe de desenvolvimento da LIASA, para atender necessidades específicas, principalmente com
relação  comunicação e  robustez.
As placas utilizam comunicação serial RS232,
RS485 ou Ethernet, implementando o protocolo de
comunicação MODBUS, adequado para ambientes
com grande incidência de interferências eletromagnéticas, como é o caso da LIASA. Todas as placas utilizam microcontroladores de 8 ou 32 bits, que são
programados em Assembly ou C (a linguagem Assembly é utilizada para a programação_de_microcontroladores em sistemas críticos, como, por exemplo,
no controle de disparo de ângulo de fase com a utilização de tiristores).
As placas são desenvolvidas utilizando-se o
software de confecção de PCI EAGLE. Uma vez o
projeto elaborado, o software gera os arquivos com a
lista de materiais e o arquivo GERBER, que é um arquivo padrão para confecção de placas de circuito
impresso. Esses arquivos são enviados para empresas
que confeccionam e montam as placas, restando 
equipe da LIASA a tarefa de inserir os microcontroladores com o firmware para colocá-las em operação.
É importante ressaltar que existem placas em
operação nos sistemas_de_automação desde 2009, o

3161

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

que demonstra a sua robustez.
O desenvolvimento_interno de placas de controle utilizando microcontroladores, muitas vezes
programados em Assembly, pode gerar uma fragilidade, caso o projeto e a programação sejam de domínio de apenas um membro da equipe. Entretanto, no
caso da LIASA, não existe tal vulnerabilidade, uma
vez que, estando o projeto pronto, é suficiente, para a
confecção de quantas placas forem necessárias, ter
em mãos os arquivos GERBER, a lista de materiais e
o firmware do microcontrolador. Nesse contexto, esses arquivos são hospedados em um diretório público
acessível por todos os membros do desenvolvimento,
e simulações de fabricação de novas placas são realizadas, de forma a dar continuidade  política de desenvolvimento de placas de controle pela própria usina.
6 Desenvolvimento Interno de Sistemas de Controle e Automação na LIASA Breve Histórico
O desenvolvimento_interno de sistemas_de_automação
e controle na LIASA iniciou-se no ano 2000, com o
desenvolvimento de um sistema_de_controle de eletrodos comandado por um software cujo desenvolvimento foi gerenciado por um Engenheiro Metalurgista. Atualmente, o sistema é patenteado pela usina e
exerce sofisticadas funções dentro do controle dos
fornos.
Em 2008, o Gerente do Departamento de Processos decidiu fortalecer a equipe de desenvolvimento de automação, contratando um estudante de
Engenharia de Controle e Automação, que já tinha
formação técnica em Automação Industrial e já prestava serviços como terceirizado para a usina desde
2004. Além disso, somou-se  equipe de Desenvolvimento e Automação outro Engenheiro Metalurgista.
A equipe, logo quando consolidada, iniciou o
estudo para o desenvolvimento de um sistema crítico
para a operação dos fornos  o sistema de carregamento. Esse sistema tem a responsabilidade de abastecer 4 fornos de redução, com potência total de 100
MW, para a produção de silício metálico.
O estudo apontou falhas no sistema anterior desenvolvido por uma empresa terceirizada, levando 
decisão de elaboração de um novo projeto, guiado
pelos mesmos princípios daqueles utilizados para o
projeto e implantação do sistema_de_controle de eletrodos utilização de computador_industrial, placas de
aquisição_de_dados e software desenvolvido em C++.
Todos os sistemas antigos foram substituídos pelo
novo software_de_controle do carregamento, que emprega integração com os PLCs via OPC, princípios
de aplicações concorrentes e aplicações remotas utilizando DCOM e vem sofrendo alterações de acordo
com as necessidades do processo. O desenvolvimento
interno está possibilitando a integração_de_sistemas
complexos, estando atualmente em andamento o projeto de integração do software_de_controle de ele-

ISBN 978-85-8001-069-5

trodos com o sistema de carregamento.
7 Conclusão
No mundo moderno e globalizado, em ambiente de
elevada competitividade, a busca por processos mais
eficientes com baixos custos de implementação e operação abre amplo espaço para opções como as apresentadas neste artigo.
Diante da rápida evolução da computação, do
baixo_custo dos componentes, da elevada capacidade
de processamento e armazenamento, robustez, e confiabilidade dos computadores industriais, dificilmente
a opção por controladores lógico-programáveis em
sistemas modernos de automação, por intermédio da
contratação terceirizada, poderá ser realizada sem
questionamentos. Para empresas de médio e grande
porte, nas quais processos complexos e dinâmicos
são comuns, Engenharia de Controle e Automação e
Engenharia de Processos devem compor um único
departamento, com acúmulo de sinergias em desenvolvimento_interno. É impossível obter essa sinergia,
flexibilidade, custo baixo, velocidade e dinamismo
por meio da contratação pura e simples de serviços
externos de automação.
A adoção do desenvolvimento_interno dos sistemas_de_controle e automação na LIASA, integrando
os departamentos de Processos e Controle e Automação, com ênfase na construção de uma equipe multidisciplinar de desenvolvimento, tem trazido benefícios operacionais e gerenciais, permitindo que o sistema possa ser prontamente adaptado para atender s
novas demandas que surgem no cotidiano da empresa, além de possibilitar que diferentes estratégias
de controle, além das que são disponíveis nos CLPs,
possam ser implementadas de forma simples e com
total domínio sobre as peculiaridades de implementação.
7 Agradecimentos
Os autores agradecem  diretoria da LIASA,
não só pelo apoio na elaboração deste artigo, como
também e, especialmente, pelo ao apoio ao Departamento de Processos, mantendo a equipe multidisciplinar de desenvolvimento de automação e controle, e
também  FACIT e  FAPEMIG pelo apoio.
Referências Bibliográficas
Deitel, H. M. Deitel, P.J. (2005). C++ How to Program. Fifth Edition. Prentice Hall.
Hollingworth, J. Swart, B. Cashman, M. Gustavson, P. (2003). Borland C++Builder 6 Developers Guide.
Maia, R. D. (2009). Desenvolvimento de Sistemas de
Controle e Supervisão em Tempo Real Introdução  Programação Concorrente. Montes Claros
3162

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

 MG.
Mecatrônica Atual. A hora e a vez do PC industrial.
Disponível em
<httpwww.mecatronicaatual.com.brsecoesleit
ura53> Acesso em 12 de março 2012.
Mehl, E. L. M. Conceitos Fundamentais Sobre Placas
de Circuito Impresso. Universidade Federal do
Paraná.
MySQL. MySQL 5.1 Reference Manual . Disponível
em
<httpdev.mysql.comdocrefman5.1enindex.
html>
OPC FOUNDATION. What is OPC? (2008). Disponível em
<httpwww.opcfoundation.orgDefault.aspx01
about01whatis.asp?MIDAboutOPC>. Acesso em 15 de março de 2012
Seixas Filho, C. Szuster, M. (2003). Programação
Concorrente em Ambiente Windows Uma Visão
da Automação. Belo Horizonte  MG. Editora
UFMG.

ISBN 978-85-8001-069-5

3163