Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

PROPOSTA DE ARQUITETURA ORIENTADA A SERVICOS PARA INTEGRACAO
DE UM SISTEMA DE MANUTENCAO INTELIGENTE
Anderson Antonio Giacomolli, Thiago Regal da Silva, Carlos Eduardo Pereira,
Renato Ventura Bayan Henriques


Departamento de Engenharia Eletrica
Universidade Federal do Rio Grande do Sul (UFRGS)
Av. Osvaldo Aranha, 103
Porto Alegre, RS, Brasil
Emails anderson.giacomolli@ufrgs.br, thiago.regal@ufrgs.br, cpereira@ece.ufrgs.br,
rventura@ece.ufrgs.br
Abstract The costs associated with equipments maintenance still represent a large portion of the resources
available to a company. Therefore, the improvement of maintenance techniques, and development of the new
ones, are growing, since they impact directly on the economic side of the companies. Thus, the current work
presents a service-oriented architecture proposal for an intelligent maintenance system. The architecture intends
to integrate equipments and degradation analysis tools, improving the health estimation process.
Keywords

Intelligent Maintenance Systems, Service-Oriented Architectures, Systems Integration.

Resumo O custo empregado na manutencao de equipamentos ainda representa uma grande parcela dos
investimentos no setor industrial. Portanto, o desenvolvimento de novas tecnicas de manutencao, bem como o
aperfeicoamento das ja existentes, cada vez e tido como foco nas corporacoes, por impactarem diretamente no
fator economico das empresas. Dessa forma, o trabalho em questao apresenta a proposta de uma arquitetura
orientada a servicos para integracao de  de manutencao inteligente. A arquitetura tem por objetivo a
integracao de equipamentos e ferramentas de analise, visando melhorar o processo de obtencao dos ndices de
saude dos equipamentos.
Palavras-chave
.

1

 de Manutencao Inteligente, Arquiteturas Orientadas a Servicos, Integracao de

Introducao

coes nos mais diversos segmentos, sejam eles a nvel de dispositivos, na implementacao de camadas
de negocios ou mesmo no setor industrial, como
apresentado em (Papazoglou and Heuvel, 2007),
(Ragavan et al., 2012) e (Choi et al., 2010). E um
conceito de arquitetura que suporta acoplamento
mnimo entre componentes, possibilitando ganhos
em flexibilidade e interoperabilidade. Por conseguinte, qualquer tipo de aplicacao pode ser representada como um conjunto complexo de servicos,
inclusive no ambito industrial (Bohn et al., 2006),
(de Deugd et al., 2006), (Colombo et al., 2010) e
(Karnouskos et al., 2010).

Atualmente, a importancia do emprego de tecnicas de manutencao no ambito industrial esta em
constante ascensao devido a necessidade de aumentar a disponibilidade e seguranca dos equipamentos, bem como a qualidade do processo produtivo (Muller et al., 2008). Dessa forma, o desenvolvimento de novas tecnicas de manutencao para uso
nas mais diversas areas e o correto planejamento
dos processos de manutencao estao cada vez mais
importantes, uma vez que impactam diretamente
no fator economico, alterando a disponibilidade do
sistema e tambem a seguranca (Zhao et al., 2010).
Nos ultimos anos, tem-se observado um crescimento no uso de um novo paradigma de
manutencao denominado de manutencao inteligente (Zhang et al., 2013). Diferentemente dos
metodos tradicionais, conhecidos por aplicar o
conserto aos equipamento somente apos a falha ou
por manterem processos de manutencao agendados baseado no historico de falhas dos componentes, o paradigma de manutencao inteligente visa
predizer a condicao do sistema e prevenir uma possvel falha.
Outra linha de pesquisa tambem esta em
constante crescimento o uso de Service-Oriented
Architecture (SOA) ou Arquiteturas Orientadas
a Servicos. O uso do padrao SOA esta evoluindo e esta cada vez mais presente em aplica-

Nesse contexto, um sistema de manutencao
inteligente tambem pode se valer da utilizacao dos
conceitos empregados pelo padrao SOA. Do ponto
de vista da arquitetura SOA, o sistema de manutencao pode conter servicos para relatorios de
saude e falhas, informacoes sobre o prognostico
do tempo de operacao sem necessidade de manutencao, alem de servicos de configuracao de ferramentas de diagnostico ou dos modos de operacao
suportados pelo equipamento. O monitoramento
remoto do sistema tambem possibilita a integracao das informacoes de saude dos equipamentos
em  Manufacturing Execution Systems
(MES) e Enterprise Resource Planning (ERP), a
fim de se obter o correto gerenciamento da cadeia
de suprimentos de pecas de reposicao (Oldham
et al., 2003).

3814

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

Com base nestes aspectos, o presente artigo
aborda a definicao de uma arquitetura orientada
a servicos para integracao de diferentes componentes que fazem parte de um sistema de manutencao
inteligente. Os componentes sao abstrados como
entidades SOA e casos de uso ilustram diferentes cenarios para a utilizacao da proposta. Dessa
forma, este trabalho esta estruturado da seguinte
maneira na secao 2 e apresentada uma analise do
estado da arte, cobrindo os dois assuntos principais empregados no artigo a secao 3 apresenta a
proposta de arquitetura na secao 4 e apresentada
a implementacao da proposta e resultados e, por
fim, a secao 5 apresenta as conclusoes.
2

jetivo definir uma convencao para troca de dados
entre elementos. A arquitetura OSA-CBM e descrita de acordo com sete camadas funcionais, ilustradas na fig. 1 (MIMOSA, 2014). As duas primeiras camadas, aquisicao e manipulacao de dados, definem o modo como os dados de sensores
ou transdutores sao obtidos, digitalizados e quais
manipulacoes de sinais sao realizadas. A camada
seguinte, identificada como deteccao do estado do
sistema, recebe os dados dos sensores e os compara com valores previamente definidos, gerando
alertas quando os limites definidos forem ultrapassados. A camada de avaliacao da saude do sistema
recebe dados da camada anterior e determina se
o sistema esta degradando. Na camada de prognostico, o tempo de utilizacao restante do equipamento e estimado, levando em conta padroes futuros de utilizacao. A camada seguinte, tomada de
decisao, tem por objetivo gerar acoes de utilizacao
para que os equipamentos preservem as condicoes
de saude ate que a proxima falha ocorra, levando
em conta o historico de operacoes e outros indicadores. A ultima camada, apresentacao, e responsavel por prover meios de visualizacao dos dados
obtidos nas camadas anteriores.

 de Manutencao Inteligente e
Arquiteturas Orientadas a Servicos

Nesta secao sao apresentados os conceitos de  de manutencao inteligente e arquiteturas orientadas a servicos, utilizados como base para a
construcao da arquitetura proposta.
2.1

 de Manutencao Inteligente

Em uma visao geral, manutencao consiste de uma
serie de medidas de prevencao, correcao e predicao
de falhas (Lee et al., 2006). Equipamentos ou maquinas tendem a deteriorar e alterar o seu padrao
de funcionamento durante o uso devido a diversos
fatores, como desgaste, rachaduras, corrosao ou
sujeira. Nessas condicoes, torna-se imprescindvel
a restauracao do sistema, a fim de evitar defeitos que podem ocasionar falhas ou indisponibilidades (Marcal and Susin, 2005).
Tres estrategias de manutencao sao encontradas na literatura classica corretiva, preventiva e
preditiva (Marcal and Susin, 2005). A corretiva
visa reestabelecer o sistema danificado a preventiva se objetiva a manter o sistema funcionando
e a preditiva visa monitorar o sistema, detectando
falhas insipientes e fornecendo meios para o planejamento de acoes preventivas ou corretivas.
Uma quarta estrategia, que esta ganhando
forca nos ultimos anos, e denominada de manutencao proativa ou manutencao inteligente (Lee
et al., 2009). Este novo paradigma esta em acensao como substituto das estrategias de manutencao preventiva. A nova estrategia visa nao somente a predicao do estado do sistema, mas tambem o diagnostico_de_falhas e a intervencao de
forma automatica. Dessa forma, no caso de falhas repentinas, o proprio sistema pode se ajustar para tomar decisoes em relacao a falha ocorrida (Goncalves, 2011).
A fim de prover uma plataforma flexvel e funcional para integrar uma variedade de  de
software e hardware, o Open Systems Architecture
for Condition-Based Maintenance (OSA-CBM) foi
criado (Thurston, 2001). O padrao tem como ob-

Apresentação

Tomada de decisão
Prognóstico
Avaliação da saúde do sistema
Detecção do estado do sistema
Manipulação dos dados
Aquisição dos dados

Figura 1 Camadas do modelo OSA-CBM.
Varios trabalhos conduzem o desenvolvimento
de tecnicas e metodologias para problemas relacionados a manutencao de predicao e prevencao (Jay
Lee, 2003), (Lee et al., 2006), (W.J. Moore and
A.G. Starr, 2006). Neste meio, o Intelligent Maintenance System Center (IMS Center) propos uma
das mais importantes ferramentas neste segmento,
denominada Watchdog Agent (Djurdjanovic et al.,
2003). O Watchdog Agent e um software composto por varios algoritmos para analise do desempenho do sistema, e que permite analisar diferentes partes de equipamentos, a fim de obter um
indicador. E composto por modulos, estruturados
de acordo com o modelo de camadas OSA-CBM.
O Watchdog Agent permite a manipulacao de
dados e extracao de padroes de sinais. O software dispoe de um conjunto de ferramentas como
Transformada Rapida de Fourier, Transformada
Wavelet, Regressao Logstica e Reconhecimento
Estatstico de Padroes (IMS CENTER, 2007).

3815

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

Combinando estas ferramentas, juntamente com
dados dos sensores, e possvel predizer a degradacao do sistema e avaliar o estado dos equipamentos.
2.2

que o servico possibilita, bem como os tipos de
dados por ele suportados. O documento tambem
pode ser estendido, definindo novos tipos de dados
para troca de mensagens.
Em uma aplicacao SOA, a descricao dos servicos disponveis e o endereco para acessa-los estao
disponveis no Universal Description Discovery Integration (UDDI). O padrao UDDI define o protocolo para os servicos de diretorio, ou intermediadores de servico, onde sao armazenadas as informacoes de cada um dos servicos da aplicacao.
Esta entidade e utilizada para informar aos clientes quais servicos estao disponveis, possibilitando
meios para descoberta e obtencao de metadados.
A interoperabilidade entre os componentes de uma
aplicacao SOA e apresentada na fig. 2.

Arquiteturas Orientadas a Servicos

Tecnicas para desenvolvimento de aplicacoes SOA
representam uma mudanca de paradigma na engenharia_de_software, onde os componentes sao definidos como servicos (Ramollari et al., 2007). Estas tecnicas, inicialmente desenvolvidas para uso
em ambiente gerencial e corporativo de empresas,
logo teve aceitacao em diversos segmentos, entre
eles, a automacao_industrial.
De forma geral, arquiteturas SOA tem como
caracterstica principal a criacao e disponibilidade
de servicos, que, quando agrupados, dao origem a
um sistema funcional (Josuttis, 2009). O termo
servico se refere a uma funcionalidade ou logica
que e encapsulada e oferecida ao sistema atraves
de uma interface. Dessa maneira, outros servicos,
entidades ou programas sao capazes de acessa-lo
e emprega-lo na resolucao de determinada tarefa.
Para que possam ser utilizados, os servicos necessitam de exposicao, a fim de que os utilizadores os encontrem (Papazoglou and Heuvel, 2007).
Portanto, uma aplicacao SOA deve prover meios
para que os servicos possam se comunicar e efetuar a troca de informacoes de forma padronizada.
Dessa forma, todos os componentes da arquitetura devem obedecer a alguns conceitos, entre eles
acoplamento mnimo, a fim de minimizar a dependencia de outros servicos contrato de servico,
utilizando um mesmo padrao de comunicacao autonomia, sendo o proprio servico responsavel pelas tarefas que executa abstracao, escondendo a
logica e recursos utilizados reuso, possibilitando
a utilizacao da mesma funcionalidade em varias
partes do sistema composicao, tendo objetivo de
organizar um conjunto de servicos para a execucao de uma tarefa mais complexa independencia de estado, onde o servico nao retem informacoes sobre as atividades executadas e possibilidade de descoberta, que permite a outros servicos
encontra-lo (Josuttis, 2009).
A troca de informacoes entre os servicos normalmente ocorre utilizando o protocolo Simple
Object Access Protocol (SOAP). Neste protocolo, as mensagens sao codificadas no formato Extensible Markup Language (XML). O protocolo
SOAP pode ser utilizado sobre diferentes protocolos de transporte, como, por exemplo, o Hypertext
Transfer Protocol (HTTP).
A descricao das interfaces dos servicos sao realizadas utilizando Web Service Description Language (WSDL). Documentos WSDL tambem sao
baseados em XML e contem a informacao necessaria para utilizacao do servico descrito. Nos documentos WSDL sao descritas todas as operacoes

Registro de
serviço

Pesquisa

Registro

Contrato de
serviço
Provedor de
serviço

Consumidor de
serviço
Cliente

Conexão e
invocação

Serviço

Figura 2 Interoperabilidade entre os elementos de
uma aplicacao SOA.
As especificacoes para web_services normalmente seguem o padrao de grafia WS- (Candido,
2013). Porem, dentre as especificacoes, o Devices
Profile for Web-Services (DPWS) define um conjunto mnimo de implementacoes que permitem a
troca de mensagens, descoberta, descricao, geracao de eventos e autenticacao para a utilizacao de
web_services em clientes com recursos computacionais limitados (Ribeiro et al., 2008). Apesar de
utilizar um conjunto mnimo de implementacoes,
clientes que utilizam DPWS podem ser integrados
a outros, com recursos mais flexveis.
O DPWS utiliza uma pilha de protocolos e especificacoes para consistencia na conexao entre os
dispositivos. Dentre as especificacoes, destacamse o WS-Addressing, utilizado para a transferencia
de mensagens, o WS-Discovery, que possibilita a
descoberta de servicos em uma rede_local, e o WSEventing, para a utilizacao de eventos. O DPWS
utiliza os protocolos Transmission Control Protocol (TCP) e HTTP para a transmissao de dados.
3

Arquitetura proposta

Um sistema de manutencao inteligente deve ser
composto por dispositivos a serem analisados, instrumentados para obtencao dos dados de sensores, e um analisador de dados, que ira determinar o nvel de degradacao dos equipamentos (Lee
et al., 2006). Contudo, as tecnicas utilizadas atualmente necessitam que os dados sejam obtidos e

3816

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

analisados separadamente dos equipamentos (IMS
CENTER, 2007). O tempo envolvido na instrumentacao do equipamento, obtencao dos dados e
posterior analise, se replicado para um numero elevado de dispositivos, torna a analise das condicoes
de degradacao uma tarefa complexa e despendiosa.
Tecnologias SOA estao cada vez mais presentes na industria e o seu uso reflete a busca pela interconexao de dispositivos distribudos (Cannata
et al., 2010). A padronizacao da comunicacao entre componentes e a facilidade de construcao de
novas aplicacoes estao entre as principais vantagens. Portanto, esta tecnica tambem pode ser
aplicada no desenvolvimento de aplicacoes de manutencao inteligente.
A fim de possibilitar a integracao dos diversos equipamentos que fazem parte de um sistema
de manutencao inteligente, uma arquitetura baseada em SOA foi definida, sendo composta por
entidades de software, cada uma responsavel por
uma tarefa especfica. As entidades sao aplicativos que se comunicam por meio de servicos e foram
identificadas com base nos requisitos da aplicacao.
Dessa forma, a integracao do sistema e realizada
por um conjunto de servicos bem definido. Esta
secao apresenta a arquitetura proposta e casos de
uso, ilustrando algumas situacoes onde o sistema
pode ser empregado.
3.1

Base
de dados

Dispositivo
Dispositivo

Dispositivo

Repositório
de serviços

Gerenciador
de dispositivos

Gerenciador
de análises

Analisador de
dispositivos

Serviços

Figura 3 Arquitetura orientada a servicos proposta para integracao de um sistema de manutencao inteligente.
sugere, possui as ferramentas necessarias para o
gerenciamento dos dispositivos na rede. A obtencao da lista de dispositivos e configuracao de cada
um deles sao tarefas executadas pelo gerenciador.
Como exemplo de configuracao esta o envio de novos comportamentos para o dispositivo.
O Gerenciador de Analises e utilizado para o
gerenciamento de planos de analise de equipamentos pelo operador do sistema. O plano de analise e
a estrutura que armazena as informacoes necessarias para que uma analise de degradacao de um
equipamento possa ser executada corretamente.
O Gerenciador de Analises possibilita o agendamento dos planos e a definicao de execucoes periodicas das analises.
No Analisador de Dispositivos os planos sao
executados. A entidade opera com base nos planos
criados pelo operador do sistema no Gerenciador
de Analises. O analisador possui as ferramentas
necessarias para manipulacao dos dados dos equipamentos e obtencao dos indicadores de saude.
A entidade Base de Dados e utilizada como
uma interface para um banco_de_dados. No banco
de dados sao armazenadas todas as informacoes
da aplicacao. Para garantir a estrutura de uma
aplicacao SOA, a entidade foi especificada com o
intuito de abstrair os acessos ao banco atraves de
servicos.
O Repositorio de Servicos armazena os dispositivos logicos e seus servicos, os quais podem
ser obtidos e implantados dinamicamente em dispositivos fsicos. Esta entidade pode fazer parte
da rede_local ou remota. Dessa forma, uma nova
aplicacao pode ser construda com base em componentes ja definidos. Com esta abordagem, tambem e possvel o compartilhamento de uma base
de dados de componentes logicos entre diferentes
aplicacoes.

Proposta de Arquitetura Orientada a Servicos

Neste trabalho, optou-se por utilizar uma arquitetura SOA para integrar de forma facilitada as
entidades do sistema. A fig. 3 ilustra as entidades
principais da arquitetura proposta. Cada entidade
e um componente SOA, responsavel por desempenhar uma tarefa especfica na aplicacao, sendo
implementados utilizando a especificacao DPWS.
Neste contexto, as entidades sao conectadas por
servicos web. A arquitetura conta com seis entidades Dispositivo, Gerenciador de Dispositivos,
Gerenciador de Analises, Analisador de Dispositivos, Base de Dados e Repositorio de Servicos.
A entidade identificada por Dispositivo e um
componente de software utilizado para abstrair
um elemento fsico da arquitetura proposta. O
dispositivo em questao e denominado de logico,
por executar embarcado em um dispositivo fsico.
Pode abrigar funcionalidades relativas ao dispositivo fsico ou outras, que auxiliam em alguma
tarefa especfica nao relacionada diretamente com
o hardware hospedeiro. A entidade controla o dispositivo fsico, obtendo os dados de sensores e enviando para um banco_de_dados. O Dispositivo
tambem pode apresentar comportamentos, definidos como o modo de operacao que o equipamento
ira assumir frente as condicoes de degradacao.
O Gerenciador de Dispositivos, como o nome

3.2

Casos de uso para a arquitetura proposta

No contexto de uma aplicacao de manutencao inteligente, a arquitetura aqui proposta pode ser
empregada em alguns casos de uso. Os casos

3817

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014
Base de dados

de uso apresentados neste trabalho exemplificam
a interacao do operador do sistema na busca ou
configuracao de dispositivos e na criacao de planos de analise para determinado equipamento. Da
mesma forma, para a execucao dos planos agendados pelo operador do sistema, foi utilizado um
ator denominado de tarefa periodica.
A descoberta e configuracao dos dispositivos
e representada pelo diagrama Unified Modeling
Language (UML) de casos de uso da fig. 4. No
diagrama sao ilustradas as interacoes que o operador do sistema pode realizar nos dispositivos utilizando o Gerenciador de Dispositivos. De acordo
com o diagrama, o gerenciador permite a visualizacao dos dispositivos encontrados na aplicacao
orientada a servicos, a busca de informacoes mais
detalhadas, atraves de metadados, bem como a
sua configuracao, com atualizacao das informacoes
e envio de novos comportamentos.

Remover
plano

Descobrir
dispositivos
e serviços

Descoberta
de serviço

<uses>

Dispositivo 2

<extends>

Obter
metadados

Operador
do sistema

<uses>

<uses>
<uses>

Editar plano
de análise

Operador
do sistema

Obter topologia
dos dispositivos

Descoberta
de serviço

Atualizar
metadados do
dispositivo

<uses>

Obter estado
do dispositivo

<uses>

Obter
estado

<uses>

Serviço de
comportamentos

Obter
plano

Aplicação orientada
a serviços

Obter
comportamentos
do dispositivo

<uses>

Descoberta
de serviço

Verificar
recursos
disponíveis

<uses>

Serviço de
metadados

Obter
ferramentas
de análise

<uses>

Obter
estado

<uses>
Dispositivo n
<uses>

Analisador de
dispositivos
Obter
ferramentas
de análise

Figura 5 Diagrama de casos de uso para o gerenciamento de analises pelo operador do sistema.
de casos de uso da fig. 6.

<uses>

Dispositivo n

Inserir
plano

Dispositivo 1

<uses>

Descoberta
de serviço

<uses>

Atualizar
comportamentos
do dispositivo

Remover plano
de análise

<uses>

Dispositivo 1

<uses>

<uses>

Criar plano
de análise

Aplicação orientada
a serviços
Gerenciador
de dispositivos

Gerenciador de
análises

Aplicação orientada
a serviços
Dispositivo

Descoberta
de serviço

Gerenciador
de dispositivos

Serviço de
atualização dos
metadados

<uses>

Descobrir
dispositivos
e serviços

Operador
do sistema

<uses>

Enviar dados
de treinamento

Serviço de
metadados

Base de dados
<uses>

Inserir
dados de
treinamento

Figura 4 Diagrama de casos de uso para descoberta e configuracao de dispositivos.

Figura 6 Diagrama de casos de uso para envio de
dados de treinamento para um dispositivo.

O gerenciamento dos planos de analise pelo
operador do sistema e ilustrado no diagrama UML
da fig. 5. Novos planos de analise podem ser criados e associados a determinado equipamento, a
fim de obter os indicadores_de_desempenho para
tomada_de_decisao. Alem das informacoes do dispositivo associado a analise, o plano tambem armazena as ferramentas, presentes no Analisador
de Dispositivos, que serao utilizadas e os comportamentos que o dispositivo deve assumir dado o
resultado obtido com a analise. Como comportamentos, entende-se as acoes realizadas pelo equipamento a fim de garantir a operacao ate que uma
manutencao corretiva possa ser realizada.
Para a obtencao dos ndices de degradacao,
as ferramentas de analise necessitam de dados de
treinamento do equipamento. O Gerenciador de
Dispositivos dispoe de meios para o envio destes
dados. O envio de dados de treinamento pelo operador do sistema e apresentado no diagrama UML

A execucao das analises dos dispositivos e
feita automaticamente por uma tarefa periodica.
No plano de analise, o operador do sistema define a frequencia de execucao de analise para cada
equipamento e, baseado nisso, uma tarefa periodica e executada no Analisador de Dispositivos.
O analisador verifica quais os planos de analise
estao ativos, os carrega e executa. Na execucao,
os dados do dispositivos sao obtidos e analisados pelas ferramentas definidas no plano de analise pelo operador do sistema. Apos finalizada a
analise, e baseado no indicador de degradacao obtido, o equipamento pode ser sinalizado a assumir
um comportamento diferente, a fim de evitar uma
maior degradacao ate que uma manutencao corretiva possa ser efetuada. A fig. 7 ilustra o diagrama
UML de casos de uso para a execucao dos planos
de analise.
Relatorios de saude dos equipamentos em analise podem ser obtidos atraves do Gerenciador de

3818

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014
Analisador de
dispositivos
Obter planos
de análise
ativos

e implementada, foi escolhido um estudo de caso
que consiste em um conjunto atuador eletrico e
valvula. O atuador em questao e utilizado para
o controle_de_fluxo em redes de distribuicao de
petroleo, permitindo abertura e fechamento dos
dutos pelo movimento da haste, cujo acionamento
e feito por um motor. O conjunto, modelo CSR6,
fabricado pela empresa Coester Automacao Ltda,
e ilustrado na fig. 9. Por se tratar de um equipamento sujeito a degradacao constante, foi escolhido como estudo de caso.

Base de dados

<extends>
<uses>

Obter plano
de análise

Inserir
resultados
da análise

Carregar plano
de análise

Tarefa
periódica

Obter
plano

<uses>

<uses>

Executar plano
de análise
<uses>

Selecionar
ferramenta
de análise

<uses>
<uses>

Obter dados
brutos

Aplicação orientada
a serviços
Dispositivo

Serviço de
comportamentos

Obter dados
do dispositivo
<uses>

Obter
comportamentos
do dispositivo

<uses>

Serviço de
metadados

<uses>

Verificar
recursos
disponíveis

<uses>

Obter
estado

Figura 7 Diagrama de casos de uso para a obtencao e execucao das analises.
Dispositivos, entidade que se comporta como interface entre o operador do sistema e os dispositivos que compoe a arquitetura. E possibilitado ao
operador do sistema realizar a busca pelos dispositivos na rede e obter os resultados das analises
anteriores. Na arquitetura proposta, os resultados
das analises sao armazenados na Base de Dados.
A fig. 8 apresenta o diagrama UML para obtencao dos relatorios de saude de um dispositivo pelo
operador do sistema.

Figura 9 Atuador eletrico modelo CSR6.
Neste trabalho, utilizou-se os dados de instrumentacao obtidos nos trabalhos de (Boesch, 2011)
e (Faccin, 2011) com intuito de avaliar somente o
comportamento das entidades da arquitetura proposta. Dessa forma, a entidade denominada Dispositivo (fig. 3) foi utilizada como um simulador
do dispositivo a ser monitorado, utilizando os dados de sensores previamente obtidos. O atuador
eletrico foi instrumentado com tres sensores, sendo
realizados seis testes, conforme tab. 1

Base de dados
Gerenciador
de dispositivos
Obter
relatório do
dispositivo

<uses>

Aplicação orientada
a serviços

<uses>

Descobrir
dispositivos
e serviços

Operador
do Sistema

Obter
relatório das
análises

Tabela 1 Situacoes definidas para coleta dos dados.

Dispositivo 1
<uses>

Descoberta
de serviço

Obter
metadados

<uses>

Serviço de
metadados

Figura 8 Diagrama de casos de uso para obtencao
dos relatorios de saude do dispositivo.

4

Situacao

Acionamento do freio

Engrenagens

1
2
3
4
5
6


1 bar
3 bar







1 desgastada
3 desgastadas
1 quebrada

<extends>

As engrenagens utilizadas nos testes, presentes no conjunto de engrenagens satelite do atuador, sao ilustradas na fig. 10. A da esquerda e
uma engrenagem normal, a do meio desgastada e
a da direita com dentes quebrados.
A analise de degradacao foi feita a partir dos
dados de vibracao do atuador. Primeiramente foram extradas as caractersticas dos sinais utilizando a transformada_de_wavelet packet. Apos, o
algoritmo de deteccao_de_falhas foi treinado com
o metodo da Regressao Logstica utilizando, para
isso, dados de funcionamento normal e em falha.
A fig. 11 apresenta a tela do aplicativo Dispositivo implementado a partir da arquitetura pro-

Implementacao e resultados

Para validacao da arquitetura proposta, as entidades descritas na secao 3 foram implementadas.
Para a implementacao das entidades escolheuse a linguagem de programacao Java e a implementacao DPWS denominada Java Multi Edition
DPWS Stack (JMEDS), que faz parte do projeto
WS4D (WS4D-JMEDS, 2013). As entidades sao
aplicativos de ambiente grafico que permitem realizar as operacoes descritas nos casos de uso apresentados.
Como forma de avaliar a arquitetura proposta

3819

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014
Engrenagem normal

Engrenagem desgastada

Engrenagem quebrada

Figura 10 Engrenagens utilizadas no estudo de
caso.

Figura 13 Tela principal do Analisador de Dispositivos.

posta. Como mencionado, o aplicativo e utilizado
para simular os dados de uma das seis situacoes
apresentadas na tab. 1.

Neste trabalho, uma arquitetura orientada a servicos para um sistema de manutencao inteligente
foi proposta, a fim de facilitar a integracao entre
os diferentes componentes envolvidos neste tipo de
aplicacao. Foram definidas e apresentadas as entidades que fazem parte da arquitetura e casos de
uso onde a proposta pode ser empregada. Alem
disso, foi apresentada a implementacao das entidades e um estudo de caso especfico para validacao
da proposta.
Referencias
Bohn, H., Bobek, A. and Golatowski, F. (2006).
Sirena  service infrastructure for realtime embedded networked devices A service oriented framework for different domains, Proceedings of the International Conference on Networking Systems and International Conference on Mobile Communications and Learning Technologies, IEEE, Mauritius, pp. 4343.

Figura 11 Tela principal do simulador de dispositivos.
A definicao de um plano de analise para o dispositivo e feita no Gerenciador de Analises. Uma
das telas do software e apresentada na fig. 12. A
tela ilustra a escolha das ferramentas que serao
utilizadas para determinar o nvel de degradacao
do equipamento em analise.

Boesch, K. (2011). Deteccao de falhas por fusao
de sensores em atuadores_eletricos, Projeto
de diplomacao (graduacao em engenharia eletrica), Universidade Federal do Rio Grande
do Sul, Porto Alegre.
Candido, G. (2013). Service-Oriented Architecture
for device lifecycle support in industrial automation, Tese (doutorado em engenharia eletrotecnica e de computadores), Universidade
Nova de Lisboa, Portugal.

Figura 12 Dialogo para escolha das ferramentas
utilizadas na analise.
O Analisador de Dispositivos, que utiliza as
informacoes definidas no plano de analise, realiza
as analises de forma automatica. A entidade verifica os planos pendentes, busca os dados necessarios e obtem o nvel de degradacao utilizando as
ferramentas definidas no plano. A fig. 13 ilustra a
tela principal do Analisador de Dispositivos.
5

Cannata, A., Karnouskos, S. and Taisch, M.
(2010). Dynamic e-maintenance in the era of
SOA-ready device dominated industrial environments, in D. Kiritsis et al. (eds), Engineering Asset Lifecycle Management, Springer,
London, pp. 411419.
Choi, J., Nazareth, D. and Jain, H. (2010). The
impact of SOA implementation strategies on
business value and agility A systems dynamics approach, Proceedings of the 6 International Conference onAdvanced Information Management and Service (IMS), IEEE,
Seoul, pp. 16.

Conclusao

O monitoramento de diversos equipamentos com
tecnicas de manutencao inteligente ainda e dificultado pelo tipo de solucao adotada para analise dos dados e pela distribuicao dos dispositivos.

3820

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

Colombo, A.-W., Karnouskos, S. and Mendes,
J.-M. (2010). Factory of the future A
service-oriented system of modular, dynamic
reconfigurable and collaborative systems, in
L. Benyoucef and B. Grabot (eds), Artificial
Intelligence Techniques for Networked Manufacturing Enterprises Management, Springer,
London, pp. 459481.

MIMOSA (2014). OSA-CBM 3.3.0 Open systems
architecture for condition-based maintenance, httpwww.mimosa.org?qresourcesspecsosa-cbm-330.
Muller, A., Suhner, M.-C. and Iung, B. (2008).
Formalisation of a new prognosis model for
supporting proactive maintenance implementation on industrial system, Reliability Engineering  System Safety 93(2) 234253.

de Deugd, S. et al. (2006). Soda Service oriented device architecture, Pervasive Computing, IEEE 5(3) 9496.

Oldham, J., James, P. and Shaw, B. (2003). Delivering resource productivity  the service
solution, Green Alliance .

Djurdjanovic, D., Lee, J. and Ni, J. (2003). Watchdog agentan infotronics-based prognostics
approach for product performance degradation assessment and prediction, Advanced
Engineering Informatics 17(34) 109125.

Papazoglou, M. P. and Heuvel, W.-J. (2007). Service oriented architectures approaches, technologies and research issues, The VLDB
Journal 16(3) 389415.

Faccin, F. C. (2011). Manutencao inteligente Fusao de sensores aplicada na deteccao_de_falhas em atuadores_eletricos, Projeto de diplomacao (graduacao em engenharia eletrica),
Universidade Federal do Rio Grande do Sul,
Porto Alegre.

Ragavan, S. V., Kusnanto, I. K. and Ganapathy,
V. (2012). Service oriented framework for industrial automation systems, Procedia Engineering 41 716723.
Ramollari, E., Dranidis, D. and Simons, A. J.
(2007). A survey of service oriented development methodologies, Proceedings of the 2nd
European Young Researchers Workshop on
Service Oriented Computing, Leicester, p. 75.

Goncalves, L. F. (2011). Desenvolvimento de
um sistema de manutencao inteligente embarcado, Tese (doutorado em engenharia eletrica), Universidade Federal do Rio Grande
do Sul, Porto Alegre.

Ribeiro, L. et al. (2008). A generic communication
interface for DPWS-based web_services, Proceedings of the 6th IEEE International Conference on Industrial Informatics (INDIN),
IEEE, Daejeon, pp. 762767.

IMS CENTER (2007). Documentation of watchdog agent toolbox algorithms.
Jay Lee (2003).
E-manufacturing  fundamental, tools, and transformation, Robotics and Computer-Integrated Manufacturing
19(6) 501507. Leadership of the Future in
Manufacturing.

Thurston, M. (2001). An open standard for
web-based condition-based maintenance systems, Proceedings of the IEEE Systems Readiness Technology Conference AUTOTESTCON, IEEE, Valley Forge, pp. 401415.

Josuttis, N. (2009). SOA in Practice The Art of
Distributed System Design, OReilly Media.

W.J. Moore and A.G. Starr (2006). An intelligent maintenance system for continuous costbased prioritisation of maintenance activities, Computers in Industry 57(6) 595606.
E-maintenance Special Issue.

Karnouskos, S. et al. (2010). Towards an architecture for service-oriented process monitoring and control, Proceedings of the 63th
Annual Conference on IEEE Industrial Electronics Society (IECON), IEEE, Glendale,
pp. 13851391.

WS4D-JMEDS (2013). WS4D-JMEDS web_services for devices, httpws4d.e-technik.unirostock.dejmeds.

Lee, J. et al. (2006).
Intelligent prognostics tools and e-maintenance, Comput. Ind.
57(6) 476489.

Zhang, L., Cao, Q. and Lee, J. (2013). Performance assessment for a fleet of machines
using a combined method of ant-based clustering and CMAC, Advances in Mechanical
Engineering 2013.

Lee, J. et al. (2009). Informatics platform for designing and deploying e-manufacturing systems, in L. Wang and A. Y. C. Nee (eds), Collaborative Design and Planning for Digital
Manufacturing, Springer, London, pp. 135.

Zhao, F. et al. (2010). SOA-based remote condition monitoring and fault diagnosis system,
The International Journal of Advanced Manufacturing Technology 46(9-12) 11911200.

Marcal, R. F. M. and Susin, A. A. (2005). Detectando falhas incipientes em maquinas rotativas, Revista Gestao Industrial 1(2).

3821