Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

INTEGRANDO SISTEMAS DE AUTOMACAO EM AMBIENTES DE MANUFATURA
DISTRIBUIDA USANDO ROS
Italo Wieczorek, Matheus dos Santos, Samuel Troina, Eder Mateus Goncalves


Centro de Ciencias Computacionais - C3
Universidade Federal do Rio Grande - FURG
Rio Grande - RS - Brasil
Emails italoaw@gmail.com, matheusbg8@gmail.com, samuel.troina@gmail.com,
edergoncalves@furg.br
Abstract Modern manufacturing systems must to attend quick changes on market demands. Thus, flexibility
of the production means and to be apt to operate with shorter product life-cycle require inovatitve solutions
about the coordination of manufacturing resources, often integrating new enterprises on a dynamic way, to
specific demands. At this work, it is proposed integrating legacy automation systems in an architecture which
coordinates manufacturing distributed resources mediated by ROS open system. It is possible to integrate in a
same production environment, manufacturing resources from different sources and from different abstraction and
scope levels, using a service-based system to define and specify theses resources. At this paper, it is present an
extension of ROS usability including manufacture dispositives, more specically, a SCADA system.
Keywords

distributed manufacturing, scada, ros, automation systems

Resumo Sistemas de manufatura modernos devem estar aptos as rapidas mudancas de demanda dos mercados. Assim, flexibilidade dos meios de producao e estar apto a operar com ciclos de vida de produto mais
curtos exigem solucoes inovadoras quanto a coordenacao dos recursos de manufatura, muitas vezes integrando
novos empreendimentos de forma dinamica, para demandas especficas. Neste trabalho, propoe-se a integracao
de sistemas_de_automacao legados a uma arquitetura de comunicacao para recursos distribudos de manufatura
mediados pelo sistema aberto ROS. Deste modo, e possvel integrar em um mesmo ambiente de producao, recursos de manufatura de diferentes origens e de diferentes nveis de abstracao e abrangencia, atraves da definicao
e especificacao de servicos destes recursos. Neste artigo, apresenta-se uma extensao da aplicabilidade do ROS a
dispositivos de manufatura, mais especificamente, um sistema SCADA.
Palavras-chave

.
Do ponto de vista tecnologico, ha uma clara
necessidade em se fazer com que sistemas que foram previamente projetados para funcionarem por
si so, conversem entre si. Alem disso, encapsular as devidas funcoes dentro de cada empreendimento e oferece-las por meio de servicos facilita
esta convergencia.
Assim, as solucoes existentes na literatura
que tratam sobre estes aspectos de convergencia
apresentam em comum as seguintes caractersticas (Zhang et al., 2010) (Xu, 2012)

Introducao

A retomada de investimentos em pesquisa e desenvolvimento para a geracao de novas tecnologias em
sistemas de manufatura tem como pano de fundo
a necessidade de se agregar mais valor aquilo que e
produzido sem uma relacao direta com a elevacao
de custos. Deste modo, modelos de producao que
distriburam suas matrizes de producao para centros com mao de obra mais barata, como pases
da Asia, devem ser revistos. O grande exemplo,
neste momento, sao os EUA que vem desenvolvendo polticas de modo a fomentar este caminho
de volta de grande empreendimentos manufatureiros (Website, 2011).
Os mercados em escala global e ciclos de
vida de produtos cada vez mais curtos demandam estrategias de projeto e producao que evidenciam a necessidade de flexibilidade e eficiencia deste mecanismos. E, sabidamente, a rapida reconfiguracao de sistemas de producao nao e
uma tarefa trivial de ser resolvida, especialmente
quando ha poucos recursos estruturais a disposicao (Brooks, 2013).
Uma forma de diversificar as possibilidades de
producao e por meio de convergencias organizacional e tecnologica, envolvendo multiplos atores de
diferentes funcoes no cenario manufatureiro. Essas convergencias expandem as possibilidades de

 decomposicao dos sistemas existentes em modulos, cujos funcoes basicas sao devida encapsuladas em servicos. Estes servicos, por sua
vez, devem ser encapsulados de tal forma a
maximizar sua reutilizacao para as mais variadas formas de producao.
 adocao de padroes e solucoes abertos de
forma a facilitar a integracao de componentes.
O objetivo deste trabalho e descrever os procedimentos necessarios para a integracao_de_sistemas_de_automacao, por intermedio de seu sistema
supervisorio, a uma arquitetura de comunicacao

1668

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

que viabiliza uma rede de recursos de manufatura
para a estruturacao de ambientes de producao especficos. Neste contexto, um sistema de automacao e visto como um sistema legado, e tem como
restricoes para sua entrada em uma rede de manufatura, mnimas modificacoes na sua arquitetura
interna e na sua estrutura operacional.
No ambito deste trabalho, um sistema de automacao e visto como uma arquitetura e um conjunto de componentes que mapeiam um ou mais
processos, por meio de sensores e atuadores, conforme figura 1. Este sistema e monitorado e controlado por um Sistema Supervisorio (SCADA),
que funcionara como interface para a arquitetura
de comunicacao que aqui sera descrita.

Ainda do ponto de vista da arquitetura, nao
ha nenhum tipo de hierarquia. Neste nvel de especificacao, o objetivo e estabelecer conexao logica
entre todos os recursos existentes na rede. Uma
hierarquia pode ser imposta ao sistema a partir
desta composicao logica.
Uma aplicacao de manufatura e constituda
quando se define um arranjo logico entre um subconjunto dos recursos existentes na rede. Esta
aplicacao deve ser vista como a constituicao dos
processos envolvidos em algum tipo de empreendimento de producao eou de servico. Uma aplicacao esta sujeita a uma etapa de especificacao,
validacao e execucao.
No contexto desta arquitetura, recursos de
manufatura sao artefatos constituintes de sistemas
de manufatura que podem ser disponibilizados na
forma de servicos, e que podem assumir diferentes graus de abstracao e encapsulamento. Desta
forma, sensores, motores, robos, CNCs, AGVs,
esteiras, celulas de manufatura, programas para
projeto e simulacao de produtos, ou mesmo todo
um sistema de producao pode ser enquadrado dentro da concepcao de um recurso, desde que seus
servicos sejam devidamente especificados para a
rede. A figura 2 descreve um exemplo de uma rede
que integra uma serie de recursos de manufatura
de diferentes origens e nveis de encapsulamento.

Figura 1 Configuracao de um sistema de automacao basico
O artigo esta assim estruturado. A proxima
secao descreve a arquitetura que da suporte a uma
rede de recursos distribudos de manufatura que
suporta interoperabilidade entre dispositivos de
diferentes naturezas e nveis de encapsulamento.
A secao 3 descreve o processo de analise de um
sistema de automacao, a partir de seu sistema supervisorio, no sentido de definir os servicos que
podem oferecer a arquitetura apresentada, e como
se da sua integracao a este arquitetura. A secao
4 apresenta os detalhes da implementacao da interface entre o sistema de automacao e a rede de
recursos distribudos de manufatura. Finalmente,
a secao 5 apresenta as conclusoes deste trabalho.

Figura 2 Visao de um sistema_de_manufatura a
partir dos seus recursos.
A arquitetura que sustenta a proposta apresentada neste artigo baseia-se na utilizacao do Robot Operating System (ROS) (Quigley et al., 2009)
como middleware do sistema, estendendo seu proposito inicial, o de abranger componentes voltados a sistemas roboticos, mas que tambem trate
de dispositivos e servicos voltados a manufatura.
ROS foi concebido como um sistema operacional em cluster e cooperativo para robos, de codigo
aberto, na forma de um conjunto de ferramentas,
bibliotecas e convencoes que facilitam na reutilizacao de componentes de software e hardware para
a construcao de robos. No seu mais baixo nvel,
o ROS oferece uma interface para passagem de
mensagem que prove comunicacao inter-processos
e abstracao de hardware.

2 Arquitetura para Integracao de
Recursos Distribudos de Manufatura
No contexto deste trabalho, um sistema_de_manufatura com recursos distribudos e viabilizado
pela existencia de um conjunto de recursos de manufatura integrados por algum tipo de artefato
de comunicacao. Esta arquitetura deve permitir
a entrada e sada de recursos de forma aberta e
em tempo de execucao. Aberta quer dizer que a
entrada e sada destes recursos deve ser feita de
forma totalmente transparente a todos os agentes
do sistema.

1669

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

A utilizacao do ROS se justifica na medida
em que garante requisitos mnimos a interoperabilidade entre os diferentes componentes e subsistemas desta arquitetura. Por se tratar de um sistema aberto, e possvel reutilizar componnetes que
ja existam dentro de suas bibliotecas, bem como
integrar novos drivers de novos dispositivos.
A operacao do ROS baseia-se na ideia de um
grafo computacional, onde os nos correspodem aos
diferentes processos a serem executados. No caso
de uma comunicacao multicast, os processos publicam topicos, e quando em comunicacao direta,
esta e viabilizada na forma de servicos.
Os topicos publicados pelos processos correspondem aos parametros disponibilizados publicamente, e podem ser consultados pelos demais nos
do grafo. No caso de uso de servicos, qualquer
no pode consultar ou oferecer servicos, porem sob
comunicacao direta com um outro no.
A coordenacao da comunicacao e feita por um
no denominado Master. Este no tem a funcao de
registro dos nos conectados e resolucao de nomes
para os demais nos do sistema. O Master mantem
uma lista atualizada dos topicos criados, a lista de
nos conectados, a lista de servicos existentes, alem
de permtir a qualquer no o acesso a essas informacoes. O Master tambem disponibiliza um servico
de parametros, onde cada no pode definir um conjunto de parametros que sao armazenados pelo no
Master e podem ser acessados por qualquer no da
rede.
Na sua concepcao mais simples, um sistema
ROS preve a existencia de um no Master centralizado, com a funcao de gerenciar os dispositivos
existentes dentro de um sistema robotico. Contudo, vislumbrando o ROS como um middleware
de comunicacao para dispositivos e sistemas de
manufatura, a centralizacao destas funcoes em um
unico no poe em risco os empreendimentos desenvolvidos a partir desta arquitetura. Deste modo,
e importante incluir uma sistematica que permita
modularizar o sistema em componentes que encapsulem alguns poucos recursos, nesse caso ja numa
dimensao de manufatura, bem como garanta a comunicacao entre estes componentes, sem prejuzo
para o sistema no caso de falta de alguns destes.
Assim, a arquitetura proposta preve a distribuicao de uma serie de nos Master ROS por intermedio do uso do ROSBridge (Crick et al., 2011).
O ROSBridge e uma biblioteca do ROS que
permite com que programas que nao possuem
acesso ao ROS, possam ter acesso as suas funcionalidades atraves de um protocolo de comunicacao que utiliza Javascript Object Notation (JSON)
atraves de conexoes Web Socket.
No ambito da arquitetura aqui descrita, o
ROSBridge permite a comunicacao entre diferentes nos Master ROS, que podem estar sob diferentes enderecos de rede. Para cada noprocesso
conectado a um no Master, um no a ser buscado

na rede pode estar sob o mesmo nos Master, ou
em sob algum Master presente na mesma rede.
A arquitetura porposta pode ser observada na
figura 3.

Figura 3 Arquitetura de comunicacao entre recursos de manufatura
A figura 3 apresenta tres recursos disponveis
a partir de dois nodos ROS na rede um no que
disponibiliza servicos de robos e seus simuladores
um no que especifica e valida aplicacoes na rede,
por meio de uma interface com Redes de Petri
(Murata, 1989) e um no que oferece servicos de
processos sob a gerencia de um sistema supervisorio. A implementacao deste ultimo no e o tema
principal deste artigo e sera descrito na proxima
secao.
De fato, esta arquitetura propoe uma extensao da aplicabilidade do ROS a dispositivos de
manufatura, como CNCs, celulas de manufatura,
e eventualmente, todo um sistema de automacao
sobre estas estruturas. Nao obstante, os componentes de robos industriais ja existentes dentro do ROS podem ser reutilizados. Alem disso,
nos podem ser dedicados a componentes de projeto e simulacao de produto, CAM, planejamento
e acompanhamento da producao. O desenvolvimento destes componentes pode ser reaproveitado
dada a sua insercao dentro das bibliotecas ROS.
3

Integrando Sistemas de Automacao
como Recurso Distribudo em
Ambientes de Manufatura

A arquitetura descrita na secao anterior tem como
atributo a capacidade de integrar recursos de manufatura de diferentes naturezas, sejam eles novos
ou legados. Esta capacidade da-se a partir da utilizacao do ROS como middleware de comunicacao
do sistema, e o encapsulamento destes recursos
como nos do sistema, cujas funcoes sao oferecidas
na forma de servicos.
Na tentativa de validar esta proposicao, especialmente no que se refere aos sistema legados,
este artigo descreve o processo de integracao de
um sistema de automacao especfico como recurso
de manufatura nessa arquitetura, a partir de seu
sistema supervisorio.

1670

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

 Metodo readData Metodo para leitura de
tags do servidor. Permite a leitura de varias
tags em uma so requisicao.

Segundo esta descricao, a maioria dos sistemas_de_automacao sao compostos por um conjunto de dispositivos de campo interligados por
algum tipo de barramento, como ja descrito na
figura 1. Neste tipo de ambiente existem processos que possuem restricoes temporais crticas, mas
que em algum momento estao sujeitos a um controle em nvel de supervisao. Este controle, via
de regra, e realizado por um sistema SCADA, que
pode ser centralizado, ou ter elementos distribudos em uma rede que ja atende os requisitos de
estruturacao logica definidos na secao anterior.
Dada esta realidade de boa parte dos sistemas
de automacao existentes, o que se propoe e que a
integracao deste tipo de recurso a arquitetura dese a partir do seu nvel de supervisao. Neste trabalho o recurso a ser disponibilizado e o Sistema
Supervisorio de Aquisicao de Dados ScadaBR.
O ScadaBR e um sistema supervisorio com licenca open source, utilizado para desenvolver aplicacoes automatizadas em qualquer tipo de ambiente, seja em industrias, laboratorios, automacao
predial, saneamento, ou sistemas de energia. Alem
disso, sua escolha se deu devido a API de comunicacao remota presente no sistema.
A API de comunicacao remota presente no
ScadaBR permitiu o desenvolvimento de um Web
Service, que atraves da linguagem WSDL (Web
Services Description Language) e do protocolo
SOAP (Simple Object Access Protocol), descreve
e organiza os dados a serem trocados, e formata
as mensagens a serem enviadas, respectivamente.
Assim, e possvel atuar e monitorar todos os dispositivos vinculados ao sistema supervisorio (tags)
de forma remota.
Conforme a sistematica de funcionamento de
um Web Service, as trocas de mensagens sao feitas
a partir de requisicoes e respostas. O no responsavel pelo ScadaBR faz requisicoes aos metodos oferecidos pelo supervisorio, recebe as respostas e as
disponibiliza na rede ROS, com frequencia que varia de acordo com a disposicao geografica da rede e
da localizacao do supervisorio. Quando o supervisorio se encontra em uma rede_local, esta frequencia chega a ordem de milisegundos. No caso de
utilizacao de meio de comunicacao TCPIP via
Web para acesso ao sistema, uma serie de fatores como, rotas de roteamento, horarios de pico
de trafego de informacoes e indisponibilidade de
operadoras, podem influenciar neste tempo, o que
pode tornar o supervisionamento de processos crticos inviavel, devido a instabilidade da latencia.
Dentre os metodos oferecidos pela API do
ScadaBR, os principais sao eles

Figura 4 Integracao ScadaBR e ROS
A Figura 4 ilustra a integracao do ScadaBR
com o ROS. Atraves da API do ScadaBR e possvel escrever e ler os dados das suas tags, utilizando
os metodos anteriormente citados. Os dados coletados vao para o no do ScadaBR no ROS, que
pode publica-los por meio dos topicos, assim como
pode assinar outros topicos, receber dados e escrever nas tags do supervisorio. Os dados publicados
podem ser enviados para outros nos da rede ROS,
por meio da API RosBridge, assim como o no do
ScadaBR pode receber dados oriundos de outros
nos, criando um fluxo de dados na rede.
4

Implementacao e Testes

A integracao deste tipo de recurso a arquitetura
se deu em duas etapas. A primeira etapa foi direcionada ao ScadaBR, com a implementacao dos
seus metodos e comunicacao remota. Ja a segunta
etapa focou a integracao da arquitetura ROS proposta, com o sistema supervisorio. Todo o sistema
foi desenvolvido na linguagem Python, utilizando
a biblioteca suds para a criacao do Webservice,
junto as bibliotecas rospy e roslib, que permitem
o desenvolvimento ROS em Python e fornecem todas suas funcoes necessarias, respectivamente.
4.1

ScadaBR

Conforme descrito na secao anterior, o ScadaBR
possui metodos remotos que possibilitam a listagem, leitura e escrita em suas tags. Para que o
acesso a estes metodos seja possvel, primeiro e
preciso conectar-se diretamente ao servidor onde
o ScadaBR esta hospedado, atraves do endereco
IP do servidor, utilizando a funcao Client disponibilizada pela biblioteca suds.
Definido o endereco para o qual as requisicoes
serao enviadas, o proximo passo e criar as funcoes
com os metodos de listagem, leitura e escrita das
tags. Como o ScadaBR possui uma API especfica
para este tipo de comunicacao, com metodos pre

 Metodo writeData Metodo para escrita de
tags
 Metodo browseTags Leitura das tags disponveis

1671

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

definidos, o desenvolvimento das funcoes tornouse muito mais simples.
4.2

identificar o metodo que sera requisitado. A variavel p2 e uma string utilizada para identificar a
tag a qual se deseja procurar, no caso do metodo
de procura de tags, ou identificar a tag na qual se
deseja escrever, no caso do metodo de escrita. A
variavel p3, tambem uma string, e utilizada apenas no metodo para escrever nas tags, e contem
a informacao que deve ser escrita. Por fim, e nao
menos importante, a variavel serviceAnswer do
tipo string e responsavel por receber a resposta
do metodo requisitado.

ROS

A integracao do Webservice do ScadaBR com o
ROS comeca pela criacao do no ScadaBR. Para
isso, chamamos a funcao a seguir disponibilizada
pela biblioteca rospy.

Figura 5 No ScadaBR sendo iniciado.

Apos criado o no do ScadaBR no ROS, assim
como o seu servico, o proximo passo e publicar as
tags presentes no sistema supervisorio em topicos
no ROS. Para isso e utilizado o metodo de leitura
de tags, que disponibiliza informacoes referentes
a tag buscada, em uma funcao de chamada de
servico.

Com a funcao da Figura 5 criamos o no
ScadaBR dentro do ambiente ROS. O proximo
passo e criar um servico dentro do no ScadaBR,
pois este servico sera responsavel por receber as
mensagens vindas de outros nos da rede ROS,
identificar qual metodo esta sendo requisitado e
chamar o metodo por meio do Webservice descrito
na secao anterior.

Figura 8 Funcao responsavel pela chamada de
service.

Figura 6 Funcao responsavel por criar o servico
do ScadaBR no ROS.
A funcao da Figura 6 inicia o servico
ScadaBR. Nela sao passados tres parametros,
sendo o primeiro o nome que identificara o servico,
o segundo uma referencia ao arquivo que contem o
formato das mensagens trocadas e o terceiro parametro que e uma referencia a funcao que recebera
as mensagens, identificara o metodo requisitado e
retornara a resposta ao requisitante. Esta funcao
entra em um laco infinito, pois e responsavel por
deixar o servico ScadaBR sempre ativo.
A definicao do formato das mensagens de um
servico no ROS e simples, basta definir o tipo
(string, inteiro, float) de uma variavel que recebera as informacoes a serem enviadas, assim como
o tipo de uma variavel que recebera o conteudo da
resposta.

A funcao da Figura 8 e responsavel pela chamada do servico. Ela identifica se o servico do
ScadaBR esta ativo, se conecta ao servico identificando o formato das mensagens de requisicao,
envia a requisicao no formato definido e retorna
a resposta. Com a resposta do servico em maos,
basta publica-la em um topico.

Figura 9 Funcao responsavel por publicar nos topicos.
A funcao da Figura 9 e responsavel por por
publicar os dados recebidos por meio do servico.
Nela sao definidos o nome do topico e o tipo de
dado que sera publicado. Dentro desta funcao
existe um laco infinito, onde a funcao de chamada
ao servico ScadaBR e acionada com uma frequencia que pode variar de acordo com a aplicacao.

Figura 7 Formato das mensagens de requisicao.
A Figura 7 mostra o formato do arquivo, que
anexado junto ao no, define a estrutura das requisicoes ao servico. As variaveis acima do tracejado
contem os dados enviados ao servico, ja a variavel abaixo do tracejado, os dados da resposta. O
numero de variaveis que compoe as requisicoes e
flexvel e depende do projeto do servico. Neste trabalho utilizamos tres variaveis para efetuar uma
requisicao e uma para receber a resposta. A variavel p1 e um inteiro de 64 bits responsavel por

Com estas implementacoes e possvel
conectar-se ao sistema supervisorio ScadaBR,
identificar suas tags e publica-las em topicos
dentro do ambiente ROS. Atraves dos topicos
criados, outros nos que tenham interesse nas
informacoes disponibilizadas, podem assina-los
e com isso tambem atuar nas tags, criando um
fluxo de dados.

1672

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

5

Conclusoes

non-ros users, Proceedings of the 15th International Symposium on Robotics Research.

Este artigo descreveu os procedimentos necessarios a integracao de um sistema de automacao
a uma arquitetura de comunicacao para recursos
distribudos de manufatura mediados pelo ROS.
Dada a concepcao da arquitetura para este
tipo de sistema, recursos de manufatura sao disponibilizados para que possam fazer parte de aplicacoes especficas, e sao indexados e disponibilizados
a partir de sua integracao a nos ROS. Uma rede de
nos do tipo Master ROS, atraves da utilizacao da
biblioteca ROSBridge, garante a confiabilidade do
sistema. Alem disso, utilizando ROS como middleware de comunicacao do sistema, garante-se a
interoperabilidade entre diferentes dispositivos, de
diferentes naturezas e diferentes graus de encapsulamento.
A extensao do ROS a dispositivos de manufatura da-se pela aceitacao de um novo grupo de
dispositivos, mantendo os preceitos que levaram
a proposicao de sua proposta original (The Robot
Operating System (ROS), 2012). Deste modo, a
problematica que se impoe e a construcao de drivers para estes novos dispositivos, como CNCs,
celulas de manufatura, sistemas logsiticos. No
caso especfico deste artigo, e possvel concluir que
o que se apresentou foi uma analise_de_requisitos e
implementacao dos componentes necessarios a um
driver para sistemas_supervisorios. A construcao
de drivers para este tipo de dispositivo se justifica especialmente no que se refere a integracao
de sistemas legados a uma arquitetura externa de
comunicacao, como a descrita neste artigo.
Com a disponibilizacao de parametros e variaveis de um sistema supervisorio por meio de
servicos ROS e possvel operar com sistemas de
automacao associados a diferentes tipos de processos.
Trabalhos futuros ocorrerao no sentido de incluir novos dispositivos especficos de manufatura,
como a integracao de HMIs, e ainda no tratamemento de gerencia de conflitos enquanto multiplas
aplicacoes de manufatura sao executadas sobre o
sistema.

Murata, T. (1989). Petri nets Properties, analysis
and applications, IEEE 77(4) 481497.
Quigley, M., Conley, K., Gerkey, B., Faust, J., Foote, T., Leibs, J., Wheeler, R. and Ng, A. Y.
(2009). Ros an open-source robot operating
system, ICRA workshop on open source software, Vol. 3.
The Robot Operating System (ROS) (2012). Available www.ros.org.
Website, A. W. (2011).
Obama administration supports advanced manufacturing,
httpwww.automationworld.comoperationsobamaadministration-supports-advancedmanufacturing.
Xu, X. (2012).
From cloud computing to
cloud manufacturing, Robotics and computerintegrated manufacturing 28(1) 7586.
Zhang, L., Guo, H., Tao, F., Luo, Y. and Si,
N. (2010). Flexible management of resource
service composition in cloud manufacturing,
Industrial Engineering and Engineering Management (IEEM), 2010 IEEE International
Conference on, IEEE, pp. 22782282.

Agradecimentos
Este trabalho contou com o apoio financeiro do
CNPq e FAPERGS.
Referencias
Brooks, P. (2013).
The manufacturing convergence model, httpwww.industrialip.orgindustrial-ipconvergencethemanufacturing-convergence-model. Acessado
em Fevereiro de 2014.
Crick, C., Jay, G., Osentoski, S., Pitzer, B. and
Jenkins, O. C. (2011). Rosbridge Ros for

1673