Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

1

DESENVOLVIMENTO DE UM SISTEMA PARA RECONHECIMENTO AUTOMÁTICO DE PLACAS
DE TRÂNSITO
MATHEUS V. L. RIBEIRO, JOÃO M. SALOMÃO
Coordenadoria de Engenharia Elétrica, Campus Vitória, Instituto Federal de Educação, Ciência e Tecnologia
do Espírito Santo - IFES
Av. Vitória, 1729, Vitória - ES, Brasil, 29040-780
E-mails matheusvlr@yahoo.com.br, salomao@ifes.edu.br
Abstract This project shows an automatic system of traffic signs recognition. The project was splitted in 4 parts acquisition,
segmentation, description and recognition. The acquisition of photos was gotten by a digital camera and the video through another camera connected on a laptop. In the segmentation of the captured images was used the model HSV (Hue, Saturation and
Value) of colours and a circumference detector implemented through a matrix of accumulators, which high pitch corresponds
the circumference center. For description was used the SIFT (Scale Invariant Feature Transform), a tool of invariant characteristics extraction of scale, rotation and illumination. The final recognition was done by nearest-neighbor method through of the
metric based in scale product among vectors of characteristics. The results were satisfactory, having the signs gotten a correct
classification over 85 in the recognition process, except for some traffic signs that regulate the speed limit, which the best solution was the application of a sorter based in the Artificial Neural Network.
Keywords Digital Image Processing, Traffic Sign Recognition, SIFT, Artificial Neural Network, Driver Assistance System,
Computer Vision.
Resumo Este artigo apresenta um sistema_automático de reconhecimento_de_placas_de_trânsito. O trabalho se dividiu em quatro partes aquisição, segmentação, descrição e reconhecimento. A aquisição de fotos foi feita por uma câmera fotográfica e a de
vídeo por uma outra conectada a um notebook. Na segmentação das imagens capturadas foi utilizado o modelo de cores HSV
(Hue, Saturation and Value) e um detector de circunferência implementado através de uma matriz de acumuladores, cujo valor
máximo corresponde ao centro da circunferência. Já para a descrição utilizou-se o SIFT (Scale Invariant Feature Transform)
que é uma ferramenta de extração_de_características invariantes  escala, rotação e iluminação. O reconhecimento final das placas foi feito pelo método do vizinho-mais-próximo através de uma métrica baseada no produto escalar entre os vetores de características. Os resultados obtidos foram satisfatórios, tendo as placas atingido uma classificação correta superior a 85 no reconhecimento, exceto para algumas que regulamentam a velocidade máxima dos veículos, onde a melhor solução foi obtida com a
aplicação de um classificador baseado em uma Rede Neural Artificial.
Palavras-chave .

1

nas na direção do veículo, reduzindo assim o número
de acidentes (Kus et al., 2008).
Sistemas com a finalidade de proporcionar uma maior comodidade e segurança aos motoristas são classificados como Sistemas de Apoio ao Motorista, ou
ADAS (Advanced Driver Assistance System), dentre
os principais exemplos podemos citar, além do reconhecimento de sinais do trânsito, os GPS, airbags e
os freios ABS (Poffo, 2010).
Visando proporcionar um maior conforto ao motorista quanto  sua atenção no trânsito, essa pesquisa
desenvolveu um sistema capaz de detectar e reconhecer automaticamente as principais placas de trânsito
encontradas no perímetro urbano.

Introdução

O reconhecimento_de_placas_de_trânsito vem
sendo estudado por muitos pesquisadores em diversas
partes do mundo ao longo dos anos. A área que aborda esse tipo de reconhecimento foi denominada de
TSR (Traffic Sign Recognition) e pode possuir várias
dificuldades como variações de iluminação e clima,
degradação da pintura da placa e aquisição de imagens em movimento (Greenhalgh e Mirmehdi, 2012).
A sinalização no trânsito é extremamente importante
para a segurança e sucesso na condução do veículo
pelo motorista. Suas principais funções são as de
regulamentar as obrigações, advertir sobre as condições de risco e indicar as direções necessárias (Conselho Nacional de Trânsito, 2007).
Um condutor necessita estar atento a várias informações durante seu trajeto, portanto, o seu processamento visual é realmente intenso. Um sistema_automático que o auxiliasse na identificação e reconhecimento da sinalização do trânsito o ajudaria não só na
sua navegação, como o permitiria concentrar-se ape-

2 Estado da arte
O primeiro trabalho abordando o TSR apareceu
no Japão em 1984 e o tema foi rapidamente incorporado ao campo da pesquisa e aplicação nas maiores
empresas de veículos automotivos industriais, como a
Daimler-Chrysler, na Alemanha (Paclik e Novovicova, 2000).
A maioria das abordagens para o TSR são feitas utilizando as informações de cor e de forma da imagem,

187

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

2

elaborado por David G. Lowe, cujas saídas são vetores de 128 posições, denominados keypoints, invariantes  escala, iluminação e rotação (Lowe, 1999).
No nosso sistema, o processo de reconhecimento
desses vetores de características se dá pelo método
do vizinho-mais-próximo e, posteriormente, pelas
redes_neurais para as placas de velocidades.

pelo fato das placas de trânsito constituírem-se de
uma borda circular vermelha. Na utilização das informações de cor para o TSR, podemos destacar o
modelo HSV (Hue, Saturation and Value), pois este
consegue separar bem as informações da cor vermelha em uma componente apenas além do fato de que
o modelo HSV é bastante robusto contra variações de
iluminação (Arlicot et al., 2009).
As informações de forma também são utilizadas para
a segmentação da placa na imagem, dentre os métodos utilizados podemos destacar a transformada de
Hough (Poffo, 2010).
Para o processo de extração_de_características temos
vários métodos a se destacar na área de TSR, pois
eles são aplicados tanto para a detecção_de_sinais de
trânsito como para o seu reconhecimento devido aos
seus pontos fortes e discriminativos (Hoferlin e Heidemann, 2010). Podemos citar, por exemplo, as técnicas baseadas em HOG (Histogram for Oriented
Grandient) presente em (Greenhalgh e Mirmehdi,
2012) e a extração das características de cor baseado
nas ferramentas da wavelet de Haar (Bahlmann et al.,
2005).
Um dos algoritmos que tem se destacado nesta etapa
é o SIFT (Scale Invariant Feature Transform). Em
(Hoferlin e Heidemann, 2010) é feito um estudo com
diferentes métodos de extração_de_características,
entre eles o SIFT, o SURF (Speed Up Robust Features) e o GLOH (Gradient Location and Orientation
Histogram). A conclusão dos resultados obtidos com
esses três extratores de características é que, para o
TSR, o SIFT é o mais adequado. Podemos destacar
também os trabalhos de (Silva et al., 2010) e (Kus et
al., 2008) nesta área utilizando este algoritmo.
Na literatura há diferentes formas de classificar e
reconhecer as placas de trânsito a partir dos vetores
de características, como é o caso dos classificadores
bayesiânicos, das redes_neurais, do algoritmo de agrupamento k-means e do método do vizinho-maispróximo (Silva et. al, 2012). Podemos destacar também o algoritmo de aprendizagem de máquina Adaboost utilizado em (Bahlmann et. al, 2009) e do SVM
utilizado em (Greenhalgh e Mirmehdi, 2012).
A escolha das redes_neurais artificiais em nosso trabalho se deu pela fácil implementação e grande confiabilidade nos resultados, como podemos ver em
(Martinovic et al., 2010) e (Hoferlin e Zimmermann,
2009).
Em nosso projeto foi utilizado o modelo de cores
HSV, associado com a binarização da imagem através da informação das três componentes. Em seguida,
a fim de eliminar os pequenos ruídos ainda existentes, foram aplicadas as operações morfológicas sobre
a imagem binarizada. A detecção de circunferências
inicia-se com um detector de bordas de Sobel e com
uma matriz de acumuladores, baseada na transformada de Hough, cujo maior valor retorna o centro da
circunferência.
Após o processo de segmentação, é feita a descrição
das características da placa pelo SIFT, algoritmo

3 Segmentação
3.1 Informações de cor
O modelo HSV foi adotado em nosso trabalho
principalmente pela facilidade se de poder extrair e
isolar as informações da cor vermelha da placa na sua
componente H, ou de matiz, isto é, a cor vermelha
nesta componente possui valores muito altos ou muito baixos ao contrário do modelo RGB onde a componente R possui também informações de outras cores além do vermelho (Gonzalez e Woods, 2010). Já
as componentes S, ou de saturação, e V, ou de brilho,
foram importantes também para retirar outras informações na placa que se confundiam com o vermelho.
A figura 1.a mostra uma imagem original colorida e
suas divisões nos planos H ou de cor (1.b), saturação
(1.c) e brilho (1.d).

Figura 1. (a) Imagem original e seus componentes HSV de (b) cor,
(c) saturação e (d) brilho.

Observa-se que a componente de cor, para a borda
vermelha, varia entre valores muito claros (altos) e
muito escuros (baixos), podemos, portanto, eliminar
os valores intermediários desta componente, enquanto que as componentes de saturação e de brilho variam conforme a iluminação do local.
Através de experimentos realizados foi estipulado um
limiar entre essas componentes para que a imagem
fosse binarizada. Neste caso, valores de saturação e
brilho abaixo de 0.3, numa escala de 0 a 1, foram
eliminados, assim como os valores de cores maiores
que 0.9 ou menores que 0.1 na mesma escala. Sendo
assim, a imagem binarizada consistirá, portanto, de
valores 1 onde existir a cor vermelha e 0 para as demais cores. A lógica da binarização realizada através
da aplicação dos limiares pode ser vista na figura 2.

188

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

3

ximo do acumulador, situado no centro da circunferência da imagem com um ponto branco.

Figura 2. Lógica da binarização da imagem

Devido ao fato da imagem binarizada conter ainda
alguns pequenos pontos isolados após a limiarização,
são aplicadas as operações morfológicas de erosão e
dilatação para eliminar esses pontos.

Figura 3. Imagem após sofrer o processo de binarização e com o
ponto máximo do acumulador no centro da circunferência.

Com o objetivo de tornar o processamento mais rápido limitamos a faixa de raios para o método explicado no parágrafo anterior. Foi observado que com
valores muito pequenos a placa era segmentada, mas
não era reconhecida, além disso, estipulamos um
limite superior para o raio pelo fato de que circunferências com raios maiores dificilmente são encontradas, pois o carro não fica muito próximo da placa na
via.
Outro parâmetro que teve de ser observado foi o valor no acumulador. Pode acontecer da imagem vermelha capturada não pertencer a uma placa e sim a
uma parede, carro, camisa e etc. Entretanto, caso isso
aconteça, como não se trata de uma circunferência, o
valor no acumulador será baixo, pois existirão poucos pontos dotados de uma mesma distância do suposto ponto central. Assim, estipulamos um limiar
também para o acumulador. Na figura 4, que mostra
um gráfico entre os valores nos acumuladores e os
raios, nota-se que, mesmo para circunferências com
raios menores, o valor no acumulador é sempre superior a 60. Isto é, se tivermos um valor máximo no
acumulador menor que 60, então, aquela borda provavelmente não representará uma circunferência.

3.2 Informações de forma
Após a binarização da imagem, precisamos saber
se, de fato, a região com a cor vermelha constitui
uma circunferência ou se trata apenas de algum outro
objeto vermelho na imagem, como por exemplo, um
carro, uma camisa ou o próprio guarda-sol indicado
na figura 1.a. Para isso, inicialmente aplicamos o
operador de Sobel na imagem, um tipo de detector de
bordas do objeto (Gonzalez e Woods, 2010).
Após a aplicação do operador de Sobel, aplicamos o
detector de circunferência para comprovar se, de
fato, as bordas do objeto na imagem binarizada têm
mesmo o formato de uma circunferência. Nosso detector de circunferência é baseado no ponto central
da circunferência e no fato de que todos os pontos a
uma distância igual ao raio constituem um ponto da
circunferência. Essa mesma metodologia é utilizada
em (Poffo, 2010), inspirada na transformada de Hough.
Chamaremos o raio da circunferência de R. Inicialmente é feita uma matriz, chamada de acumulador,
onde a dimensão dessa matriz é a mesma que da imagem binarizada. Para cada ponto branco encontrado
na imagem é estipulado o seu centro, situado a uma
distância R deste ponto. Em seguida, são então conferidos todos os pontos a uma distância R do suposto
ponto central e, a cada ponto branco encontrado, é
acrescentado mais um valor no acumulador na mesma
coordenada que a do ponto central investigado. Portanto, o maior valor do acumulador corresponderá ao
centro da circunferência que é a coordenada que possui mais pontos brancos a uma distância R dela. Porém, como não sabemos ao certo o raio da circunferência da borda da placa, visto que o tamanho da
placa pode variar conforme a distância da câmera que
captura a imagem até ela, o acumulador terá então
três dimensões, sendo duas para as coordenadas e
uma para o raio. O maior valor nessa matriz de acumuladores, portanto, fornecerá não só a posição do
centro da circunferência, como também o raio da
mesma. A partir desses valores é feita a segmentação
da placa na imagem. A figura 3 mostra a imagem da
figura 1.a binarizada, e com a posição do ponto má-

Figura 4. Valores máximos na matriz de acumulador na presença
de circunferências.

É importante destacar que as imagens de aquisição
foram redimensionadas para uma resolução de 500 x
400 pixels, com o objetivo de tornar o processamento
mais eficiente. Portanto, tais parâmetros_só tiveram
esses valores devido a esse redimensionamento. Através desses parâmetros estipulados, o algoritmo do
sistema teve um melhor desempenho em tempo de
operação.

189

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

A segmentação é um processo importante para o sistema pois permite que o descritor capture menos pontos na imagem e, assim, faz com que o reconhecimento se torne mais rápido.

4

escala. Assim, conforme vamos aumentando o fator
de borramento, mais informações do sinal são perdidas como pequenas variações e ruídos, sobrando somente as informações mais importantes (Lindemberg,
1994). Lowe, portanto, aplicou a função gaussiana
com diferentes valores de escala.
Por outro lado, para se obter realmente invariância 
escala é preciso trabalhar com o Laplaciano das imagens Gaussianas geradas, pois assim, consegue-se
identificar as principais mudanças da imagem e os
pontos em destaque (Lindemberg, 1994). O Laplaciano opera como a soma das segundas derivadas parciais das duas dimensões da imagem. A função Laplaciana da Gaussiana (LoG) é obtida conforme a
equação 2

4 SIFT
O processo de extração_de_características, ou
descrição, consiste em capturar as principais características de uma imagem para posteriormente serem
atribuídas a uma classe. Por exemplo, quando precisamos classificar uma pessoa em gorda ou magra
analisamos as características de seu peso e sua altura.
A descrição trata-se de uma importante etapa no processo de visão_computacional e é importante escolher
quais as características que precisamos extrair da
placa para que se faça um reconhecimento adequado
em seguida (Gonzalez and Woods, 2010).
A principal característica do SIFT é poder detectar
pontos invariantes  rotação, escala e iluminação,
denominados keypoints. Inicialmente são detectados
os pontos invariantes  escala, após a detecção desses
pontos, é formado para cada um deles um vetor de
128 posições contendo informações dos gradientes de
seus pontos vizinhos com seus valores normalizados
posteriormente, obtendo assim invariância  rotação e
iluminação. O processo se divide, portanto, em duas
partes a detecção dos pontos invariantes  escala e, a
formação dos vetores de características (Lowe,
1999).

LoG( x, y,  )  

x  y 

1  x  y    2 
 1 
(2)
e
 4 
2  

Entretanto, o uso da LoG faz com que o processamento computacional fique muito custoso, dificultando a implementação desse tipo de função para uma
aplicação automática. Uma boa aproximação da função Laplaciano da Gaussiana é a Diferença da Gaussiana (DoG), que não possui tanto custo_computacional quanto a LoG (Lindemberg, 1994). A figura 5
mostra o processo de subtração entre as imagens
gaussianas nos diferentes oitavos.

4.1 Pontos invariantes  escala
O algoritmo SIFT baseia-se na teoria do espaçoescala (Lindemberg, 1994), onde os pontos invariantes  escala são aqueles que se destacam entre seus
vizinhos, em diferentes escalas.
Inicialmente, Lowe construiu uma pirâmide de oitavos, onde cada oitavo possui uma determinada resolução. Esses oitavos possuirão imagens em diferentes
escalas. Em (Lowe, 1999) foi utilizado 4 oitavos com
5 escalas cada um. A função utilizada para aplicar
diferentes escalas na imagem foi a função gaussiana
apresentada na equação 1 a seguir

G( x, y, ) 

1
2 

e

 ( x   y )
2 

Figura 5. Construção das DoGs para diferentes escalas em diferentes oitavos (Lowe, 2004).

Em seguida, é feita uma comparação pixel a pixel de
uma DoG para detectar os pontos máximos e mínimos da imagem, ou seja, aqueles pontos que se destacam em relação aos seus vizinhos. Esses pontos
produzem as mais estáveis características comparadas
a outros métodos como o gradiente hessiano ou o
detector de Harris (Mikolajczyk, 2002).
O processo consiste em comparar o pixel com seus
oito vizinhos de mesma escala e com seus 9 vizinhos
das escalas adjacentes (superior e inferior), totalizando 26 ( 8 + 9 + 9) vizinhos a serem comparados. Caso o pixel tenha um valor máximo ou um valor mínimo em relação  esses 26 vizinhos, ele será um ponto
invariante  escala, ou keypoint. A comparação entre
pixels da mesma escala e de escalas vizinhas pode ser
observada na figura 6, onde o ponto a ser comparado
com seus vizinhos está marcado com um x.

(1)

Onde x e y são as coordenadas da imagem e  representa a escala da função gaussiana, ou fator de borramento.
A função gaussiana trata-se de um filtro passa-baixa
quando convoluída com a imagem, ou seja, ela reduz
os ruídos, mas também proporciona um borramento
na imagem conforme se aumenta o fator de escala
(Gonzalez e Woods, 2010).
A teoria do espaço-escala consiste em aplicar a função gaussiana na imagem com diferentes valores de

190

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

5

Para obter a invariância  iluminação, os valores no
vetor de características são normalizados e aqueles
acima de 0,2 são reduzidos para este valor. Em seguida, é feita uma nova normalização (Lowe, 2004).
5 Reconhecimento

Figura 6. Comparação de um pixel com seus vizinhos para a identificação dos pontos invariantes  escala (Lowe, 2004).

5.1 Produto escalar

Para determinar qual a orientação do keypoint, calculamos a magnitude e a orientação do gradiente de seu
ponto e de seus vizinhos. A quantidade de vizinhos a
serem analisados depende do tamanho da escala
gaussiana  na qual o keypoint pertence.
Em seguida, é feito um histograma dessas orientações, separando em 36 valores diferentes de orientação. A primeira orientação corresponderá  faixa de 0
a 9 graus, a segunda de 10  19 graus e assim sucessivamente, completando 36 faixas de valores de orientação diferentes. A orientação com maior valor
nesse histograma corresponderá  direção dominante
do keypoint. Porém, orientações com valores 80
maiores que esse valor também serão atribuídas  ele.
Um keypoint pode ter, portanto, uma localização,
mas mais de uma orientação (Sinha, 2010).

O método do classificador vizinho-mais-próximo
baseado no produto escalar consiste em detectar, a
partir de um vetor de características, o seu vetor mais
próximo, através do ângulo entre eles, conforme apresentado na figura 8. Neste caso, observa-se que
temos dois vetores de duas dimensões na mesma origem, onde  é o ângulo entre eles.

4.2 Construção do vetor de características

Figura 8. Produto escalar entre dois vetores (Leon, 1999).

Quando realizamos o produto escalar entre eles, podemos determinar o valor do cosseno de  e consequentemente seu valor também, conforme mostra a
equação 3 abaixo

A construção do vetor de características é feita
inicialmente separando os 256 pontos vizinhos dos
keypoints em 16 janelas contendo 16 pixels cada uma. Em seguida, são construídos histogramas de orientação e magnitude novamente, para cada janela,
mas desta vez com apenas 8 posições distintas. A
primeira posição varia de 0 a 44 graus, a segunda de
45 a 89 graus e assim sucessivamente. Teremos então, para cada janela, um vetor de 8 posições, ou seja,
ao todo teremos um vetor de 8 x 16  128 posições,
contendo informações do gradiente dos pontos vizinhos ao keypoint.
Para evitar que vizinhos mais distantes do nosso ponto invariante  escala tenham pesos com mesma influência que os mais próximos a ele, aplicamos uma
convolução gaussiana sobre as janelas. O processo de
construção do vetor de características pode ser observado na figura 7, onde o ponto central em vermelho representa o keypoint.

xt  y  x    y   cos 

(3)

Assim, cada keypoint da placa segmentada, realizará
o produto escalar com todos os keypoints do banco
de dados de placas. A correlação entre eles ocorrerá
para o keypoint que obtiver o menor ângulo entre
todos os outros, ou seja, ao vetor mais próximo do
vetor de característica da placa segmentada.
Entretanto, Lowe percebeu que apesar de constituir o
vetor mais próximo, muitas vezes os resultados eram
incorretos. Foi estipulada então uma razão de 0,6
entre os dois vetores mais próximos do vetor de características da placa segmentada. Caso a razão entre
o vetor mais próximo e o segundo mais próximo fosse menor que 0,6 o keypoint seria correlacionado,
caso contrário não haveria o reconhecimento para
aquele vetor. Ou seja, nem todos os keypoints da placa segmentada seriam atribuídos a um keypoint dos
templates de placa de trânsito utilizados. A utilização
dessa razão aumentou a precisão dos resultados.
O banco_de_dados de placas contendo os templates
utilizados se encontra na figura 9. A escolha das placas consistiu no fato de que foram as mais frequen-

Figura 7. Construção do vetor de característica do keypoint (Sinha, 2010).

191

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

6

temente encontradas em perímetros urbanos, com
exceção da placa de 80 Kmh.
O reconhecimento consistiu então em realizar o produto vetorial dos keypoints da placa segmentada com
os keypoints de cada template separadamente. A classe atribuída  imagem segmentada será a da placa que
possuísse mais vetores correlacionados.

Figura 10. Rede Neural Artificial (Flauzino et al., 2010).

Os neurônios se conectam entre si através dos pesos
sinápticos, como acontece com os neurônios de nosso
cérebro que o fazem através das sinapses. Os valores
destes pesos para cada neurônio artificial foram estipulados após um treinamento, conhecido como regra
Delta, onde eles são modificados em função da diferença entre a resposta de saída e a resposta desejada
no treinamento.
Cada keypoint corresponderá a um vetor de entrada
na rede_neural, que terá, portanto, 128 neurônios (tamanho do keypoint). Após passar pela camada oculta
com os pesos já treinados, os valores serão passados
para os neurônios da camada de saída. A saída que
obtiver a maior resposta será então a da classe atribuída ao keypoint. A placa a ser classificada para a imagem segmentada corresponderá quela que teve o
maior número de keypoints atribuídos a ela.

Figura 9. Placas de sinais de trânsito utilizadas.

5.2 Redes Neurais Artificiais
As Redes Neurais Artificiais (RNA) constituem
um modelo neural de reconhecimento e interpretação
de objetos, inspirado no modelo de neurônios presente no cérebro humano, em virtude da sua capacidade
de transmitir informações e ser treinado. Sua aplicação é bastante difundida atualmente, sendo utilizada
em várias áreas como reconhecimento de imagens
captadas por satélites, classificação_de_padrões de
escrita e de fala, reconhecimento de objetos, previsão
de ações no mercado financeiro e identificação de
anomalias (Flauzino et al., 2010).
Em cada neurônio artificial, suas entradas são ponderadas por pesos, denominados pesos sinápticos, essas
ponderações são então somadas e o valor desse somatório passará por uma função de ativação, a fim de
limitar os valores de saída. O valor de saída será então uma das entradas de outro neurônio artificial da
camada seguinte e assim sucessivamente até chegar 
camada de saída.
O modelo de rede_neural utilizado em nosso projeto
foi o Perceptron Multicamadas (PMC). Um PMC é
composto de pelo menos uma camada de entrada,
uma camada de saída e uma camada oculta. Todas
elas com números variáveis de neurônios artificiais
dependendo da aplicação. Na figura 10, temos um
modelo de PMC, onde n é a dimensão do vetor de
entrada, n1 e n2 o número de neurônios na primeira e
segunda camadas ocultas respectivamente e m o número de classes a serem classificadas em uma amostra.

6 Resultados
Os resultados apresentados a seguir foram obtidos no ambiente_de_desenvolvimento do Matlab utilizando-se a biblioteca do algoritmo original do SIFT
disponibilizado por David Lowe em seu site oficial.
Inicialmente, foram capturadas de 9 a 20 placas de
cada modelo para a classificação. Para cada placa
foram capturadas 3 a 4 imagens, variando-se sua distância até a câmera fotográfica, mantendo uma distância entre 3 a 6 metros da mesma. O reconhecimento é adotado como correto quando ocorre o caso de,
no mínimo, 2 imagens serem reconhecidas.
A escolha dos raios das circunferências e do valor
mínimo para o acumulador, fizeram com que o tempo
de operação médio, antes de 7,16 segundos, caísse
para o tempo médio de 4,9 segundos, ou seja, houve
uma redução de 31,5.
O tempo de processamento médio para as imagens
com uma placa foi de 4,32 segundos, já para imagens
contendo duas placas ele foi de 5,48 segundos e
quando não havia placa na imagem ou ela não foi
segmentada, pois estava muito longe, o tempo de
processamento médio foi de 2,75 segundos.
A tabela 1 apresenta os resultados referentes  metodologia aplicada utilizando o método do vizinhomais-próximo com métrica baseada no produto escalar. A placa de 80 Kmh não se encontra na tabela

192

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

A quantidade de neurônios na camada oculta de nosso classificador da rede_neural PMC pode variar de
acordo com as características das placas e descritor
utilizado. Em nosso trabalho a camada intermediária
foi obtida a partir de alguns testes com diferentes
números de neurônios onde avaliamos o seu desempenho e o número de épocas para cada treinamento.
A tabela 2 contem alguns dados referentes a estes
testes. Considerando o número de épocas e o desempenho do classificador, a RNA com 48 neurônios em
sua camada oculta foi a que apresentou os melhores
resultados.

pela dificuldade de se encontrá-la em perímetros urbanos.
Tabela 1. Resultado do reconhecimento das placas utilizando o
método do produto escalar.

Templates

No de
placas

Acertos
()

No de
placas
confundidas

Não reconhecidas

20

95

0

1

14

86

0

2

11

73

2

1

14

86

2

0

10

90

0

1

12

92

0

1

9

100

0

0

13

38

4

4

9

0

3

6

20

100

0

0

13

100

0

0

10

90

1

0

13

23

7

3

7

Tabela 2. Número de neurônios da camada intermediária da rede
neural

Neurônios
8
32
48
64

Acertos ()
90.36
91. 57
95.18
87.95

Épocas
5642
4034
3474
4625

Sendo assim, ao aplicarmos esse classificador RNA
sobre as placas de velocidade, obtemos a matriz de
confusão expressa na tabela 3. Desta vez, não houve
reconhecimento incorreto com a placa de 80 Kmh,
portanto, não houve necessidade de acrescentá-la na
matriz.
Tabela 3. Matriz de confusão entre as placas de velocidade

11

82

1

1

15

0

9

6

30 Kmh
40 Kmh
60 Kmh

30 Kmh
97.37
9
0

40 Kmh
2.63
91
4.5

60 Kmh
0
0
95.5

Como podemos ver, os resultados obtidos com o
classificador implementado com uma RNA foram
bem melhores quando comparados aos resultados do
produto escalar para essas placas de velocidade e a
taxa de erro caiu consideravelmente entre elas.

As placas, em sua maioria, tiveram um reconhecimento superior a 85, com exceção das placas de
velocidade, da placa de Siga em Frente, provavelmente por possuir poucos detalhes discriminatórios, e
da placa de Rotatória onde se obteve zero acertos.
As placas de velocidades tiveram resultados ruins,
com muitos erros em virtude da semelhança entre
elas, já que todas possuem o algarismo 0 e o
kmh. A placa de 40 kmh obteve resultados mais
satisfatórios pelo fato do algarismo 4 ser muito
diferente dos algarismos 6, 3 e 8.
Outro fator que dificultou o reconhecimento das placas de velocidade foi o fato de que algumas delas
apresentavam um modelo diferente das utilizadas em
nosso banco de templates. Por essa razão, adotamos
as redes_neurais artificiais utilizando-se 8 imagens de
modelos diferentes de cada placa de velocidade para
o treinamento.
A RNA utilizada foi a Perceptron Multicamadas
(PMC) com 3 camadas uma camada de entrada com
128 neurônios decorrente do tamanho do keypoint de
128 posições gerados pelo descritor, uma camada
intermediária, ou oculta, e uma camada de saída contendo 4 neurônios, onde cada neurônio representa
uma saída para uma das 4 placas de velocidade.

7 Conclusão
O presente trabalho abordou uma estratégia de
reconhecimento_de_placas_de_trânsito utilizando a
ferramenta de descrição de características SIFT, apresentando um resultado satisfatório para a maioria
das placas.
O fato de o SIFT gerar descritores invariantes  escala e  iluminação ajudou no reconhecimento, visto
que as placas reconhecidas eram capturadas a diferentes distâncias e em diversas condições climáticas.
Porém, a característica de invariância  rotação do
SIFT acabou prejudicando o processo de classificação algumas vezes, isso porque alguns pontos das
placas segmentadas foram confundidos com os de
outras placas, como podemos observar na figura 11.

193

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

8

Conselho Nacional de Trânsito (2007). Sinalização
Vertical de Regulamentação. 2 edição. Brasília.
Flauzino, R.A Spatti, D.H. and Silva, I.N. (2010).
Redes Neurais Artificiais para Engenharia e
Ciências Aplicadas. São Paulo Artliber.
Gonzalez, R.C. and Woods, R.C. (2010).
Processamento Digital de Imagens. 3 Ed. São
Paulo Pearson Prentice Hall.
Greenhalgh, J. and Mirmehdi, M. (2012). Real-Time
Detection and Recognition of Road Traffic
Signs. IEEE Transactions on Intelligent
Transportation Systemm, Vol. 13, No. 4 pp.
1498-1506.
Hoferlin, B. and Heidemann. (2010). Selection of an
Optimal Set of Discriminative and Robust Local
Features with Application to Traffic Sign
Recognition. Proc. WSCG, 18th International
Conference in Central Europe on Computher
Graphics Visualization and Computer Vision.
Vol. 18, pp. 9  16.
Hoferlin, B. and Zimmermann, K. (2009). Towards
Reliable Traffic Sign Recognition. IEEE
Intelligent Vehicles Symposium pp. 324-329.
Kus, M.C. Gokmen, M. Etaner-Uyar, S. (2008).
Traffic Sign Recognition using Scale Invariant
Feature Transform and Color Classification. 23rd
International Symposium on Computer and
Information Sciences pp. 1-6.
Lindemberg, T. (1994). Space-Scale Theory. A Basic
Tool for Analyzing Structures at Different
Scales.. Journal of Applied Statistics pp. 224 
270.
Lowe, D.G. (1999). Object Recognition from Local
Scale-Invariant.. International Conference on
Computer Vision pp. 1150  1157.
Lowe, D.G. (2004). Distinctive Image Features from
Scale-Invariants Keypoints. International Journal
of Computer Vision. Vol. 60, n.2, pp. 91-110.
Martinovic, A. Glavas, G. Juribasic, M. Sutic, D.
and Kalafatic, Z. (2010). Real-Time Detection
and Recognition of Traffic Signs. Proc. 33rd
International Convention MIPRO 2010, vol. 3,
pp. 247-252.
Mikolajczyk, K. (2002). Detection of Local Features
Invariant to Affine Transformations. Institute
National Polytechnique de Grenobie, France.
Paclik, P. and Novovicova, J. (2000). Road Sign
Classification Without Color Information. 6th
Conference of Advanced School of Imaging and
Computing. Lommel, Belgium.
Poffo, F. (2010). Visual Autonomy  Protótipo para
Reconhecimento de Placas de Trânsito.
Dissertação (Graduação em Ciências da
Computação). Universidade Regional de
Blumenau.
Silva, F.A. Artero, A.O. de Paiva, M.S.V. and
Barbosa R.L. (2010). Uma metodologia para
Detectar e Reconhecer Placas de Sinalização de
Trânsito. São Paulo.
Sinha, U. (2010). SIFT Scale Invariant Feature
Transform.

Figura 11. Keypoints incorretamente correlacionados

Esse fato pode explicar o baixo desempenho do classificador para as placas de Siga em Frente e Rotatória apresentado na Tabela 1. Como geralmente
não observamos placas rotacionadas nas vias públicas, essa característica de invariância do SIFT não é
tão importante e pode ser suprimida.
Outro fator que dificultou o reconhecimento foi a
escolha de uma resolução adequada, resoluções altas
podem fazer com que o SIFT capture keypoints com
características apenas locais, como a ponta de uma
seta, perdendo as características globais da placa,
provocando um erro de classificação.
A invariância do SIFT a perspectivas diferentes poderá ser estudada mais a frente, pois se trata de uma
característica importante e tornará o sistema mais
flexível. Porém, a borda da placa poderia ter o aspecto de uma elipse, um bom detector para essa forma
pode ser o utilizado em (Arlicot et al., 2009).
As placas de velocidade não tiveram uma boa taxa de
reconhecimento pelo método do produto escalar,
devido  grande semelhança entre elas e, também,
por possuírem diferentes modelos para um mesmo
tipo de placa. A solução encontrada foi o uso de um
classificador baseado em uma Rede Neural Artificial
utilizando esses modelos como treinamento.
Visto que algumas placas não tiveram um bom desempenho na classificação, no futuro, além da aplicação de usar o classificador RNA para todo o banco
de placas, nossa proposta é avaliar a aplicação do
método dos momentos invariantes em substituição ao
método SIFT como módulo extrator de características.
Agradecimentos
A todos os meus professores pelo apoio ao longo
do curso e ao Instituto Federal do Espírito Santo pela
infraestrutura disponibilizada.
Referências Bibliográficas
Arlicot, A. Soheilian, B. and Paparotidis, N. (2009).
Circular Road Sign Extraction from Street Level
Images Using Colour, Shape and Texture
Database Maps. In Stilla U, Rottensteiner F,
Paparotidis N (Eds) CMRT09. IAPRS, Vol.38.
Bahlmann, C. Zhu, Y. Ramesh, V. Pellkofer, M.
and Koheler, T. (2005). A System for Traffic
Sign Detection, Tracking and Recognition Using
Color, Shape, and Motion Information. IEEE
Intelligent Vehicles Symposium pp. 256-260.

194