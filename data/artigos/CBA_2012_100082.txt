Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

MODULES OF AN AUTOPILOT FOR SMALL UNMANNED AERIAL AIRCRAFT
ADRIANO BITTAR, NEUSA M.F. OLIVEIRA
Instituto Tecnológico de Aeronáutica
Pça Mal. Eduardo Gomes, 12.228-900, São José dos Campos, SP.
E-mails bittar@ita.br, neusa@ita.br
Abstract This paper describes the development of the Pegasus Autopilot, which is an academic autopilot for Small Unmanned
Aerial Vehicle (SUAV). The paper do not aims to present results, but the modules, the process, and the methodology of creating
an autopilot for SUAV. The autopilot is constituted for four main modules Navigation System, Control Surface Manager, Control Ground Station and the Central Processing Unit. Each module of the autopilot is detailed focusing on the hardware embedded. The sensor utilized to provide information about the aircrafts position on the three axes and about the current airspeed is
presented by the navigation system, which communicates with the CPU. The CPU manages the data between the modules, sends
commands to the Control Surface Manager, which actuates the servos, and provides information to Control Ground Station.

Keywords Autopilot, UAV, Sensor, Navigation, Control
Resumo Este artigo descreve o desenvolvimento do Pegasus Autopilot, que é um piloto_automático acadêmico para veículos
aéreos não tripulados aérea de pequeno porte (SUAV). Este artigo não tem como objetivo apresentar resultados, mas os módulos,
o processo e a metodologia de criação de um piloto_automático para um SUAV. O piloto_automático é constituído por quatro
módulos principais Sistema de Navegação, Gerenciador de Superfície de Controle, Estação de Controle em Solo e da Unidade
Central de Processamento (CPU). Cada módulo do piloto_automático é detalhado com foco no hardware incorporado. Os sensores utilizados para fornecer informações sobre a posição da aeronave nos três eixos e sobre a velocidade atual é apresentado pelo
sistema de navegação, que comunica com o processador central. A CPU gerencia os dados entre os módulos, envia comandos para o Gerenciador de Superfície de Controle, que atua nos servos, e fornece informações para a Estação de Controle em Solo.

Palavras Chave 

Introduction

Autopilot is a mechanic, electrical, or hydraulic
system developed to be used to guide a vehicle without human assistance. It can be coupled to any autonomous, land, water, or air vehicle. Small Unmanned Aerial Vehicle (SUAV), which is the focus
of this work, must use an autopilot to perform their
missions. Unmanned Aerial Vehicle has been employed in many types of applications (Cox, 2004).
They are used in commercial applications such as
agricultural spraying, aerial photography, topography, inspecting pipelines for oil, gas and water, and
military applications such as surveillance combat
regions and vehicle tracking (Beard, 2005).
In Brazil they have been employed in civil applications in order to policy urban and rural perimeters.
They are also used to supervise urban traffic on
highways, as employed by the CCR Rodoanel, which
is a company responsible for the maintenance of
some highways in Brazil. The company has been
tested a UAV, with a camera attached, to check the
damage caused by a crash or an accident in a highway. The images captured are analyzed by the commandant of the mission, who calculates the effort
necessary for the event and then sends only the number of people necessary to deal with the situation
(Sartori, 2012). Besides these UAVs applications,
the Brazilian Army has been used this kind of aircraft
to mapping to the deforestation in the Amazon, and
to surveillance the border between Brazil and neighbor countries.
There are several commercial autopilots, as the MicroPilot MP series from MicroPilot, Cloud Cap Piccolo from Cloud Cap Company, and UNAV 3500,

ISBN 978-85-8001-069-5

from Unav Company, that can performed all kind of
missions (Chao, 2010). For simpler applications
there are available many academic projects of autopilot for UAV, as the Ardupilot from Arduino Community and the Paparazzi, from ENAC University,
France (Paparazzi, 2012).
Despite the many options available, any autopilot is
constituted by a navigation system, a control system,
and a ground control station (Wishart, 2006). The
navigation system is responsible for collecting data
from the sensors and for sending data to the control
system and to the ground station. The controller
block controls the aircraft and ensures that the airplane will follow the trajectory determined. And
finally, the ground control station is the system located in the ground, which is responsible to display all
the flight data on the screen for the missions crew.
This paper will briefly describe the Pegasus Autopilots architecture, which is an autopilot especially
designed for small UAVs and has been developed in
an academic environment, by postgraduate students
of the research and development group 14 Bis from
Instituto Tecnológico de Aeronáutica. The focus is to
detail the embedded hardware for each system.
The paper is organized as follows. The next section
describes the current stage of development of the
Pegasus Autopilot, and its architecture. Section 3
details the Navigation System. The Central Processing Unit, where the Control Laws and the guidance algorithm are implemented, is explained in
Section 4. Section 5 presents the Surface Control
Manager, which is the central responsible to command the aircrafts servos. Section 6 describes the
ground control station.

3708

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

2 Pegasus Autopilot
2.1 Overview
The research from 14 BIS groups started the
studies of autopilots for larger aircrafts performing
simulations between MatLabSimulink and the flight
simulator X-Plane, named Software-In-the-Loop
(SIL) simulations. In Santos (2009a) is presented a
control for the longitudinal motion of a Boing 747.
The system holds the vertical speed in a fixed value
chose by the commandant of the mission, then when
the aircraft reaches 90 of the desired altitude the
autopilot switches the control that passes to hold the
aircrafts altitude. Ribeiro (2010) proposes a lateral
control, for the same Boing used in Santos (2009a),
to control the roll angle, by deflecting the airplanes
aileron. Both controls, mentioned used only the
MatLabSimulink approach.
The next step was to implement the control in an
embedded hardware. The controller for the pitch
angle is implemented in Santos(2009b), and the control developed in MatLabSimulink by Santos
(2009a) is now implemented in hardware by Santos
(2011a). Both Santos (2009b) and Santos (2011a)
performs a Hardware-In-the-Loop (HIL) simulation,
using a microprocessor and X-Plane.
Since autopilot studies were advanced, the focus of
the work was concentrated for very small aircrafts.
The first studies on UAVs are presented by Bittar
(2012), where an autopilot for longitudinal and lateral-directional motion is implemented in a HIL
simulation and by Bittar (2011) where guidance and
control algorithms are implemented in a SIL simulation. Studies about navigation systems for SUAVs
are presented by Santos (2011b).
Since its creation, the group has been increased in
number of people, and today it counts with one researcher in each system one developing navigation
systems, one in control and guidance, one specialized
in obtain data for the control ground station, and one
responsible for the control surface manager and the
safety system. There are also studies starting about
capture and image analysis.
2.2 Architecture
The architecture of Pegasus Autopilot is composed of four main modules, according to Fig. (1),
where the continuous lines mean serial wired connection and the dashed one represents a serial wireless
link.
CPU
Control
Guidance
Data Manager

NS
Inertial Sensores
GPS
Pressure Sensor

CSM

CGS

AileronElevator
RudderThrottle

Airplane Status
Reference Commands

The modular scheme is proposed to make possible to add another systems and to avoid concentrating all the processing in only one hardware. In case
of a module failure the others modules will continue
working, and they will be able to detect the failure
and send information about it to ground station. The
main function of each module is specified below
 Navigation System (NS)  In charge of acquiring and sending navigation data to the Central Processing Unit, this system is responsible for all the
sensors, such as the Inertial Measurement Unit
(IMU) and the GPS.
 Central Processing Unit (CPU)  Responsible
for handling and data processing, this system does
the data management among the other systems,
which means that any information needs to be processed by it, before being directed to another system.
In addition, the control and guidance blocks are implemented on it, generating the deflection that must
be applied on the servo in order to allow the aircraft
to achieve a determined position.
 Control Surface Manager (CSM)  The CSM
receives the signals from the CPU and applies them
on the aircrafts control surfaces (elevator, aileron,
rudder servos, and throttle). Safety system, which
can turn off the autopilot and change the control for a
human pilot in ground, is also implemented in this
module.
 Control Ground Station (CGS)  This system is
responsible for receiving and displaying flight data,
such as altitude and forward speed, on a computers
screen on the ground. It also displays the battery
status and the quality of the communication link
between the aircraft and the station.
3 Navigation
For an aircraft be capable of performing a particular task it is required to determine its geographic
position of departure, or a landmark, as well as other
points in its route in order to reach the final destination. Thus, a full navigation system needs to provide
the following variables time, speed, latitude, longitude, direction of the magnetic pole, wind speed, and
relative positions of ground reference points (Grewal,
2002). The set of variables presented is not absolutely necessary to guarantee the operation of navigation
system. In general, it is always possible to use a
small set of the information, since it supplies sufficient information to execute of the mission.
The Pegasus Autopilots Navigation System is composed by an Inertial Measurement System (IMU), a
Global Positioning System (GPS), and a Pressure
System (PS).
The IMU provides inertial information about the
three axes of the airplane. It is constituted by

One three axis ADXL345 accelerometer
from Analog Devices,

Figure 1. Pegasus Architecture

ISBN 978-85-8001-069-5

3709

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.


Two gyrometer from STMicroeletronics
(the LPR530AL to x and y axes and the LY530ALH
for the z axes)

One three axis HMC5843 magnetometer
from Honeywell (despite the fact that the magnometer is not a inertial sensor, it is localized on the
same block as the inertial sensor).
All of the IMU sensors are based on Microelectromechanical systems (MEMS). Despite being less
accurate than the conventional sensor, MEMS sensors have been employed in UAV due their small
size, light weight, low power consumption, and low
cost. The ADLX345 outputs the three axes accelerations of the airplane by a digital channel, though a
serial interface (I2C). 10 bits resolution and up to 16
times the gravity acceleration are the main advantages of using this sensor. The gyrometers provide the aircrafts angular velocities by an analog
channel, whereas the magnetometer provides the
magnetic field intensity by a serial channel, like the
accelerometer. All the sensors are supplied by 3.3
volts and present a passive low-pass filter, using only
resistors and capacitors. The IMU sensors are responsible to provide the necessary data to calculate
the Euler angles of the airplane (roll, pitch and yaw)
and its position based in inertial calculations.
The GPS from Tyco, model A1035-D, is a receptor
module with an integrated ceramic antenna. It receives signals from the 24 satellites available. The
data received is provided by a serial port. The main
features of the GPS receiver are the small size (8 x
35.6 x 35.6 mm), the sensibility of 159dBm and
positioning accuracy of less than 10 meter. The GPS
is used to provide the latitude and longitude, and the
ground speed of the airplane.
The Pressure System utilizes the MPX4115A absolute pressure sensor and the MPXV4006 differential
sensor. These components have low power consumption, small size and low cost. The absolute sensor
measures pressures from 15 kPA to 115 kPA, which
is used to estimate the aircrafts altitude. The differential sensor operates from 0 to 6kPa and it is used to
calculate the airspeed.
The Navigation System has a microcontroller responsible to process all the data from the sensors,
and for send the treated data (such as altitude and
Euler angles) to the CPU or directly to the ground
station. An AVR Atmega328P is the microcontroller
used, which is composed by 14 digital pins (GPIO),
32 KiB of flash memory, 1 KiB of EEPROM
memory, 2 KiB of RAM memory. It operates at a
clock of 16MHz. All the sensors are attached to the
microcontroller as the Fig. (2).

The guidance block is an algorithm that generates a
trajectory to be accomplished by the aircraft. It receives information of positioning from navigation
system and calculates the heading and the altitude
reference that the airplane needs to keep, and then
sends the references to the control block. The algorithm is based on waypoints, which are threedimensional geographic points. In this work a waypoint is defined by its latitude, longitude, and altitude, as shown in Fig. (3). And, a trajectory is defined by a sequence of waypoint that must be reached
by the airplane. The airplane should follow the direction given by the Line-of-Sight (LOS), which is calculated as in (1).




The airplane reaches a waypoint when its enters in a
circular area with a defined radius surrounding the
waypoint. Fig. (4) illustrates a trajectory performed
by an aircraft (the continuous line) in two dimensions
(latitude vs. longitude). There are four waypoints the
small central point, which is surrounded by the circular area mentioned before, illustrated the by circles
drawn in different radius. Fig. (5) illustrates the 3D
trajectory com focus on the altitude.

Atmega
328P
ADXL345
Accelerometer
(x,y,z)

I 2C

UART

Pegasus
CPU

ADC

UART

GPS

ADC

ADC

LPR530AL
Gyrometer
(x,y)

MPXV4006

LY530ALH
Gyrometer
(z)

HMC5843
Magnetometer
(x,y,z)

Differential
Pressure
Sensor

MPX4115A

I 2C

ADC

Absolute
Pressure
Sensor

Figure 2. Navigation System

4 Central Processing Unit
The Central Processing Unit controls three systems of the autopilot. It is responsible for the guidance block, the control block and the data management.

ISBN 978-85-8001-069-5

Figure 3. Waypoint

3710

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

Start
Receives
and
Unpacket
Navigation
Data

no

CRC is Rigth
yes
Packet and Send
Data to CGS

Figure 4. 2D Trajectory

Run Guidance
Block

Run Control
Block

Packet
and Send
CSM Data

Figure 6. Manager Data Flowchart

Figure 5. 3D Trajectory

The control block is designed to change and maintain
the airplane altitude, heading, and forward speeds
accordingly to a pre-established reference, which
comes from the guidance block. Additionally, it
guarantees the attitude_control of the three axes,
controlling the roll and pitch angles.
The management system is responsible for receiving,
analyzing, and sending data. The CPU communicates
with the Navigation System and the Control Surface
Manager by a wired serial channel working at a baud
rate of 115200 Kbps whereas, the communication
with the CGS is done by a wireless link working at
9600 Kbps. Accordingly to the flowchart in Fig. (6),
the management system starts receiving information
from de Navigation System, as current altitude, airspeed, etc. Such data are used to feed the guidance
and control blocks.
The received packets are unpacked and analyzed
to ensure data integrity, by using a cyclic redundancy
check algorithm (CRC). If the packets are correct,
they are sent to the Control Ground Station, and used
by the control block. The control block generates the
commands to be applied on the aircrafts control
surfaces, so the management system calculates the
CRC for this information and pack it.
At the end, the packets are sent to Control Surface Manager, restarting the process at a rate of
20Hz.

ISBN 978-85-8001-069-5

The controllers from the control block were tuned for
the aeromodel Piper J-3 Cub 16, shown in Fig. (7),
which is the target airplane in this project.
The main features of the SUAV are described
below
1. Wingspan 1.800mm 71.0 in
2. Wing Area 45.0 dm2 698 sq in
3. Weight 2500g 5.5lbs
4. Length 1.200 mm 47 in
5. Brushless Engine 540W
6. Propeller 12x7.
In the central processing, the microcontroller
LM3S6965 was used. It is ARM Cortex M3 microcontroller manufactured by Texas Instruments. The
main features of this microcontroller are described
below
 High performance, working up to 50 MHz
of clock rate.
 Hardware-division
and
single-cyclemultiplication, speeding calculations.

Figure 7. Target Airplane Piper J-3 Cub 16 Scale

3711

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

 Integrated Ethernet MAC and PHY which
allows making a UDP connection with the X-Plane.
 256 KB single-cycle Flash Memory, which
is big enough for the source code and to store controller gains for more than one aircraft.
 Three fully programmable 16C550-type
UARTs, one SSI module, two I2C modules, providing different ways to communicate with other systems.
Texas Instruments (TI) provides the Stellaris Peripheral Driver Library, which makes the code between
the Cortex M Family very portable. This means that
if in the future a more potent microcontroller is required, only small changes on the main source code
will be necessary. Recently the TI launched the Cortex M4 with floating point unit, which can speed up
the calculation required by the guidance and control
block.
To avoid additional work designing the printed circuit board, the development kit EK-LM3S6965 from
Luminary Micro was used. This kit was chosen due
to its relatively low cost and small dimensions, fitting
adequately on the real airplane, shown in Fig. (8).
5 Control Surface Manager

Figure 8. Embedded CPUs Hardware

Radio Controller
Safety
Link
Channel

Safety Control

Manual
Pilot
(4 Channels)

PWM

Safety
Link

PWM

PWM

The Control Surfaces Manager is responsible to
accomplish three tasks to control the surfaces, to
create a channel able to switch between the autopilot
and the manual pilot, and to read the servos position.
The Control Surfaces Values (CSV) calculated
in order to control the aircrafts surfaces, by the control block, are received by Control Surface Managers microcontroller, as shown in Fig. (9). The microcontroller receives the data as numeric values and
then generates four PWM which are, applied to ailerons, elevators, and rudders servos and one is applied to the Electronic Speed Control (ESC), to control the throttle.
ESCs are PWM controllers for electric motors.
The ESC generally accepts a nominal 50 Hz PWM
servo input signal whose pulse width varies from 1
ms to 2 ms. When supplied with a 1 ms width pulse
at 50 Hz, the ESC responds by turning off the DC
motor attached to its output. A 1.5 ms pulse-width
input signal results in a 50 duty cycle output signal
that drives the motor at approximately half-speed.
When presented with 2.0 ms input signal, the motor
runs at full speed due to the 100 duty cycle output.
ESCs designed for radio-control airplanes usually
contain a few safety features. If the power coming
from the battery is insufficient to continue running
the electric motor the ESC will reduce or cut off
power allowing the use of ailerons, rudder and elevator functions. This allows the pilot to retain control
of the plane to glide or fly on low power to safety.
The microcontroller chose is a MSP430FG4618,
which is an ultra-low power microcontroller.

ISBN 978-85-8001-069-5

Pegasus
CPU
(AutoPilot)

CSV

Servos
Feedback

MSP430
FG4618

Ailerons Servo
Elevators Servo
Rudders Servo

Servos
Feedback

ESC

Control Surface
Manager
Figure 9. Control Surface Manager

Another functionality of the CSM is to provide a
safety link to the airplane. The safety link allows
the commandant of the mission to switch between
the autopilot and the manual pilot in ground. Manual
pilot is a human pilot in ground, who can control the
airplane through a remote radio-frequency joystick (a
radio controller), by using four channels, each channel for one of the four surface control. The Pegasus
Autopilot utilizes another extra channel in order to
control an electronic circuit that chooses the data
source to be applied on the aircrafts surface controls,
the data can be the commanded from a manual pilot
or from the autopilot. The electronics circuit reads
the safety link channel and triggers a micro relay.
The safety link is designed to turn off the autopilot
in case of system failure it allows the human pilot
take total control of the airplane. The safety link
can also be used to take off the aircraft by the human
pilot, and only after an established altitude to turn on
the autopilot.
The third task required by the CSM is to provide a
feedback of the servos position to the autopilot. Then
each servo from the Pegasus Autopilot system is
modified to allow reading the voltage on its inner
potentiometer, providing the exact position of the

3712

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

servo. This value can be utilized by the control laws
and also can be sent to the ground station in order to
analyze the servo response.
6 Control Ground Station
The Control Ground Station (CGS) is a computer, or
a set of these, dedicated to receive information from
the aircrafts sensor. It communicates with the airplane through a communication system, Fig. (10).
The CGS also records all the information for a later
analysis. The information received is on the computer screen in order to monitor, in real time, the aircrafts condition. Besides it, the CGS updates the
quality of the communication link.
The control ground station is also responsible for
changing the trajectory by modifying the threedimensional points, the waypoints, and to send commands to peripheral devices installed on the airplane,
as send a command to turn right or left an embedded
camera.
The communication system establishes connection
between the crew and aircraft, and must be robust
enough to enable high-traffic information. There are
several architectures that employ one or more communication links. For the basic operation is required
at least two links, one that establishes communication between the UAV and ground station and one
other between the radio (used for safety purposes)
and the aircraft. Another additional links can be implemented in situations, which data traffic is highly
intense as imaging in real time.
The crew required to operate the Pegasus Autopilot
is composed by a commander, who is responsible for
the entire mission, a manual pilot, who provides
assistance and can control the aircraft through a radio
control in a emergency case, and a system operator,
responsible for administer the ground station as well
as control all the devices installed, for example, cameras and radar.

order to evaluate each system individually. The guidance block and the control are being tested through
"Hardware-In-the-Loop Simulations" using the flight
simulator X-Plane. The X-Plane is also used to provide navigation data to Control Ground Station, so a
whole flight is performed in the simulator and the
operator can follow the airplanes status, on the CGS
created, and compare with the information of the
airplanes sensor on X-Plane (Carvalho, 2012).
Studies on obtain the aircrafts position by the Inertial
Sensors are being finalized, whereas the use of Kalman Filter to fusion the Inertial and GPS filter are
being evaluated. The printed circuit board for the
Control Surface Manager has just designed.
There are others microcontrollers being evaluated to
be used by the Pegasuss CPU. As an example, we
think about to use the Hercules, which has two cores
running independently, and if one core stop working
the other one takes the control. This kind of microcontroller is used in safety applications and has some
functionality in case of failure.
The algorithm implemented is sequential. However
studies about using a RTOS (real time operational
system) are being carried out in order to maximize
the efficiency of the system.
One item of immediate future work includes starting
integrate the CPU, the Navigation System and the
Control Surface Manager. This step will allow to
perform tests on the ground, before flying the airplane. Immediately after we obtain good responses
on the ground, flights test will be done. Long term
future work includes creating additional safety systems, as a home option on the guidance algorithm
that brings the airplane back to the landmark if any
problem occurs and the installation of a parachute to
be used in extreme failures cases.

7 Discussion and Future Work
This architecture provides a system with local
control and parallel processing, where each module
has its own microcontroller. The modularity of the
system is the main difference between Pegasus AutoPilots architecture and others academics autopilots
designed to SUAV, like Paparazzi. It was chosen to
ensure that in case of failure of one module, the others would continue to work and would warn the
ground station about the system failure. Furthermore
it allows the modules be developed simultaneously
by different work teams, which is crucial for a fast
development. Each module can be tested and evaluated individually.
Despite every module of the system is in its final
stages of evaluation, the Pegasus AutoPilot is not yet
fully integrated. Simulations are being performed in
ISBN 978-85-8001-069-5

Figure 10. Control Ground Station (Paparazzi, 2012).

3713

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

References
Bittar A., Santos, S. R. B., Nascimento Jr. C. L.,
Givigi Jr. S. N., and Oliveira. N. M. F., (2011).
Experimental Framework For Evaluation of
Guidance and Control Algorithms For UAV.
Proceedings of 21th International Congress of
Mechanical Engineering, Natal, Brazil.
Bittar, A., and Oliveira. N. M. F., (2012). Central
Processing Unit Description and Hardware-inthe-Loop Simulation. Proceedings
of
International Conference On Unmanned Aircraft
Systems, Philadelphia, USA.
Beard, R., Kingston D., Quigley M., Snyder D.,
Christiansen R., Johnson W., McLain T., and
Goodrich M. A., (2005). Autonomous Vehicle
Technologies for Small Fixed-Wing UAVs. J.
Of Aerospace Computing, Information, And
Communication, Vol.2, pp. 92-108.
Carvalho, D. A, Bittar, Adriano, Oliveira, N.M.F.,
(2012). Desenvolvimento de uma plataforma
hardware_in_the_loop para simulação de uma
estação_de_controle_em_solo de um vant de
pequeno porte utilizando o x-plane. Anais do
XIX Congresso Brasileiro de Automática,
Campina Grande.
Chao H., Cao,Y., and Y. Chen,(2010). Autopilots
for Small Unmanned Aerial Vehicles A
Survey, Int. J. Control, Automation and
Systems, vol. 8, pp. 36-44, 2010.
Cox, H. T Nagy, J.C. Skoog, A.M Somers, A.I.,
(2004) Civil UAV Capability Assessment.
Intern Report NASA Aeronautics Research
Mission Directorat.
Grewal,S. M, R. and Weill,L.,(2002) Global
Positioning System Inertial Navigation and
Integration. John Wiley  Sons, Inc.
Paparazzi
Wiki.
Overview.
Available
httppaparazzi.enac.frwikiOverview. Acessed
in 012012.

Ribeiro L. R., and Oliveira, N. M. F., (2010). UAV
(Unmanned
Aerial
Vehicle)
Autopilot
Controllers Test Platform using MatlabSimulink
and X-Plane. Proccedings of ASEEIEEE
Frontiers in Education Conference, Washington
DC.
Santos, S. R. B.  Oliveira, N. M. F., (2009a).
Testbed for Controllers of Longitudinal
Movements of Aircraft. Anais do 20 Congresso
Internacional de Engenharia Mecânica, 2009,
Gramado. 20 Congresso Internacional de
Engenharia Mecânica, 2009.
Santos, S. R. B.  Oliveira, N. M. F., (2009b).Test
Platform to Pitch Angle using Hardware in
Loop. In 39th ASEEIEEE Frontiers in
Education Conference, San Antonio, TX, USA
Santos, S. R. B., and Oliveira, N. M. F., (2011a).
Longitudinal
Autopilot Controllers Test
Platform Hardware in the Loop. Proceedings of
2011 IEEE International Systems Conference,
Montreal  Quebec, Canada, 2011
Santos, S. R. B. (2011b). Fundamentos para o
projeto de um Sistema de Navegação de Baixo
Custo. Intern Report Instituto Tecnológico de
Aeronáutica, 2011.
Sartori, S. (2012). SP Simulação Testa Uso De
Avião Não-Tripulado Em Acidentes. Terra,
Portal
De
Notícias.
Available
httpnoticias.terra.com.brbrasiltransitonoticia
s0,,OI5395940-EI998,00SP+simulacao+testa+uso+de+aviao+naotripulad
o+em+acidentes.html>. Acessed in 012012.
Wishart, S., Kim, J.-H., Sukkarieh, S.,(2006).Realtime Navigation, Guidance, and Control of a
UAV using Low-cost Sensors. Springer Tracts
in Advanced Robotics, Vol. 24, pp. 299-309.

.

ISBN 978-85-8001-069-5

3714