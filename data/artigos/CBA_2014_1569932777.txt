Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

BUSCA HARMÔNICA DINÂMICA AUTO-AJUSTÁVEL APLICADA  PARAMETRIZAÇÃO
MULTIOBJETIVO DE CONTROLADORES
HELON V. HULTMANN AYALA
Programa de Pós-graduação em Engenharia de Produção e Sistemas, Escola Politécnica, Pontifícia
Universidade Católica do Paraná
Endereço R. Imaculada Conceição, 1155. Prado Velho. 80215-901. Curitiba, Paraná, Brasil.
E-mail helon.ayala@pucpr.br
JULIANO PIEREZAN
Programa de Pós-graduação em Engenharia Elétrica, Departamento de Engenharia Elétrica, Universidade
Federal do Paraná
Endereço Av Cel Francisco H dos Santos, sn, Jardim das Américas. 81530-900. Curitiba, Paraná, Brasil.
E-mail jkpir@outlook.com
LEANDRO DOS SANTOS COELHO
Programa de Pós-graduação em Engenharia de Produção e Sistemas, Escola Politécnica, Pontifícia
Universidade Católica do Paraná
R. Imaculada Conceição, 1155. Prado Velho. 80215-901. Curitiba, Paraná, Brasil.
Programa de Pós-graduação em Engenharia Elétrica, Departamento de Engenharia Elétrica, Universidade
Federal do Paraná
Endereço Av Cel Francisco H dos Santos, sn, Jardim das Américas. 81530-900. Curitiba, Paraná, Brasil.
E-mail leandro.coelho@pucpr.br
Abstract  The use of PD (proportional-derivative) and PID (proportional-integral-derivative) controllers have been widely
spread in industry, due to its ease of implementation and reduced number of parameters to be adjusted. However, requirements
such as response time, energy consumption and variance in the control action are often included on multivariable systems and it
cannot be solved by classical methods. Thus, the multiobjective tuning of PID controllers is presented as a solution to solve these
requirements concurrently, which makes it a widely explored topic in literature. This paper approaches the application of this
technique in multivariable PID controllers. Hence, both Multiobjective Harmony Search (MOHS) and Dynamic Self-adaptive
Harmonic Multiobjective Search (DS-MOHS) have its performance explored and compared. It is shown that the DS-MOHS offers
better solutions than MOHS. It still has the advantage of a lower number of design parameters to be adjusted. Finally, in order to
validate it under control systems, the optimization technique is applied to robotic manipulators.
Keywords  Harmonic Search, Multiobjective Optimization, PID Control, Robotics
Resumo  O uso de controladores PD (proporcional-derivativo) e PID (proporcional-integral-derivativo) tem sido largamente
difundido no meio industrial, devido a sua facilidade de implementação e quantidade reduzida de parâmetros para serem ajustados.
Entretanto, requisitos como o tempo de resposta, gasto energético e variância na ação de controle encontram-se com frequência em
sistemas_multivariáveis e não podem ser resolvidos por métodos clássicos de sintonia. Assim, o ajuste multiobjetivo de controladores apresenta-se como uma solução para a imposição desses critérios de forma concomitante, tornando-se um tema vastamente
explorado na literatura especializada. O presente trabalho explora a utilização dessa técnica no projeto_de_controladores PID multivariáveis. Para tanto, são comparados os desempenhos da busca_harmônica multiobjectivo (Multiobjective Harmony Search 
MOHS) e da busca_harmônica multiobjetivo dinâmica auto ajustável (Dynamic Self-adaptative Multiobjective Harmonic Search 
DS-MOHS), esta pouco explorada nas linhas de pesquisa atuais. Mostra-se que o DS-MOHS oferece soluções melhores que a sua
contrapartida MOHS, tendo ainda como vantagem um número menor de parâmetros de projeto a serem ajustados. Além disso, a
técnica de otimização é validada no âmbito de controle_de_sistemas, através da aplicação em um estudo de caso de manipuladores
robóticos.
Palavras-chave  .

1

Introdução

O uso de controladores proporcional-derivativo
(PD), proporcional-integral (PI) e proporcional- integral-derivativo (PID) tem sido largamente difundido no
meio industrial, devido a sua facilidade de implementação e quantidade reduzida de parâmetros. Esta estrutura de controle é praticamente ubíqua na indústria 
estima-se que 95 dos controladores implementados
hoje são do tipo PI ou PID (ODwyer, 2012). Apesar

de tamanho emprego, constata-se que as malhas de
controle são mal sintonizadas (Ender, 1993 ODwyer,
2012), muito embora a estrutura de controle seja simples e poucos parâmetros precisem ser ajustados  o
que acaba sendo feito manualmente. Estes fatos demonstram a urgência na criação e proliferação de métodos_de_sintonia que permitam ao projetista especificar de forma flexível seus requisitos de projeto e obter
rapidamente os parâmetros para uma vasta gama de sistemas.

1522

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

Por outro lado, o algoritmo heurístico de otimização denominado busca_harmônica (Harmonic Search 
HS) inicialmente proposto por Geem e Loganathan
(2001), tem demostrado resultados promissores em
uma variedade de aplicações (Manjarres et. al., 2013).
Diversas adaptações ao algoritmo original HS de 2001
foram feitas com o intuito de obter melhores resultados.
Os parâmetros de controle do algoritmo foram naturalmente revisados e melhorias foram sugeridas, com particular interesse em técnicas de auto ajuste dinâmico
dos parâmetros (Kattan e Abdullah, 2013). Em paralelo, versões multiobjetivo do algoritmo HS (Multiobjective Harmony Search  MOHS) foram propostas
(Ricart et. al., 2011 Sivasubramani e Swarup, 2011a
Sivasubramani e Swarup, 2011b). Versões do algoritmo HS para otimização_multiobjetivo auto ajustáveis
e dinâmicos (Dynamic Self-adaptive Multiobjective
Harmonic Search  DS-MOHS) não têm sido o foco de
pesquisa, com exceção do trabalho de Ayala et. al.
(2014).
O ajuste multiobjetivo de controladores possibilita
a imposição de requisitos que requerem compromisso
de critérios de forma concomitante. Esses requisitos,
tais como tempo de resposta, gasto energético e variância na ação de controle encontram-se com frequência
em sistemas_multivariáveis e não podem ser resolvidos
por métodos clássicos de sintonia. Essa é a razão pela
qual esse tema é vastamente explorado na literatura especializada (Liu, Yang e Whidborne, 2002 Hung et.
al., 2008 Ayala e Coelho, 2008 Coelho et. al., 2010
Ayala e Coelho, 2010 Reynoso-Meza et. al., 2012
Ayala e Coelho, 2012 Reynoso-Meza et. al., 2013 Neath et. al., 2014). O presente trabalho aplica a versão da
busca_harmônica multiobjetivo dinâmica auto ajustável
DS-MOHS recentemente proposta por Ayala et. al.
(2014) na resolução do problema de sintonia de controladores PID multivariáveis. Mostra-se que o DSMOHS oferece soluções melhores que a sua contrapartida MOHS, tendo ainda como vantagem um número
menor de parâmetros de projeto a serem ajustados. Adicionalmente, valida-se a técnica de otimização no âmbito de controle_de_sistemas, através da aplicação em
um estudo de caso de manipuladores robóticos.
O restante deste artigo é organizado da seguinte
forma. Na seção 2 são recapitulados os conceitos de
otimização_multiobjetivo. O algoritmo de MOHS e sua
extensão DS-MOHS são expostos na seção 3. O estudo
de caso de controle PD multivariável aplicado a um
manipulador_robótico é descrito na seção 4. Na seção 5
são expostos os resultados das simulações computacionais realizadas. A seção 6, que finaliza o documento,
mostra as conclusões e perspectivas de pesquisa futura.
2

forma, faz-se necessário obter de forma distribuída e
diversificada um compromisso entre todos os objetivos
desejados. Assim, é possível estabelecer o problema de
otimização_multiobjetivo irrestrito de forma geral
como sendo a tarefa de encontrar um determinado vetor
de variáveis de decisão de modo que o vetor de funções
objetivo seja melhorado. Sem perda de generalidade,
descreve-se o problema de otimização_multiobjetivo a
seguir restringindo-se ao caso de minimização de todos
os objetivos (Deb, 2001).
minimizar

f m (x) ,

m  1, 2, ..., M

sujeito a

xi( L )  xi  xi(U )

i  1, 2, ..., n.

onde x  n representa o vetor de variáveis de decisão
e xi( L )  xi  xi(U ) o espaço de busca do seu i-ésimo
componente, f m (x) representa a m-ésima função objetivo (no total de M objetivos). Se uma solução satisfaz os limites das variáveis, esta é conhecida como factível.
Em geral, existe uma família de soluções ótimas
de forma equivalente (segundo o conceito de otimalidade de Pareto) que são superiores s demais soluções
que constituem o espaço de busca. O conceito de otimalidade de Pareto permite comparar o desempenho de
soluções através dos seus objetivos. As soluções chamadas não-inferiores, não-dominadas ou Pareto-ótimas
são tais que nenhum dos objetivos pode ser melhorado
sem degradar os outros. Formalmente, representamos a
partir de duas soluções xa e xb, sendo que xa domina xb,
o conceito de dominância de Pareto como sendo
f i ( x a )  f i ( x b ), i 1,2,..., M  .

Desta forma, conforme mostrado acima, uma solução é dita melhor que a outra, no sentido de otimalidade
de Pareto, somente quando todos os objetivos envolvidos no problema de otimização são melhores. Note que
este conceito de otimalidade contrasta com o de um
problema de otimização de objetivo simples, onde somente um objetivo é visado e desta forma a comparação de soluções é direto. Em otimização_multiobjetivo,
a meta é encontrar um conjunto de soluções não dominadas de forma que as mesmas estejam o mais próximo
possível da fronteira de Pareto real e sejam o mais diversificadas possível, de modo a oferecer ao projetista
o maior número possível de opções.
3

Otimização Multiobjetivo

A otimização de um único objetivo visa satisfazer
a minimização ou maximização de uma determinada
métrica. Por outro lado, um problema de otimização
multiobjetivo busca por um conjunto de soluções que
capazes de otimizar separadamente e concomitantemente quantas métricas forem necessárias. Desta

(1)

Busca Harmônica

Na presente seção são abordados os conceitos relacionados  técnica de otimização busca_harmônica
(Harmony Search  HS) e sua extensão para otimização_multiobjetivo e dinâmica auto ajustável.
O algoritmo HS emula o comportamento de um
músico quando este busca pela melhor harmonia em

1523

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

um senso estético. Assim sendo, o algoritmo HS busca
o melhor estado, ou seja, o ótimo global, que é determinado com base na função objetivo dada pelo problema corrente em questão. Os seguintes passos (1 a 5)
definem o algoritmo HS (Coelho e Bernert, 2009),
como proposto inicialmente por Geem et. al. (2001).
Passo 1. Configuração do algoritmo. O problema
de otimização é especificado da seguinte forma
Minimizar f(x), sujeito a xi  Xi, i  1, ..., N
onde f(x) é a função objetivo, Xi é o intervalo definido
para cada variável de decisão de modo que
xi( L )  X i  xi(U ) . Os parâmetros de controle, a saber (i)
o tamanho da matriz de harmonias (Harmony Memory
Matrix  HMS), ou seja, o número de vetores de soluções na memória de harmonias (ii) a taxa de consideração de memória de harmonias (Harmony Memory
Considering Rate  HMCR) (iii) a taxa de ajuste de
tons (Pitch Adjusting Rate  PAR) e (iv) critério de
parada (número máximo de improvisações - tmax) são
necessariamente especificados nesta altura do processo.
Passo 2. Inicialização randômica da memória de
harmonias. A memória de harmonias (Harmony Memory  HM) mantém todos os vetores de variáveis de
decisão encontradas durante o procedimento de busca.
A HM é inicializada de forma aleatória e uniforme dentro do espaço de busca e toma a forma como mostra a
Eq. (1). Nesta equação, cada linha representa uma possível solução (a última linha é a solução de número
HMS) e em cada linha há n componentes (o número de
variáveis de decisão).
 x

 x
HM   
 HMS-1
 x1
 x HMS
 1
1
1
2
1

1
2
2
2

x
x






x
x

1
N-1
2
N-1



-1
x2HMS-1  x NHMS
1
x2HMS  x NHMS
1





HMS-1 
xn

xnHMS 
1
n
2
n

x
x


(2)

Passo 3. Improvisação de uma nova harmonia.
Este é o passo em que uma nova solução é criada de
forma a explorar o espaço de busca. Desta forma, criase um vetor

x new  ( x1new , x2new ,..., xNnew ) que é ge-

rado segundo inspira a atuação dos músicos quando
acontece uma improvisação. Esta é emulada segundo
as regras de lembrança de memória de harmonias,
ajuste de tons e seleção aleatória.
A primeira regra mencionada, lembrança da memória de harmonias, depende do parâmetro de projeto
HMCR (que pertence ao intervalo 0, 1). Desta forma,
cada componente de xnew é tomada da HM ou gerada
aleatoriamente dentro da região de busca de acordo
com HMCR, da seguinte forma





 x new  xi1 , xi2 ,..., xiHMS , se rand  HMCR
xinew   inew
, caso contrário
 xi  X i

onde rand é um número aleatório uniforme dentro do
intervalo 0, 1. Após a consideração da memória de
harmonias, ajusta-se o tom de acordo com o parâmetro
PAR
Ajustar o tom, se rand  PAR
xinew  
Não ajustar , caso contrário.

(4)

Se o tom da nova solução improvisada é ajustado,
então cada componente da nova solução é modificada
da seguinte forma

xinew  xinew  rand  bwi ,

(5)

onde bwi é uma distância arbitrária de largura de banda
na i-ésima dimensão.
Passo 4. Atualizar a HM. Sendo melhor xnew que
qualquer uma das HMS harmonias presentes na HM,
xnew substitui a pior solução (em termos de f(x)) e passa
a constituir HM.
Passo 5. Repetir os Passos 3 e 4 até que o critério
de parada (número máximo de improvisações) seja satisfeito.
Nas duas subseções seguintes são abordadas as
adaptações do algoritmo HS para otimização_multiobjetivo e sua adaptação auto ajustável.
3.2 Busca Harmônica Multiobjetivo
Com o objetivo de lidar com problemas_de_otimização_multiobjetivo conforme exposto na seção 2, o algoritmo HS é adaptado para o MOHS (Multiobjective
Harmony Search  MOHS). Para este fim, os Passos 1
e 4 são alterados conforme abaixo
Passo 1 Inicialização do Algoritmo. Para um problema de otimização_multiobjetivo (conforme seção 2)
a tarefa é minimizar fm(x), sujeito a xi  Xi, m  1, ,
M i  1, ..., n. Os parâmetros de controle HMS,
HMCR, PAR e tmax também são ajustados.
Passos 2 e 3 Idem ao HS.
Passo 4 Atualizar a HM. Sempre que uma nova
harmonia xnew é melhor que qualquer outra que esteja
contida na HM, xnew é adicionada a HM e a pior harmonia é excluída. O conceito de dominância e distância de
multidão são utilizados para ordenar a memória de harmonias, da mesma forma como o algoritmo NSGA-II
(Deb et. al., 2002) ao final de cada improvisação. Desta
forma, o algoritmo MOHS visa não somente a permanência de harmonias não-dominadas em HM, mas também de soluções diversificadas que representem a
maior variedade possível no espaço de objetivos (uma
das premissas em otimização_multiobjetivo).
Passo 5 Idem ao HS.

(3)

1524

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

dentro do intervalo 0, 1). A Figura 1 mostra o comportamento de PAR, de acordo com a Eq. (7), para
PARmin  0,1 e PARmax  1. Note que o valor de PAR
independe do número de iterações e diminui, implicando na menor ocorrência de improvisações,  medida
que BtW aumenta. Em outras palavras,  medida que o
coeficiente BtW aumenta, denotando melhor qualidade
no conjunto de harmonias em HM, a probabilidade de
improvisações diminui. O ajuste de largura de banda do
tom é ajustado com base no desvio padrão das harmonias em cada dimensão (Kattan e Abdullah, 2013)

1

PAR

0.9
0.8
0.7

PAR

0.6
0.5
0.4
0.3
0.2
0.1
0

0

0.1

0.2

0.3

0.4

0.5

0.6

0.7

0.8

0.9

bwi

1

BtW

Figura 1. Comportamento do parâmetro de acordo com BtW, tendo
PARmin  0,1 e PARmax  1.

3.3 Busca Harmônica Multiobjetivo Auto-ajustável
Recentemente, Kattan e Abdullah (2013) propuseram a utilização de auto ajuste dinâmico para a definição dos parâmetros de controle (juntamente com um
estudo sobre demais métodos para definição destes parâmetros para a HS). Neste estudo, é proposta a definição dos parâmetros PAR e bw de forma automática. Diferentemente da maioria das técnicas encontradas para
auto ajuste dos parâmetros do HS, esse ajuste acontece
de forma independente do número atual de gerações 
o que forneceu bons resultados quando comparado no
estudo (Kattan e Abdullah, 2013). Na presente seção, o
algoritmo de busca_harmônica multiobjetivo auto ajustável (Dynamic Multiobjective Harmonic Search  DSMOHS) é introduzido.
O conceito de razão do melhor para o pior (Bestto-Worst ratio  BtW), aqui adapatado de Kattan e Abdullah (2013) para otimização_multiobjetivo, estima a
qualidade das soluções que estão contidas na HM de
forma homogênea, da seguinte maneira

BtW

 max
i

fi ( x

b

)
fi ( x )
w

(6)

onde fi(xb) and fi(xw) representam o melhor e pior valores para a i-ésima função objetivo (vale relembrar que
no presente trabalho restringe-se  minimização de todas as M funções objetivo, conforme seção 2). Assim,
o valor de BtW é calculado a cada iteração, a fim de
medir a qualidade geral das soluções contidas na memória de soluções.
A partir do coeficiente BtW, o parâmetro de controle PAR (Eq. (4)) é definido dinamicamente de
acordo com a qualidade das soluções contidas na HM
(Kattan e Abdullah, 2013)
PAR  (PAR min  PAR max )BtW  PAR max

 C.StdDev(HM i )

onde o operador StdDev(HMi) representa o desvio padrão de todas as harmonias na i-ésima dimensão e o fator C é adotado seguindo as linhas de Kattan e Abdullah (2013) com base em AccRate (número de harmonias aceitas na HM nas últimas 100 iterações) e AccCth
como o limiar (adotado como 20) no qual C começa
a decrescer, ou seja
2
, se AccRate  AccC

th
 AccRate
C  2
, se AccC  AccRate  1
th
 AccCth
 0.1
, se AccRate  1

. (9)

Assim sendo, com relação ao MOHS, o algoritmo
DS-MOHS implementa as Eqs. (6)-(9) a cada improvisação (Passo 3) de forma a calcular os valores de PAR
e bw com base na qualidade das soluções contidas na
HM, em contraste com o MOHS que possui valores estáticos durante o procedimento de busca.
4

Manipulador Robótico

Um manipulador_robótico serial pode ser descrito
através da sua equação dinâmica, a qual é constituída por
um conjunto de equações diferenciais acopladas que
possuem termos relacionados, por exemplo,  inércia variante, torque centrífugo e de Coriolis, carregamento,
gravidade e atrito. Em geral, em aplicações de manipuladores, requer-se que o atuador final do conjunto realize
uma determinada trajetória e velocidade. Deste modo,
faz-se necessário especificar os torques aplicados aos
atuadores localizados em cada uma das juntas do manipulador, a fim de que o cumprimento das trajetórias seja
realizado da melhor maneira possível. O modelo_matemático utilizado para descrever o manipulador_robótico,
estudo de caso do presente artigo, é descrito a seguir. A
equação dinâmica de um manipulador_robótico de n
graus de liberdade pode ser escrita como (Ayala e Coelho, 2012)

(7)

M ( )  C ( , )  G( )  

onde PARmin and PARmax podem ser definidos de um
valor relativamente pequeno e também grande (ambos

(8)

(10)

onde M ( )  nxn é a matriz de inércia do sistema (definida positiva), C( ,)  nx1 é o vetor que representa os

1525

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

efeitos do torque centrífugo e de Coriolis, G( )  nx1 é
o vetor relativo ao efeito dos torques gravitacionais,
  nx1 é o vetor do torque das juntas, e  ,  ,  representam respectivamente a posição, velocidade e
aceleração angulares das juntas. Assim sendo, ao assumir n  2, é possível obter o modelo_dinâmico de um
manipulador de dois_graus_de_liberdade (Fig. 2), como
a seguir (Craig, 2005)

 1  m2l22 (1  2 )  m2l1l2 c2 (21  2 ) 
(m  m )l 2 - m l l s  2
1

2

1

1

2 1 2 2 2

 2m2l1l2 s212  m2l2 gc12  (m1  m2 )l1 gc1

(11)

aj(t)   j(t) -  d,j(t), onde j 
j1,2.

As medidas de erro acima serão utilizadas como
métricas a seguir nos critérios do procedimento de otimização para a definição dos ganhos do controlador do
manipulador_robótico.
No presente trabalho é proposta a utilização de um
controlador PD digital multiloop. A ação de controle é
regida pelo vetor de torques  aplicado em cada eixo
conforme a equação dinâmica do manipulador. Desta
forma, a equação de controle PD analógico multivariável é dada por

j(t)  Kp,j  j(t) + Kv,j  j(t)

 2  m2 l1l 2 c21  m2 l1l 2 s 212
m2 l1 gc12  m2 l 22 ( 1  2



(12)

)

onde s1sen(1), s2sen(2), c1cos(1), c2cos(2), e
c12cos(1+2). Utilizam-se os índices 1 e 2 para denotar respectivamente os parâmetros das juntas 1 e 2. De
acordo com (Mital  Chin, 1995), são utilizados, para
fins de simulação, os seguintes parâmetros comprimento dos elos do manipulador l10,8 m e l20,4 m
massas dos elos de m1m20,1 kg, e aceleração da gravidade de g9,81 ms2. Os atuadores possuem restrições
físicas e assim sendo, adota-se no presente trabalho para
os torques 1 e 2 o limite de -1 1 kNm. O período de
amostragem é selecionado como Ts  10 ms.

(15)

(16)

Após realizar o processo de discretização da equação do vetor de torques como em (7), a equação a diferenças (possível de se implementar em simulações
computacionais) do controlador PD é dada por

j(t)(Kp,j+Kv,jTs)  (t) - (Kv,jTs)  (t-1) 
(Kp,j+Kv,jTs)  d,j(t) + Kv,jTs d,j(t-1),
onde j  j1,2.

(17)

Os ganhos do controlador PD são dados pelas matrizes Kp,j e Kv,,j (diagonais e definidas positivas). A
ação de controle é portanto proporcional aos erros de
posição e velocidade.
5

Resultados

Nesta seção são expostos os resultados quando o
problema de sintonia de controladores é resolvido através das técnicas MOHS e DS-MOHS. Para tanto,
aplica-se na malha_de_controle composta pelo manipulador_robótico regido pela equação dinâmica conforme
em (10) e controlador PD com ganhos selecionados de
forma a minimizar as seguintes métricas
tf

tf

f1 ( x)   d1 (t )   d 2 (t )
2

t 1

2

tf

tf

f 2 ( x)   v1 (t )   v2 (t )
2

Figura 2. Manipulador robótico de dois_graus_de_liberdade e seus
parâmetros.

t 1

Os valores desejados para a posição_angular, a velocidade e a aceleração da j-ésima junta do manipulador
são definidas respectivamente como  d,j,  d,j e  d,j e os
seus vetores dos erros de posição, velocidade e aceleração são dados por
dj(t)   j(t) -  d,j(t) , onde j 
j1,2,

(13)

vj(t)   j(t) -  d,j(t), onde j  j1,2
e

(14)

(18)

t 1

2

(19)

t 1

O método Runge-Kutta (4 ordem) é usado para simular a dinâmica do robô. O projeto do controlador PD
é otimizado através dos algoritmos MOHS e DSMOHS de modo a minimizar as funções objetivo f1 ( x)
e f 2 ( x) , considerando os ganhos do controlador dentro
do intervalo 0, 20. A função objetivo f1 ( x) visa o seguimento da trajetória do robô, enquanto a f 2 ( x) requer
que o erro do seguimento da velocidade desejada seja
minimizado.
A posição desejada para cada elo é dada através de
um polinômio de 5a ordem, como a seguir (Craig,
2005)

1526

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

 d,j(t)  a0 + a1t + a2t2 + a3t3 + a4t4 + a5t5 ,
onde j    j  1,2

(a)

(20)
4.5

Elo 1
Elo 2

4

tendo as seguintes restrições

3.5
3

 a1+ 2a2tf +3a3t 2f +4a4t 3f +5a5t 4f


 df,j  2a2+6a3tf +12a4t 2f +20a5t3f
onde j    j  1,2

df,j

(21)

Posição



sendo  df,j,  df,j,  df,j os valores finais em desejados
respectivamente para a posição (  df,11 rad e  df,22
rad em t  2 e  df,10,5 rad e  df,24 rad em tf  4 s),
velocidade (  df,1  df,20 rads em t  2 s e tf  4 s) e

1

0
-0.5

0

0.5

1

1.5

2

2.5

3

3.5

4

3

3.5

4

Tempo (s)

(b)
2.5

Elo 1
Elo 2

2

Velocidade

1.5

1

0.5

0

-0.5

-1
0

0.5

1

1.5

2

2.5

Tempo (s)

Figura 4. (a) Posição e (b) velocidade desejadas (linha tracejada) e
realizadas (linha cheia) com a aplicação da solução mais compromissada obtida pelo algoritmo DS-MOHS.

100

MOHS
DS-MOHS

90
85

4

80

Torque 1
Torque 2

3.5

75

3
70

2.5

65

Torque

f2 (erro das velocidades)

2
1.5

0.5

aceleração (  df,1  df,20 rads2).
Os parâmetros do algoritmo são definidos da seguinte forma. O número máximo de harmonias guardadas na memória 100, máximo número de improvisações 3.000, HMCR  0,95, PAR  0,5 (para o MOHS)
e PARmin  0,1 e PARmax  1 (para o DS-MOHS).
Os algoritmos são simulados com 30 condições iniciais
diferentes. Para fins de comparação numérica dos algoritmos, a Tabela 1 mostra as métricas (i) número de soluções não-dominadas (ao final de cada simulação), (ii)
distância Euclidiana (média das distância Euclidianas
das soluções não-dominadas até a origem) e (iii) hipervolume (Fonseca, Paquete e López-Ibáez, 2006). Para
o cálculo das métricas (ii) e (iii), os valores das métricas f1 ( x) e f 2 ( x) são normalizados entre 0,1 de modo
a não caracterizar preferência por algum dos objetivos.
95

2.5

60
55
50
2.5

3

3.5

4

4.5

5

5.5

2
1.5
1

f (erro das posições)
1

0.5

Figura 3. Fronteiras de Pareto obtidas pelos algoritmos MOHS e
DS-MOHS. A solução melhor compromissada obtida pelo DSMOHS é mostrada em verde.

0
-0.5

0

0.5

1

1.5

2

2.5

3

3.5

4

Tempo (s)

Figura 5. Ação de controle (torque) do controlador mais compromissado obtido pelo algoritmo DS-MOHS.

Tabela 1. Métricas de performance para o problema de otimização.

MOHS
DS-MOHS
MOHS
DS-MOHS
MOHS
DS-MOHS

Mínimo
Máximo
Média
Número de soluções não-dominadas
13
54
27.3
100
100
100
Distância Euclidiana
3.458E-01
4.689E-01
3.977E-01
3.448E-01
3.928E-01
3.699E-01
Hipervolume
8.860E-01
9.386E-01
9.222E-01
9.407E-01
9.464E-01
9.453E-01

É possível dizer, através da análise dos dados numéricos da Tabela 1, que o DS-MOHS obteve resultados superiores quando comparado  versão clássica
MOHS. No quesito (i), o DS-MOHS obteve mais soluções não dominadas ao término de cada simulação, fornecendo soluções em maior número ao projetista e
mais diversificadas na fronteira estimada de Pareto
(conforme também ilustra a Figura 3, que contém todas
as soluções obtidas ao final de 30 simulações). O critério (ii), referente  média da distância Euclidiana das
soluções até a origem, também é melhor para o DS-

1527

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

MOHS, sendo a sua fronteira de Pareto mais próxima
em média de um ponto utópico (origem). Finalmente,
o critério (iii) hipervolume, que fornece quantitativamente uma métrica da região que o conjunto de Pareto
aproximado domina, também é melhor para o DSMOHS.
Tendo em mãos as soluções mostradas na Figura
3, o projetista pode escolher então uma solução, dentre
o conjunto de soluções contidas na fronteira de Pareto
estimada, a qual ofereça o melhor compromisso entre
os objetivos visados. Uma possibilidade é definir a melhor solução compromissada como aquela que possua
a menor média harmônica entre os objetivos (normalizados). Na Figura 3 o círculo verde mostra a solução
melhor compromissada para o algoritmo DS-MOHS.
Esta solução tem suas trajetórias simuladas, conforme
mostram as Figuras 4 e 5.
A Figura 4 mostra as trajetórias desejadas para posição e velocidade (critérios de custo) enquanto a Figura 5 ilustra o torque em cada junta. É possível ver o
bom cumprimento da trajetória e a ação de controle
com pouca variação, fator importante no controle de
atuadores para aumentar a sua vida útil.
6

Conclusão

O presente trabalho apresentou a aplicação do algoritmo MOHS e sua versão DS-MOHS no problema
de sintonia de controladores PD multiloop, quando
aplicados na malha_de_controle de um manipulador_robótico de dois_graus_de_liberdade. Mostrou-se que, para
o presente problema, o algoritmo DS-MOHS obteve
melhores resultados de acordo com os critérios do problema de otimização. Vale salientar que o algoritmo
DS-MOHS possui menos parâmetros de projeto que a
sua versão clássica MOHS, o que facilita e encoraja a
sua aplicação a outros problemas. Ao projetista é possível fornecer, através da metodologia utilizada, uma
gama de soluções que oferecem um compromisso entre
os objetivos de minimizar o erro de trajetória de posição e velocidade.
Futuros trabalhos visarão (i) a aplicação de controladores PD e PID a sistemas mais complexos, (ii) utilização de outras estruturas de controle que permitam
maior flexibilidade através do ajuste dos seus parâmetros (como redes_neurais) e (iii) sequente melhoria do
algoritmo MOHS de modo a diminuir seus parâmetros
de controle e aumentar a sua performance.
Agradecimentos
Este trabalho foi parcialmente financiado por uma
bolsa PROSUP da CAPES.
Referências Bibliográficas
Ayala, H. V. H. and Coelho, L. S. (2008). A multiobjective genetic algorithm applied to multivariable control optimization., In ABCM symposium series in mechatronics, vol. 3, pp. 736-745.

Ayala, H. V. H. and Coelho, L. S. (2010). Controller
tuning using multiobjective particle_swarm_optimization applied to a quadruple-tank process,
In ABCM Symposium Series in Mechatronics,
vol. 4, pp. 72-79.
Ayala, H. V. H. and Coelho, L. S. (2012), Tuning of
PID controller based on a multiobjective genetic
algorithm applied to a robotic manipulator.,
Expert Systems with Applications, v. 39, p.
8968-8974.
Ayala, H. V. H. Cruz, L. F. Coelho, L. S. and Zanetti,
R. Z., (2014), Swim velocity profile identification through a dynamic self-adaptive multiobjective harmonic search and RBF neural networks, 22nd European Symposium on Artificial
Neural Networks, Computational Intelligence
and Machine Learning (ESANN), Bruges, Bélgica.
Coelho, L.S., Bernert, D. L. A. (2009), An improved
harmony_search algorithm for synchronization
of discrete-time chaotic systems., Chaos, Solitons  Fractals, vol. 41, no. 5, pp. 2526-2532.
Coelho, L. S., Ayala, H. V. H., Nedjah, N. and
Mourelle, L. M., (2010), Multiobjective
Gaussian particle swarm approach applied to
multi-loop PI controller tuning of a quadrupletank system, In Multi-Objective Swarm Intelligent Systems, pp. 1-16, Springer Berlin Heidelberg.
Craig, J. J. (2005). Introduction to robotics mechanics
 control. 3rd Ed., Pearson Prentice Hall.
Deb, K. (2001). Multi-Objective optimization using
evolutionary algorithms, New York, NY,
USA John Wiley  Sons, Inc.
Deb, K., Pratap, A., Agarwal, S., Meyarivan, T. A. M.
T. (2002), A fast and elitist multiobjective genetic algorithm NSGA-II, in IEEE Transactions on Evolutionary Computation, vol. 6, pp.
182-197.
Ender, D. B. (1993), Process control performance
Not as good as you think. Control Engineering,
vol. 40, no. 10, 180-190.
Fonseca, C. M., Paquete, L., López-Ibáez, M., (2006),
An improved dimension - sweep algorithm for
the hypervolume indicator., in proceedings of
the 2006 Congress on Evolutionary Computation (CEC06), pp. 1157-1163, Piscataway,
New Jersey.
Geem, Z. J., Kim, H. and Loganathan, G.V. (2001), A
new heuristic optimization algorithm harmony
search, Simulation, vol. 76, no. 2, pp. 60-68.
Hung, M. H. Shu, L.S. Ho, S. J. Hwang, S.F. Ho, S.
Y., March 2008, A novel intelligent multiobjective simulated_annealing algorithm for designing robust PID controllers, IEEE Transactions on Systems, Man and Cybernetics, Part A
Systems and Humans, vol. 38, no.2, pp.319330.
Kattan, A., Abdullah, R. (2013) A dynamic self-adaptive harmony_search algorithm for continuous
optimization problems, Applied Mathematics

1528

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

and Computation, vol. 219, no. 16, pp. 85428567.
Liu, G. P., Yang, J. B., Whidborne, J. F., (2002), Multiobjective optimisation  control, 1st edition,
Research Studies Pr.
Manjarres, D., Landa-Torres, I., Gil-Lopez, S., Del Ser,
J., Bilbao, M.N., Salcedo-Sanz, S. and Geem, Z.
W., (2013), A survey on applications of the
harmony_search algorithm, Engineering Applications of Artificial Intelligence, vol. 26, no. 8,
pp. 1818-1831.
Mital, D. P. e Chin, L. (1995). Intelligent control applications with neural networks, Intelligent control systems theory and applications., Guta,
M. M. e Sinha, N. K. (eds), chapter 18, Piscataway, IEEE Press, pp. 479-514.
Neath, M. J., Swain, A. K., Madawala, U. K., Thrimawithana, D.J., March 2014. An optimal PID
controller for a bidirectional inductive power
transfer system using multiobjective genetic algorithm, IEEE Transactions on Power Electronics, vol. 29, no.3, pp.1523-1531.
ODwyer, A. (2012), An overview of tuning rules for
the PI and PID continuous-time control of timedelayed single-input, single-output (SISO) processes. PID Control in the Third Millennium,
Springer London, p. 3-44.
Reynoso-Meza, G., Sanchis, J., Blasco, X., Herrero, J.
M., (2012), Multiobjective evolutionary algorithms for multivariable PI controller design,
Expert Systems with Applications, vol. 39, no.
9, pp. 7895-7907.
Reynoso-Meza, G., Garcia-Nieto, S., Sanchis, J.,
Blasco, F.X., (2013), Controller tuning by
means of multi-objective optimization algorithms a global tuning framework, IEEE
Transactions on Control Systems Technology,
vol. 21, no.2, pp. 445-458.
Ricart, J., Httemann, G., J. Lima and Barán, B. (2011),
Multiobjective harmony_search algorithm proposals, Electronic Notes in Theoretical Computer Science, vol. 281, pp. 51-67.
Sivasubramani, S., Swarup, K. S. (2011a), Environmentaleconomic dispatch using multi-objective harmony_search algorithm, Electric Power
Systems Research, vol. 81, no. 9, pp. 17781785.
Sivasubramani, S., Swarup, K. S. (2011b), Multi-objective harmony_search algorithm for optimal
power flow problem., International Journal of
Electrical Power  Energy Systems, vol. 33, no.
3, pp. 745-752.

1529