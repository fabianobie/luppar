XXI Congresso Brasileiro de Automática - CBA2016
UFES, Vitória - ES, 3 a 7 de outubro

PROJETO INTEGRADO PARA RASTREAMENTO DE PADROES UTILIZANDO
OTIMIZACAO POR ENXAME DE PARTICULAS E COEFICIENTE DE
CORRELACAO DE PEARSON
Yuri Marchetti Tavares, Nadia Nedjah, Luiza de Macedo Mourelle


Rua Primeiro de Marco, 118 - Ed. Barao de Ladario - 17 ao 21o andar
Diretoria de Sistemas de Armas da Marinha
Rio de Janeiro, RJ, Brasil


Rua Sao Francisco Xavier, 524 - 1006 - Maracana
Universidade do Estado do Rio de Janeiro
Rio de Janeiro, RJ, Brasil

Emails yurimtavares@yahoo.com.br, nadia@eng.uerj.br, ldmm@eng.uerj.br
Abstract The template_matching is an important technique used in pattern recognition. The goal consists
of finding a given pattern, given as a prescribed model, in a frame sequence. In order to evaluate the similarity
of two images, the Pearsons Correlation Coefficient (PCC) is widely used. This coefficient is computed for
each of the image pixels, which entails a computationally very expensive operation. This paper proposes the
implementation of template_matching using PCC together with Particle Swarm Optimization as an embedded
system. This approach provides great versatility and implementation in portable equipments. In order to
accelerate the execution of image comparison using PCC, the Particle Swarm Optimization (PSO) is exploited.
An embedded co-processor were developed and is dedicated to the correlation computation. The obtained results
indicate that the proposed design is up to 13,28 faster than the software based solution, considering the studied
cases. So, the co-design implementation with PCC computation implemented in hardware and PSO in software
is a viable way to achieve real-time template_matching, which is a pre-requisite in real-word applications.
Keywords
tracking.

Embedded systems, co-design, particle_swarm_optimization, template_matching, correlation,

Resumo O template_matching e uma tecnica importante para rastreamento de padroes em imagens. O
objetivo consiste em encontrar um padrao, a partir de um modelo pre-estabelecido, em uma sequencia de frames.
Para avaliar o grau de similaridade entre duas imagens, o Coeficiente de Correlacao de Pearson (Pearsons
Correlation Coefficient - PCC) e amplamente utilizado. Esse coeficiente e calculado para cada pixel, o que e
computacionalmente muito custoso. Este artigo propoe a implementacao do template_matching em um sistema
embarcado, conferindo-lhe grande versatilidade e possibilitando seu uso em equipamentos portateis. Para acelerar
o processamento, foi utilizada a Otimizacao por Enxame de Partculas (Particle Swarm Optimization  PSO)
e foi desenvolvido um coprocessador dedicado para o calculo da correlacao. Os resultados obtidos indicam
que o projeto proposto e 13,28 vezes mais rapido que a solucao baseada em software, considerando os casos
estudados. Assim, o projeto integrado, obtido com implementacao do PCC em hardware e PSO em software, e
um otimo caminho para atingir processamento em tempo_real para template_matching, que e um pre-requisito
para aplicacoes no mundo real.
Palavras-chave .

1

Introducao

Com o desenvolvimento e aprimoramento de sensores e equipamentos inteligentes capazes de capturar, armazenar, editar e transmitir imagens e
vdeos, a aquisicao de informacao por meio destes tornou-se uma importante area de pesquisa.
Na area de seguranca e defesa, esse tipo de pesquisa e de grande relevancia para reconhecimento
e rastreamento de padroes referentes a alvos em
sequencias de imagens, podendo proporcionar solucoes para o desenvolvimento de sistemas de vigilancia (Narayana, 2007), monitoramento, controle
de fogo (Ali et al., 2009), guiamento (Choi and
Kim, 2014), navegacao (Forlenza et al., 2012), biometria remota (Benfold and Reid, 2011), armas
guiadas (Olson and Sanford, 1999), entre outros.
Um padrao e um arranjo ou colecao de objetos que sao similares entre si, caracterizado pela

ISSN 2525-8311

arrumacao de seus elementos. Uma das tecnicas
amplamente utilizadas para encontrar e rastrear
padroes em imagens e identificada por template
matching (Ahuja and Tuli, 2013)(Mahalakshmi
et al., 2012). Dentre as tecnicas de template
matching utilizadas para rastreamento de padroes
(alvo), a correlacao e um metodo bastante conhecido e muito utilizado. Esta tarefa se resume basicamente em encontrar ocorrencias de uma imagem
de tamanho reduzido, considerada como modelo
ou template, dentro de uma imagem de tamanho
bem maior do que o do template. Esta operacao
e muito custosa computacionalmente, sobretudo
quando sao considerados grandes modelos a serem
encontrados em um extenso conjunto de imagens
(Sharma and Kaur, 2013).
Este artigo propoe a implementacao de template_matching via um projeto integrado de softwarehardware, utilizando a tecnica de otimizacao

1910

XXI Congresso Brasileiro de Automática - CBA2016
UFES, Vitória - ES, 3 a 7 de outubro

baseada em enxame do partculas (PSO), implementada em software, e calculo do coeficiente de
correlacao, implementado em hardware via um coprocessador dedicado. Para avaliar a solucao proposta, e realizada uma comparacao do tempo de
processamento com e sem o hardware dedicado,
que pode ser usado de maneira sequencial ou em
pipeline.
Para tal, a Secao 2 apresenta alguns trabalhos
relacionados a Secao 3 define o conceito de correlacao a Secao 4 descreve a arquitetura do hardware proposto a Secao 5 descreve a metodologia
empregada e a implementacao do sistema a Secao
6 apresenta e analisa os resultados finalmente, a
Secao 7 conclui o trabalho e aponta alguns trabalhos futuros.
2

Trabalhos relacionados

Em (Ngo et al., 2013) a metodologia co-design
e utilizada para implementar um sistema automatico de vigilancia de vdeo em um dispositivo
FPGA (Field Programmable Gate Array). Como
a maioria das aplicacoes de processamento_de_imagens, o sistema deve ter alto_desempenho para suportar aplicacoes em tempo_real. As operacoes
mais computacionalmente custosas foram implementadas no FPGA e o controle e a interface com
o usuario foram desenvolvidas em software e executadas por processador de proposito geral. Para
o rastreamento de objetos, a tecnica de background
subtraction foi utilizada. Embora eficiente, essa
tecnica necessita que o plano de fundo permaneca
estatico e nao e aplicavel quando os alvos ou o
plano de fundo mudam ao longo dos frames.
Em (Mahalakshmi et al., 2012), varias tecnicas de template_matching sao discutidas. Uma
arquitetura baseada em correlacao espectral e sua
implementacao em FPGA sao propostas. A correlacao e calculada no domnio da frequencia por
meio da Transformada Rapida de Fourier em duas
dimensoes e multiplicacao complexa.
Em (Tavares et al., 2015), os autores realizaram uma comparacao do desempenho dos algoritmos_geneticos vs. PSO para execucao de template
matching. O PSO obteve melhores resultados, em
termos de tempo de processamento e robustez, e
demonstrou alta convergencia e grande simplicidade de implementacao. Esta abordagem demonstrou ser boa solucao para o problema de rastreamento de padroes. Contudo, em aplicacoes de
seguranca e defesa, o sistema precisa estar embarcado no proprio equipamento. Diferentemente dos
trabalhos citados, o principal proposito deste artigo foi desenvolver um sistema portatil, capaz de
processar imagens em tempo_real, com mudancas
de comportamento do alvo e do plano de fundo.
Alem disso, ao contrario dos trabalhos encontrados, o calculo da correlacao foi implementado no
domnio do tempo.

ISSN 2525-8311

3

Correlacao de Imagens

O template_matching e utilizado para rastrear padroes em processamento_de_imagens por meio da
similaridade entre duas entidades, tais como pixels, curvas ou formas de mesmo tipo. O padrao
ser reconhecido dentro de uma imagem e comparado com o modelo previamente armazenado, para
todas as possibilidades.
Dentre as tecnicas de template_matching para
rastreamento de padroes, a correlacao e um metodo bastante conhecido e utilizado. O coeficiente
de correlacao de Pearson (PCC) e utilizado como
medida de similaridade entre duas variaveis e pode
ser entendido como um ndice adimensional com
valores situados ente 1 e 1 inclusive, que reflete a
intensidade do grau de relacionamento entre duas
variaveis. Coeficiente igual a 1 significa uma correlacao perfeita positiva entre as duas variaveis.
Coeficiente igual a -1 significa uma correlacao negativa perfeita entre as duas variaveis. Coeficiente igual a zero significa que as duas variaveis
nao dependem linearmente uma da outra. Para
aplicacoes em imagens, o PCC pode ser calculado
conforme a Equacao 1
N
P

(pi  p)(ai  a)
s
,
corr  s
N
N
P
P
(pi  p)2
(ai  a)2
i1

i1

(1)

i1

onde pi e a intensidade do pixel i na imagem padrao (template) p e a media das intensidades dos
pixels da imagem padrao ai e a intensidade do pixel i no pedaco de imagem original A a e a media
da intensidade dos pixels no pedaco de imagem A.
O template e o pedaco de imagem A devem ter o
mesmo tamanho.
4

Arquitetura do Hardware

A parte mais custosa do template_matching, no
caso abordado, e o calculo do PCC. Para obter melhor tempo de processamento e possibilitar aplicacoes em tempo_real, esse calculo foi implementado em coprocessador dedicado, aproveitando o
paralelismo intrnseco do hardware. Alem disso, o
processo de rastreamento do maior ponto de correlacao foi auxiliado pelo PSO, que e executado
em software, pelo processador de proposito geral.
Esta abordagem, chamada co-design, e uma metodologia para desenvolver um sistema integrado,
utilizando componentes de hardware e software,
para atender requisitos de desempenho e limitacoes de custo (Nedjah and Mourelle, 2007).
A macroarquitetura do sistema integrado proposto e apresentada na Figura 1. O sistema contempla um processador (PS) para execucao do
passo do PSO, um coprocessador para o calculo
do valor do coeficiente correlacao, os blocos de

1911

XXI Congresso Brasileiro de Automática - CBA2016
UFES, Vitória - ES, 3 a 7 de outubro

memoria dedicados (BRAM IMG e BRAM TMP)
para armazenar a imagem original e o template,
respectivamente, e os blocos do controle de acesso
a essas memoria (GET IMG e GET TMP).

Figura 3 Microarquitetura do Bloco 1

4.1.1
Figura 1 Macroarquitetura do sistema proposto

4.1

Coprocessador dedicado

Primeiro Estagio

A Figura 3 exibe o bloco 1 que forma o primeiro
estagio do pipeline e e responsavel por calcular a
media dos pixels das duas imagens a serem comparadas. Possui registradores de sada que sao carregados somente quando a tarefa do estagio e completada. Com pulso de sincronismo, somente o
componente media, responsavel por calcular a media da imagem a ser compara com o template e
reiniciado.
4.1.2

Segundo Estagio

Figura 2 Macroarquiteura do coprocessador
A Figura 2 apresenta a arquitetura proposta
para o coprocessador. Este e responsavel por realizar o calculo da correlacao entre duas imagens,
conforme definido na Equacao 1. Sua estrutura e
projetada na forma de pipeline, onde cada um de
seus tres blocos corresponde a um dos seus tres
estagios. A cada transicao de subida do sinal do
clock, 3 informacoes sao recebidas pelo coprocessador dadop (um pixel da imagem de referencia
representado por 8 bits) dadoac (um pixel da imagem a ser comparada tambem de 8 bits) e dadoam
(um pixel da proxima imagem a ser comparada de
8 bits).
Todas as imagens a serem comparadas foram
definidas com 64x64 pixels, totalizando 4096 pixels que sao representados por 4 KBytes. Os calculos sao realizados em cada bloco e passados para
o proximo, a cada pulso de sincronismo. Esse
pulso e gerado pelo componente Sincro a cada
4103 transicoes de subida do sinal do clock. Como
sada, o coprocessador fornece o valor da correlacao calculado (result), em complemento a 2,
codificado em 32 bits, o flag indicando termino
(flagend) e um sinal de erro (error) que indica
que o resultado nao e valido, sendo oriundo de
uma divisao por zero.

ISSN 2525-8311

Figura 4 Microarquitetura do bloco 2
A Figura 4 exibe a arquitetura do bloco 2 que
forma o segundo estagio do pipeline. Este e responsavel por calcular os 3 somatorios da Equacao
1. E composto por 2 componentes subtA2 que realizam a subtracao em complemento a 2 dos pixels
das imagens com as medias calculadas pelo bloco
1 por 3 componentes multCLK que realizam, em
um pulso de clock, a multiplicacao dos resultados
oriundos dos componentes subtA2 e por 3 componentes somaA2 que realizam os somatorio, em
complemento a 2, dos resultados das multiplicacoes provenientes dos componentes multCLK. Da
mesma forma que no caso do bloco 1, o bloco 2
possui registradores de sada que sao carregados
somente quando a computacao do estagio e completada. Com o pulso de sincronismo, os compo-

1912

XXI Congresso Brasileiro de Automática - CBA2016
UFES, Vitória - ES, 3 a 7 de outubro

nentes
4.1.3

subtA2, multCLK

e

subtA2

sao reiniciados.

Terceiro Estagio

Figura 5 Microarquitetura do Bloco 3
A Figura 5 exibe a arquitetura do bloco 3,
compondo o terceiro estagio do pipeline. Este e
responsavel por calcular a multiplicacao principal,
a raiz quadrada e a divisao da Equacao 1. E composto pelo componente multCLK que, em um pulso
de CLK, executa a multiplicacao dos somatorios
do denominador da Equacao 1 pelo componente
SQRT que calcula a raiz quadrada e pelo componente divfracA2 que realiza a divisao, proporcionando um resultado com a precisao de 224 . Este
ultimo componente e aquele que fornece os sinais
de sada do coprocessador. A operacao deste bloco
e controlada por uma maquina de estado (FSM), coordenando a atuacao dos seus componentes. Com
o pulso de sincronismo, a maquina retorna ao seu
estado inicial. Da mesma forma que os blocos 1 e
2, possui registradores de sada que sao carregados
somente quando a tarefa do estagio e completada.
O metodo numerico babylonian foi utilizado
para calculo da raiz quadrada. Baseado nele, o
componente SQRT do bloco 3 foi implementado, em
hardware, utilizando um processo iterativo de M
passos com base na Equacao 2
xi+1  0, 5  (xi +

S
),
xi

(2)


onde x e o radical, S e o radicando (x  S), xi
e o valor de x na iteracao atual e xi+1 e o valor
da proxima iteracao. O numero de iteracoes M
e definido de acordo com a precisao do resultado
requerida.
Ademais, o Algoritmo 1 foi utilizado para
o calculo da divisao entre dois numeros de N
bits, com resultados de 24 bits nas casas fracionarias. Esse algoritmo foi implementado, em
hardware, para o desenvolvimento do componente
divfracA2.
4.2

Controladores das memorias

Os blocos de memoria dedicada BRAMTMP e BRAMIMG
armazenam o template e a imagem principal, respectivamente. Estes foram implementados na lo-

ISSN 2525-8311

Algoritmo 1 Divisao Q  AB
NB  0
RAhN 1... N i  A
2
RAh N 1...0i  0
2
while RAhN 1... N i > B do
2
RA  deslocar RA para direita
NB  NB + 1
end while
Q  0
for j  1, NB do
RA  deslocar RA para esquerda
Q  deslocar Q para esquerda
if RAhN 1... N i > B then
2
RAhN 1... N i  RAhN 1... N i  B
2
2
Q0  1
else
Q0  0
end if
end for
for j  1, 24 do
RA  deslocar RA para esquerda
Q  deslocar Q para esquerda
if RAhN 1... N i > B then
2
RAhN 1... N i  RAhN 1... N i  B
2
2
Q0  1
else
Q0  0
end if
end for

gica programavel do chip Zynq (PL). O componente BRAMTMP pode armazenar ate 4096 pixels de
8 bits, totalizando 4K bytes (o que corresponde ao
tamanho do template). Ja o componente BRAMIMG
pode armazenar ate 573x463 pixels de 8 bits cada,
totalizando 260K bytes. Como as bordas da imagem principal sao completadas com zeros, o tamanho maximo desta imagem e 510x400 pixels.
Os controladores GETTMP e GETIMG sao responsaveis por proporcionar o acesso as memorias dedicadas BRAMTMP e BRAMIMG, respectivamente e disponibilizar ao coprocessador os dados, no momento
correto. Os processo de acesso em leitura e escrita
as memorias e sincronizado pelo sinal do clock
(CLK) e pelo sinal de sincronismo (CLKsync). Alem
dessa funcao principal, esses controladores de memoria tambem permitem que o processador acesse
as memorias dedicadas.
5

Metodologia e Implementacao

O projeto assim proposto foi implementado utilizando a placa Smart Vision Development Kit rev
1.2 (SVDK) da Sensor to Image. Esta placa dispoe de um chip XC7Z015, da Xilinx, que possui
sistema de processamento (PS), baseado em processador dual-core ARM Cortex-A9, e logica programavel (PL) em um unico chip. Esse componente fornece a escalabilidade e flexibilidade de um

1913

XXI Congresso Brasileiro de Automática - CBA2016
UFES, Vitória - ES, 3 a 7 de outubro

FPGA com o desempenho, capacidade e facilidade
de uso associados com ASIC e e perfeito para a
implementacoes do tipo co-design. Para avaliar o
desempenho do projeto integrado assim proposto,
foram utilizados tres cenarios (1) SO PSO implementado em software somente e executado pelo
processador (2) HS o PSO implementado como
um projeto integrado de softwarehardware com
o coprocessador funcionando em modo sequencial
e (3) HP o PSO implementado como um projeto
integrado de softwarehardware com o coprocessador funcionando em pipeline.
Para o primeiro cenario, o codigo do PSO foi
desenvolvido em C para ser executado no processador, com os seguintes passos (1) geracao_da_populacao_inicial das partculas, com posicoes e velocidades aleatorias (2) para cada partcula do enxame, extracao de um pedaco (recorte), de mesmo
tamanho do template e calculo do PCC na posicao
da partcula, que coincide com a do pixel central
do recorte associado (3) armazenar o melhor valor encontrado pela partcula e o melhor valor encontrado pelo enxame (4) repetir os passos 2 e 3
ate que o criterio_de_parada seja atingido. Todas
as imagens foram convertidas para tons de cinza e
as bordas da imagem principal foram completadas
com zeros.
Para o segundo e terceiro cenarios, o passo
2 do PSO foi substitudo por (1) passar as informacoes de posicao atual das partculas para o
coprocessador dedicado e (2) aguardar o retorno
dos valores da correlacao para cada uma delas. As
imagens utilizadas durante os testes foram transmitidas para a placa SVDK por meio do software
MATLAB, utilizando porta_serial e copiadas nas
memorias pelo processador. O algoritmo PSO global best tradicional foi utilizado, com PCC como
funcao objetivo, e os parametros foram configurados, empiricamente, da seguinte forma 50 partculas coeficiente inercial w  1 coeficiente cognitivo c1  1, 5 coeficiente social c2  2 e velocidade maxima igual a 10. Como criterio_de_parada
foi estabelecido valor de 0,95 para PCC ou numero
maximo de 30 iteracoes.
6

Resultados

A implementacao na placa SVDK ocupou 11
de seus flip-flops, 39 de suas LUT (Look-up Table), 25 dos buffers e 69 de suas BRAM (Block
RAM ). Por limitacoes de tempo impostas pela
ferramenta de sntese, principalmente no uso das
BRAM, o coprocessador executou as tarefas com
um clock de 25 MHz. Contudo, o processador
ZYNQ pode fornecer para as BRAMs um clock
de ate 250 MHz.
As Figuras 6(a), 6(b) e 6(c) exibem as imagens
utilizadas e os templates de cada uma marcados
pelo quadrado interno. Estas foram extradas do
vdeo disponvel em (YouTube, 2016) e dos primei-

ISSN 2525-8311

(a) aeronave - 361x481

(b) carros - 400x510

(c) pickup - 400x510

Figura 6 Imagens
Tabela 1 Comparacao do tempo processamento
(ms) de 1 e 50 calculos de PCC
PCC

Caso

Aeronave

Carros

Pickup

1

1
2

2,010
0,404
4,97
112,828
20,095
8,462
5.61
2,37
13,33

2,010
0,403
4,99
114,760
20,076
8,462
5,71
2,37
13,56

2,010
0,401
5,01
114,977
20,051
8,461
5,72
2,37
13,59

Ganho2para1

50

3
4
5
Ganho4para3
Ganho5para4
Ganho5para3

ros frames dos benchmarks EgTest02 e EgTest05
disponveis em (Collins et al., 2005).
Primeiramente, foram feitos 3 recortes de
64x64 pixels dos templates identificados em cada
imagem. O valor do PCC foi calculado para cada
template com relacao a ele mesmo. O calculo da
correlacao foi executado pelo processador sozinho
(caso 1) e com o auxlio do coprocessador (caso
2). Os resultados encontram-se na parte superior
da Tabela 1, que diz respeito a 1 calculo de PCC.
Depois disso, foram extrados 50 pedacos aleatorios das imagens, de 64x64 pixels, e comparados
com seus respectivos templates. Foi comparado
o tempo gasto pelo processador para realizar os
Tabela 2 Comparacao do tempo medio de processamento (ms) do PSO
Cenario
SO
HS
HP
GanhoHSparaSO
GanhoHP paraHS
GanhoHP paraSO

aeronave
2190,86
406,14
176,03
5,39
2,31
12,44

carros
2702,17
451,87
203,48
5,98
2,22
13,28

pickup
2278,73
394,82
174,26
5,77
2,26
13,08

1914

XXI Congresso Brasileiro de Automática - CBA2016
UFES, Vitória - ES, 3 a 7 de outubro

Cenario1

Cenario2

Cenario3

103

aeronave

carros

pickup

Figura 7 Diagrama em barras do tempo medio
de processamento (escala logartmica)
50 calculos de correlacao sozinho (caso 3), com o
auxlio do coprocessador sequencialmente (caso 4)
e sua estrutura pipeline (caso 5). Os resultados
encontram-se na parte inferior da Tabela 1 que
diz respeito a 50 calculos de PCC.
Por fim, o projeto integrado proposto foi avaliado na execucao da tarefa de rastreamento de padroes. Para tal, a Tabela 2 exibe os resultados medios para execucao de 100 rastreamentos dos templates nas imagens utilizando os 3 cenarios definidos na Secao 5. A Figura 7 ilustra essa comparacao. Observa-se que a abordagem co-design, considerando o cenario com pipeline (HP), conseguiu
melhorar o tempo de processamento em 12,44,
13,28 e 13,08 vezes para as imagens aeronave, carros e pickup, respectivamente, comparando-se com
a solucao somente de software (SO).
7

Conclusao

A abordagem co-design proposta, com implementacao do PCC em hardware e PSO em software,
e um otimo caminho para atingir processamento
de rastreamento de padroes em tempo_real, o que
e um pre-requisito para aplicacoes no mundo real.
Conseguiu-se acelerar o tempo de processamento
das imagens em ate 13,28 vezes. Para melhorar
ainda mais os resultados, o coprocessador pode
trabalhar em frequencias maiores, quando forem
superadas as limitacao da sntese, e pode-se limitar a janela de rastreamento do alvo.
Referencias
Ahuja, K. and Tuli, P. (2013). Object recognition
by template_matching using correlations and
phase angle method, International Journal of
Advanced Research in Computer and Communication Engineering 2(3) 13681373.
Ali, A., Kausar, H. and Khan, M. I. (2009).
Automatic visual tracking and firing system
for anti aircraft machine gun, Applied Sciences and Technology (IBCAST), 2009 6th
International Bhurban Conference on, IEEE,
pp. 253257.
Benfold, B. and Reid, I. (2011). Stable multitarget tracking in real-time surveillance vi-

ISSN 2525-8311

deo, Computer Vision and Pattern Recognition, IEEE Conference on, pp. 34573464.
Choi, H. and Kim, Y. (2014). Uav guidance
using a monocular-vision sensor for aerial target tracking, Control Engineering Practice
22 1019.
Collins, R., Zhou, X. and Teh, S. K.
(2005).
An open source tracking
testbed
and
evaluation,
url
httpvision.cse.psu.edudatavividevaldata
setsdatasets.html, acessado em Agosto
2016, IEEE International Workshop on
Performance Evaluation of Tracking and
Surveillance 2(6) 35.
Forlenza, L., Fasano, G., Accardo, D. and Moccia, A. (2012). Flight performance analysis of
an image processing algorithm for integrated
sense-and-avoid systems, International Journal of Aerospace Engineering .
Mahalakshmi, T., Muthaiah, R., Swaminathan,
P. and Nadu, T. (2012). Review article an
overview of template_matching technique in
image processing, Research Journal of Applied Sciences, Engineering and Technology
4(24) 54695473.
Narayana, M. (2007). Automatic Tracking of Moving Objects in Video for Surveillance Applications, PhD thesis, University of Kansas.
Nedjah, N. and Mourelle, L. d. M. (2007). Codesign for system acceleration a quantitative approach, Springer Science  Business
Media.
Ngo, H. T., Ives, R. W., Rakvic, R. N. and
Broussard, R. P. (2013). Real-time video
surveillance on an embedded, programmable
platform, Microprocessors and Microsystems
37(6) 562571.
Olson, T. L. and Sanford, C. W. (1999). Realtime multistage IR image-based tracker, AeroSense99, International Society for Optics
and Photonics, pp. 226233.
Sharma, P. and Kaur, M. (2013). Classification in
pattern recognition A review, International
Journal of Advanced Research in Computer
Science and Software Engineering 3(4) 3.
Tavares, Y., Nedjah, N. and Mourelle, L. d. M.
(2015). Utilizacao de otimizacao por enxame
de partculas e algoritmos_geneticos em rastreamento de padroes, 12 Congresso Brasileiro de Inteligencia Computacional .
YouTube (2016).
Rafale - aviao caca
de
alta
tecnologia
(brasil),
url
httpwww.youtube.comwatch?ve3wii hdvq, acessado em Agosto 2016.

1915