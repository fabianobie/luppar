XXI Congresso Brasileiro de Automática - CBA2016
UFES, Vitória - ES, 3 a 7 de outubro

COMPARISON OF STOCHASTIC FILTERING TECHNIQUES FOR GPSINS
FUSION OF SOUNDING ROCKETS
Eduardo J. de A. J. Filho, Marcos R. O. A. Maximo, Julio C. F. Filho


Aeronautics Institute of Technology
Praca Marechal Eduardo Gomes, 50, Vila das Acacias, 12228-900
Sao Jose dos Campos, SP, Brazil
Emails eduardojourdan92@gmail.com, mmaximo@ita.br, ita.julio.cesar@gmail.com
Abstract This paper considers three different stochastic filtering techniques for the navigation problem of
a sounding rocket extended Kalman filter, unscented Kalman filter and particle filter. Aided navigation is
used with global position obtained by low rate GPS devices as well as linear accelerations and angular velocities
measured by a low-cost inertial sensor unit with high levels of noise. Flight data are obtained with a high-fidelity
six degrees of freedom simulation considering the rocket characteristics of ITA Rocket Design. Euler angles
are considered for angular kinematics and they are defined in order to avoid the singularity at 90 degrees of
pitch. A comparison is made regarding root mean square error and computational cost. Extended and unscented
Kalman filters show better performance in both criteria and the particle filter presents problems related to particle
impoverishment. Furthermore, direct roughening technique is used to improve the particle filter.
Keywords

Navigation, GPSINS Fusion, Sensor Fusion.

Resumo Este trabalho considera 3 tecnicas distintas de filtragem_estocastica para o problema de navegacao
de um foguete de sondagem Filtro de Kalman Estendido, Unscented Kalman Filter e Filtro de Partculas.
Navegacao auxiliada utiliza-se de coordenadas globais obtidas pelo GPS de baixa taxa de aquisicao, bem como
das aceleracoes lineares e velocidades angulares dadas pelos sensores da unidade inercial de baixo_custo, cumuladas
de grande quantidade de rudo. Dados de voo sao obtidos com um simulador de seis_graus_de_liberdade de alta
fidelidade que considera o foguete caracterstico da ITA Rocket Design. Angulos de Euler sao utilizados para a
cinematica angular e sao definidos de forma a evitar a singularidade de 90 de arfagem. Uma comparacao foi feita
com relacao a raiz quadrada da media do erro quadratico medio e ao custo_computacional. Os filtros de Kalman
estendido e Unscented mostraram melhor performance em ambos os criterios e o filtro de partculas apresentou
problemas relacionados a empobrecimento de partculas. Entao, a tecnica direct roughening foi usada para
melhorar sua performance.
Palavras-chave



Introduction

Navigation is the process of estimating the vehicles position, velocity and attitude at a given
time. Given the vehicles initial states, its states
at a given time may be estimated by integrating
accelerations and angular velocities measured using an inertial measurement unit (IMU). A system
that performs this process is termed an inertial
navigation system (INS).
Nevertheless, errors in acceleration and angular velocity accumulate over time in position and
the position estimate quickly drifts. Therefore, inertial systems require high accuracy and fast update rates, which are not possible on hobby-grade
sensors. On the other hand, Global Positioning System (GPS) provide driftless global position
measurements, but low-cost GPS devices have low
sampling rates and significant noise levels.
GPSINS fusion is a well-known strategy for
Navigation where the strengths of both sensors
are combined. This sensor fusion may be accomplished using stochastic filtering techniques, which
consider stochastic mathematical models for the
sensors and the vehicles dynamics to recursively
estimate the vehicles states. Given linear dynamics, linear measurement model and gaussian
additive noises, the Kalman Filter is the opti-

ISSN 2525-8311

mal quadratic estimator (Bruno, 2013). However,
six degrees of freedom (6DOF) rigid-body equations are intrinsically nonlinear, thus nonlinear
techniques are needed for the navigation of an
aerospace vehicle.
We are interested in developing a GPSINS
fusion algorithm for the navigation system of the
ITA Rocket Designs sounding rocket. ITA Rocket
Design is a rocket team composed by undergraduate students from the Aeronautics Institute of
Technology (ITA). Considering the trade-off between filtering performance and computational
cost, the best stochastic filtering technique is usually problem dependent, thus we evaluated three
popular nonlinear techniques Extended Kalman
Filter (EKF), Unscented Kalman Filter (UKF),
and Particle Filter (PF). The EKF and UKF
are nonlinear extensions of the Kalman Filter,
while the PF is based on Monte Carlo methods
(Bruno, 2013).
Other works have compared stochastic filtering techniques. Gross et al. (2010) compared
EKF, UKF, and PF for an unmanned aerial vehicle (UAV) navigation system focusing on attitude
estimation . In this problem, the filtering performances of the EKF and UKF were close, while the
PF with 200 particles showed the worst results.
Then, the EKF may be regarded as the best choice

2926

XXI Congresso Brasileiro de Automática - CBA2016
UFES, Vitória - ES, 3 a 7 de outubro

for UAV navigation due to its very low computational cost. Similar conclusions were found for a
problem where mobile robots are localized using
an overhead camera (Pinto et al., 2015). However,
the PF usually shows superior performance experimentally when strong nonlinearities and multimodal probability distributions are present (Silva
and Bruno, 2006).
The remaining of this paper is organized as
follows. In Section 2, a mathematical background
about the stochastic filtering techniques is presented. Section 3 shows the equations involved in
the dynamics and observation models of a sounding rocket. In Section 4, we compare the three
techniques using data generated by a six degrees
of freedom rocket flight simulator. Finally, Section 5 concludes and shares our ideas for future
work.
2

xk  fk (xk1 , k1 , wk1 )

(1)

zk  hk (xk , vk )

(2)

where wk1 and vk are random noises and fk and
hk are generic functions, possibly nonlinear. The
stochastic filtering problem consists of determining the probability density function (pdf ) for the
state vector xk at every time instant tk , given the
initial state distribution x0  p(x) and the history
of inputs i and observations zi , i  1, . . . , k.
We adopted the usual assumption that the
random variables x0 , w0k1 , v1k  are mutually
independent and jointly Gaussian. Furthermore,
we considered that wk  N (0, Mk ) and vk 
N (0, Rk ). Given these assumptions and further
assuming that the functions fk and hk are linear,
the Kalman filter is the optimal quadratic estimator to solve the stochastic filtering problem.
Given
an
with
pdf
estimate
N xk1k1 , Pk1k1
at time step tk1 ,
the prediction phase of the Kalman filter propagates the estimate to time step tk , yielding an
estimate with pdf N xkk1 , Pkk1 . Then, the
observation is incorporated in the update phase

to yield an estimate with pdf N xkk , Pkk .
These prediction and update phases use the
knowledge contained in equations (1) and (2). If
the functions fk and hk are nonlinear, alternative
approaches may be employed, such as the ones
presented herein.
Extended Kalman Filter

As said before, the Kalman Filter only works for
linear systems. However, the majority of engineering problems has nonlinearities. Therefore,

ISSN 2525-8311

Algorithm 1 Extended Kalman Filter
function Initialize(x0 , P0 )
x00  x0
P00  P0
end function
function Predict(xk1k1 , Pk1k1
 , k1 )
xkk1  fk xk1k1 , k1 , 0

Stochastic Filtering

A generic stochastic dynamical system may be
modeled by the following prediction and observation equations

2.1

to solve this kind of problem, an extension of the
Kalman Filter was introduced. That extension is
known as the Extended Kalman Filter (EKF) and
is described in Ljung (1979). It considers that still
holds the Gaussianity hypothesis for the random
noises and for the initial Gaussian distribution and
that fk and hk are differentiable functions. Then,
taking a first order expansion using Taylor series
for the functions fk and hk , the algorithm for the
EKF is shown in Algorithm 1.

Fk 

fk
x

Lk 

fk
w

xxk1k1 ,k1 ,w0
xxk1k1 ,k1 ,w0

Pkk1  Fk Pkk1 FTk + Lk Mk LTk
end function
function Update(xkk1 , Pkk1 , zk )
k
Hk  h
x xx
,v0
kk1

hk
v xxkk1 ,v0
Sk  Hk Pkk1 HTk + Gk Rk GTk
Kk  Pkk1 HTk S1
k

Gk 

xkk  xkk1 + Kk zk  h xkk1
Pkk  (I  Kk Hk ) Pkk1
end function

2.2



Unscented Kalman Filter

The EKF may perform poorly when the prediction
and observation functions are highly nonlinear.
The UKF uses a deterministic sampling technique,
known as the unscented transform (UT). The
UT carefully picks samples (called sigma points)
around the mean and propagate them through
the nonlinear function, from which the mean and
covariance of the estimate are computed. This
method better approximates the posteriors true
mean and covariance (Julier and Uhlmann, 2004).
Therefore, the UKF often provides better estimates than the EKF with similar computational
cost. Additionally, the UKF does not require Jacobians computations, which may be a hard task
in very complex models. Algorithm 2 shows the
predict and update functions for the UKF.
In this pseudocode, , , and  are constants,
where  determines the spread of the sigma points
around the mean and is usually set to a small value
(we use   103 ),   2 is the optimal value for
gaussian distributions, and   2 (n + ), where

2927

XXI Congresso Brasileiro de Automática - CBA2016
UFES, Vitória - ES, 3 a 7 de outubro

 is an 
auxiliary constant usually set to 0. The notation P means the square-root matrix of P, i.e.
the matrix F such as FFT  P. The square-root
of a matrix may be computed using the Cholesky
decomposition. Moreover, F,i is the i-th column
of the matrix F.
2.3

Particle Filter

Particle Filter (PF) is the most general method
for approximating the true Bayesian optimal estimate between the three discussed in Section 2.
Different from EKF and UKF, PF is fully capable
of handling non-linear models and is based on nondeterministic sampling techniques (Arulapalam
et al., 2002). As can be seen in following pseudocode, the state vector xk1 at each instant tk1
is represented by a set k1 of N random samples called particles. The prediction phase corresponds to estimate xkk1 by simply propagating
each particle using the equations of motion de(n)
scribed in Section 3. The input k1 associated
with each sample n has a pdf N (k1 , M).
The update phase corresponds to determine
the a posteriori estimative xkk .If there are new
observations then it is done by considering that
(n)
each particle n has a weight wk proportional to
the likelihood of its states.
A well known problem existing in PF is particle degeneration as can be seen in Arulapalam
et al. (2002). After few iterations, it is very common that some particles have very small weights
and so contributing very little to the estimative
xkk in spite of spending a lot of computational
resources. A well known solution to this is to
resample the particles after the update phase by
choosing the particles with more likelihood and
discarding the others. Reference (Arulapalam
et al., 2002) presents a sequential stochastic process to do such task that is O(N ) and therefore has
a practical computational cost. After resampling,
(n)
the particles have the same weight wk  1N
(Arulapalam et al., 2002). This variant of PF is
called Sampling Importance Resampling (SIR).
Another problem regarding PF is called particles impoverishment, when the particles cloud
is too small and does not reflect the true density
(Li et al., 2014). The degeneracy converts to impoverishment as a direct result of resampling and
it is more common and critical as the number of
states grows. There are a few ways to deal with
this problem as described in Li et al. (2014). The
procedure chosen in the present work was the one
called direct roughening. It consists of directly applying more random noise to each particle input
k1,n in the prediction phase and therefore helping to spread the particles cloud. The amount
of extra noise cannot be too large or it will blur
the states estimates out of the range of the observations. More sophisticated procedures which do

ISSN 2525-8311

Algorithm 2 Unscented Kalman Filter
function DrawSigmaPoints(xa , Pa )
(0)  xa
(0)

wm  n+

(0)

wc  n+
+ 1  2 + 
for i  1, . . . , n do

p
(i)  xa +
(n + ) Pa
,i
(i)

(i)

(i)

(i)

1
wm  wc  2(n+)
end for
for i  n + 1, . .. , 2n do

p
(n + ) Pa
(i)  xa 
,in

wm  wc 
end for
end function

1
2(n+)

function Initialize(x0 , P0 )
x00  x0
P00  P0
end function
function Predict(xk1k1 , Pk1k1 , k1 )
iT
h
xa  xTk1k1 0Tm
Pa  diag(Pk1k1 , Mk )
DrawSigmaPoints(xa , Pa )
for i  0, . . . , 2n do
(i)
(i)
(i)
kk1  fk (x , k1 , w )
end for P
(i) (i)
2n
xkk1  i0 wm kk1
n


P2n
(i)
(i)
Pkk1  i0 wc kk1  xkk1 

T 
(i)
kk1  xkk1
end function
function Update(xkk1 , Pkk1 , zk )
h
iT
xa  xTkk1 0Tr
Pa  diag(Pkk1 , Rk )
DrawSigmaPoints(xa , Pa )
for i  0, . . . , 2n do
(i)
(i)
(i)
 k  hk (x , v )
end for
P2n (i)
zk  i0 wm  (i)

T
P2n (i)  (i)
(i)
Pzz  i0 wc  k  zk  k  zk

P2n n (i)  (i)
Pxz  i0 wc kk1  xa 

T 
(i)
 k  zk
Kk  Pxz P1
zz
xkk  xkk1 + Kk (zk  zk )
Pkk  Pkk1  Kk Pzz KTk
end function

not destroy PFs characteristics are being considered to be done in future works.

2928

XXI Congresso Brasileiro de Automática - CBA2016
UFES, Vitória - ES, 3 a 7 de outubro

Algorithm 3 Particle Filter SIR approach
function InitializeParticles(x0 , P0 )
for n  1, . . . , N do
(n)
00  N (x0 , P0 )
end for
end function
function Predict(k1k1 , k1 )
M  diag (Macc , Mgyr )
for n  1, . . . , N do
(n)
k1  N (k1 , M)
(n)

(n)

(n)

kk1  fk (k1k1 , k1 )
end for P
(n)
(n)
N
xkk1  n1 wk1 kk1
end function
function Update(kk1 , zk )
for n  1, . . . , N do
(n)
p(zk kk1 )
" 
2 
(n)
zj,k j,kk1
Q3
j1 exp 
2 2



j

(n)

wk



(n)
(n)
wk1 p(zk kk1 )
PN
(n)
n1 wk

end for
(1n)
kk  Resample(kk1 , wk )
PN

xkk  n1
N
end function

(n)

kk

(1n)

function kk  Resample(kk1 , wk
r  U nif orm(0, 1N )
(1)
c  wk
i1
for n  1, . . . , N do
U  r + (n  1)N
while U > c do
ii+1
(i)
c  c + wk
end while
resampleIndex(n)  i
end for
for n  1, . . . , N do
(n)
wk  1N
resampleIndex(n)
nkk  kk1
end for
end function

3

)

Sounding Rocket Modeling

The sounding rocket model used in the present
work uses the flat-Earth system of reference where
the origin is located in the launch base and the
movement is related to the local plane tangent to
the Earth in that same point. For the purpose of
this study that system can be considered inertial
as both flight duration and envelope are relative
small to Earths radius and angular velocity. The

ISSN 2525-8311

x axis is in the horizontal plane and points to the
launch direction. The z axis is pointed downwards
to the center of the Earth and the y axis completes
the system respecting the right hand rule. Note
that with this definition positive altitude reflects
in a negative component z of position and the position (0,0,0) is exactly the launch site.
Another reference system used was the body
system, where the origin is in the vehicles center of mass. When the rocket is in the horizontal
plane, the x axis is aligned with the longitudinal
direction of the rocket pointing forward, the z axis
is pointing downward and the y axis is pointing
right.
The translational states are the position
(x, y, z) and linear velocity (u, v, w) of the body
reference system (rocket) relative to the inertial
system (flat-Earth). The linear velocity components are described in the body reference system,
not the inertial one.
The order chosen to rotate the inertial frame
into the body reference system was 2-3-1, different from the conventional 3-2-1 chosen for aircraft
simulations. The first rotation about the y axis
defines the pitch angle , the second rotation defines the yaw angle  and the third one defines
the roll angle . With these different definitions,
the singularity occurs not when   90o but when
  90o , a rather impossible event to achieve for
an unguided sounding rocket. The final rotation
matrix from body to inertial Mib can be found
in Henderson (1977). The angular velocity of the
body frame relative to the inertial system has the
components (p, q, r) described in the body reference system. They are measured by the three gyrometers located in the vehicle.
The following expressions are the kinematics
equations of motion, in which linear and angular
velocities are related to translational position and
Euler angles.




x
u
 y   Mib  v 
(3)
z
w



cs + scs

sc
Mib
cc  sss
(4)
  


p  q  cos   tan  + r  sin   tan 
   

(q  cos   r  sin )  cos 
q

sin

+
r

cos


(5)
The following expressions are the translational
dynamics equations in which the accelerations
(ax , ay , az ) described in the body axis are related
to the change of linear velocities (u, v, w). The
forces that affects the vehicles motion are the
motor thrust, aerodynamic forces and the gravity.
The first two are measured by the accelerometers.
cc
  s
cs

ss  ccs
cc
css + sc

2929

XXI Congresso Brasileiro de Automática - CBA2016
UFES, Vitória - ES, 3 a 7 de outubro

  

u
ax  gcs + rv  qw
 v   ay + g (css + sc) + pw  ru
w
ax + g (cc  sss) + qu  pv
(6)
We may summarize the vehicles navigation
states as x, y, z, u, v, w, , , . The measurements made by accelerometers and gyrometers
ax , ay , az , p, q, r are used as input  in equation
(1) and the GPS data x, y, z as update measurements in the Equation (2).
4

Simulation Experiments

To generate test data, we used a 6DOF rocket
flight simulator developed in C++ using the ITA
Rocket Designs sounding rocket model. This simulator integrates the 6DOF flight dynamics equations using the two-step Adams-Bashforth method
using high-fidelity models for the physical processes, such as aerodynamics and propulsion. The
sample time used for simulation was 1 ms. The
total simulation time was 25 s. The motor ignites at t  0 s and burns until t  4.5 s. Although the sounding rocket model used in the filters use Euler angles as described in Section 3,
the 6DOF simulator works with quaternions. Before the experiments, the 6DOF output data had
to be converted into the Euler angles described in
Section 3 using simple formulas as presented in
(Henderson, 1977).
Values sampled from Gaussian distributions
were added to the trajectory computed by the
simulator to simulate sensor noise. The parameters for the sensors were set to values close to
the ones found in the datasheets of the real modules. Therefore, the IMU and GPS sample rates
are 200 Hz and 5 Hz, respectively. The accelerometer and gyrometer covariances were set
to Macc  diag(0.2292 , 0.2292 , 0.3772 ) m2 s4 and
2


Mgyr  0.03 2001 180 I3 rad2 s2 . The
GPS covariance is R  diag(3, 3, 52 ) m2 .
We implemented the three filtering techniques
in MATLAB following the algorithms presented
in Section 2. To integrate the models equations, we used Euler for EKF and 4th order
Runge-Kutta for UKF and the PF. The filtering begins as soon as the simulation starts. To
initialize the filters, we sample a mean x0 
N (x0 , P0 ) and set P0  P0 , where x0 is the initial states vector, P0  diag(R, V0 , 0 ), V0 
diag(0.2292 , 0.2292 , 0.3772 ) m2 s2 , and 0 

2

0.03 2001 180 I3 rad2 s2 . Additionally,
we used 100 particles for the particle filter (PF).
To illustrate, Figure 1 shows the X-Z trajectory of

ISSN 2525-8311

the rocket in a single simulation where the UKF
was used to compute the estimate.

3000
2500
Z (m)

It is interesting to notice that the angular dynamics equations are not necessary since the angular
velocity is directed measured by the gyrometers.

2000
1500
1000
GT
UKF
GPS

500
0

15001000 500

0

500 1000 1500 2000
X (m)

Figure 1 X-Z trajectory of the rocket showing
ground truth (GT) data from the simulator in
blue, the trajectory estimated by the UKF in red,
and GPS measurements as green dots.
To make the comparison less sensible to randomness, we ran Monte Carlo simulations and
computed root mean square errors (RMSE) for
(i)
each time instant. Given estimates qk at time in(i)
stant t  tk of a certain quantity qk obtained in
the i-th Monte Carlo run, we compute the RMSE
of qk using
v
u
mc 
2
u 1 N
X
(i)
(i)
qk  qk
(7)
RM SE (qk )  t
Nmc i1
where Nmc is the number of Monte Carlo runs.
Figure 2 show the linear position, linear speed,
and pitch angle RMSEs (using Nmc  1000). The
same trend is observed over the 3 figures the PF
(with 100 particles) shows the worst filtering performance, while EKF and UKF results are very
similar. In Figure 2(b), an interesting effect occurs
around 4.5 s the speed RMSE sudden increases
due to the motor stopping burning.
Given that navigation involves real-time computations, we are also concerned about computational cost. Hence, Table 1 shows processing time
statistics for the prediction and update phases of
the three filters. As expected, the PF is more computationally costly than the UKF, which is slower
than the EKF. Thus, the results indicate that the
EKF is the best choice for this problem. We used
a Intel Core i5 2.6 GHz dual-core notebook for
this comparison.
5

Conclusion

The main contribution of this work is showing
that, although less complex, the first order nonlinear extension of the Kalman filter (EKF) outperforms Particle Filter and has results similar to
the Uscented Kalman Filter for the model of a

2930

XXI Congresso Brasileiro de Automática - CBA2016
UFES, Vitória - ES, 3 a 7 de outubro
(a)

6
5
Position RMSE (m)

niques, for real-time applications, it is the more
qualified option.
This work can be extended in many directions. We may extend the sounding rocket model
to use quaternions, thus removing the possibility
of singularity related to Euler angles. We may also
include bias effects in the accelerometer and the
gyrometer models. Another path is to use other
sensors present in the IMU, such as the barometer
and the magnetometer, in the update phase.

EKF
UKF
PF

4
3
2
1
0

(b)

5

10

Time (s)

15

20

References

Speed RMSE (ms)

1.5

EKF
UKF
PF

Arulapalam, S., M., Gordon, N. and T., C.
(2002).
A Tutorial on Particle Filters
for Online NonlinearNon-Gaussian Bayesian
Tracking, IEEE Transactions on Signal Processing 50(02) 157173.

1

0.5

0
0

Bruno, M. G. S. (2013). Sequential Monte Carlo
Methods for Nonlinear Discrete-Time Filtering, Synthesis Lectures on Signal Processing.
5

10

(c) 0.035

Time (s)

15

20

25
EKF
UKF
PF

0.03
Pitch Angle RMSE ()

25

0.025
0.02
0.015

Henderson, D. M. (1977). Shuttle Program Euler Angles, quaternions and transformations
matrices working relationships, NASA- Technical Memorandum.

0.01
0.005
0
0

5

10

Time (s)

15

20

25

Figure 2 RMSE results considering the three filters (EKF, UKF, and PF with 100 particles) (a)
linear position, (b) linear speed, and (c) pitch angle.
Table 1 Processing time statistics for each filter
phase.
Function
EKF Prediction
EKF Update
UKF Prediction
UKF Update
PF Prediction
PF Update

Mean
(ms)
0.05
0.1
11.31
2.84
24.07
3.15

Std. Dev.
(ms)
0.02
0.08
2.23
0.54
3.88
1.91

sounding rocket. This may be explained by the
following the model does not present strong nonlinearities and we did not use a large number of
particles for the PF. Thus, since the processing
time of the EKF is the smallest of the three tech-

ISSN 2525-8311

Gross, J., Gu, Y., Gururajan, S., Seanor, B.
and Napolitano, M. R. (2010). A Comparison of Extended Kalman Filter, SigmaPoint Kalman Filter, and Particle Filter in
GPSINS Sensor Fusion, Proceedings of the
2010 AIAA Guidance, Navigation, and Control Conference.

Julier, S. J. and Uhlmann, J. K. (2004). Unscented
Filtering and Nonlinear Estimation, Proceedings of the IEEE, Vol. 92.
Li, T., Sun, S., Sattar, T. P. and Corchado, J. M.
(2014). Fight sample degeneracy and impoverishment in particle filters A review of intelligent approaches, Expert Systems with Applications 41(08) 39443954.
Ljung, L. (1979). Asymptotic behavior of the extended Kalman filter as a parameter estimator for linear systems, IEEE Transactions on
Automatic Control 24(1) 36  50.
Pinto, S. C., Maximo, M. R. O. A. and Bruno,
M. G. S. (2015). Comparison of Nonlinear Stochastic Filters Performance for Differential Drive Robots Localization, Proceedings of the 2015 Simposio Brasileiro de Automacao Inteligente (SBAI).
Silva, P. R. A. and Bruno, M. G. S. (2006). Mobile
Robot Localization using Improved SIR Filters and Parametric Models of the Environment, Proceedings of the IEEE International
Conference on Acoustics, Speech and Signal
Processing (ICASSP) 2006.

2931