Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

PROPOSTA DE UM SISTEMA DE AUTOMAÇÃO RESIDENCIAL BASEADO NO PADRÃO ZIGBEE
E COMPUTADORES PESSOAIS
ARGEMIRO S. DE A. NETO, DANIELLE S. DA S. CASILLO, SILVIO R. F. DE ARAÚJO
Departamento de Ciências Exatas e Naturais - DCEN, Universidade Federal Rural do Semiárido
Av. Francisco Mota, n 572, sl. 35. Costa e Silva. CEP 59625-900, Mossoró, RN  Brasil
E-mails argemiront@gmail.com, danielle@ufersa.edu.br,
silvio@ufersa.edu.br
Abstract Home automation systems have become popular worldwide, but still have high costs, are limited, difficult programming and customization. Because they are focused on upper-class properties, middle-class households are not benefiting from
these technologies, representing a niche market not exploited yet. In this context, the development of a home automation system
based on personal computers, low cost, simple installation and flexible would be easily absorbed by the market. This paper presents a brief analysis of the ZigBee standard, proposing a new paradigm for design and specifications for home automation systems, its demonstrated in a system where a personal computer is used as a ZigBee network controller and the logic of automation, several elements of the installation, such as lamps, motors, switches and sensors are connected to the ZigBee network
trough wireless modules. Finally, we present the results and project costs.
Keywords Home Automation, ZigBee.
Resumo Sistemas de automação_residencial tem se popularizado em todo o mundo, porém, ainda têm custo elevado, são restritos, de difícil programação e personalização. Por serem voltados para empreendimentos de alto nível, residências de classe média
não são favorecidas por estas tecnologias, representado um nicho de mercado ainda não alcançado. Neste contexto, o desenvolvimento de um sistema de automação_residencial baseado em computadores pessoais, de baixo_custo, simplicidade na instalação
e flexível seria facilmente absorvido pelo mercado. Este trabalho faz uma breve análise do padrão ZigBee, propõe um novo paradigma de projetos e especificações para sistemas_de_automação_residencial, paradigma este demonstrado em um sistema onde um
computador pessoal é utilizado como controlador da rede ZigBee e das lógicas de automação, os vários elementos da instalação,
como lâmpadas, motores, interruptores e sensores são interligados  módulos sem fio da rede ZigBee. Por fim, são apresentados
os resultados e custos do projeto.
Palavras-chave .

1

Introdução

Sistemas de automação, segurança e controle residencial têm se popularizado em todo o mundo.
Grandes empresas de engenharia e eletrônica oferecem ao mercado várias opções para a aplicação desses sistemas. As chamadas casas verdes, que são
residências consideradas ecologicamente corretas e
com alta eficiência_energética, são grandes consumidoras desta tecnologia.
Equipamentos de automação e segurança residencial
têm alto custo, são restritos e utilizam tecnologias
proprietárias de hardware e software em sua grande
maioria. Apesar de proporcionarem várias opções de
personalização, as mesmas continuam restritas e de
custo elevado.
Segundo o Núcleo de Informação e Coordenação do
Ponto BR (Nic.Br) 34 da população dos centros
urbanos possui computadores pessoais no Brasil e se
considerarmos a população com faixa salarial entre
R2.326,00 e R4.650,00 essa média sobre para
71. Além disto, nesta mesma faixa salarial, 19
possuem notebooks (Cetic.br, 2010).
Neste contexto, famílias com renda de até R
4.650,00 poderiam ser beneficiadas com sistemas de
automação baseados em computadores e equipamentos de baixo_custo e grande simplicidade de instalação e uso. Contudo, verifica-se tanto a ausência de
pesquisas científicas relevantes quanto de produtos

ISBN 978-85-8001-069-5

no mercado voltados para este nicho de mercado,
uma vez que produtos e pesquisas voltadas para automação_residencial ainda têm o foco prioritário em
empreendimentos de alto nível (Teza, 2002).
Equipamentos destinados  sistemas_de_automação
industrial são, muitas vezes, empregados em automações residenciais, porém, estes são destinados  indústria, que requer altos índices_de_confiabilidade,
robustez e capacidade de comportar programação de
sistemas_complexos. O uso de equipamentos industriais em residências não somente aumenta o custo do
projeto como insere um nível de dificuldade não
compatível com o emprego, inviabilizando o uso
(Alievi, 2008).
Com um mercado ainda pouco explorado e escassez
de dispositivos de baixo_custo e projetados para este
fim, os sistemas_de_automação_residencial ainda têm
um grande desafio intervir o mínimo possível em
instalações elétricas existentes. O custo para instalar
novas fiações em uma instalação elétrica para automação é limitador, e muitas vezes torna inviável o
projeto. O sistema então deve ser projetado para contornar tal limitação e oferecer uma alternativa viável.
Neste aspecto, o uso de tecnologias de comunicação
sem fio se mostra bastante eficaz. Entre os diversos
padrões de tecnologia sem fio, destacamos o padrão
IEEE 802.15.4 (ZigBee), que foi desenvolvido especificamente para este fim. Na seção 3 é apresentado
um projeto de um sistema de automação baseado em
computadores pessoais e dispositivos ZigBee. Por

2951

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

fim, são apresentados os custos do projeto, provando
que o paradigma é perfeitamente exequível.
2 O Padrão ZigBee
ZigBee é um padrão aberto baseado no IEEE
802.15.4 que define um conjunto de protocolos de
comunicação para redes_sem_fio de curto alcance e
baixas taxas de transmissão. Dispositivos baseados
nesse padrão operam nas faixas de 868MHz,
915MHz e 2,4GHMz e têm taxa de transferência
máxima de 250 kilobits por segundo.
O padrão é direcionado principalmente para aplicações com dispositivos alimentados por bateria, em
que baixas taxas de transmissão, baixo_custo e baixo
consumo_de_energia são requisitos básicos (Farahani,
2008). O mercado alvo deste padrão é chamado de
redes_de_sensores sem fio e controle ou simplesmente
controle sem fio (Gislasin, 2008).
Por ser uma tecnologia desenvolvida com foco em
redes_de_sensores sem fio de baixo_custo, o ZigBee
utiliza tecnologias livres de patentes e royalties, como CSMACA, CRC de 16 bits em cada quadro,
reconhecimento e retransmissão de mensagens, criptografia AES-128 bits e o Ad-hoc On-Demand Distance Vector Routing (AODV), um algoritmo para
roteamento utilizado na rede mesh, também de domínio público.
Apesar de o ZigBee trabalhar no mesmo espectro de
frequência do Wi-Fi e do Bluetooth, 2,4GHz, não é
esperado que haja interferência entre os mesmos pelo
fato da baixa taxa de transferência do mesmo (Farahani, 2008).
O ZigBee possui oito perfis de aplicação que garantem compatibilidade entre os vários fabricantes de
dispositivos. O perfil Home Automation é destinado 
aplicações de automação_residencial, sendo este o
mais adequado ao projeto.
A rede comporta três tipos de dispositivos, a saber
coordenador (ZC, dispositivo que coordena as conexões e características da rede), dispositivo de fim
(ZED, dispositivo cliente na rede) e roteador (ZR,
opera como roteador na rede mesh e dispositivo de
fim na rede) (Alliance, 2008).
O ZigBee foi desenvolvido como uma alternativa ao
uso de instalações cabeadas para controle e automação, porém, não é o único padrão desenvolvido com
este objetivo, alternativamente, pode-se trabalhar
com os seguintes padrões IPv6 over IEEE 802.15.4
(6LoWPAN), WirelessHART, Bluetooth, Ultra-LowPower Bluetooth (Wibree), Wi-Fi, WirelessUSB e Zwave.
Dentre os padrões citados, o ZigBee fornece a melhor relação custo  benefício, facilidade de programação e projeto simplificado através do módulo
XBee da DIGI, que foi empregado no projeto (Digi,
2011).

ISBN 978-85-8001-069-5

3 O Sistema Proposto
Pelo fato de interferir nas instalações elétricas
das residências, a automação tem um impacto financeiro menor quando é concebida ainda no projeto da
edificação. Porém, verifica-se que a grande maioria
das residências não foram projetadas para comportar
tais sistemas. Faz-se então necessário que a automação seja facilmente adaptável s instalações existentes.
Todo sistema_de_controle residencial tem um software gerenciador, de controle, e este software deve ser
executado em algum sistema computacional. Em
suma, existem algumas opções de solução, desde o
emprego de softwares distribuídos ao uso de uma
tablet ou Computador Pessoal (PC). Adotamos a
solução baseada em PCs por oferecer os menores
custos e ferramentas consolidadas para o desenvolvimento do software e métodos de controle. Uma
maquete foi produzida com instalações típicas de
uma residência para demonstrar um sistema protótipo
em funcionamento.
3.1 A Arquitetura do Hardware
O computador é responsável por executar o software_de_controle e servir de gateway para os dispositivos conectados  rede ZigBee. Os vários dispositivos de entrada_e_saída, como interruptores, lâmpadas
e motores, são interligados s várias placas de controle sem fio, que tanto interpretam os comandos
recebidos do software_de_controle quanto enviam
informações sobre o estado de suas portas de entrada
e saída e status da rede para os demais módulos, como pode ser verificado na Figura 1.

U
S
B
 

Cabos
 
elétricos
 
diversos
 
Figura 1. Arquitetura de Hardware

A solução adotada visa estabelecer um equilíbrio
entre a necessidade de alto índice de adaptabilidade
do sistema s instalações existentes e baixo_custo. O
alto índice de adaptabilidade é atingido ao se estabelecer comunicação_sem_fio entre as várias partes do
sistema, evitando a necessidade de cabos especiais de
comunicação. O uso de um módulo único para acionar e receber sinais de vários dispositivos foi estabelecido para reduzir os custos.
A relação entre os custos e a flexibilidadefacilidade
de instalação é determinada pelo uso das placas de

2952

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

controle, que podem tanto serem utilizadas com apenas um dispositivo quanto podem ser multiplexadas
para vários, como empregado neste trabalho.
3.2 As Placas de Controle
As placas dos módulos de controle foram projetadas com base no chip XBee do fabricante Digi
(Digi, 2011), que implementa o rádio e a pilha do
protocolo ZigBee 2007, com o objetivo básico de
fornecer energia para o módulo e interligar as entradas e as saídas do mesmo aos dispositivos de campo
de forma uniforme e com acabamento superior aos
realizados em protoboards, reduzindo o espaço necessário e demonstrando a possiblidade do projeto de
placas pequenas o suficiente para serem instaladas
em caixas elétricas de uma residência.
O esquema elétricoeletrônico da placa foi concebido, conforme a Figura 2, para suportar entradas digitais, saídas digitais e saídas analógicas no modo Pulse Width Modulation (PWM), entretanto o módulo
XBee compreende ainda a função de entrada analógica que pode ser usada para leitura de temperatura
ambiente, iluminação e umidade, possibilitando
agregar mais funcionalidades  automação.

Figura 2. Esquema elétricoeletrônico da placa de controle

As placas de controle foram fabricadas em uma máquina prototipadora ProtoMat H100 do fabricante
LPKF (LPKF, 2011), equipamento profissional para
execução de protótipos de placas de circuito impresso.
3.3 A Maquete
Para demonstrar o sistema em execução foi desenvolvida uma maquete de uma residência para instalação.
Foi projetada uma construção do tipo loft com todas
as características de um projeto real em uma primeira
etapa. Em seguida, foram definidas as paredes que
seriam retiradas para permitir uma melhor visualização interna, os muros foram rebaixados e o telhado
retirado.
Para a construção da maquete foi determinada a escala 120. Esta escala apresentou a melhor relação entre
tamanho e portabilidade. A mesma foi então construída em MDF (paredes e piso) e materiais específicos

ISBN 978-85-8001-069-5

para construção de maquetes, como esponjas para a
árvore. A Figura 3(a) mostra o desenho do loft em
computador e a Figura 3(b) mostra o mesmo construído, conforme especificação.
(

(a)

(b)

Figura 3. Projeto da maquete (a) e a maquete construída (b)

Todo o hardware de controle foi instalado e testado
na maquete.
3.4 O Método de Programação
A programação dos sistemas_de_automação_residencial varia em torno de uma grande questão oferecer opções de programação bastante limitadas e de
fácil utilização ou com muitas funcionalidades, porém complexas. Variando entre a utilização de linguagens de programação de Controladores Lógicos
Programáveis (CLPs) como a Function Block Diagram (FBD) ou simples funcionalidades de ligar e
desligar lâmpadas, por exemplo.
No intuito de resolver esta questão, o método de programação foi projetado tendo como base conceitos
das máquinas_de_inferência dos sistemas especialistas, a forma de construção e análise das árvores de
análise sintática dos analisadores sintáticos descendentes dos compiladores e a linguagem FBD de programação de CLPs.
As máquinas_de_inferência dos sistemas especialistas
são projetas de tal forma a permitir que testes lógicos
do tipo SEENTÃO sejam montados de forma dinâmica apenas com a passagem de parâmetros em
tempo de execução do software. Esses testes são
montados na memória de trabalho da máquina e
chamados de acordo com a configuração da mesma.
Os analisadores sintáticos descendentes constroem
árvores de análise sintáticas através de chamadas
recursivas a funções de acordo com a entrada do
mesmo, tais árvores representam o programa inicial
lido e estruturado de forma correta. A linguagem
FBD permite que blocos funcionais de programas
sejam interligados entre si através das entradas e saídas dos mesmos, permitindo a construção de lógicas
complexas a partir de blocos mais simples.
As unidades básicas do método de programação são
os blocos funcionais. Todos os blocos funcionais são
classes derivadas de uma única classe básica (Action) e executam funções específicas, conforme
ilustrado na Tabela 1

2953

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

Tabela 1. Funções do método de programação
Função

Descrição

AND

Realiza um E lógico entre duas entradas e
retorna 1 para verdadeiro e 0 para falso
Testa se a hora atual está entre o intervalo de
hora determinado pela hora inicial e hora
final. Retorna 1 se verdadeiro e 0 se falso.
Copia o valor do tipo inteiro de uma origem
para um destino. A origem e o destino podem ser variáveis intermediárias, dispositivos ou objetos da interface_gráfica.
Testa se a data atual está entre o intervalo de
datas determinadas pela data inicial e a data
final. Retorna 1 se verdadeiro e 0 se falso.
Testa se o dia da semana atual é igual ao dia
programado. Retorna 1 se verdadeiro e 0 se
falso.
Lê o valor lógico da variável, objeto da
interface_gráfica ou dispositivo e retorna o
valor negado do mesmo.
Lê o valor lógico da variável, objeto da
interface_gráfica ou dispositivo e retorna 1
quando o mesmo for alterado de 1 para 0 e
retorna 0 nos demais casos.
Lê o valor lógico da variável, objeto da
interface_gráfica ou dispositivo e retorna 1
quando o mesmo for alterado de 0 para 1 e
retorna 0 nos demais casos.
Lê o valor lógico da variável, objeto da
interface_gráfica ou dispositivo, se o valor
for 1 então o valor da variável de é incrementado até o valor máximo. Ao atingir o
valor máximo, a variável é decrementada até
o valor mínimo.

ClockInterval
CopyAnalog

DateInterval

DayWeekInterval
NOT

ToOff

ToOn

UpDown

Todos os blocos funcionais realizam um teste local,
com retorno de acordo com a funcionalidade implementada. Caso o teste local retorne verdadeiro, uma
chamada recursiva é feita para todos os objetos do
tipo Action registrados como filhos em uma estrutura de árvore do bloco. Os blocos foram desenvolvidos de tal forma que os testes locais formam um teste
lógico E e os testes da árvore formam um teste
lógico do tipo OU entre si, como mostra a Figura
4. Essa estrutura de testes combinada com a classe
NOT (negado), fornece um método robusto para construção de esquemas lógicos complexos.
Como os testes são realizados internamente aos objetos e os mesmos podem ser criados e alocados dinamicamente em tempo de execução, o sistema passa a
reproduzir o comportamento dinâmico e a facilidade
de programação características das máquinas_de_inferência dos sistemas especialistas.

realizado, quando retorna verdadeiro, os testes filhos
são realizados e o retorno da função é sempre uma
combinação lógica do tipo E entre o teste local e cada teste filho. Consequentemente, se um teste local
tem como resultado um valor lógico falso, os testes
filhos não são realizados.
Esse método de análise e realização dos testes segue
o mesmo padrão de varredura dos CLPs, onde as
entradas são atualizadas, o programa é executado de
forma sequencial e, por último, as saídas são atualizadas.
3.5 A Interface Gráfica
Sistemas de automação atuais são projetados para serem programados por especialistas e esta característica é refletida na interface de programação. Ao
propor um paradigma em que o usuário programa o
sistema, dispomos uma interface de fácil programação e entendimento. O usuário pode programar o
sistema através da configuração e habilitação de abas
com funcionalidades pré-programadas para acionamento através de relógios, interruptores, sensores ou
comando de motor.
A interface_gráfica foi construída com base na tecnologia Windows Presentation Foundation (WPF), que
é uma biblioteca gráfica que utiliza como base aceleração gráfica via hardware com o DirectX e implementa o conceito de interfaces gráficas vetoriais
(MacDonald, 2010).
Outra característica do WPF é a separação do código
da interface_gráfica do restante do código do aplicativo, que facilita o uso de padrões de arquitetura de
desenvolvimento de software. O padrão MVVM
(Model  View  ViewModel) foi empregado. O
MVVM pode ser considerado como uma adaptação
do padrão MVC (Model  View  Controller) para os
padrões do WPF. Um guia de uso desenvolvido pela
Microsoft pode ser acessado em (Microsoft, 2011).
A tela principal do programa tem duas abas, a aba
Configuração e a aba Ao Vivo. Na aba de configuração, dados sobre os dispositivos conectados aos
pinos dos módulos podem ser inseridos, como nome
e tipo, e quais as configurações pré-determinadas,
que podem ser habilitadas individualmente, conforme Figura 5.

Figura 4. Estrutura dos testes lógicos nas classes Actions

Os testes são realizados a cada ciclo de varredura do
programa, o teste lógico da raiz da árvore é sempre

ISBN 978-85-8001-069-5

Figura 5. Interface gráfica do módulo de configuração de
dispositivos

2954

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

Foram utilizadas as ferramentas Visual Studio 2010 e
o Expression Blend 4 para desenvolvimento da interface_gráfica que herdou a mesma identidade visual
do Expression Blend 4.
3.6 O Software de Controle
O software_de_controle foi projetado para ser
executado apenas em ambiente Windows, versão
Vista ou mais recente e com os recursos gráficos do
Aero habilitados, desenvolvido em C, utilizando o
.NET Framework versão 4.0. A arquitetura proposta
está descrita na Figura 6.

AND
 
AutMachine
 

XComm
 

Drive
 XBee
 

XBee
 0
 
Xbee
 

XBee
 1
 

...

XBee
 n
 

Figura 6. Arquitetura do Software de Controle

O núcleo do sistema (Core) controla todos os outros
módulos do programa e funciona como um agregador
de recursos. O núcleo faz a inicialização, carrega a
interface_gráfica, cria e inicializa o módulo de comunicação (XComm), monta a lógica de automação de
cada pino de entrada_e_saída de cada dispositivo registrado no módulo de comunicação e controla a
execução sequencial da lógica de controle.
O módulo de comunicação (XComm) é responsável
por prover uma interface de acesso comum aos dispositivos ZigBee conectados na rede, funções de
conexão e desconexão de dispositivos, configuração
de rede e comunicação com os módulos. O módulo
provê ainda funções de comando das entradas e saídas digitais e analógicas, como acionamento de uma
saída digital ou verificação do estado de uma entrada
digital em determinado módulo.
Drivers de comunicação específicos para cada tipo
de dispositivo ZigBee conectados  rede podem ser
inseridos no módulo de comunicação, permitindo a
comunicação adequada de forma independente de
fabricante.
O módulo AutMachine é o responsável pelos objetos
da automação, também chamados de ações. O AutMachine funciona como um repositório de ações, que
são criadas, agrupadas e configuradas pelo núcleo
antes de serem acopladas aos dispositivos disponibilizados pelo módulo de comunicação.
Com o software em operação, ao selecionar um pino
de entrada ou saída do dispositivo, o software reco-

ISBN 978-85-8001-069-5

(b)

De modo semelhante, as opções de configuração da
automação são filtradas de acordo com tipo. Saídas
digitais para acionamento de motor só aceitam a configuração do motor, assim como saídas digitais que
acionam lâmpadas não aceitam configuração de acionamento de motor de portão.
A aba de configuração ainda possibilita a nomeação
dos dispositivos ligados aos módulos. Esta nomeação
é importante para facilitar a identificação dos dispositivos na programação da automação.

Core
 

...
ToOff
 

(a)

Figura 7. Exemplo de reconhecimento do tipo de conexão
disponível no XBee

GUI
 

NOT
 

nhece qual a configuração do hardware do mesmo e
disponibiliza para o usuário apenas as opções compatíveis com a mesma. Ao selecionar um pino configurado como saída digital, as opções disponíveis para
seleção são lâmpada, sirene ou motor de portão, Figura 7(a), e ao selecionar uma saída analógica só será
disponibilizada a opção de configurar como dimmer,
Figura 7(b).

3.6.1 O Drive de Comunicação
O módulo ZigBee utilizado no projeto foi o
XBee, da Digi (Digi, 2011). O XBee fornece duas
possibilidades de comunicação modo transparente,
onde o rádio funciona apenas como repetidor entre
dispositivos em uma comunicação serial e o modo
Application Programming Interface (API), onde comandos específicos são enviados para o rádio, seja
para solicitação do estado atual quanto para alteração
de algum parâmetro de configuração ou estado.
Os comandos são transmitidos em pacotes com formatos específicos para cada tipo. O XBee provê uma
série de formatos para os mais diversos fins, porém,
o drive de comunicação implementa apenas os utilizados no programa. O código identificador do pacote, seu nome e sua descrição estão especificados na
Tabela 2.
Tabela 2. Pacotes do XBee implementados no drive
COD
(Hexa)
0x08

Nome

Descrição

ATCommand

Envia um comando local para o
dispositivo conectado ao computador.
Resposta de um dispositivo ao
recebimento de um comando local,
enviado por um computador.
Envio um comando para um dispositivo remoto, especificado pelo seu
endereço de 64bits.
Resposta de um dispositivo  um
comando recebido remotamente
com o status da execução do comando.
Comando que contém dados de

0x88

ATCommandResponse

0x17

RemoteCommandRequest
RemoteCommandResponse

0x97

0x95

NodeIdentifi-

2955

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

cationIndicator
0x82

APIIOSupportReceivePacket64bits

identificação de um módulo, como
ID, número serial de 64bits e endereço de 16bits.
Comando de retorno que contém o
estado atual dos pinos de entrada e
saída, bem como sua configuração
atual

saída analógica em um módulo compacto, que tem
um custo inicial de R 68,00 no Brasil.
Os custos de projeto, fabricação, componentes e
instalação podem ser verificados na Tabela 4.
Tabela 4. Custos do projeto
Item

Os comandos API são chamados de comandos AT.
Os comandos AT utilizados no drive estão descritos
na Tabela 3
Tabela 3. Comandos API do XBee implementados no drive
AT
Command

ND

D0 a D3

IS

M1

Nome e descrição
Node Discover. Busca e retorna todos os módulos
conectados na rede. O comando retorna as seguintes informações para cada módulo encontrado
MY endereço de 16bits do módulo
SH e SL número serial de 64bits do módulo
DB potência de recepção do sinal
NI Identificador do módulo.
(DIO0 a DIO4) Configuration. Realiza a leitura
escrita das configurações dos pinos de entrada e
saída DIO0, DIO1, DIO2 e DIO3. Este comando é
utilizado para ativar e desativar as saídas digitais,
utilizando os seguintes valores como parâmetro
para tal
4  DO LOW (desativa a saída digital. Sinal em
0V)
5  DO HIGH (ativa a saída digital. Sinal em
3,2V)
Force Sample. Força o módulo a realizar uma
leitura de todas as entradas digitais e analógicas
habilitadas e reportar o resultado para o módulo
que o solicitou.
PWM1 Output Level. Realiza a leitura escrita do
valor da saída PWM1. Utilizado para acionamento
analógico dos LEDs.

01
02
03
04
05
06
07
08

09
10
11
12
13
14
15
16
17
18
19

O envio e recebimento dos comandos AT é feito de
forma transparente pelo programa, o drive provê funções que fornecem uma camada de abstração aos
comandos e pacotes acima descritos, como a função
SetOutputState(ulong dev, int pin, bool
on), que recebe como parâmetro o número serial do

20

Descrição

Projeto e construção da
maquete
Rádio XBee S1
Fabricação das placas
de controle
Soquete USB
Sirene 3V
Soquete de barra 2x40
MCI  180
Motor RF300C
Led 5mm transp.
18.000 MCD  alto
brilho
Capacitor Poliéster
100nF x 63V
Resistor 220R Carbono
5 14W
Conector 50452 KK 2
vias macho
Alojamento para conector KK 50452
Diodo IN4007
Cabinho Flexível branco  1mm
Cabinho Flexível verde
 1mm
Cabinho Flexível laranja  1mm
Cabinho Flexível cinza
 1mm
Chave táctil 6x6x43mm
 4 terminais
Soquete 10 vias, 2mm,
p XBee
Acessórios diversos

Preço
Unitário
(R)

Qtde

Preço
Total
(R)

450,00

01

450,00

68,00
50,00

03
01

204,00
50,00

4,59
1,32
1,49

01
01
01

4,59
1,32
1,49

4,80
0,60

01
20

4,80
12,00

0,24

10

2,40

0,03

15

0,45

0,24

10

2,40

0,09

10

0,90

0,12
0,35

20
10

2,40
3,50

0,35

10

3,50

0,35

10

3,50

0,35

10

3,50

0,14

15

2,10

3,00

10

30,00

10,00
01
TOTAL (R)

10,00
792,85

módulo, o pino a ser modificado e um booleano indicando se o mesmo deve ser ativado ou desativado.
Internamente um pacote do tipo RemoteCommandRequest é montado com os dados e enviado para o
módulo em questão.

Todos os componentes utilizados foram comprados
no Brasil, apesar de serem produtos importados em
sua grande maioria. Verificou-se que a importação
dos produtos oferecia um custo ainda menor ao projeto. O XBee importado teria um custo final de R
54,00 com impostos, enquanto o nacional teve um
custo de R 68,00, por exemplo.

4 Custos do Sistema

5 Conclusões e Trabalhos Futuros

Um dos focos do projeto é demonstrar a possibilidade de implementação de sistemas_de_automação
residencial robustos e de baixo_custo. Não se pode
considerar os custos apresentados como finais para
uma instalação real, porém, apresentam um tendência
clara da possibilidade.
Esta tendência pode ser verificada ao se analisar os
custos de alguns componentes, como os rádios XBee,
que têm disponíveis 9 pinos configuráveis para entradas digitaisanalógicas e saídas digitais e 1 pino de

O desenvolvimento de um protótipo completamente funcional de um sistema de automação com
características e funcionalidades compatíveis com as
disponíveis nos produtos no mercado e com um custo
baixo de componentes e instalação prova que é possível o uso deste recurso tecnológico por consumidores de classe média.
As tecnologias, produtos e equipamentos empregados para desenvolvimento do projeto se mostraram
acertadas por proporcionarem a capacidade de rápido

ISBN 978-85-8001-069-5

2956

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

desenvolvimento da aplicação e testes. Destacandose o emprego de módulos XBee para projeto do
hardware e o uso da linguagem C com o .NET Framework 4.0 para o software.
O tempo de resposta do protótipo entre o acionamento de um interruptor e o acendimento da respectiva
lâmpada (LED) se mostrou suficientemente rápido,
não foram observados atrasos mesmo com programações mais complexas para as saídas.
Dentro da concepção enfatizada pelos autores, a pesquisa possibilitou que trabalhos futuros incluam o
porte da aplicação para a linguagem JAVA, trazendo
portabilidade entre sistemas_operacionais. O desenvolvimento de um hardware mais simples e menor,
com tecnologias mais modernas, como SMD, bem
como uma nova interface de programação acessível
por um navegador de internet, fornecendo a opção de
programação por qualquer dispositivo que suporte
navegação WEB e por fim, a instalação e testes em
uma residência real.
Com intuito de verificarmos a aplicabilidade do projeto atual do hardware nos trabalhos futuros, foram
utilizadas com sucesso placas de potência para amplificar a capacidade de carga do circuito, que passou
a fornecer 500mA para cada saída digital ao invés
dos 30mA padrão do módulo XBee. Para a instalação
com uma carga superior, como uma lâmpada de
100W ou um motor de portão, basta apenas a troca
da placa de potência por uma com maior capacidade.
Trazendo facilidade e flexibilidade para aplicação
nos trabalhos futuros.

Gislasin, D., 2008. Zigbee Wireless Networking.
Amsterdam Newnes.
LPKF, L. L. E. A., 2009. PCB Prototyping, Depaneling and Processing, SMT Stencils, LDS, MID.
online Disponível em <httpwww.lpkf.com >
Acesso em 5 jun. 2011
MacDonald, M., 2010. Pro WPF in C 2010 Windows Presentation Foundation in .NET 4.0.
PDF. Estados Unidos da América Apress. Disponível em www.apress.com Acesso em 20 abr.
2011.
Microsoft, 2011. Prism, 2011. online Disponível
em <httpmsdn.microsoft.comen-uslibrarycc
707819.aspx > Acesso em 24 mai. 2011
Teza, V. R., 2002. Alguns aspectos sobre a automação_residencial - Domótica. Dissertação de Mestrado em Ciência da Computação. Universidade
Federal de Santa Catarina.

Referências Bibliográficas
Alievi, C. A., 2008. Automação Residencial com
utilização de controlador_lógico_programável.
Trabalho de Conclusão de Curso em Ciência da
Computação. Instituto de Ciências Exatas e Tecnológicas, Centro Universitário Feevale.
Alliance, Z., 2008. ZigBee Specification. San Ramon
ZigBee Alliance.
Cetic.br, C. D. E. S. A. T. D. I. E. D. C., 2010. TIC
2009 - Proporção de domicílios que possuem
equipamentos TIC. online Disponível em
<httpwww.cetic.brusuariostic2009-total-bras
ilrel-geral-00.htm > Acesso em 15 mar. 2011
Digi, D. I. I., 2011. ZigBee and Mesh Modules. online Disponível em <httpwww.digi.compro
ductswireless-wired-embedded-solutionszigbee
-rf-moduleszigbee-mesh-module > Acesso em
10 mar. 2011
Farahani, S., 2008. ZigBee Wireless Networking and
Transceivers. Oxford, Oxfordshire, UK Elsevier.

ISBN 978-85-8001-069-5

2957