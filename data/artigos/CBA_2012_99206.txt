Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

METAHEURÍSTICA GRASP COM RECONEXÃO POR CAMINHOS APLICADA AO PROBLEMA
DO ROTEAMENTO DE LEITURISTAS DO CONSUMO DE ENERGIA ELÉTRICA
FÁBIO L. USBERTI, PAULO MORELATO FRANÇA*, ANDRÉ L. MORELATO FRANÇA
Faculdade de Engenharia Elétrica e de Computação, Universidade Estadual de Campinas
Campinas, SP, Brasil.
*Departamento de Matemática, Estatística e Computação, Universidade Estadual Paulista, Presidente
Prudente, SP, Brasil.
E-mails fusberti@gmail.com, paulo.morelato@gmail.com,
morelato@dsee.fee.unicamp.br

Abstract The Meter Reading Routing Problem can be viewed as an application for the Open Capacitated Arc Routing Problem
(OCARP). OCARP is an NP-hard combinatorial optimization problem where, given an undirected graph, the objective is to find
a minimum cost set of tours that service a subset of edges with positive demand under capacity constraints. An integer linear
programming formulation is given in order to solve the problem. A metaheuristics approach based on the Greedy Randomized
Adaptive Search Procedure (GRASP) with path-relinking (PR) solution method is proposed. Computational tests were conducted
for OCARP standard instances, and results reveal that the metaheuristic GRASP with PR is very competitive, achieving the best
overall deviation from lower bounds found in the literature.
Keywords meter reading routing, open capacitated arc routing problem, arc routing, integer linear programming, pathscanning heuristic, greedy randomized adaptive search procedure, path-relinking.
Resumo O Problema do Roteamento de Leituristas pode ser visualizado como uma aplicação do Problema de Roteamento em
Arcos Capacitado e Aberto (OCARP). OCARP é um problema de otimização combinatória NP-difícil em que, dado um grafo
não-direcionado, o objetivo consiste em encontrar um conjunto de rotas de custo mínimo para veículos com capacidade restrita
que atendam a demanda de um subconjunto de arestas. Uma formulação de programação_linear_inteira é proposta para resolver o
problema. Uma metaheurística GRASP (greedy randomized adaptive search procedure) com reconexão_por_caminhos (pathrelinking-PR) é proposta como método de solução. Testes computacionais foram realizados usando instâncias padrão para
OCARP e os resultados mostram que a metaheurística GRASP com PR é muito competitiva, apresentando os melhores desvios
totais entre o custo das soluções e os limitantes inferiores encontrados na literatura.
Palavras-chave .

1

Introdução

A busca de soluções ótimas do Problema do
Roteamento de Leituristas (Meter Reader Routing
Problem) é de grande interesse das empresas
fornecedoras de energia_elétrica, água e gás, que
precisam ler periodicamente os consumos de seus
clientes, dispersos geograficamente nas ruas e
avenidas de uma localidade,
para fins de
faturamento. A solução desse problema consiste na
elaboração de um conjunto de rotas abertas
(começam em um ponto e terminam em outro), as
quais os leituristas devem percorrer fazendo o
serviço de leitura, de tal modo a atender um critério
de otimalidade sujeito a um grupo de restrições.
Embora o advento de medidores eletrônicos com
interface de comunicação possibilite telemedição,
dispensando os leituristas, a efetiva implantação
dessa tecnologia é um processo gradual, que depende
da localidade e região do mundo, no qual deve ser
levado em conta sua viabilidade econômica. No
Brasil, por exemplo, a substituição dos mais de 63
milhões de medidores convencionais por medidores
eletrônicos com telemedição demandará vários anos
e, portanto, o roteamento_de_leituristas permanecerá
como um real problema por muito tempo.

ISBN 978-85-8001-069-5

A natureza do Problema do Roteamento de
Leituristas permite enquadrá-lo como um problema
de roteamento_em_arcos sobre grafos, que é uma
importante classe de problemas em pesquisa
operacional. Um grafo G(V,E) é constituído por um
conjunto V de nós ou vértices (V  v1, v2, ..., vn)
conectados por um conjunto E de pares não
ordenados de V denominados arestas ou arcos (E 
e1, e2, ..., em). O problema de roteamento_em_arcos
consiste em determinar um subconjunto ordenado de
arestas E sobre um grafo G(V,E) (E  E),
atendendo restrições de demanda, capacidade, dentre
outras e minimizando determinada função custo.

Figura 1a  Mapa de ruas e avenidas

2334

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

A formulação do problema dos leituristas passa
inicialmente pela construção de um grafo nãodirecionado no qual os segmentos de ruas a serem
percorridas são as arestas e os cruzamentos de ruas
ou avenidas são os vértices, como ilustram as Figuras
1a e 1b.

percorrer a aresta fazendo as leituras (tempo de
leitura).
Uma particularidade do roteamento_de_leituristas
é que mesmo quando o leiturista percorre um trecho
sem consumidores (aresta não-requerida), ele ou ela
está usando parte do tempo de trabalho e, portanto,
no OCARP correspondente, esse tempo deve ser
descontado também da capacidade do veículo. Note
que as rotas são abertas já que cada leiturista
normalmente inicia sua rota em um vértice e termina
em outro. Veja a ilustração da Figura 2.

Figura 1 b  Grafo representativo do problema

O Problema do Roteamento dos Leituristas pode
ser considerado como uma aplicação prática do
Problema de Roteamento em Arcos Capacitado e
Aberto (Open Capacitated Arc Routing Problem 
OCARP) proposto pelos autores deste trabalho
(Usberti et al., 2011). O OCARP pode ser definido
como segue.
Seja G(V,E) um grafo não-direcionado e conexo
em que custos não-negativos cij e demandas dij são
associados a cada aresta e  vi, vj. Todas as arestas
com demandas positivas, chamadas arestas
requeridas, devem ser necessariamente percorridas
uma vez por um único veículo. Uma frota de M
veículos idênticos com capacidade limitada D é
disponível. Ao percorrer o grafo, um veículo
qualquer pode (a) atravessar uma aresta requerida,
causando desconto da respectiva demanda na
capacidade D do veículo e acréscimo no custo da
solução (b) atravessar uma aresta não-requerida
(sem demanda), o que causa somente um acréscimo
no custo da solução. A rota de um veículo é definida
por um conjunto de arestas direcionadas (arcos)
percorridas pelo veículo. Tanto rotas abertas quanto
rotas fechadas são permitidas, ou seja, uma rota pode
começar e terminar em vértices distintos. Uma
solução OCARP viável é formada por uma família de
rotas que percorrem todas as arestas requeridas e não
violam a capacidade de qualquer veículo. A função
objetivo do OCARP é encontrar a solução que
minimiza o custo total da família de rotas.
A identificação do Problema de Roteamento de
Leituristas com o OCARP decorre naturalmente se as
seguintes associações forem consideradas (a) os
veículos correspondem aos leituristas e sua
capacidade corresponde ao tempo de trabalho diário
do leiturista (b) os vértices do grafo correspondem
aos cruzamentos das ruas (c) as arestas do grafo
correspondem aos trechos percorridos de ruas (d) o
custo de uma aresta corresponde ao tempo gasto para
percorrer a aresta sem leitura (tempo de percurso)
(e) a demanda da aresta corresponde ao tempo de

ISBN 978-85-8001-069-5

Figura 2 - Exemplo de solução com M3 (linha cheia-aresta
requerida linha pontilhada-aresta não-requerida)

Pode ser provado que o Problema de
Roteamento em Arcos Capacitado e Aberto
(OCARP) é um problema NP-difícil (Usberti et al.,
2011), ou seja, é improvável que o tempo de
execução computacional do algoritmo possa ser
limitado por uma expressão polinomial T(n)  O(nk),
para alguma constante k, em função da dimensão n
do problema. Isso significa que, em muitos casos de
dimensões reais, o problema não pode ser resolvido
por algoritmos exatos, exigindo o desenvolvimento
de algoritmos_heurísticos, que embora não garantam
a otimalidade, podem apresentar soluções de alta
qualidade.
Métodos heurísticos para resolver o Problema de
Roteamento de Leituristas foram propostos e
aplicados a casos reais em Israel (Stern and Dror,
1979) e Los Angeles (Wunderlich, Collette, Levy
and Bodin, 1992). No primeiro, o problema é tratado
inicialmente como não-capacitado e obtém-se uma
única rota passando por todas as arestas requeridas e
depois particiona-se essa rota em segmentos
atribuídos a cada leiturista. O segundo usa uma
estratégia inversa, pois o grafo é particionado em
áreas destinadas a cada leiturista e depois obtém-se
as rotas dentro de cada área. Ambos os trabalhos
usam heurísticas fortemente sintonizadas nas
condições locais e não mostram soluções de boa
qualidade em caso gerais. Este trabalho, que é parte
da tese de doutorado do primeiro autor, sob
orientação dos demais autores (Usberti, 2012),
apresenta o Problema de Roteamento Capacitado e
Aberto (OCARP), formulado como um problema
geral de programação_linear_inteira e resolvido por
metaheurística GRASP (greedy
randomized
adaptive search procedure) combinada com a
técnica de reconexão_por_caminhos evolutiva
(evolutionary
path-relinking), como base para
resolver o Problema de Roteamento de Leituristas.

2335

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

2 Formulação do OCARP
A formulação geral do Problema de Roteamento
Capacitado e Aberto (OCARP) como um problema
de programação_linear_inteira é apresentada a seguir.
Antes de mais nada, dois conjuntos de variáveis
de decisão devem ser definidas xkij1 se a rota k
percorre o arco (i,j) e xkij0 em caso contrário lkij1
se a rota k percorre o arco (i, j) com demanda dij
(aresta servida) e lkij0 em caso contrário. Há ainda
variáveis auxiliares ukS e vkS, onde S (S  V) denota o
conjunto de vértices de uma solução se ukS0 então a
rota k não tem número suficiente de arcos para
formar um ciclo em S se vkS0 então a rota k
percorre o conjunto_de_corte (S,S), onde S denota o
subconjunto dos vértices complementares a S.


 

Min

sujeito a

1 (, )

(   )  

(i  V, k  1,  ,  )

 ()

  1




(k  1,  ,  )

 

( ,    , k  1,  ,  )

( +  )  1

( ,    )

1

   

( k  1,  ,  )

(, )

  S 2   S  1

(SV, SVS)

 +   1

( k  1,  ,  )

,  ,

, (,)

 +   1

 +  +  
  0,1
  0,1
  0,1
,  ,   0,1

2

( k  1,  ,  )
(k
((i,j)  , k 
((i,j)   , k 
(i  V, k 
( S  V, k 

1,  ,  )
1,  ,  )
1,  ,  )
1,  ,  )
1,  ,  )

Na formulação OCARP, o número de veículos
M é um parâmetro fixo V é o conjunto de vértices
do grafo G S é o conjunto de vértices de uma
solução E é o conjunto de arestas ER denota o
subconjunto de arestas requeridas cij representam os
custos da aresta (i,j) N(i) denota os nós adjacentes ao
nó i em G a variável auxiliar ik1 indica que o
vértice i é fonte da rota k e ik0 indica o contrário
dij é a demanda da aresta (i,j) e D representa a
capacidade de cada veículo a variável auxiliar
binária wSk0 indica que a rota k não contém vértice
fonte em S.
O papel de cada equação no modelo pode ser
resumidamente descrito como segue. A função
objetivo minimiza o custo total da solução. As duas
primeiras restrições obrigam a continuidade das rotas

ISBN 978-85-8001-069-5

(cada veículo deve entrar e sair o mesmo número de
vezes de um mesmo nó, exceto nos dois nós
terminais de cada rota). A terceira restrição arma
que quando um arco requerido é atendido por um
veículo, esse mesmo veículo deve também percorrer
o arco. A quarta restrição força que cada aresta
requerida (representada por dois arcos) deve ser
atendida em um único sentido por um único veículo.
A quinta restrição reete a capacidade limitada dos
veículos. O conjunto das demais restrições visam
eliminar soluções infactíveis, devido  ocorrência de
subciclos ilegais.
3 Metaheurística GRASP para OCARP
A metaheurística GRASP (Greedy Randomized
Adaptive Search Procedure) (Feo and Resende,
1995) é um algoritmo iterativo de busca heurística
em que cada iteração consiste de duas fases
 fase construtiva soluções iniciais são
construídas, um arco de cada vez, usando heurística
aleatória gulosa a cada iteração, o próximo elemento
a ser adicionado é escolhido dentre todos os
elementos ordenados em uma lista de acordo com
uma função gulosa que estima o benefício de
selecionar
cada
elemento
o
componente
probabilístico do GRASP vem da seleção aleatória de
um dos melhores candidatos da lista, nem sempre o
topo da lista.
 fase de busca local aqui a vizinhança das
soluções iniciais construídas é explorada, pois essas
soluções não são garantidamente ótimos locais
quase sempre é benéfico aplicar uma busca local para
tentar melhorar cada solução construída um
algoritmo_de_busca_local consiste em sucessivas
trocas da solução corrente por uma melhor localizada
na vizinhança, até que não existam soluções
melhores.
Após a realização de todas as iterações GRASP,
a melhor solução encontrada retorna como resultado
final. O sucesso de uma metaheurística GRASP
depende da qualidade das soluções iniciais entregues
pela fase construtiva e de um eficiente algoritmo de
busca local.
Nas subseções seguintes, serão apresentadas as
fases construtiva e de busca local desenvolvidas para
resolver o OCARP de modo eficaz e eficiente.
3.1 Fase Construtiva
A construção das soluções iniciais baseia-se no
trabalho de Santos (Santos et al., 2009) que usa uma
heurística_de_varredura_de_caminhos (path-scanning)
com regra da elipse para resolver o problema de
roteamento_em_arcos capacitado (CARP), que é um
caso particular do OCARP, no qual todas as rotas
devem iniciar e terminar em um nó depósito. Essa
heurística foi modificada para incluir uma lista
restrita de arestas candidatas (RCL), responsável por
conter um conjunto de elementos diversificados e de

2336

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

boa qualidade para entrar na solução em construção.
O procedimento geral da fase construtiva pode ser
resumido como (a) cada rota é construída
adicionando-se uma aresta requerida por vez (b)
seleciona-se aleatoriamente uma aresta de uma lista
restrita de candidatas (RCL) (c) a lista RCL é
preenchida com as melhores arestas, de acordo
com a avaliação da função gulosa (e) definida por
  

min (  , ,  , )
 

 

+ 1   (1    )

em que o custo e demanda de cada aresta são
ponderados de acordo com o parâmetro   0,1,
evi,vj é uma aresta candidata, vl é o último nó
visitado pela rota, SP representa o caminho de custo
mínimo entre dois nós, SPmax é o custo do maior
caminho mínimo e dmax é a maior demanda entre as
arestas. A formação da lista RCL é realizada através
do seguinte procedimento
(i) percorre-se o conjunto de arestas requeridas
(varredura), pois são candidatas todas as arestas
requeridas que ainda não foram servidas por
nenhuma rota e cuja demanda não viole a capacidade
do veículo, obtendo-se os valores mínimo e máximo
da função gulosa min e max 
(ii) entram na RCL somente as arestas que atenderem
ao critério
            
em que  é um parâmetro reativo que controla o quão
restritiva é a lista RCL, ou seja, entram as arestas que
não sejam   mais custosas que a aresta mais
econômica. Os valores de  vão sendo
automaticamente escolhidos a cada iteração dentro da
faixa 0,0.5.1.,.1.5,2.0  em função da qualidade das
soluções encontradas. Quanto menor , mais
restritiva a lista.
A função do parâmetro  é ajudar a contornar um
dos maiores problemas da fase construtiva que é a
obtenção de soluções factíveis. Esse parâmetro é
auto-ajustado por um metaparâmetro g  0.5, 1), a
cada iteração k, em função da factibilidade da
solução anterior. Sendo k e gk os valores na iteração
k, o mecanismo de sintonização usa o seguinte
critério empírico de ajuste
(i) valores iniciais 1  g0.5
(ii) factível em k (k+1)(2k+1)3 e g(k+1)(9gk+1)10
(iii) infactível em k (k+1)gkk e g(k+1)gk.

Desse modo, a função gulosa de seleção das
arestas candidatas vai sendo calibrada a cada iteração
para facilitar a construção de soluções factíveis.
Quando soluções infactíveis são obtidas em
sequência, um rápido ajuste exponencial é realizado
por sucessivas multiplicações pelo parâmetro g.
Quando uma solução factível é encontrada,  é
reajustado para favorecer o fator custo e g é mantido
perto da unidade propiciando futuros ajustes
crescentemente mais suaves.
Outro aspecto da fase construtiva é o uso da
regra da elipse para construir melhores soluções. A
regra da elipse foi utilizada em (Santos et al., 2009)

ISBN 978-85-8001-069-5

naquela que é considerada a melhor heurística pathscanning para o CARP. Quando um veículo está
próximo da sua capacidade máxima, essa regra
impõe que o veículo permaneça próximo ao depósito
de modo a reduzir o custo do caminho de retorno.
Mesmo para o OCARP, que não possui depósito, a
regra da elipse mostra-se muito eficaz na redução dos
tamanhos das rotas em favor do custo total da
solução. Detalhes de como a regra da elipse é
aplicada na heurística GRASP usada neste trabalho
podem ser encontrados em (Usberti, 2012).
3.2 Fase de Busca Local
Após a geração das soluções iniciais pela fase
construtiva, estratégias de busca local são aplicadas
visando melhorar a qualidade das soluções. Os
procedimentos usados neste trabalho estão descritos
resumidamente a seguir.
3.2.1 Movimentos na Vizinhança
O objetivo é explorar as soluções vizinhas
realizando-se um conjunto de movimentos que
alteram a ordem ou orientação das arestas requeridas
pertencentes a cada solução. Quatro tipos de
movimentos foram considerados, todos aplicáveis
internamente s rotas ou entre rotas distintas
 inserção simples + reversão uma aresta
requerida é removida de sua posição e
colocada em outra, com sentido revertido ou
não
 inserção dupla + reversão duas arestas
requeridas adjacentes são removidas de suas
posições e colocadas em outra, ambas com
sentido revertido ou não
 permutação + reversão duas arestas
requeridas trocam suas posições entre si,
com reversão ou não dos sentidos
 inserção em bloco um bloco de arestas
requeridas adjacentes é removido de sua
posição e colocado em outra.
Os três primeiros movimentos são usados na busca
local, enquanto que a inserção em bloco é usado
exclusivamente na etapa de reconexão_por_caminhos.
Para obter uma solução ótima local, a filosofia de
melhor melhoria possível foi adotada, em que o
movimento selecionado em cada iteração da busca
local é aquele que proporciona a maior redução no
custo, preservando as restrições de capacidade dos
veículos.
3.2.2 Busca no Espaço Infactível
Uma estratégia de diversificação foi incorporada
na busca local permitindo uma relaxação na restrição
de capacidade dos veículos. Sabendo que uma
solução ótima em problemas de programação_linear
situa-se na fronteira do espaço convexo factível, ou
seja, a solução ótima é adjacente ao espaço infactível,

2337

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

então é atraente estender a busca local, de forma
controlada, a esse espaço. Este trabalho usa uma
técnica de busca local infactível que recebe como
entrada uma solução factível e retorna,
provavelmente, uma solução de custo menor, porém
infactível em termos de capacidade de veículos. O
procedimento é semelhante  busca local normal,
exceto por duas diferenças (i) em cada iteração, a
busca ignora se um movimento na vizinhança viola a
capacidade de um veículo (ii) a busca é interrompida
após um certo número de movimentos infactíveis,
evitando que a solução se aprofunde muito no espaço
infactível. Tais soluções infactíveis são fornecidas,
como soluções iniciais,  etapa de reconexão por
caminhos que permite explorar caminhos cruzando
as fronteiras infactívelfactível do espaço de
soluções.
3.2.3 Filtros Estatísticos
Em geral, as boas soluções obtidas na busca
local originam-se em boas soluções iniciais geradas
na fase construtiva. Por outro lado, a busca local é
normalmente a fase que mais demanda esforço
computacional em uma heurística GRASP. Portanto,
não faz sentido explorar a vizinhança de todas as
soluções iniciais, incluindo aquelas de baixa
qualidade. Em vez disso, essas soluções de menor
qualidade devem ser descartadas e, com o tempo
computacional poupado, outras regiões mais
promissoras do espaço de busca podem ser
exploradas. A estratégia para selecionar as soluções
em que se aplicará busca local é chamada filtro
estatístico (Feo, Resende and Smith, 1994). No filtro
estatístico usado neste trabalho, que é uma melhoria
do procedimento proposto em (Prais and Ribeiro,
2000), armazenam-se, durante 100 iterações, o valor
médio  e o desvio padrão  da razão entre os custos
da solução inicial cini e custo da solução após a fase
de busca local cls. Após essas 100 iterações, decidese que uma solução inicial passará por busca local
somente se a seguinte condição for respeitada
cini  (+2).cbest
em que cbest é o custo da melhor solução inicial
encontrada. Esse critério se baseia na ideia que se o
custo da solução inicial construída possui um valor
muito mais alto que o custo da melhor solução já
encontrada, é improvável que a busca local possa
produzir uma solução melhor que a corrente melhor.
Tal filtro possui um intervalo de confiança de mais
de 95 de probabilidade que uma solução rejeitada
não poderia reduzir seu custo além de cbest,
assumindo que cinicls é uma variável aleatória com
distribuição normal.
4 Reconexão Evolutiva por Caminhos
A estratégia de reconexão_por_caminhos (pathrelinking), introduzida em (Glover,1996), consiste
em explorar trajetórias que conectem soluções de alta
qualidade (elite), previamente produzidas durante a

ISBN 978-85-8001-069-5

busca, na expectativa de descobrir soluções melhores
ainda. Essas soluções de elite frequentemente
compartilham uma parte significativa de seus
atributos, por exemplo, os nós e arestas de um grafo.
Caminhos entre um par de soluções (S1,S2), em que
S1 representa a solução-inicial e S2 a solução-guia,
atravessam, no espaço de busca, outras soluções que
compartilham os atributos contidos em S1 e S2,
combinando as propriedades de intensificação e
diversificação.
Tais caminhos podem ser construídos
aplicando-se sucessivos movimentos na vizinhança
da solução S1 que vão progressivamente introduzindo
atributos da solução-guia S2. Isso gera uma sequência
de soluções intermediárias provavelmente melhores
que S1 e S2, geralmente não ótimos locais mas
possíveis de melhorias por busca local. A ideia por
trás da recombinação por caminhos é explorar
regiões do espaço de soluções circundando a
trajetória que liga um par de soluções, inicial e guia,
uma delas pertencente ao conjunto elite, sendo que
essa trajetória não precisa estar restrita ao espaço
factível de soluções.
A metaheurística GRASP, embora possua as
qualidades de simplicidade e rapidez computacional,
mostra-se frequentemente menos eficaz que outras
metaheurísticas, por exemplo, busca_tabu, em razão
de sua característica de iterações independentes (sem
memória). Diante disso, a integração de GRASP com
a estratégia de reconexão_por_caminhos é altamente
desejável para melhorar o desempenho da
metaheurística como um todo, conforme sugerido em
(Resende e Ribeiro, 2005).
Um ganho adicional no desempenho final pode
ser obtido incluindo-se na metaheurística a estratégia
de
recombinação
evolutiva
de
caminhos
(evolutionary path-relinking), na qual pares do
conjunto de soluções de elite são continuamente
recombinadas ao mesmo tempo que soluções de alta
qualidade vão entrando no conjunto de elite. Este
trabalho usa o conceito de recombinação evolutiva de
caminhos como uma estratégia de intensificação,
seguindo algumas ideias apresentadas em (Resende,
Martí, Gallego and Duarte, 2010). Os principais
tópicos de como a reconexão_por_caminhos é
implementada neste trabalho são descritos a seguir.
4.1 Distância entre Soluções
A distância ij (ij  0, ER) entre duas soluções
Si e Sj é medida pela posição relativa de cada aresta
requerida. A posição relativa de uma aresta requerida
é definida pelo número de arestas requeridas
predecessoras. A distância ij é incrementada de uma
unidade para toda aresta requerida cujas
predecessoras diferem nas soluções Si e Sj.
4.2 Reconexão de Soluções
O procedimento operacional para reconectar
soluções baseia-se no movimento de vizinhança

2338

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

inserção em bloco, mencionado anteriormente.
Através de sucessivas inserções em bloco, na qual
um grupo de arestas requeridas adjacentes é
deslocado ao mesmo tempo, é possível ir
decrescendo monotonicamente a distância entre a
solução-inicial e a solução-guia. Um exemplo
simples do processo de reconexão é mostrada na
Figura 3, em que cada letra maiúscula representa
uma aresta requerida na solução, denotada em itálico
se estiver em posição incorreta e em negrito se tiver
sido deslocada para a posição correta. Um grupo de
arestas movidas por um inserção em bloco está
circunscrita por um retângulo.

rota 1
rota 2
rota 1
rota 2
rota 1
rota 2
rota 1
rota 2
rota 1
rota 2

Solução-inicial

Solução-guia

Distância

G-K-L-E-F-H
A-B-C-D-I-J
G-H-K-L-E-F
A-B-C-D-I-J
G-H-E-F
A-B-C-D-I-J-K-L
G-H-I-J-K-L-E-F
A-B-C-D
G-H-I-J-K-L
A-B-C-D-E-F

A-B-C-D-E-F
G-H-I-J-K-L
A-B-C-D-E-F
G-H-I-J-K-L
A-B-C-D-E-F
G-H-I-J-K-L
A-B-C-D-E-F
G-H-I-J-K-L
A-B-C-D-E-F
G-H-I-J-K-L

4
3
2
1
0

Figura 3  Procedimento para reconectar duas soluções.

Não é tarefa fácil assegurar a factibilidade das
soluções intermediárias obtidas através das inserções
em bloco, já que isso corresponde a um problema de
empacotamento no qual os blocos devem ser
distribuídos pelos veículos considerando suas
restrições de capacidade. Para preservar a
factibilidade, a decisão sobre o próximo bloco a
movimentar é feita deslocando-se o bloco com menor
demanda do veículo mais cheio.
Ao explorar essas soluções intermediárias, a
busca local é repetidamente aplicada sempre que a
solução corrente estiver quatro unidades mais
próxima da solução-guia. A distância de quatro
unidades não é arbitrária, mas recomendada pela
experiência descrita em (Ribeiro and Resende, 2011),
como o mínimo número de diferentes componentes
entre um par de soluções para descobrir um mínimo
local melhor.
4.3 Conjunto de Soluções de Elite
As melhores soluções encontradas pela fase de
busca local são armazenadas em um conjunto de
soluções de elite para posterior exploração
(intensificação). Neste trabalho, uma solução será
considerada como membro do conjunto de elite se
tiver um custo entre os 100 mais baixos e um grau de
diversidade entre soluções maior que uma distância
mínima min  40 do número de arestas requeridas.
5 GRASP com Reconexão por Caminhos
A técnica de reconexão_por_caminhos foi
implementada como uma estratégia de intensificação

ISBN 978-85-8001-069-5

para a metaheurística GRASP, juntamente com o
conceito de reconexão evolutiva. Em toda iteração
GRASP, a solução gerada após a fase de busca local
é avaliada se deve entrar no conjunto de elite e, em
caso positivo, sofre reconexão com as cinco
melhores soluções de elite. Esse procedimento é
chamado reconexão iterativa.
A melhor solução obtida em cada caminho
intermediário é também avaliada se deve entrar no
conjunto de elite. A cada 100 iterações do GRASP,
uma reconexão evolutiva é executada, em que cada
solução de elite é reconectada com as cinco melhores
soluções do conjunto de elite. A razão dessa
estratégia é preencher inicialmente o conjunto elite
com soluções diversificadas e de alta qualidade
geradas pela reconexão iterativa. A qualidade do
conjunto elite é então melhorada através da aplicação
da reconexão evolutiva. A cada 100 iterações do
GRASP, o ciclo se repete até que 10000 iterações
sejam executadas ou enquanto o custo médio das
soluções de elite estiver diminuindo.
O caminho entre duas soluções é sempre
explorado em ambos os sentidos, ou seja, cada
solução é considerada tanto inicial quanto guia. Além
disso, para adicionar diversidade na reconexão, o
espaço de soluções não fica restrito ao espaço
factível, mas também se estende a regiões infactíveis
promissoras.
6 Resultados Computacionais
Esta
seção
apresenta
os
resultados
computacionais da aplicação da metaheurística
proposta neste trabalho para resolução do OCARP.
Por ser o OCARP um problema novo na literatura e
para se poder comparar desempenhos, usou-se, nos
testes computacionais, os conjuntos de dados
tradicionalmente usados na literatura para avaliar o
desempenho de metodologias de solução do CARP.
Para isso, considerou-se 81 instâncias dos conjuntospadrão 23 gdb (7-27 nós, 11-55 arestas) (Golden et
al.,1983), 34 val (24-50 nós, 34-97 arestas)
(Benavent et al.,1992), e 24 egl (77-140 nós, 98-190
arestas) (Li and Eglese,1996). Os algoritmos foram
implementados em linguagem C, compilados em gcc
e executados em processador Intel Core 2 Quad 3.0
GHz com 4 GB of RAM, usando Linux 64 bits como
sistema operacional.
Para se adequar  formulação do OCARP, as
instâncias do CARP precisam ser ligeiramente
modificadas, pois este último problema supõe a
existência de um nó-depósito e o OCARP não.
Assim, o nó-depósito é considerado como um nó
comum e os demais dados ficam inalterados, levando
a um novo conjunto de instâncias OCARP chamadas
ogdb, oval e oegl respectivamente. Ao contrário do
CARP, no qual o número M de veículos é indefinido,
o OCARP somente tem sentido se o número de
veículos é fixado com parâmetro. Por essa razão, os
testes computacionais no OCARP foram conduzidos
considerando três classes de parametrização MM*

2339

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

MM*+1 e MM*+2, em que M* representa o
número mínimo de veículos necessários para
encontrar uma solução factível.
Na Tabela 1 são mostrados os parâmetros da
metaheurística GRASP com reconexão_por_caminhos
usados nos testes computacionais.
Tabela 1. Parâmetros usados nos testes computacionais.
kend  10000 máximo de iterações GRASP
kfilter  100 no. de iter. para calibrar filtros
keps  100 no. de iter. entre RC evolutivas
0.0,0.5,1.0,1.5,2.0 valores possíveis para  na RCL
1.0,1.25,1.5,1.75,2.0 valores para  na regra da elipse
 1 valor inicial na regra seletiva de arestas
g  0.5 valor inicial para ajuste de 
ninf 4 no. máx. de passos na busca infactível
poolSize  100 tamanho do conjunto de elite
min  0.4ER menor distância entre soluções de elite

Os resultados dos testes computacionais
considerando-se 243 instâncias (81 instâncias
parametrizadas em M*, M*+1 e M*+2) são
apresentados naTabela 2 no Anexo. O significado do
conteúdo das colunas mostradas nas tabelas é dado
por M*-número mínimo de veículos para obter uma
solução factível LBo-limitante inferior (lower bound)
trivial, obtido somando-se os custos de todas as
arestas requeridas UB-solução obtida por GRASP
com reconexão_por_caminhos (upper bound) DLBodesvio médio da solução para o limitante inferior
() CPU-tempo de execução para obter UB Feasporcentagem do número de soluções factíveis
comparada com número total de soluções (quanto
menor, maior é a dificuldade da instância).
Analisando os resultados mostrados nas tabelas,
percebe-se que, do conjunto de 243 instâncias, 87
soluções são ótimas (ou seja, LBoUB), perfazendo
35,80 do total. Os desvios médios das soluções
comparadas com o limitante inferior (LBo) foram de
7,53 3,74 e 2,66 para número de veículos M*,
M*+1 e M*+2, respectivamente, evidenciando que
as soluções obtidas estão relativamente mais
próximas do valor ótimo  medida que maior
quantidade de veículos é permitida. A coluna Feas
apresenta as porcentagens do número de soluções
factíveis em relação ao número total de soluções para
cada instância e indica as instâncias mais difíceis de
resolver. Por exemplo, a instância oegl-s4-C, com
M* veículos (Tabela 2), é a que apresenta maior
dificuldade com Feas de apenas 0,59. Em termos de
esforço computacional, a coluna CPU mostra um
tempo médio de 8,47 minutos para se obter a melhor
solução, com menos de um quarto de instâncias com
tempo acima da média, evidenciando eficiência bem
satisfatória para problemas_de_otimização
combinatória como o abordado, em que o tempo
computacional, embora importante, não é um fator
crítico.
7 Conclusões
O problema do roteamento_de_leituristas de
energia, água, gás e outras utilidades pode ser

ISBN 978-85-8001-069-5

perfeitamente formulado como um problema de
roteamento_em_arcos capacitado e aberto (OCARP),
que é um problema de otimização combinatória NPdifícil pertencente  família de problemas de
roteamento_em_arcos. O OCARP pode ser modelado
como um problema de programação_linear_inteira,
com um número exponencial de variáveis e
restrições. O OCARP pode ser eficientemente
resolvido por uma metaheurística de alto
desempenho baseada no método GRASP, usando
técnica de varredura de caminhos na fase construtiva
e movimentos na vizinhança, busca no espaço
infactível e filtros estatísticos na fase de busca local.
Além disso, a metodologia GRASP é combinada
com uma técnica de reconexão_por_caminhos
evolutiva na busca por soluções de ainda melhor
qualidade. Testes computacionais, realizados usando
instâncias de referência definidas na literatura,
mostraram que as soluções ótimas foram encontradas
em 35,8 dos casos e que os desvios médios
comparados aos limitantes inferiores são bastante
satisfatórios
e
que
vão
se
reduzindo
significantemente  medida que se libera o número
de veículos disponíveis. Um próximo passo será
certamente aplicar a formulação OCARP ao
roteamento_de_leituristas usando dados específicos
deste problema, quais sejam, tempos de percurso
com e sem leitura. Outras aplicações em sistemas de
energia_elétrica podem ser investigadas, como
fiscalização de linhas, com as devidas adaptações.
Referências Bibliográficas
Benavent, E. Campos, V. Corberán, A. and Mota,
E. (1992), The capacitated arc routing problem
lower bounds, Networks 22, 669690.
Feo, T. A. and Resende, M. G. C. (1995), Greedy
randomized adaptive search procedures, Journal
of Global Optimization 6, 109133.
Feo, T. A. Resende, M. G. C. and Smith, S. H.
(1994), A greedy randomized adaptive search
procedure for maximum independent set,
Operations Research 42(5), 860878.
Glover, F. (1996). Tabu search and adaptive memory
programming - advances, applications and
challenges, Interfaces in computer science and
operations research, Kluwer, pp. 175.
Golden, B. L. DeArmon, J. S. and Baker, E. K.
(1983), Computational experiments with
algorithms for a class of routing problems,
Computers  Operations Research 10(1), 4759.
Li, L. Y. O. and Eglese, R. W. (1996), An interactive
algorithm for vehicle routing for winter-gritting,
Journal of the Operational Research Society 47,
217228.
Prais, M. and Ribeiro, C. C. (2000), Reactive
GRASP An application to a matrix
decomposition problem in TDMA traffic
assignment, INFORMS Journal on Computing
12, 164176.
Resende, M. G. C. and Ribeiro, C. C. (2005),
GRASP with path-relinking Recent advances
2340

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

and applications, Metaheuristics Progress as
Real Problem Solvers, Springer, pp. 2963.
Resende, M. G. C. Martí, R. Gallego, M. and
Duarte, A. (2010), GRASP and path relinking
for the max-min diversity problem, Computers
 Operations Research 37(3), 498  508.
Ribeiro, C. C. and Resende, M. G. C. (2011), Pathrelinking intensification methods for stochastic
local search algorithms, Journal of Heuristics.
Santos, L. Coutinho-Rodrigues, J. and Current, J. R.
(2009), An improved heuristic for the
capacitated arc routing problem, Computers 
Operations Research 36, 26322637.
Stern, H. I. and Dror, M. (1979), Routing electric
meter readers, Computers  Operations
Research 6, 209223.

Usberti, F. L., França, P. M. and França, A. L. M.
(2011), The open capacitated arc routing
problem, Computers  Operations Research
38(11), 1543  1555.
Usberti, F. L. (2012), Métodos Heurísticos e Exatos
para o Problema de Roteamento em Arcos
Capacitado e Aberto, tese de doutorado,
Faculdade de Engenharia Elétrica e de
Computação, Unicamp, fev. 2012.
Wunderlich, J., Collette, M., Levy, L. and Bodin, L.
(1992), Scheduling meter readers for Southern
California Gas Company, Interfaces 22, 2230.

Anexo Tabela 2. Resultados GRASP com RC para instâncias ogdb, oval e oegl.
M  M*

M  M*+1

M  M*+2

M*

LBo

UB

DLBo

CPU

Feas

UB

DLBo

CPU

Feas

UB

DLBo

CPU

Feas

ogdb1

5

252

252

0,00

0,00

100,00

252

0,00

0,00

100,00

252

0,00

0,00

100,00

ogdb2

6

291

291

0,00

0,00

100,00

291

0,00

0,00

100,00

291

0,00

0,00

100,00

ogdb3

5

233

233

0,00

0,00

100,00

233

0,00

0,00

100,00

233

0,00

0,00

100,00

ogdb4

4

238

238

0,00

0,01

100,00

238

0,00

0,00

100,00

238

0,00

0,00

100,00

ogdb5

6

316

316

0,00

0,01

100,00

316

0,00

0,00

100,00

316

0,00

0,00

100,00

ogdb6

5

260

260

0,00

0,00

100,00

260

0,00

0,00

100,00

260

0,00

0,00

100,00

ogdb7

5

262

262

0,00

0,00

100,00

262

0,00

0,00

100,00

262

0,00

0,00

100,00

ogdb8

10

210

210

0,00

0,30

100,00

210

0,00

0,03

100,00

210

0,00

0,00

100,00

ogdb9

10

219

219

0,00

1,24

96,67

219

0,00

0,09

100,00

219

0,00

0,02

100,00

ogdb10

4

252

252

0,00

0,02

100,00

252

0,00

0,01

100,00

252

0,00

0,01

100,00

ogdb11

5

356

362

1,69

40,93

100,00

360

1,12

62,44

100,00

358

0,56

65,37

100,00

ogdb12

7

336

336

0,00

0,00

100,00

336

0,00

0,00

100,00

336

0,00

0,00

100,00

ogdb13

6

509

509

0,00

0,14

17,82

509

0,00

0,00

100,00

509

0,00

0,00

100,00

ogdb14

5

96

96

0,00

0,00

100,00

96

0,00

0,00

100,00

96

0,00

0,00

100,00

ogdb15

4

56

56

0,00

0,00

100,00

56

0,00

0,00

100,00

56

0,00

0,00

100,00

ogdb16

5

119

119

0,00

0,01

100,00

119

0,00

0,00

100,00

119

0,00

0,00

100,00

ogdb17

5

84

84

0,00

0,01

100,00

84

0,00

0,00

100,00

84

0,00

0,00

100,00

ogdb18

5

158

158

0,00

0,00

100,00

158

0,00

0,01

100,00

158

0,00

0,00

100,00

ogdb19

3

45

45

0,00

0,00

100,00

45

0,00

0,00

100,00

45

0,00

0,00

100,00

ogdb20

4

105

105

0,00

0,02

77,78

105

0,00

0,00

100,00

105

0,00

0,00

100,00

ogdb21

6

149

149

0,00

0,02

100,00

149

0,00

0,00

100,00

149

0,00

0,00

100,00

ogdb22

8

191

191

0,00

0,05

100,00

191

0,00

0,00

100,00

191

0,00

0,00

100,00

ogdb23

10

223

223

0,00

0,01

75,00

223

0,00

0,00

100,00

223

0,00

0,01

100,00

oval1A

2

146

154

5,48

49,48

100,00

151

3,42

43,11

100,00

149

2,05

41,04

100,00

oval1B

3

146

151

3,42

16,21

69,97

149

2,05

35,61

100,00

147

0,68

35,13

100,00

oval1C

8

146

159

8,90

20,19

3,55

146

0,00

0,01

100,00

146

0,00

0,01

100,00

oval2A

2

185

195

5,41

27,20

100,00

192

3,78

26,65

100,00

189

2,16

22,34

100,00

oval2B

3

185

192

3,78

17,31

100,00

189

2,16

19,02

100,00

186

0,54

31,42

100,00

oval2C

8

185

185

0,00

0,49

52,94

185

0,00

0,01

100,00

185

0,00

0,01

100,00

oval3A

2

65

71

9,23

23,07

100,00

69

6,15

24,84

100,00

67

3,08

33,79

100,00

oval3B

3

65

69

6,15

16,14

100,00

67

3,08

27,47

100,00

66

1,54

23,92

100,00

oval3C

7

65

66

1,54

9,85

73,17

65

0,00

0,01

100,00

65

0,00

0,02

100,00

oval4A

3

343

358

4,37

363,86

100,00

354

3,21

435,68

100,00

350

2,04

680,68

100,00

oval4B

4

343

354

3,21

344,86

100,00

350

2,04

489,60

100,00

347

1,17

734,55

100,00

oval4C

5

343

350

2,04

165,61

100,00

347

1,17

517,90

100,00

345

0,58

641,61

100,00

oval4D

9

343

343

0,00

83,54

100,00

343

0,00

8,56

100,00

343

0,00

2,00

100,00

oval5A

3

367

383

4,36

284,83

100,00

378

3,00

386,42

100,00

374

1,91

447,48

100,00

oval5B

4

367

378

3,00

223,11

100,00

374

1,91

382,62

100,00

371

1,09

479,20

100,00

oval5C

5

367

374

1,91

142,02

100,00

371

1,09

335,60

100,00

368

0,27

528,59

100,00

oval5D

9

367

367

0,00

2,35

100,00

367

0,00

2,77

100,00

367

0,00

0,66

100,00

oval6A

3

190

195

2,63

105,99

100,00

193

1,58

217,72

100,00

192

1,05

193,11

100,00

oval6B

4

190

194

2,11

65,63

100,00

192

1,05

147,72

100,00

191

0,53

188,99

100,00

oval6C

10

190

190

0,00

0,39

100,00

190

0,00

0,12

100,00

190

0,00

0,02

100,00

oval7A

3

249

263

5,62

284,33

100,00

259

4,02

459,07

100,00

256

2,81

553,60

100,00

oval7B

4

249

259

4,02

258,32

100,00

256

2,81

398,66

100,00

253

1,61

479,44

100,00

oval7C

9

249

250

0,40

49,31

99,92

249

0,00

8,43

100,00

249

0,00

1,11

100,00

oval8A

3

347

364

4,90

223,38

100,00

359

3,46

305,47

100,00

354

2,02

330,93

100,00

oval8B

4

347

359

3,46

163,73

100,00

354

2,02

226,39

100,00

351

1,15

377,57

100,00

oval8C

9

347

347

0,00

26,29

97,29

347

0,00

0,26

100,00

347

0,00

0,14

100,00

oval9A

3

278

298

7,19

1080,65

100,00

294

5,76

1194,49

100,00

292

5,04

1227,03

100,00

oval9B

4

278

294

5,76

802,44

100,00

292

5,04

1184,15

100,00

290

4,32

1339,11

100,00

oval9C

5

278

292

5,04

644,09

100,00

290

4,32

1155,24

100,00

288

3,60

1360,46

100,00

oval9D

10

278

283

1,80

409,27

100,00

281

1,08

1126,40

100,00

280

0,72

1308,58

100,00

oval10A

3

376

402

6,91

1052,22

100,00

396

5,32

1267,92

100,00

391

3,99

1586,57

100,00

oval10B

4

376

396

5,32

1176,71

100,00

391

3,99

1331,65

100,00

388

3,19

1798,88

100,00

oval10C

5

376

391

3,99

888,24

100,00

388

3,19

1421,52

100,00

385

2,39

1749,59

100,00

oval10D

10

376

379

0,80

400,95

100,00

378

0,53

1059,55

100,00

377

0,27

1430,68

100,00

oegl-e1-A

5

1468

1775

20,91

76,12

99,95

1708

16,35

217,04

100,00

1659

13,01

287,82

100,00

oegl-e1-B

7

1468

1749

19,14

44,31

99,80

1639

11,65

149,34

100,00

1589

8,24

272,82

100,00

oegl-e1-C

10

1468

1652

12,53

44,41

99,55

1576

7,36

57,39

100,00

1542

5,04

91,36

100,00

oegl-e2-A

7

1879

2177

15,86

262,75

100,00

2072

10,27

441,48

100,00

2043

8,73

760,54

100,00

oegl-e2-B

10

1879

2080

10,70

97,65

99,93

1997

6,28

233,64

100,00

1971

4,90

505,74

100,00

oegl-e2-C

14

1879

2084

10,91

68,20

76,61

1997

6,28

94,88

99,75

1964

4,52

148,59

100,00

oegl-e3-A

8

2188

2526

15,45

185,72

98,16

2410

10,15

430,75

100,00

2372

8,41

1256,29

100,00

oegl-e3-B

12

2188

2411

10,19

157,45

98,83

2359

7,82

314,28

100,00

2321

6,08

647,77

100,00

oegl-e3-C

17

2188

2364

8,04

135,03

78,64

2308

5,48

142,48

99,67

2270

3,75

298,89

100,00

oegl-e4-A

9

2453

2693

9,78

234,87

99,70

2582

5,26

960,25

100,00

2556

4,20

2358,99

100,00

oegl-e4-B

14

2453

2786

13,58

296,66

87,58

2567

4,65

276,93

100,00

2517

2,61

595,38

100,00

oegl-e4-C

19

2453

3383

37,91

135,64

1,03

2515

2,53

155,93

80,21

2497

1,79

194,91

98,58

oegl-s1-A

7

1394

1799

29,05

132,72

100,00

1683

20,73

475,12

100,00

1604

15,06

710,46

100,00

oegl-s1-B

10

1394

1745

25,18

97,67

100,00

1659

19,01

323,03

100,00

1579

13,27

466,02

100,00

oegl-s1-C

14

1394

1876

34,58

102,41

85,99

1633

17,14

94,15

100,00

1512

8,46

147,65

100,00

oegl-s2-A

14

3174

3697

16,48

504,32

100,00

3621

14,08

1998,68

100,00

3561

12,19

4928,34

100,00

oegl-s2-B

20

3174

4309

35,76

806,30

7,62

3498

10,21

737,66

99,90

3427

7,97

1080,76

100,00

oegl-s2-C

27

3174

3928

23,76

1051,34

18,29

3414

7,56

537,12

98,75

3342

5,29

526,80

100,00

oegl-s3-A

15

3379

3828

13,29

1785,78

100,00

3764

11,39

5247,81

100,00

3734

10,51

6809,36

100,00

oegl-s3-B

22

3379

3680

8,91

1039,18

97,90

3588

6,19

853,82

100,00

3564

5,47

2444,62

100,00

oegl-s3-C

29

3379

3814

12,87

1606,15

55,96

3625

7,28

560,43

99,80

3495

3,43

807,41

100,00

oegl-s4-A

19

4186

4500

7,50

3899,02

100,00

4421

5,61

4382,59

100,00

4405

5,23

12448,65

100,00

oegl-s4-B

27

4186

4469

6,76

2040,83

92,27

4360

4,16

2834,19

100,00

4328

3,39

2662,37

100,00

oegl-s4-C

35

4186

7789

86,07

249,51

0,59

4502

7,55

2243,15

66,66

4320

3,20

2707,30

98,80

ISBN 978-85-8001-069-5

2341