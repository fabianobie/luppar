Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

CONTROLE GENÉTICO-NEURAL APLICADO A UM MANIPULADOR ROBÓTICO
THYAGO VASCONCELOS1, ISAAC SOARES2, JOSÉ B. DE M. FILHO3, CARLOS A. N. SOBRINHO1, BRUNO J.
CAVALCANTI1, JOBSON F. DA SILVA3
Instituto Federal de Educação, Ciência e Tecnologia da Paraíba  Campus Princesa Isabel
Rua São Roque, 108, Centro, Princesa Isabel  PB, CEP 58755-000
E-mails thyagolvasconcelos@gmail.com, carlosalberto.ifpb@gmail.com,
brjcweb@yahoo.com.br
1

2

Laboratório de Máquinas e Acionamentos Elétricos, Centro de Tecnologia, UFPB
Campus Universitário I, João Pessoa, CEP 58051-900
E-mails freitas.isaac@gmail.com

Instituto Federal de Educação, Ciência e Tecnologia da Paraíba  Campus João Pessoa
Av. Primeiro de Maio, 720, Jaguaribe, João Pessoa  PB, CEP 58015-430
E-mails jose.menezes@ifpb.edu.br, jobsonfsilva@gmail.com

3

Abstract The present work deals with the position control of a robotic manipulator by applying techniques of neural networks
and genetic algorithms. The neural network emulates a P-D2 controller and has its architecture (number of neurons in the hidden
layer) determined by a genetic algorithm. The evaluation of the control system is based on responses of the system when it imposed the step type signals and circular type signals as references.
Keywords Neural networks, genetic algorithms, position control, robotic manipulator.
Resumo O presente trabalho trata do controle de posicionamento de um manipulador_robótico por meio da aplicação de técnicas de redes_neurais e algoritmos_genéticos. A rede_neural emula um controlador P-D2 e tem sua arquitetura (número de neurônios na camada oculta) determinada por um algoritmo_genético. A avalição do sistema_de_controle é feita com base nas respostas
do sistema quando a este são impostos sinais do tipo degrau e sinais do tipo circular como referências.
Palavras-chave .

1

Introdução

O meio industrial vivenciou grandes avanços nas
últimas décadas, gerando assim alterações nas estruturas de organização, tornando a redução de custos
não só uma necessidade, mas também uma exigência.
Neste contexto, destacam-se a automação programável, relativa  fabricação em série de pequenos e médios lotes de produtos, e automação flexível, referida
 fabricação de lotes variáveis de produtos diversos
(Romano, 2002).
Os robôs_industriais desempenham um papel de
destaque nos processos de automação programável
ou flexível devido a sua capacidade de se adaptar a
situações diversas e de serem capazes de realizar
inúmeros movimentos programados. Nas décadas de
50 e 60 os robôs_industriais foram introduzidos com
a finalidade de substituir o homem na execução de
tarefas repetitivas eou perigosas, visando uma melhoria na qualidade, aumento da produtividade e redução dos custos de produção.
A robótica continua se desenvolvendo de maneira acelerada, sendo os robôs aplicados em tarefas
como o transporte e manejo de materiais (Endo et al.,
2008), montagem e manufatura (Fei et al., 2010),
soldagem (Chen et al., 2008), pintura (Gazeau et al.,

ISBN 978-85-8001-069-5

2011). Atualmente também existem estudos com
robôs capazes de imitar movimentos humanos (Komagome et al., 2007) e com robôs para aplicações
domésticas (Wang et al., 2010).
Como meio de assegurar que a aplicação de robôs cause de fato uma melhora no processo produtivo, é necessária a aplicação de uma estratégia de
controle adequada. Diversas técnicas de controle de
sistemas_dinâmicos vêm sendo estudadas, como controle_robusto, controle_adaptativo e controle_inteligente.
O controle_inteligente consiste basicamente de
três abordagens (Paraskevopoulos, 1995) sistemas
especialistas baseados em conhecimento, controle
por lógica_fuzzy e controle por redes_neurais.
Denomina-se Rede Neural Artificial (RNA) um
processador paralelamente distribuído constituído de
unidades de processamento simples, que têm a propensão natural para armazenar conhecimento experimental e torná-lo disponível para uso (Haykin,
2001). Na literatura são encontrados inúmeros trabalhos com aplicação de RNAs na robótica (Zhao-Hui
et al., 2007 Zhao e Cheah, 2009).
Também existem sistemas_de_controle que combinam computação_evolutiva e redes_neurais. Entre
outros métodos de computação_evolutiva, pode-se
citar o algoritmo_genético. De acordo com Campos e
Saito (2004), os algoritmos_genéticos são métodos de

4090

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

busca inspirados nos mecanismos de seleção natural
(Teoria da Evolução) e da genética. Estes algoritmos
combinam um mecanismo de valorização dos indivíduos mais aptos ao objetivo em questão (elitismo),
com uma estrutura para combinar e reproduzir
aleatoriamente esses indivíduos, criando uma nova
população. Assim, a cada geração, um conjunto de
novos indivíduos é criado utilizando-se informações
contidas na geração passada. A cada nova iteração é
gerada uma população que apresenta novas e melhores soluções para o problema em que foi aplicado o
algoritmo_genético, culminando assim em uma convergência (Fernandes, 2005).
Os algoritmos_genéticos podem ser utilizados
para otimizar a rede_neural, seja no treinamento
(ajuste de pesos), otimização da topologia da rede
(número de neurônios na camada oculta), geração
tanto da topologia como dos pesos das conexões.
Em Moriarty e Miikkulanen (1998) é apresentado um
algoritmo co-evolutivo para determinar os pesos e a
arquitetura da rede_neural. O método proposto na
pesquisa foi testado com sucesso em um problema de
controle robótico.
O objetivo do presente trabalho é apresentar e
realizar o controle_de_posição e acompanhamento de
trajetória de um manipulador_robótico com dois
graus de liberdade, valendo-se da aplicação de redes
neurais e algoritmos_genéticos.
A estrutura de controle utiliza Redes Neurais
Artificiais (RNA) com atualização de pesos sinápticos através do mecanismo de retropropagação e emula um controlador P-D2, que consiste de uma variável proporcional ao erro de posição em relação  uma
referência e outra proporcional a derivada segunda
do sinal de posição obtido em tempo_real. A determinação do número de neurônios na camada oculta da
rede_neural é feita por meio da aplicação de um algoritmo_genético.
2 Descrição do Sistema
Na Figura (1) é mostrado o manipulador_robótico construído para a realização da pesquisa. Como
pode ser observado, o robô é constituído de uma base
e de um braço, sendo estes responsáveis pelos movimentos de rotação e translação, respectivamente.

Durante a elaboração do projeto do manipulador
foram empregados materiais de baixo_custo, como
alumínio e aço 1020. A placa de aquisição_de_dados,
os componentes empregados na confecção dos circuitos condicionadores de sinal, os potenciômetros
(transdutores de posição), os motores, bem como os
inversores_de_frequência foram todos adquiridos no
mercado nacional e com recursos próprios.
Na extremidade do braço mecânico foi inserido
um complemento, cujo perfil é idêntico ao perfil do
braço mecânico. A ligação entre tais elementos se dá
por meio de uma articulação, sendo esta composta
por um eixo e dois mancais de rolamentos. Um mecanismo foi desenvolvido para que este complemento
permaneça sempre na posição horizontal, independentemente da posição do braço.
Tanto a base como o braço são acionados por
motores_de_indução trifásicos de 220V, 60 Hz de
0.33 Cv, comandados por inversores_de_frequência.
Ambos os motores são acoplados a eixos sem-fim,
que por sua vez transmitem movimento  base e ao
braço através de engrenagens. A velocidade de rotação e o sentido de giro do eixo dos motores são controlados por meio de sinais de controles neurais enviados aos inversores_de_frequência. O deslocamento
angular total do braço é de 100 e o da base é de
120 e para a proteção do sistema são utilizadas chaves fim de curso.
O controle_de_posição do sistema foi implementado em malha_fechada. Os controladores neurais
foram desenvolvidos no ambiente de programação
LabVIEW, residente em um microcomputador
equipado com uma interface de aquisição_de_dados
tipo NI-DAQ6008.
Como transdutores de posição foram utilizados
potenciômetros multivoltas (dez voltas) acoplados
aos eixos dos motores por engrenagens, que fornecem sinais de resposta proporcionais ao número de
voltas de seus cursores.
Os transdutores potenciométricos apresentam resistência elétrica de 10 k 10, são alimentados
com uma tensão fixa de 5 V e o terminal de saída
está conectado ao canal de entrada analógica da placa de aquisição_de_dados. Por meio de dados coletados em ensaios experimentais, foram obtidas a Equação (1) e a Equação (2), que relacionam os valores de
tensão enviados pelos potenciômetros s entradas
analógicas da placa de aquisição_de_dados (V) com
os valores de deslocamento angular do eixo dos motores ().
(1)
100  V  132
 base 
2 ,21

 braço 

80  V  126 ,4
1,83

(2)

A Figura (2) ilustra o diagrama esquemático do
sistema_de_controle aplicado, tanto para a base como
para o braço.
Figura 1. Manipulador robótico utilizado na pesquisa

ISBN 978-85-8001-069-5

4091

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

mo sinal de excitação. A comparação entre a resposta
simulada e a resposta experimental da base é mostrada na Figura (3), e a do braço do manipulador_robótico na Figura (4).
As Equações (3) e (4) mostram os modelos na
forma de função_de_transferência no modo discreto
do manipulador_robótico para a base e o braço, respectivamente. Ambas as equações serão utilizadas
nos processos de simulação do sistema.

Ybase
0.03018 z 2  0.06349 z  0.05471

U base z 3  1.321z 2  0.03939 z  0.2818
Figura 2. Diagrama esquemático do sistema_de_controle

Ybraço
U braço



0.01147 z 2  0.020891z  0.01141
z 4  2.697 z 3  2.426 z 2  0.729 z

(3)

(4)

3 Identificação do Sistema e Projeto do Controlador Neural
O sistema foi simulado em ambiente Matlab para a obtenção dos pesos sinápticos iniciais das redes
Neurais artificiais. Para tal, necessitou-se obter funções_de_transferência advindas da identificação experimental do sistema.
Na identificação_de_sistemas, conhecida também
como modelagem empírica são usados dados coletados diretamente dos sistemas (Aguirre, 2000). Utilizando-se técnicas de identificação_de_sistemas, não é
necessário o conhecimento dos parâmetros físicos do
sistema, porque existem várias formas e técnicas para
a obtenção de modelos matemáticos, entre elas, a
modelagem caixa branca, modelagem caixa preta e a
intermediária, denominada caixa_cinza.
Para o presente trabalho optou-se pela identificação do modelo caixa preta, em que não se tem nenhuma informação sobre o sistema. Apenas os dados
de entrada e de saída do sistema são usados durante a
identificação. Neste tipo de identificação, não existe
nenhuma relação óbvia entre a estrutura e seus parâmetros com aspectos físicos do sistema sendo identificado.

Figura 3. Curvas de resposta experimental e simulada do sistema 
Base

3.1 Identificação das Funções de Transferência Discretas do Manipulador Robótico
A identificação do sistema foi realizada a partir
de dados de entrada_e_saída da planta, coletados de
um ensaio em que foram aplicados sinais de excitação do tipo onda quadrada com amplitude e larguras
pré-determinadas. Para se obter as funções_de_transferência do sistema, utilizou-se o Toolbox de identificação do Matlab, aplicando-se o modelo BJ (Box
Jenkins Model). O processo de identificação foi realizado várias vezes, até a obtenção de um modelo que
apresentasse respostas com maior semelhança com
os dados experimentais.
O modelo escolhido foi validado através da
comparação entre a resposta do modelo e a resposta
experimental do sistema, ambos submetidos ao mes-

ISBN 978-85-8001-069-5

Figura 4. Curvas de resposta experimental e simulada do sistema 
Braço

3.2 Aplicação do Algoritmo Genético
A estrutura do algoritmo_genético utilizada nessa
pesquisa é apresentada na Figura (5). O processo de
busca pelo número de neurônios na camada oculta
realizado por um algoritmo_genético avalia um conjunto de indivíduos candidatos  solução (população)

4092

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

por meio do erro apresentado pela rede ao final de
um dado período de tempo.
Para esta pesquisa foi adotada a representação
binária para codificar cada indivíduo pertencente 
população, visto que esta modelagem pode representar de maneira fácil qualquer número inteiro, que
serão por sua vez utilizados como neurônios na camada oculta da RNA.
A população inicial é gerada aleatoriamente, de
forma que possua dez indivíduos que podem assumir
valores entre 1 e 15. Tal escolha foi feita com base
na análise da resposta de algumas simulações e experimentos, em que a configurações com 16 ou mais
neurônios na camada oculta apresentaram sobressinal.
Em seguida, cada indivíduo da população inicial
é testado como número de neurônios na camada escondida da RNA e avaliado por meio da função de
fitness, apresentada na Equação (5), em que e é o
erro do sistema a cada instante i e n é o comprimento
do vetor de erro.
n
 e( i )
(5)
fitness  i  1
n

Em seguida,  população inicial são aplicados os
operadores genéticos de cruzamento e mutação que,
segundo Lacerda e Carvalho (1999), são os principais mecanismos dos AGs para explorar regiões
desconhecida em um espaço de busca em que se deseja encontrar uma solução para um problema.
Bayer e Lui Wang (1991) sugere o crossover de
1 ou 2 pontos com probabilidade entre 50 e 100.
Para a estrutura adotada, utilizou-se o crossover de 1
ponto e uma probabilidade de cruzamento de 90.
Uma vez realizado o cruzamento, é efetuada a mutação, alterando valores de determinados bits, mudando-os de 1 para 0, ou vice-versa. A mutação assegura
a diversidade da população, mas faz isto destruindo a
informação contida no cromossomo (Bittencout,
2007). Em Lacerda e Carvalho (1999) é sugerido que
a probabilidade de mutação esteja entre 0,1 e 5.
Para o sistema estudado, adotou-se uma probabilidade de mutação de 1.
A população resultante do cruzamento e mutação
também é avaliada, de tal modo que os dois piores
indivíduos são descartados. Sendo assim, a nova
população é composta pelos oito melhores indivíduos da população em que foram aplicados os operadores genéticos descritos anteriormente, juntamente
com os dois indivíduos mais aptos da geração inicial,
selecionados pelo critério do elitismo.
Por fim, como critério de parada foi adotado o
critério da convergência, ou seja, se os valores das
novas populações não sofrerem alteração ou variar
dentro de um intervalo de valores muito próximos,
por várias gerações consecutivas, o processo de busca é interrompido.
Foram realizadas simulações do algoritmo_genético em conjunto com a rede_neural para a seleção do
número de neurônios na camada oculta. Para o braço
realizou-se um conjunto de 5 simulações com uma
referência degrau de amplitude 80, 5 simulações
com uma onda quadrada com amplitude de 40 e um
período de 40 segundos e mais 5 simulações para um
sinal senoidal de referência, com amplitude de 40 e
período de 160 segundos. Na Tabela (1) é apresentado um resumo das simulações realizadas com o algoritmo_genético para o braço do manipulador_robótico.

Figura 5. Fluxograma do AG utilizado na pesquisa

Tabela 1. Resultados de Simulação do AG para o braço do manipulador_robótico

A avaliação acontece após a coleta de dados de
resposta de saída da rede quando submetida ao mesmo sinal de excitação em um mesmo intervalo de
tempo para todos os indivíduos testados. Adotou-se
uma padronização dos pesos iniciais da rede, os
quais iniciaram com valor zero para evitar uma seleção tendenciosa.
Na seleção, os indivíduos são classificados com
base no valor do fitness apresentado por cada um,
sendo que os indivíduos que apresentarem os menores valores de fitness ficarão no topo da classificação.
Os dois melhores indivíduos da população inicial
serão selecionados diretamente para a próxima geração (elitismo), para que não se perca a melhor solução encontrada até o momento.

ISBN 978-85-8001-069-5

Sinal de entrada

Melhor
indivíduo

N de vezes
como melhor

Fitness
médio

Degrau
Onda
Quadrada
Senoidal

15
15

118198
124196

2.04946
2.85374

15

118224

1.33264

De maneira análoga ao que foi realizado para o
braço, para a base do manipulador também foram
realizados conjuntos de simulações, sendo 5 para
referência degrau com amplitude de 100, 5 simulações para uma onda quadrada com amplitude de 50
e período de 40 segundos e, por fim, 5 simulações

4093

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

para uma referência cossenoidal, com amplitude de
50 e período de 160 segundos. Na Tabela (2) constam os resultados das simulações realizadas com o
AG para a base do manipulador.
Observa-se que o número 15 figurou mais vezes
entre os melhores em todas as simulações, apresentando valores de fitness menores se comparado com
outros indivíduos. Por conta disso, os controladores
neurais aplicados ao sistema apresentarão um número de 15 neurônios na camada oculta.
Tabela 2. Resultados de Simulação do AG para a base do manipulador_robótico

Sinal de entrada

Melhor
indivíduo

N de vezes
como melhor

Fitness
médio

Degrau
Onda
Quadrada
Cossenoidal

15
15

133164
105136

3.45534
4.48498

15

123200

1.91365

3.3 Projeto do Controlador Neural
Para o projeto dos controladores foram utilizadas
Redes Neurais de Multicamada (RNMC) do tipo
direto. Sua arquitetura consiste de três camadas uma
camada de entrada com quatro neurônios, uma camada oculta com quinze neurônios e uma camada de
saída com apenas um neurônio, a qual fornece o sinal
de controle para os inversores_de_frequência.
A rede_neural utilizada como controlador apresenta 15 neurônios na camada oculta, tanto para a
base como para o braço do manipulador_robótico. Os
neurônios da camada de entrada têm a função apenas
de ligação. Desse modo, as quatro ligações entre os
neurônios de entrada e os neurônios da camada intermediária ocorrem através de 60 pesos sinápticos,
obtendo-se, portanto, uma matriz com 15 linhas e 4
colunas denominada Win. Já as ligações entre os
neurônios da camada intermediária e os neurônios da
camada de saída ocorrem através de 15 pesos sinápticos, obtendo-se uma matriz de pesos contendo 15
linhas e 1 coluna, denominada Whide.
O controlador neural utilizado nesta pesquisa
emula um controlador do tipo P-D2, que utiliza o
ganho proporcional do sinal de erro e a derivada segunda do sinal retroalimentado.
Este tipo de controlador foi elaborado a partir
de uma junção do controlador PI-D, citado em Ogata
(2003) e o controlador PD2, citado em Buhler (1982)
e utilizado em Menezes Filho (2010). Desse modo, a
equação de um controlador do tipo P-D2 é descrita
como a seguir
(5)
2
u (t )  e (t ) 

instante de amostragem (T) é dada pela seguinte
Equação
2
d s( t )

dt 2



s ( k )  2 s( k  1 )  s ( k  2 )

(6)

T 2

Desse modo, para a utilização de um controlador
do tipo P-D2 as entradas da rede_neural são os sinais
de erro e(k) e os de saída do sistema s(k), s(k-1) e
s(k-2). Na Figura (6) encontra-se ilustrada a estrutura
da rede_neural que emula o controlador P-D2.

Figura 6. Controlador Neural aplicado ao manipulador_robótico

Dessa forma, a matriz In, matriz das entradas do
sistema, é constituída de e(k), de s(k), de s(k-1) e de
s(k-2).
Para cada neurônio da camada oculta são totalizados todos os produtos entre os pesos sinápticos
Win e as entradas In e o somatório desses produtos
resulta na função de ativação vista na Equação (7).

Vin  Win  I n

(7)

A função_de_transferência é aplicada em uma
função de ativação tipo tangente hiperbólica. A saída
de cada função_de_transferência é chamada de Sinal
Funcional do neurônio oculto, dado pela Equação
(8).
(8)
Y(i x 1 )  Tanh(vin(i1 ))
Para o neurônio da saída, define-se a função de
transferência, dada pela Equação (9), como a combinação_linear das saídas dos sinais funcionais dos neurônios ocultos Y ponderados com os pesos sinápticos
de Whide.
(9)
v  W T Y
out

hide

A função de ativação de cada neurônio da camada de saída, do tipo Tangente Hiperbólica, dada pela
Equação (10), fornece o sinal de saída out, que é o
sinal de controle enviado para o inversor ligado 
rede.
outTanh(vout )
(10)

d s (t )

dt 2

A discretização da derivada segunda em relação
ao instante de tempo t do sinal de posição s em um
ISBN 978-85-8001-069-5

Após a propagação direta, ocorre a retropropagação, para ajuste dos pesos sinápticos da rede. De
acordo com Beale (1990), o algoritmo de backpropagation pode ser visto como uma generalização do

4094

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

método Delta para redes_neurais de múltiplas camadas. A regra Delta modifica os pesos de acordo com
a variação entre a saída desejada e a observada no
treinamento (Másson, 1990), reduzindo o erro continuamente até um determinado valor aceitável.
A retropropagação é iniciada pelo gradiente local da camada de saída (out), que é definido como
o produto da derivada da função_de_transferência do
neurônio de saída e do erro de posição no instante k
(e(k)) com o Jacobiano J, e é dada pela Equação
(11)
(11)
d ( Tanh( v out )
 out  e( k )  J 
dk
O valor do Jacobiano foi considerado igual 
matriz identidade de ordem 1 (I1x1), com a finalidade de simplificar o esforço computacional por parte
da rede_neural. Como os resultados experimentais
foram satisfatórios, tal consideração foi mantida.
De posse da Equação (11), o processo de retropropagação segue conforme as equações abaixo

hide     out  Y

Figura 7. Curvas de resposta e de referência degrau variável da
base

(12)

em que  é o fator de convergência do algoritmo.

Whide  Whide  hide
in  whid( k 1 )  out 

( Tanh g( y ))
yk 1

(13)
(14)

onde k  1, 2, ..., 15.

in    in  I T n

(15)

Win  Win  in

(16)

Após o processo de retropropagação, o processamento para frente é aplicado  RNMC, fornecendo
os sinais de controle para o posicionamento do manipulador_robótico.
4 Resultados Experimentais
Para avaliar o desempenho do sistema_de_controle foram realizados ensaios, inicialmente, com referências do tipo degrau variável. Na Figura (7) encontram-se as curvas da referência e da resposta do sistema para a base e na Figura (8) para o braço.

ISBN 978-85-8001-069-5

Figura 8. Curvas de resposta e de referência degrau variável do
braço

A resposta do sistema a um sinal de excitação do
tipo degrau variável apresentou erros de regime_permanente de 0.1 para a base e de 0.12 para o braço (maiores valores observados). Para a base não
houve ultrapassagem percentual, fato também observado para o braço.
Com o objetivo de avaliar o controlador neural
em situações de acompanhamento de trajetória, foram impostas como referências sinais do tipo senoidal para o braço e cossenoidal para a base do manipulador_robótico. Nesse caso, o sistema não sofreu
interrupção no seu deslocamento ao atingir uma determinada posição, como no caso anterior, havendo,
ao contrário, um movimento permanente, de acordo
com a trajetória requerida.
Para a base foi imposta uma referência cossenoidal, com amplitude de 50 e um período T160s.
Para o braço do manipulador, o sinal de entrada aplicado foi do tipo senoidal, com amplitude de 40 e um
período T160s.
Nas Figuras (9) e (10) são apresentados os resultados para as condições descritas, em que são comparados os sinais de referência e a saída apresentada
pela planta, para o braço e para a base, respectivamente.
4095

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

Figura 9. Acompanhamento de trajetória senoidal  Braço

deste parâmetro, evitando assim um esforço desnecessário.
Para a situação do acionamento em controle de
posição, os resultados obtidos nas simulações e experimentalmente com o controlador neural apresentaram um erro de regime_permanente de 0.12 para o
braço e 0.1 para base, sendo estes os maiores valores observados. A base não apresentou ultrapassagem
percentual, assim como verificado para o braço.
Para o caso de acompanhamento de trajetórias de
referências do tipo senoidais e cossenoidais, o sistema apresentou um bom desempenho, apresentando
um erro máximo de 1.09 para a base e de 0.997
para o braço.
Observa-se que a rede_neural multicamadas,
emulando um controlador do tipo P-D2 e com aprendizado realizado através da técnica de retropropagação do erro, respondeu de maneira positiva ao que se
esperava de um manipulador_robótico acionado por
motores_de_indução trifásicos.
Referências Bibliográficas

Figura 10. Acompanhamento de trajetória cossenoidal  Base

Nos gráficos de respostas do sistema  imposição
de sinais de entrada do tipo função circular é possível
observar um bom desempenho nos acompanhamentos das saídas s trajetórias das referências. Para a
base, o erro máximo foi de 1,09, enquanto que para
o braço foi de 0,997.
5 Conclusões
No presente trabalho foi apresentada uma estratégia de acionamento de um manipulador_robótico
com dois_graus_de_liberdade, acionado por motores
de indução trifásicos. O controle foi exercido por
controlador implementado em um ambiente computacional que integra programas LabVIEW e
MATLAB instalados em um microcomputador do
tipo PC . Para a determinação das posições angulares
do braço e da base do manipulador_robótico foram
aplicados transdutores potenciométricos.
A estratégia de controle apresentada fez uso de
redes_neurais multicamadas para o controle individual da base e do braço do manipulador. A determinação da arquitetura da rede, mais especificamente do
número de neurônios na camada oculta, foi realizada
por meio da aplicação de algoritmos_genéticos. Vê-se
que tal prática contribui para uma melhor escolha
ISBN 978-85-8001-069-5

Aguirre, L. A.,(2000). Introdução  Identificação de
Sistemas Técnicas Lineares e não-Lineares
Aplicadas a Sistemas Reais. 2 Edição Belo Horizonte, MG UFMG.
Bayer, S.E. Lui Wang (1991). A genetic algorithm
programming environment Splicer. Third International Conference on Tools for Artificial Intelligence, pp.138-144.
Beale, R. Jackson, T., (1990). Neural Computing an
Introduction. Bristol, Adam Hilger.
Bittencout, F. R. (2007). Uso da análise dos fatores
de sensibilidade para encontrar a quantidade ideal mínima de neurônios na camada oculta de uma
RNA perceptron_multicamadas através de algoritmos_genéticos. Dissertação de mestrado, Belo
Horizonte, MG PUC-MG.
Buhler, Hansruedi(1982). Réglagesé Échantillonnés,
Lausanne e Suisse Presses Polytechniquesromandes, 1.Edição.
Campos, M. M., Saito, K., (2004). Sistemas Inteligentes em Controle e Automação de Processos.
Rio de Janeiro, RJ, Brasil, Editora Ciência Moderna.
Chen, H.B. Lin, T. Chen, S.B. Wang, J.F. Jia,
J.Q. Zhang, H. (2008), Adaptive control on
wire feeding in robot arc welding system. Robotics, Automation and Mechatronics, IEEE
Conference, 119-122.
Endo, M. Hirose, K. Hirata, Y. Kosuge, K.
Kanbayashi, T. Oomoto, M. Akune, K. Arai,
H. Shinoduka, H. Suzuki, K. (2008). A car
transportation system by multiple mobile robots
 iCART. IEEERSJ International Conference
on Intelligent Robots and Systems, pp. 27952801.
Fei, M. Haiou, Z. Guilan, W. (2010). Application
of Industrial robot in rapid prototype manufac-

4096

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

turing technology. 2nd International Conference
on Industrial Mechatronics and Automation, vol.
1, pp. 218-220.
Fernandes, A. M. R., (2005). Inteligência Artificial
noções gerais. 2 impressão, Visual Books.
Gazeau, J.-P. Eon, A. Zeghloul, S. Arsicault, M.
(2011). New Printing Robot for HighResolution Pictures on Three- Dimensional
Wide Surfaces. IEEE Transactions on Industrial
Electronics, vol. 58, issue2, pp. 384-391.
Haykin, S. (2001). Redes Neurais, Princípios e Prática, Tradução de Paulo Martins Engel. 2 Edição,
Editora Bookman, Porto Alegre-RS.
Komagome, D. Suzuki, M. Ono, T. Yamada, S.
(2007). RobotMeme  A proposal of HumanRobot Mimetic Mutual Adaptation. The 16th
IEEE International Symposium on Robot and
Human interactive Communication, pp. 427432.
Lacerda, E. G. M. Carvalho A. C. P. L. F (1999).
Anais do XIX Congresso Nacional da Sociedade
Brasileira de Computação. Rio de Janeiro, 1999.
Másson, E. Wang, Y.-J., (1990). Introduction to
Computation and Learning in Artificial Neural
Networks. European Journal of Operational Research, North-Holand, vol. 47, pp. 1 - 28.
Moriarty, D. E.  Miikkulainen, R. (1998). Hierarchical Evolution of Neural Networks, Proceedings of the 1998 Conference on Evolutionary
Computation, pp. 428-433.
Ogata, K., (2003). Engenharia de Controle Moderno. Tradução de Bernardo Severo, São Paulo,
Brasil, Editora LTC.
Paraskevopoulos, P. N. (1995). Digital Control Systems. First Edition, Prentice Hall, USA.
Romano, V. R., (2002). Robótica Industrial. 1 ed.
São Paulo Ed. Edgard Blcher LTDA.
Wang, D. Leung, J. Kurian, A. P. Kim, H.-J.
Yoon, H., (2010). A Deconvolutive Neural Network for Speech Classification With Applications to Home Service Robot. IEEE Transactions
on Instrumentation and Measurement, vol. 59,
issue 12, pp. 3237-3243.
Zhao, Y. Cheah, C. C. (2009). Neural Network Control of Multifingered Robot Hands Using Visual
Feedback. IEEE International Transactions on
Neural Networks, vol. 20, issue 5. 2, pp. 758767.
Zhao-Hui, J. and Ishida, T. (2007). Trajectory Tracking Control of Industrial Robot Manipulators
Using a Neural Network Controller. IEEE International Conference on Systems, Man and Cybernetics, pp. 2390-2395.

ISBN 978-85-8001-069-5

4097