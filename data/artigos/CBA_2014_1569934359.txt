Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

DESENVOLVIMENTO DE UM AMBIENTE COMPUTACIONAL PARA ENSINO DE
CONTROLE FUZZY
Jose Kleiton Ewerton da Costa Martins, Mario Sergio Freitas Ferreira Cavalcante,
Fabio Ricardo de Lima Souza, Fabio Meneghetti Ugulino de Araujo


Universidade Federal do Rio Grande do Norte
Departamento de Engenharia da Computacao e Automacao
Natal, Rio Grande do Norte, Brasil
jkkleiton@hotmail.com, marioffcavalcante@gmail.com, fabiordlsouza@gmail.com,
meneghet@dca.ufrn.br
Abstract This paper presents the design and implementation of a software that was developed for help any
student to learn Fuzzy logic control, it provides a simple, functional and very intuitive user interface and also has
a freeware license. This software was developed in C++ with the assist of Sockets to communicate the plant with
the appplication. Knows that, the simulations are frequent when studying Fuzzy logic controller, the software
already contains an environment in which use a didactic kit to the student demonstrate the efficiency of your
controller.
Keywords

Fuzzy Control, Engineering Education, Educational Software, Educational Kit.

Resumo Este artigo visa apresentar o desenvolvimento de uma plataforma que permite ao usuario projetar,
alterar e implementar controladores baseados em logica Fuzzy. A aplicacao foi implementada em C++ utilizando
comunicacao com uma planta_didatica via Socket, baseado no protocolo TCPIP. O ensino de controle_inteligente
esta presente em diversas universidades do pas, assim, surgiu a necessidade de criacao de um ambiente dinamico,
gratuito, no qual o aluno possa interagir diretamente com plantas reais atraves do mesmo software no qual ele
projeta o controlador Fuzzy.
Palavras-chave

.

Introducao

dos, nem controlados, adequadamente atraves de
tecnicas lineares.
O uso de controladores Fuzzy e comum em
muitos trabalhos da area de robotica. Um exemplo e o trabalho proposto por Sousa (2007), em
que um controlador desse tipo e implementado
para o controle_de_navegacao de um veculo automato. Outro exemplo de uso desse controlador e
o trabalho de Baturone et al. (2008), que expos
um sistema_microcontrolado usando a estrategia
baseada em logica Fuzzy, embarcado em um Digital Signal Processor (DSP ). Um controlador Fuzzy
PD foi utilizado, por exemplo, no trabalho de Piltan et al. (2011) para controlar o posicionamento
de um robo.
Controladores Fuzzy tem substituindo alguns
dos controladores tradicionais. Sua aplicabilidade
vai desde sistemas com baixa complexidade, como,
por exemplo, controle_de_nvel de tanques, proposto por Luna Filho et al. (2002), ate sistemas
mais complexos, como o controle de voo de aeronaves apresentado pelo trabalho de Larkin (1984),
que utiliza essa tecnica para criar um auto-piloto
para as aeronaves.
Trabalhos mais recentes comprovam que essa
tecnica ainda vem sendo alvo de estudos para aplicacoes industriais, como o trabalho de Lianzhong e
Zaheeruddin (2007) que usa o modelo do controlador Fuzzy para o controle_de_temperatura de uma
bomba de calor para o aquecimento de agua, assim como, o trabalho de Rocco e Morabito (2012)
que usa logica Fuzzy para o controle de vapor em

A interacao entre homem e maquina tornase cada dia mais frequente em diversas aplicacoes
do setor industrial. Atualmente, as maquinas estao sendo utilizadas massivamente para o controle
e supervisao de processos_industriais, dando, assim, mais precisao para a operacao e melhorando
o desempenho desses sistemas. O controle_de_processos pode ser feito de diferentes formas.
Controlar um processo significa atuar sobre
ele de tal forma que o sistema retorne uma sada
desejada ou mantenha-se estavel. Um sistema
convencional de controle_inteligente e composto
por uma planta ou processo, um controlador que
executa internamente um algoritmo de controle,
um sensor que capta as informacoes da variavel
que se deseja controlar e um sinal de entrada. Esse
algoritmo de controle pode ser dos mais diversos,
como, por exemplo, Redes Neurais Artificiais, controladores baseados em sistemas especialista, controle Fuzzy e controladores_hbridos, que unem caractersticas de varias tecnicas de Inteligencia Artificial.
Segundo Sandri (1999), o uso de controladores Fuzzy tornou-se muito comum ja que lida com
a imprecisao e incerteza da linguagem humana.
Caractersticas que nem sempre os controladores
classicos conseguem tratar. Alem disso, os controladores Fuzzy sao eficazes no controle e modelagem_de_sistemas reais, que em sua maioria, sao
sistemas_nao-lineares que podem nao ser modela-

1434

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

caldeiras industriais. Outro exemplo e o trabalho
Suetake et al. (2011) que utilizando esse tipo de
controlador embarcado, em um DSP, implementa
o controle_de_velocidade em um motor_de_inducao.
O controle Fuzzy e recomendado quando se
trabalha com sistemas_nao-lineares e quando nao
se sabe ou nao se consegue encontrar uma equacao
que modela o sistema. No entanto, em geral, a
implementacao desse tipo de controlador pode ser
muito complexa, por exigir a sintonia de muitos
parametros.
Dentro dessa perspectiva, esse trabalho tem
por objetivo implementar um software que interaja com o usuario apoiando-o no processo de
ensino-aprendizagem, durante as etapas de projeto, sintonia e testes de um sistema_de_controle
inteligente do tipo logica Fuzzy para o controle
de um sistema de tanques acoplados. Utilizando
como exemplo o sistema desenvolvido pela Quanser Quanser Level Control Two Tank Module,
Apkarian (1999).
Pelos motivos aqui apresentados, torna-se imprescindvel que os futuros profissionais da area
de controle saibam e tenham uma maior facilidade em projetar controladores Fuzzy para diversas plantas e processos. Acredita-se, tambem, que
com o auxlio de ferramentas computacionais, gratuitas e de facil utilizacao, e possvel proporcionar
um ambiente favoravel ao desenvolvimento das
competencias necessarias para que alunos tornemse bons profissionais da area de controle.
2
2.1

alta eou um pouco pode ser bastante complexo, tendo em vista que termos como estes nao
sao precisos.
Termos como esses muito alto eou um
pouco, sao conhecidos na teoria da logica Fuzzy
como variaveis lingusticas que expressam um conjunto Fuzzy como uma funcao de pertinencia, que
e uma funcao matematica na qual e possvel indicar o quanto um elemento pertence a um determinado conjunto.
2.2

Controlador Fuzzy

Um controlador desenvolvido utilizando a logica Fuzzy e conhecido como um controlador
Fuzzy. Segundo Shaw e Simoes (1999), um controlador Fuzzy e composto dos seguintes blocos
funcionais
 Interface de Fuzzificacao
 Base de Conhecimento
 Logica de Tomada de Decisoes
 Interface de Defuzzificacao.
A Interface de Fuzzificacao e responsavel por
converter valores de entrada em valores Fuzzy.
Para tanto, sao utilizadas as funcoes de pertinencia ja estabelecidas, adquirindo um grau de pertinencia para cada entrada, geralmente utilizando
funcoes de pertinencia do tipo triangular, trapezoidal ou gaussiana.
A Base de Conhecimento consiste de uma
base de dados e uma base de regras, onde se apresenta a estrategia_de_controle. Na base de dados
ficam armazenadas as definicoes das funcoes de
pertinencia dos termos Fuzzy. A base de regras e
representa por um tipo de estrutura peculiar

Conceitos Basicos

Logica Fuzzy

A teoria dos conjuntos Fuzzy, desenvolvida
por Zadeh (1965), permite tratar a incerteza existente em um conjunto de dados, isto e, a logica
nao se restringe ao fato de um processo assumir
apenas os estados, verdadeiro ou falso, e sim, um
grau de pertinencia, podendo assim ser parcialmente verdadeiro ou parcialmente falso.
Pelo fato de tratar os dados como sendo parcialmente verdadeiro ou parcialmente falso, a logica Fuzzy e bastante similar ao pensamento humano. Podemos observar essa ideia em casos
praticos na industria, onde se pretende projetar
um controlador para um dado processo. Para
isso, pode ser feita uma entrevista com um operador humano, que ja tem experiencia em controlar a planta e, assim, contribuir, com informacoes para o desenvolvimento do controlador. Entretanto, devem ser feitas perguntas bem objetivas, mas o operador geralmente responde com sua
linguagem natural, por exemplo Se a temperatura estiver muito alta, entao eu fecho um pouco
a valvula, visto que ele nao precisa de um valor exato e definido para uma variavel. Mas, em
termos logico-computacionais, representar muito

"Se <premissa> Ent
ao <conclus
ao>".
Logica de Tomada de Decisoes ou Maquina
de Inferencia e parte na qual e definida a acao de
controle em relacao a base de regras, aplicando as
operacoes de implicacao fazendo uso de premissas
relacionadas pelos conectivos logicos, os operadores de disjuncao (ou) e conjuncao (e).
Interface de Defuzzificacao consiste no processo inverso a Fuzzificacao, isto e, converter os
valores Fuzzy da sada do controlador em um valor do domnio real, correspondente a uma acao
de controle real.
Os dois modelos de controlador Fuzzy mais conhecidos sao o Mandani e Takagi-Sugeno. O modelo Mamdani e massivamente utilizado para capturar conhecimento especialista. Ele nos permite
descrever o conhecimento de uma forma mais intuitiva, mais semelhante a humana. No entanto, o
modelo Mamdani tem um grande custo_computacional. Por outro lado, o modelo Sugeno e computacionalmente mais eficiente e funciona bem com

1435

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

as tecnicas de otimizacao e tecnicas adaptativas, o
que e de interesse para problemas de controle, especialmente para sistemas_dinamicos nao-lineares.
A principal diferenca entre o modelo Sugeno
e o modelo Mamdani esta na forma de gerar a
sada do sistema, ou seja, transformar a sada do
domnio Fuzzy para o domnio real. Enquanto o
modelo Mamdani e baseado em funcoes de implicacao Fuzzy e em operacoes de composicao para
o calculo da sada do controlador, o modelo proposto por Takagi-Sugeno nao usam funcoes de implicacao e operadores para a inferencia. Segundo
Hamam e Georganas (2008) a capacidade de expressar o conhecimento do modelo Mamdani e perdida no Sugeno, pois as regras de sada nao sao
da logica Fuzzy. Uma outra diferenca e que o modelo Mandani tem funcoes de pertinencia que representa a sada do sistema, diferente do modelo
Sugeno, que sao um conjuntos de funcoes, que interpoladas geram a sada resultante.
Os tipos de controladores Fuzzy mais utilizados sao PI, PD e PID, que serao descritos a seguir

da derivacao da equacao do PID classico, onde,
du(t) e a variacao do sinal de controle, e(t) e o
erro (diferenca entre o sinal de referencia e a sada
do processo), de(t) e a variacao do erro, d2 e(t) e a
variacao da variacao do erro e kp , ki e kd sao constantes sintonizadas pelo projetista do controlador.
E importante notar que a sada deste controlador
tambem deve ser integrada antes de ser usada para
controlar o processo, ja que a ela e a variacao da
acao de controle.
3

O software foi implementado em linguagem
C++, no ambiente_de_desenvolvimento da Nokia,
o QtCreator. Essa ferramenta foi utilizada devido
a ser uma gratuita e simples de utilizar. Utilizando a biblioteca QCustomPlot para a plotagem
dos graficos.
A modularizacao para a programacao foi utilizado para o desenvolvimento do software, de
forma que tres modulos foram desenvolvidos para
a aplicacao. Cada modulo tem sua funcionalidade
especifica e encontram-se ilustrados na figura 1.

Controlador Proporcional-Integral (PI)
Fuzzy 
A expressao para um controlador deste tipo e
de(t)
du(t)
 kp 
+ ki  e(t)
dt
dt

(1)

A equacao 1 e obtida derivando-se a equacao tradicional de um controlador PI, onde, du(t) e a variacao do sinal de controle, e(t) e o erro (diferenca
entre o sinal de referencia e a sada do processo),
de(t) e a variacao do erro e kp e ki sao constantes
sintonizadas pelo projetista do controlador.
E importante notar que a sada deste controlador deve ser integrada antes de ser usada para
controlar o processo, ja que ela e a variacao da
acao de controle.

Figura 1 Modulos implementados da aplicacao

Controlador Proporcional-Diferencial
(PD) Fuzzy 
A expressao para um controlador deste tipo e
de(t)
u(t)  kp  e(t) + kd 
dt

3.1

Modulo Editor de Fuzzy

Esse modulo e responsavel por interagir com
o usuario de forma que este possa criar ou alterar um controlador Fuzzy. Nele o projetista pode
alterar as configuracoes referentes ao controlador
Fuzzy. De modo a definir as variaveis de entradas
e sadas, as funcoes de pertinencia, os metodos
de fuzzificacao, implicacao, agregacao e defuzzificacao e a base de regras. Apos configurado, o
sistema repassa essas informacoes para o modulo
maquina Fuzzy.

(2)

Na equacao 2, u(t) e o sinal de controle, e(t) e
o erro (diferenca entre o sinal de referencia e a
sada do processo), de(t) e a variacao do erro e kp
e kd sao constantes sintonizadas pelo projetista
do controlador.
Controlador Proporcional-Integral
-Diferencial (PID) Fuzzy 
A expressao para um controlador deste tipo e
de(t)
d2 e(t)
du(t)
 kp 
+ ki  e(t) + kd 
dt
dt
dt2

Arquitetura do Software

3.2

Modulo Maquina Fuzzy

Esse modulo e responsavel por realizar todos
os calculos relacionados ao controlador Fuzzy projetado. Implementando os principais metodos encontrados na literatura. Ele recebe os valores de
entrada do sistema supervisorio e efetua as etapas

(3)

Assim como no caso do controlador Fuzzy-PI, a
equacao do Fuzzy-PID (equacao 3) e obtida a parti

1436

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

de fuzzificacao, inferencia, e, dependendo do modelo do controlador Fuzzy selecionado, as etapas
de agregacao e defuzzificacao. Retornando para a
aplicacao um conjunto de valores para a sada.
3.3

4.1

Interface Controle Fuzzy

Na interface Controle Fuzzy sao feitas configuracoes gerais do controlador Fuzzy, esta interface
contem uma barra de menu dando acesso a outros
ambientes graficos.

Modulo Sistema Supervisorio

Esse modulo e responsavel pela comunicacao
com a planta e por executar as rotinas de controle da planta, no qual, esta presente o sistema
de intertravamento para a seguranca do sistema.
A comunicacao e realizada atraves de Sockets em
C++, usando protocolo TCPIP.
Esse modulo foi projetado de modo que respeite o tempo de latencia para as plantas. No
caso do sistema de tanques da Quanser equivale
a 0,1 segundos. Nesse tempo, a aplicacao deve
ser capaz de receber os valores dos sensores (Modulo Sistema Supervisorio), realizar os calculos necessarios para o controle baseado no controlador
Fuzzy implementado (Modulo Maquina Fuzzy) e
retornar os valores calculados para a planta (Modulo Sistema Supervisorio).
4

Figura 3 Escolha de configuracao gerais do controlador Fuzzy
1 - A Barra de menu, como mostrado na figura
3, oferece as opcoes Arquivo, Editar, Supervisorio e Ajuda.
1.1 - O menu Arquivo tem as opcoes Novo,
Salvar, Salvar como... e Abrir.... Ao clicar
no campo Novo o usuario e encaminhado para
um ambiente grafico no qual e possvel fazer as
configuracoes basicas de um controlador Fuzzy.
Ao selecionar o item Salvar o aplicativo grava
as informacoes editadas do controlador na extensao .fz (extensao do proprio software). O item
Salvar como... da ao projetista a capacidade de
exportar o seu controlador Fuzzy para a extensao .fis (utilizado pelo Matlab) e, por fim, o item
Abrir... tem a funcao de carregar um arquivo ja
criado, seja de extensao .fis ou .fz.
1.2 - O menu Editar apresenta as opcoes
Funcao de Pertinencia e Regras. Ao selecionar o item funcoes de pertinencia o usuario e
encaminhado para o ambiente de criacao e alteracao de funcoes de pertinencia. O item Regras
encaminha o usuario para a interface da criacao
das regras. Ambas serao descritas no decorrer do
artigo.
1.3 - O menu Supervisorio tem a opcao de
ir para o sistema supervisorio. Essa opcao leva o
usuario a um novo ambiente no qual sera possvel
interagir com uma planta_didatica de controle de
nvel, que sera descrito mais adiante.
1.4 - O menu Ajuda vem com informacoes
mais detalhas da teoria de logica e controle Fuzzy,
apresentando de forma didatica explicacoes complementares que auxiliam os estudantes na compreensao da logica Fuzzy e sua aplicacao no projeto_de_controladores nao-lineares. Para isto, o
menu conta com uma bibliografia para ajudar o

Funcionalidades do Software
desenvolvido

O aplicativo permite projetar controladores
Fuzzy do modelo Mamdani ou Sugeno, podendo
o mesmo ser do tipo P, PI, PD ou PID, conforme
descrito no livro do Shaw e Simoes (1999), e que
correspondem a grande maioria dos controladores
Fuzzy presentes no mercado.
O software desenvolvido tem como caracterstica intrnseca auxiliar o aluno a projetar o seu
controlador. Para isso em cada ambiente grafico
do software, havera um caixa de selecao com o
nome Dicas que habilitara a exibicao de janelas com rapidas explicacoes didaticas, como a que
pode ser vista na figura 2. Dicas que visam ajudar no projeto e na sintonia do controlador que
sao complementadas pelas informacoes contidas
no menu Ajuda, que sera citado mais adiante,
alem de instrucoes de como utilizar as ferramentas
do ambiente grafico. Cada ambiente sera descrito
nas proximas subsecoes.

Figura 2 Exemplo da ferramenta Dicas

1437

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

aluno a reforcar o conhecimento adquirido em sala
de aula.
2 - Campos de Metodos nesses campos sao
feitas as configuracao referente aos metodos usados para realizar as operacoes de and, or, implicacao, agregacao e defuzzificacao.
4.2

Interface de configuracoes basicas

Nesse ambiente sao feitas as configuracoes basicas do controlador Fuzzy, no qual o usuario escolhe o modelo e a acao de controle do controlador
Fuzzy, o qual se deseja projetar, como mostrado
na figura 4.

Figura 5 Ambiente de criacao e alteracao das funcoes de pertinencia

4 - Os campos Nome e Parametros, sao
responsaveis por exibir e alterar os valores da funcao selecionada pelo combobox.
5 - O campo Escala da variavel e o local
no qual o usuario define os limites mnimo e
maximo de valores que as variaveis (entrada ou
sada), e consequentemente, as suas funcoes de
pertinencia, poderao atingir.
Modelo Sugeno 
Figura 4 Ambiente de configuracoes basicas do
Fuzzy
1 - Atraves da marcacao feita pelo usuario e
possvel escolher o modelo do controlador Fuzzy,
podendo optar entre os modelos Mamdani e Sugeno.
2 - Os campos I e D oferecem as opcoes
para o usuario assinalar, podendo ser feita combinacoes de escolha de acao de controle Fuzzy que
se deseja para o seu controlador, podendo-se obter
as seguintes combinacoes P, PI, PD ou PID.
4.3

Interface Funcao de Pertinencia

Figura 6 Ambiente de funcoes Sugeno e ajustes
de parametros

Nesse ambiente sao criadas as funcoes de
pertinencia. Caso o modelo escolhido seja o
Mamdani, o ambiente grafico para as funcoes de
pertinencia das entradas e igual ao das funcoes
de pertinencia das sadas, como demostrado na
figura 5, mas se for Sugeno, o ambiente e diferente, como sera exibido mais adiante, na figura 6.

1, 2 - Os campos sada e parametros sao responsaveis respectivamente por exibir os nomes e
os parametros das funcoes Sugeno.
3 - Ao selecionar uma funcao Sugeno e possvel alterar os seus parametros.

Modelo Mamdani 
1 - O grafico mostra todas as funcoes de pertinencia referente as entradas eou sadas.
2 - Na parte superior sao exibidas as entradas
e sadas do controlador, de acordo com o tipo do
controlador Fuzzy escolhido pelo projetista, podese alterar entre entradas e sadas ao clicar na aba
correspondente.
3 - Esse campo e responsavel por adicionar
funcoes de pertinencia a respectiva janela e por
selecionar qual funcao se deseja alterar.

4.4

Interface da Base de Regras

Nesse ambiente grafico o projetista cria e altera as regras do controlador, como demostrado
na figura 7.
1 - Mostra todas as regras criadas.
2 - Seleciona qual conectivo sera utilizado na
regra.
3 - Seleciona as variaveis que vao se relacionar
para formar uma regra.

1438

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

5

Para validar o software criado, foi utilizada
uma planta_didatica experimental composta por
tanques acoplados da Quanser, o processo escolhido foi o controle_de_nvel do segundo tanque.
Cada tanque e descrito por uma equacao diferencial de primeira ordem, como o segundo tanque
foi escolhido para ser controlador, essa configuracao sera caracterizada por um sistema de segunda
ordem.
A planta consiste em uma bomba, dois tanques acoplados na vertical e um reservatorio
abaixo deles. Os dois tanques contem um orifcio na sua base que permite o fluxo de agua, o
tanque superior receber a agua bombeada do reservatorio, sendo assim o tanque superior alimenta
o tanque inferior pelo orifcio em sua base e o tanque inferior fecha um ciclo com a agua voltando
para o reservatorio, pelo seu orifcio.
A comunicacao do software com a planta e
feita com um servidor TCPIP, que esta conectado a uma placa de aquisicao_de_dados, tornando
possvel a leitura dos sensores e a escrita de um
sinal eletrico na bomba, representado pelo o esquema da figura 9.

Figura 7 Ambiente de criacao e edicao de regras

4.5

Validacao

Sistema Supervisorio

O sistema supervisorio foi desenvolvido para
o controle_de_nvel de uma planta da Quanser.
O software permite executar o controlador Fuzzy
implementado, seja ele P, PI, PD ou PID, realizando o controle_de_nvel no sistema de tanques
acoplados da Quanser. Assim, o usuario pode projetar um controlador Fuzzy baseada em um desses
tipos e o sistema se preocupara em adequar as entradas para cada caso. Tornando o modulo mais
generico.
Nesse ambiente, o operador pode monitorar
as variaveis que deseja-se controlar, e ainda, visualizar como a sada do controlador Fuzzy, projetado por ele, se comporta ao longo do tempo, para
um dado nvel de referencia definido pelo usuario.
De forma que na aplicacao sao apresentados dois
graficos, como demostrado na figura 8, um para a
tensao de sada do controlador, correspondendo ao
sinal que sai para a planta e outro grafico referente
a variavel que deseja-se controlar.
Nesse modulo, ainda esta presente o sistema
de intertravamento referente ao tanque da Quanser, ou seja, o usuario nao tera que se preocupar
que o sistema possa, por exemplo, ultrapassar seus
limites operacionais, garantindo uma certa integridade a planta.
O objetivo do desenvolvimento deste supervisorio, para esse estudo de caso, e que os alunos
possam observar na pratica como o sistema Fuzzy
projetado por eles funciona para os kits didaticos disponveis em laboratorios, dando, assim, ao
aluno uma maior compreensao da teoria estudada.

Figura 9 Esquema da Comunicacao da planta de
nvel com o Sistema Supervisorio
Para essa validacao foi proposto controlar o
nvel do tanque inferior, no qual o nvel pode variar de 0 cm a 30 cm.
Para tanto, utilizamos o programa para criar
um controlador do tipo Sugeno. Assim, ao iniciar
o programa selecionamos na interface apresentada
na figura 4 o modelo Sugeno e as acoes P, que
e padrao, e I. Apos isso, passamos a interface da
figura 3 na qual configuramos a logica com as caractersticas presentes da figura 10.
Ao selecionarmos a acao PI nossas variaveis
de entradas foram definidas erro e variacao do
erro, e de sada Variacao da Tensao, para
que seja possvel definir as funcoes de pertinencia.
Foram criadas cinco funcoes de pertinencia para
a primeira entrada e tres funcoes de pertinencia
para a segunda. As funcoes foram configuradas
na interface apresentada na figura 5. A figura 11
mostra as funcoes de pertinencia de cada entrada.
Logo apos, configuramos as funcoes Sugeno

Figura 8 Sistema Supervisorio para a planta de
nvel

1439

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

Figura 12 Funcoes Sugeno de sada para sada
Variacao da Tensao

Figura 10 Configuracoes do Fuzzy implementando

lizar para se comunicar com a planta.
Por fim, configuramos o valor do setpoint para
15 cm e esperamos um tempo para a estabilizacao.
Em seguida, reconfiguramos o valor da referencia
para 10 cm, ao aguardar um certo tempo, observamos que a planta tambem se estabiliza. E, por
fim, colocamos o valor da referencia em 20 cm,
como demostrado na figura 13.
(a) Variavel de Entrada Erro

(b) Variavel de Entrada Variacao do Erro

Figura 11 Funcoes de pertinencias para as entradas

Figura 13 Validacao do software com setpoint variavel
Observando a figura 13, podemos notar que
os resultados obtidos se mostraram satisfatorios.
Embora, nao seja o objetivo deste trabalho buscar uma melhor sintonia do controlador utilizado,
mas sim, demostrar as capacidades do software
desenvolvido.
Alem da sua utilidade do ponto de vista didatico, o software tambem possibilita o controle
efetivo, em tempo_real, de plantas didaticas ou
qualquer sistema ligado a um servidor de aquisicao_de_dados.
Em um outro exemplo, que pode ter seus resultados observados nas figuras 14 e 15, optamos
por mostrar o controle a um degrau com amplitude de 15 cm pelo fato ser o centro do tanque
e um forte candidato a um ponto de linearizacao
do sistema para o projeto de algum controlador
linear como (PID) ou (PI). Podemos notar, na figura 14, que embora o controlador Fuzzy tenha
ficado um pouco oscilatorio ele apresenta um bom
tempo de acomodacao, em torno de 120 segundos,
e sem grandes ultrapassagens do setpoint.

para a sada Variacao da Tensao com auxlio
da interface mostrada na figura 6 com os parametros apresentados na figura 12. Em seguida,
defimos as regras que relacionam as funcoes de
pertinencia das entradas com as funcoes de sada,
com auxlio da interface apresentada na figura 7,
de acordo com a Fuzzy Association Matrix (FAM )
apresentada na tabela 1.
DerivadaErro
Negativo
Zero
Positivo

GN
GP
PN
PP

PN
GP
P
PP

Z
Z
Z
Z

PP
PN
PN
GN

PG
PN
PP
GP

Tabela 1 FAM que relaciona as funcoes de pertinencia das entradas com as da sada
Com o conjunto de regras criado, enviamos o
controlador projetado para o modulo de supervisao, para validar o programa. Inicialmente, configuramos o IP e a Porta que o programa ira uti-

1440

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

Referencias
Apkarian, J. (1999). Coupled water tanks experiments manual.
Baturone, I., Moreno-Velo, F. J., Blanco, V. and
Ferruz, J. (2008). Design of embedded dspbased fuzzy controllers for autonomous mobile robots, Vol. 55, IEEE, pp. 928936.
Hamam, A. and Georganas, N. D. (2008). A comparison of mamdani and sugeno fuzzy inference systems for evaluating the quality of experience of hapto-audio-visual applications,
Haptic Audio visual Environments and Games, 2008. HAVE 2008. IEEE International
Workshop on, IEEE, pp. 8792.

Figura 14 Resposta do sistema ao sinal de Controle

Larkin, L. I. (1984). A fuzzy logic controller for
aircraft flight control, Decision and Control,
1984. The 23rd IEEE Conference on, Vol. 23,
IEEE, pp. 894897.
Lianzhong, L. and Zaheeruddin, M. (2007). Hybrid fuzzy logic control strategies for hot water district heating systems, Building Services Engineering Research and Technology
28(1) 3553.
Luna Filho, F. M., Bauchspiess, A. and Gosmann,
H. (2002). Controle fuzzy para sistema de nvel de lquidos, Congresso Brasileiro de Automatica.

Figura 15 Sinal de controle para a referencia de
15 cm

Piltan, F., Sulaiman, N., Allahdadi, S., Dialame,
M. and Zare, A. (2011). Position control of
robot manipulator Design a novel siso adaptive sliding mode fuzzy pd fuzzy sliding mode
control, Vol. 2, pp. 208228.

Tambem podemos observar, na figura 15, que
o sinal de controle foi bastante suave e sem atingir
os limites operacionais de saturacao do atuador.

6

Rocco, C. D. and Morabito, R. (2012). Um modelo
de otimizacao para as operacoes de producao
de vapor em caldeiras industriais, Vol. 19.

Conclusoes

Sandri, S Correa, C. (1999). Sistemas Nebulosos,
Minicurso apresentado na V Escola de Redes
Neurais, INPE ITA.

Neste trabalho apresentamos um software
para auxiliar o processo de ensino e aprendizagem de controle Fuzzy nos cursos de graduacao e
pos-graduacao. O software permite que os alunos
criem e editem sistemas de inferencia baseados nos
modelos de Mamdani e Takagi-Sugeno.
O software foi desenvolvido utilizando a linguagem C++ e testado em sistemas_operacionais
linux. O software se mostrou estavel e com uma
interface de facil utilizacao, o que nos leva a acreditar na sua potencialidade para ser utilizado em
disciplinas que tenham como um de seus objetivos
a aprendizagem de controle Fuzzy.

Shaw, I. S. and Simoes, M. G. (1999). Controle e
o
modelagem_fuzzy, 1 edicao, Edgard Blucher,
Sao Paulo.
Sousa, R. V. d. (2007). Robo agrcola movel (ram)
uma arquitetura baseada em comportamentos hierarquicos e difusos para sistemas autonomos de guiagem e navegacao.
Suetake, M., da Silva, I. N. and Goedtel, A.
(2011). Embedded dsp-based compact fuzzy
system and its application for inductionmotor speed control, Vol. 58, IEEE, pp. 750
760.

Agradecimentos

Zadeh, L. A. (1965). Fuzzy sets, Vol. 8, Elsevier,
pp. 338353.

ANP, MCT, FINEP e Petrobras pelo apoio
financeiro por meio do projeto PFRH-220.

1441