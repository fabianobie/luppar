XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

MODELOS BASEADOS EM CONJUNTOS APROXIMADOS
CARLOS PINHEIRO1, FERNANDO GOMIDE2, OTÁVIO CARPINTEIRO3, ISAÍAS LIMA4
Universidade Federal de Itajubá  IESTI1,3,4, Universidade Estadual de Campinas  FEEC  DCA2
Caixa Postal 35, 37500-903 Itajubá  MG, Caixa Postal 6101, 13083-970 Campinas  SP
E-mails pinheiro@unifei.edu.br, gomide@dca.fee.unicamp.br,
otavio@unifei.edu.br, isaias@unifei.edu.br
Abstract This work suggests a new method to develop rule-based models using concepts about rough_sets. The rules encapsulate relations among variables and give a mechanism to link granular descriptions of the models with their computational procedures. An estimation procedure is suggested to compute values from granular representations encoded by rule sets. The method
is useful to develop granular models of static and dynamic nonlinear_systems and processes. Numerical examples illustrate the
main features and the usefulness of the method.
Keywords Rule-based models, system modeling, function approximation, dynamic_systems, non-linear model, rough_sets.
Resumo Este trabalho sugere um novo método para desenvolver modelos_baseados_em_regras usando conceitos de conjuntos
aproximados. As regras incorporam relações ente variáveis e fornecem um mecanismo para ligar descrições granulares dos modelos com seus procedimentos computacionais. Um procedimento de estimação é sugerido para computar valores de representações granulares codificadas por conjuntos de regras. O método é eficiente para desenvolver modelos granulares de sistemas e
processos estáticos e dinâmicos. Exemplos numéricos ilustram as principais características e potencialidades do método.
Palavras-chave .

1

sicamente variáveis puramente binárias ou simbólicas
(Ziarko e Katzberg, 1993, Kusiak e Shah, 2006).
Este trabalho apresenta uma nova metodologia para
construção de modelos_baseados_em_regras que emprega conceitos da teoria dos conjuntos_aproximados.
O objetivo é a obtenção de modelos (estáticos ou
dinâmicos) referentes a sistemas_lineares, nãolineares, com parâmetros variáveis, etc. Nas próximas
secções deste artigo encontra-se uma revisão de conceitos básicos sobre conjuntos_aproximados, a metodologia de modelagem proposta, exemplos de aplicações, e finalmente as conclusões finais.

Introdução

A computação granular constitui um arcabouço
unificado de conceitos que se beneficiam da existência e conhecimento de grânulos de informações que
são inerentes a teoria clássica dos conjuntos, dos conjuntos difusos (fuzzy sets) e dos conjuntos_aproximados (rough_sets). Estes conceitos possibilitam a construção de modelos heterogêneos e multifacetados,
onde a noção de granularidade de entidades numéricas ou de informações abstratas é um paradigma fundamental (Pedrycz e Gomide, 2007). Os modelos
baseados em regras desempenham um papel fundamental na modelagem_de_sistemas_complexos (nãolineares, com parâmetros variáveis, etc.). Em geral,
as regras encapsulam relações entre as variáveis dos
modelos e fornecem mecanismos para ligar as representações (grânulos de informações) dos mesmos
com seus procedimentos computacionais.
A teoria dos conjuntos_aproximados (Pawlak, 1982),
tem sido aplicada com sucesso em diversas áreas
como mineração_de_dados, sistemas de decisão, sistemas especialistas e em outros campos (Pawlak e
Skowron, 2007). Uma das principais vantagens desta
abordagem é não necessitar de detalhes a respeito dos
dados a serem manipulados, como distribuições de
probabilidade, intervalos de confiança ou valores de
possibilidades (Pawlak, 1991).
Não existem muitos trabalhos sobre conjuntos_aproximados abordando questões relacionadas com a modelagem_de_sistemas_dinâmicos que utilizam variáveis contínuas ou amostradas (Pinheiro et al., 2009,
Pinheiro, 2009). A maioria dos trabalhos aborda ba-

2 Conceitos Básicos
Um espaço aproximado é definido por
S  (U,A), onde U é um conjunto de objetos ou observações (oi) chamado universo e A é um conjunto
de atributos de condição (aj). Seja um sistema de
informação (SI) representado por uma tabela de atributos-valores, onde se determinam funções de classificação fUA. A representação tabular genérica de
um SI está ilustrada na Tabela 1, onde valores de
atributos de decisão são definidos na coluna d.
Tabela 1. Representação tabular genérica de um SI.

o1

oi

om

3182

a1
f(o1,a1)

f(oi,a1)

f(om,a1)

...

...
...

aj
f(o1,aj)

f(oi,aj)

f(om,aj)

...

...
...

an
f(o1,an)

f(oi,an)

f(om,an)

d
f(o1,d1)

f(oi,di)

f(om,dm)

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

Em conjuntos_aproximados trabalha-se geralmente
com valores discretos. Para atributos numéricos é
necessário aplicar um processo de discretização para
torná-los nominais. Algumas abordagens podem ser
utilizadas para minimizar eventuais efeitos da quantização dos dados (Skowron e Son, 1995).
Seja uma relação de equivalência sobre U denominada relação de não-discernimento ou indiscernibilidade (1). O conjunto de todas as classes de equivalência
determinadas por IND(B) é representado pela notação
U  IND(B).





IND( B)  (oi , o j ) U 2 ak  B, f (oi , ak )  f (o j , ak )

completar a regra com os atributos de decisão. Para
um determinado reduto, um exemplo de regras de
decisão pode ser expresso por (6). A utilização da
teoria dos conjuntos_aproximados possibilita de modo sistemático, que as regras de decisão resultantes
apresentem informações concisas em relação aos
dados originais de um determinado SI, tratando adequadamente eventuais redundâncias, incertezas, ou
imprecisões presentes nos dados.
IF a1  f(o1,a1) AND...AND ak  f(om,ak) THEN
d1  f(o1,d1) OROR di  f(oi,di)
(6)

(1)
Exemplo 1

Seja um conjunto de todos os elementos de uma classe de equivalência. Dado O  U , é importante saber
quantos elementos de O são definidos por conjuntos
elementares de S. Para este propósito define-se a aproximação inferior (B*) e a aproximação superior
(B*), expressas por (2). Um conjunto O é denominado preciso (crisp) se B*(O)  B*(O), caso contrário
ele é definido como impreciso, grosseiro (rough) ou
aproximado.

Com a finalidade de exemplificar os conceitos desta
secção e os exemplos das próximas, seja a Tabela 2
abaixo, onde U  o1, o2, o3, o4 e B  a1, a2.
Tabela 2. Dados referentes ao Exemplo 1.

B* (O)  o U U  IND( B)  O

B* (O)  o U U  IND( B)  O  0.

(2)

(3)

mD (i, j )  ak  B f (oi , ak )  f (o j , ak )

(4)

d
1
2
3
4

Tabela 3. Matriz de discernibilidade referente ao Exemplo 1.

o1
o2
o3
o4

Uma função de discernibilidade é definida por (5),
onde o conjunto formado pelo termo mínimo de F(B)
determina os chamados redutos de B. Reduto é um
conjunto de atributos mínimos necessários para manter as mesmas propriedades de um SI que utiliza todos os atributos originais do sistema. Pode existir
mais de um reduto para um mesmo conjunto de atributos. A obtenção dos redutos mínimos de um SI de
dimensão elevada geralmente consiste de um problema de complexidade computacional crescente com o
volume de dados do processo. Algumas abordagens
são utilizadas para tratar este tipo de problema no
processamento de redutos, por exemplo, por intermédio de relações de similaridade (Huang et al., 2007).

o1
a2
a1
a1,a2

o2

o3

o4

a1,a2
a1

a2

-

Assim, o reduto obtido é R  a1, a2. Logo, as regras
de decisão resultantes são expressas por (7).
IF a1 
IF a1 
IF a1 
IF a1 

b AND a2 
b AND a2 
c AND a2 
c AND a2 

b THEN d 
c THEN d 
b THEN d 
c THEN d 

1
2
3
4.

(7)

3 Metodologia Proposta
Objetivando uma representação mais adequada
para aplicações numéricas, será adotada a forma ilustrada na Tabela 4 para os sistemas de informação
abordados neste trabalho.

F ( B)  mD (i, j )
mD (i, j )  ak ak  mD (i, j ).

a2
b
c
b
c

Para este SI tem-se U  IND(B)  o1, o2, o3,
o4. A matriz de discernibilidade está ilustrada na
Tabela 3. A função de discernibilidade resultante é
F ( B)  a 2  a1  a1  a 2   a1  a 2   a1  a 2  a1  a 2 .

Uma matriz de discernibilidade (simétrica) é definida
por (3), cujos elementos são dados por (4).
M D ( B)  mD (i, j )nxn , i  1, j  card (U  IND( B))

a1
b
b
c
c

o1
o2
o3
o4

(5)

Para transformar um reduto em regra de decisão, basta agregar os valores dos atributos condicionais da
classe de objetos da qual foi originado o reduto, com
os atributos correspondentes ao mesmo, e depois

3183

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

Tabela 4. Representação tabular numérica de um SI.

x1
(1)

x1

(2)

x1

...
(k)

x1

...
x1

(m)

...
(v)

x1

x2
(1)

x2

(2)

x2

...
(k)

x2

...
(m)

x2

...
x2

(v)

x3
x3

(1)

x3

(2)

...

...

xN
xN

y

...

xN

(2)

y(2)

...

...

x3(k)

...

xN

...

...

...

x3(m)

...

...

...

x3(v)

y

(1)

...

...

xN

(k)

(m)

...
xN

(v)

Exemplo 2
A Tabela 5 ilustra dados da função y  x1 + , onde
x1  0, 1.

(1)

Tabela 5. Dados relativos ao Exemplo 2.

...

x1
0
1

y(k)
...
y(m)

y
0.5
1.5

O SI associado possui apenas um atributo de condição (x1), cujos valores são inteiros. Logo o reduto
correspondente é R  x1 e as regras de decisão são
IF x1  0 THEN y  0.5 IF x1  1 THEN y  1.5.
Com a representação proposta na forma (9), pode-se
escrever a regra IF 0  x1  1 THEN 0.5  y  1.5,
onde x1(k)  0, x1(m)  1, y(k)  0.5 e y(m)  1.5. Para
estimar valores em faixas de dados intermediários
pode-se utilizar uma formula de interpolação linear
convencional (11).

...
y(v)

Os atributos de condição (xi) serão variáveis cujos
dados (xN(k)) estarão relacionados a funções gerais
definidas pelos valores (y(k)) do atributo de decisão
(y). Do SI em questão derivam as sentenças (8). Por
exemplo, para x1  x1(k), x2  x2(k), x3  x3(k), e
xN  xN(k) tem-se y  y(k) expresso por sk. E para
x1  x1(m), x2  x2(m), x3  x3(m), e xN  xN(m) tem-se
y  y(m) definido por sm.

y  y(k) + (y(m)  y(k))(x1  x1(k))(x1(m)  x1(k)) (11)
Exemplificando, para x1  0.35 tem-se
y  0.5 + (1.5  0.5)(0.35  0)(1  0)  0.85, que é o
mesmo valor dado pela função original do exemplo.

s1 IF x1  x1(1) AND x2  x2(1) AND AND xN  xN(1)
THEN y  y(1)
s2 IF x1  x1(2) AND x2  x2(2) AND AND xN  xN(2)
THEN y  y(2)



sk IF x1  x1(k) AND x2  x2(k) AND AND xN  xN(k)
THEN y  y(k)



sm IF x1 x1(m) AND x2  x2(m) ANDAND xN xN(m)
THEN y  y(m)



sv IF x1  x1(v) AND x2  x1(v) ANDAND xN  xN(v)
THEN y  y(v)
(8)

Exemplo 3
A Tabela 6 ilustra dados da função y  x1 + x2, onde
x1 e x2  0, 1.
Tabela 6. Dados referentes ao Exemplo 3.

x1
0
0
1
1

Outra proposição deste trabalho está relacionada a
valores intermediários dos dados. Por exemplo, para
x1(k)  x1  x1(m), x2(k)  x2  x2(m), x3(k)  x3  x3(m) e
xN(k)  xN  xN(m), as sentenças acima podem ser representados pela combinação de sk e sm por meio da
regra genérica (9), ou na forma simplificada (10).

x2
0
1
0
1

y
0
1
1
2

O SI associado  tabela possui dois atributos de condição (x1 e x1) de valores inteiros, e pode ser visto
como um caso particular do Exemplo 1 (Tabela 2).
Logo as regras de decisão são expressas por (12).
IF x1 
IF x1 
IF x1 
IF x1 

rg IF x1(k)  x1  x1(m) AND x2(k)  x2  x2(m) AND
AND xN(k)  xN  xN(m) THEN
(k)
(m)
miny ,, y   y  maxy(k),, y(m) (9)

rg IF x1  (g) AND x2  (g) ANDAND xN  (g)
THEN y  (g)
(10)

0 AND x2 
0 AND x2 
1 AND x2 
1 AND x2 

0 THEN y 
1 THEN y 
1 THEN y 
1 THEN y 

0
1
1
2. (12)

Na forma proposta (9), pode-se escrever
IF (0  x1  1) AND (0  x2  1) THEN 0  y  2,
onde x1(k)  0, x1(m)  1, x2(k)  0, x2(m)  1, y(k)  0 e
y(m)  2. Para estimar valores em faixas de valores
intermediários, utiliza-se a expressão de interpolação
linear (13) que é uma extensão da formula (11).

Onde (g)  x1(k), x1(m), (g)  x2(k), x2(m),
(g)  xN(k), xN(m) e (g)  y(k), y(m), considerando que
y(k) < y(m). Os exemplos numéricos a seguir ilustrarão
a metodologia proposta. Inicialmente serão empregadas funções, modelos de sistemas_lineares e posteriormente não-lineares.

y  y (k ) 

3184

( x  x (k ) )
( y ( m)  y ( k ) ) ( x1  x1( k ) )
( ( m) ( k )  ( m2 ) 2 ( k ) ) (13)
2
( x1  x1 ) ( x2  x2 )

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

A proposição de modelos_baseados_em_regras (obtidos via processamento de conjuntos_aproximados),
não constitui um problema computacional em relação
 obtenção dos redutos na geração de regras de modelagem. A explicação é simples, todas as variáveis
numéricas (de um determinado SI) que definem a
estrutura de um modelo, constituem o próprio reduto
(que não necessita ser calculado), determinando as
regras de modelagem. A definição de quais variáveis
e quantas de suas amostras passadas constituem a
estrutura de um determinado modelo, pode ser obtida
por métodos conhecidos (por exemplo, com a avaliação da correlação de subconjuntos de dados que
constituem as medições do sistema a ser modelado).
Exemplos de aplicações e a utilização de ferramentas
computacionais, para auxiliar os processamentos de
informações dos SI correspondentes, serão mostrados
na próxima secção.

Exemplificando, para x1  0.25 e x2  0.5 tem-se
y  0+(20)2((0.250)(10)+(0.50)(10))  0.75,
que é o mesmo valor dado pela função do exemplo.
Para estimar valores com diversas variáveis, as expressões (11) ou (13) podem ser estendidas para a
forma (14), que produz valores iguais a formula de
interpolação linear de Lagrange.
y  ( xn , xn(i ) , y (i ) ) i k ,m  y ( k ) 
n 1, N

( y ( m)  y ( k ) ) N ( xn  xn( k ) )

( m)
(k )
N
n 1 ( xn  x n )

(14)

Exemplo 4
A Tabela 7 ilustra dados da função não-linear
y  sin(x1), onde x1  0, .
Tabela 7. Dados relativos ao Exemplo 4.

x1
0.0000
0.2618
0.5236
0.7854
1.0472
1.3090
1.5708

y
y(a)  0.0000
y(b)  0.2588
y(c)  0.5000
y(d)  0.7071
y(e)  0.8660
y(f)  0.9659
y(g)  1.0000

4 Exemplos de Aplicações
Nesta secção serão mostrados exemplos de aplicações utilizando modelos de sistemas_não-lineares
estáticos e dinâmicos. Serão apresentadas comparações com outros tipos de modelagens, por exemplo,
com modelos fuzzy,
Também será mostrada a utilização de uma ferramenta_computacional para auxiliar o processamento de
dados referentes a sistemas de informação. Existem
ferramentas computacionais (várias de acesso gratuito) desenvolvidas especificamente para o processamento de conjuntos_aproximados, tais como RSL
(Rough Sets Library), Rough Enough, CI (Column
Importance facility) e Rosetta.

O atributo de condição (x1) possui valores fracionários que serão quantizados neste exemplo em três
faixas igualmente espaçadas (1)  0, 0.5236
(2)  0.5236, 1.0472 (3)  1.0472, 1.5708. Assim, as regras de decisão ficam expressas por (15).
IF x1  (1) THEN y  y(a) OR y  y(b) OR y  y(c)
IF x1  (2) THEN y  y(c) OR y  y(d) OR y  y(e)
IF x1  (3) THEN y  y(e) OR y  y(f) OR y  y(g).

(15)

Exemplo 5

Usando a forma proposta (10), pode-se escrever o
modelo baseado em regras (16), onde (1)  0, 0.5,
(2)  0.5, 0.866 e (3)  0.866, 1.
r1 IF x1  (1) THEN y  (1)
r2 IF x1  (2) THEN y  (2)
r3 IF x1  (3) THEN y  (3)

O gráfico ilustrado na Fig. 1 representa medidas (amostras indicadas por pontos na figura) de um sistema não-linear estático. A Tabela 8 mostra alguns
dados relativos ao gráfico e constitui o SI do sistema.
11

(16)

10
9

Para estimar valores intermediários deste modelo
pode-se usar a formula de interpolação linear (11)
similar ao Exemplo 2, ou a generalização (14) para
n  1. Exemplificando para x1  0.3927 tem-se
y  0.375, e para x1  1.1781 tem-se y  0.8995. A
média dos erros em relação á função original é de
2,5. Se mais de uma regra resultar em valores estimados (por exemplo, para dados nas extremidades
das faixas dos atributos de condição), o valor resultante é dado pela media aritmética dos mesmos.
Para modelos com múltiplas saídas utilizam-se conjuntos de regras correspondentes a cada saída.
Os modelos resultantes neste trabalho serão denominados a partir de agora modelos aproximados.

8

y

7
6
5
4
3
2

0

1

2

3

4

5
x1

6

7

8

9

10

Figura 1. Gráfico com dados referentes ao Exemplo 5.

Neste trabalho será empregada a ferramenta Rosetta
(hrn e Komorowski, 1997) para o processamento
dos dados relacionados a sistemas de informação.

3185

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

Este ferramenta é de utilização simples e tem acesso
gratuito (httpwww.idi.ntnu.noaleksrosetta).
Os dados da Tabela 8 foram importados para o ambiente da ferramenta citada.

sentação do mesmo com três regras (g  3) e funções
de pertinência (D(g)) gaussianas com os respectivos
valores modais e desvios padrões c1  3.506
1  0.634 c2  4.234 2  0.688 c3  8.438
3  0.277. Os coeficientes polinomiais do modelo
são c01  2.177 c11  0.624 c02  -3.561
c12  1.997 c03  8.981 c13  0.205.

Tabela 8. Dados referentes ao Exemplo 5.

x1
0.00

3.00

5.25

8.50

10.0

y
2.0000

3.7345

6.9608

10.8862

11.0000

rg IF x1  D(g) THEN yg  c0g+ c1gx1

(18)

Para os mesmos valores exemplificados, a média dos
erros do modelo fuzzy está na faixa de 1,43 (exatidão melhor que a do modelo aproximado considerado). Os modelos difusos tendem apresentar boa exatidão devido  característica inerente de aproximação
dos sistemas_fuzzy.
A vantagem dos modelos aproximados em relação
aos difusos é a inexistência das etapas de fuzificação
e defuzificação. Esta característica é interessante em
aplicações em tempo_real, dado a menor quantidade
de cálculos envolvidos nas computações das regras
de modelagem. Nos próximos exemplos serão apresentadas comparações entre valores relativos de tempos de computação de modelos aproximados e modelos fuzzy.

Os seguintes processamentos foram realizados no
aplicativo Discretization  Equal frequency binning  Intervals  3 Reduction  Exhaustive calculation (RSES)  Full Rule generator (RSES). O
software fornece as regras de decisão (17) ilustradas
a seguir, onde o símbolo * representa os valores
limites dos atributos de condição, que neste exemplo
são 0 e 10, respectivamente.

Exemplo 6
A equação (19) representa o modelo discreto de um
determinado sistema não-linear dinâmico. A Fig. 2
ilustra amostras do modelo considerando valores
aleatórios de entrada na faixa 0, 1.

x(*, 3.3750) > y(2.0000) OR y(2.2197) OR y(2.3811) OR
y(2.5136) OR y(2.7310) OR y(2.7827) OR y(2.8327) OR
y(3.0351) OR y(2.9551) OR y(3.3973) OR y(3.5117) OR
y(3.5909) OR y(3.7345) OR y(3.8419)
x(3.3750, 6.8750) > y(4.0952) OR y(4.2879) OR y(4.4000) OR
y(4.8764) OR y(5.2843) OR y(5.9241) OR y(6.3302) OR
y(6.9608) OR y(7.3044) OR y(7.6791) OR y(8.2819) OR
y(9.0139) OR y(9.3387) OR y(10.0420)

c(t )  0.4c(t  1)  0.6u 2 (t  1)

(19)

1
0.8

x(6.8750, *) > y(10.4000) OR y(10.6437) OR y(10.4786) OR
y(10.4928) OR y(10.7082) OR y(10.6233) OR y(10.8862) OR
y(10.6830) OR y(10.8393) OR y(10.9186) OR y(10.8814) OR
y(10.9779) OR y(11.0000)
(17)

u

0.6
0.4
0.2
0

0

50

100

150

200

250

150

200

250

Amostras

Usando a representação de modelos baseados em
regras na forma (10) proposta, tem-se a mesma estrutura das regras (16), mas agora com (1)  0, 3.375,
(2)  3.375, 6.875, (3)  6.875, 10, (1)  2,
3.8419, (2)  4.0952, 10.042 e (3)  10.4, 11.
Utilizando a interpolação linear (11) pode-se estimar
qualquer valor do modelo baseado em regra em questão. Sejam três pares de dados da própria tabela original do SI do exemplo como ilustração. Para x1  3
vem y  2+(3.8419  2)(3  0)(3.375  0)  3.6372.
Com x1  5.25 tem-se y  4.0952 + (10.042 
4.0952)(5.25  3.375)(6.875  3.375)  7.281. Para
x1  8.5 vem y  10.4 + (11  10.4)(8.5  6.875)(10
 6.875)  10.712. A média dos erros em relação aos
dados originais está em torno de 2,9.
Se o exemplo em questão for modelado por um modelo fuzzy funcional Takagi-Sugeno (com parâmetros
ajustados pelo toolbox ANFIS do MatLab utilizando
2000 épocas de treinamento), tem-se em (18) a repre-

1
0.8

c

0.6
0.4
0.2
0

0

50

100
Amostras

Figura 2. Gráfico com dados referentes ao Exemplo 6.

Os gráficos da figura ilustram valores da informação
de entrada (u) e de saída (c) do sistema correspondente as amostras (t). Com estes dados pode ser gerada uma tabela definida por x1  u(t-1), x2  c(t-1) e
y  c(t), que constitui a representação do sistema de
informação do modelo. De modo similar ao exemplo
anterior, utilizou-se a ferramenta Rosetta (agora com
a opção Discretize  Equal frequency binning 
Intervals  4) na geração das regras de decisão. Empregando a estrutura proposta na forma (10), chega-

3186

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

representa o fluxo de entrada de um determinado
fluido em função do tempo. A variável h(t) representa o nível do fluido armazenado em um reservatório
de área transversal A. O parâmetro K depende da
aceleração da gravidade e da secção transversal da
tubulação de saída do reservatório.

se nas regras de modelagem representadas na Tabela
9. Os parâmetros do modelo estão indicados a seguir
(1)  0, 0.2521 (2)  0.2521, 0.4893
(3)  0.4893, 0.7787 (4)  0.7787, 1
(1)  0, 0.1703
(2)  0.1703, 0.2951
(3)
  0.2951, 0.4913 (4)  0.4913, 0.8405
(1)  0.0000, 0.0841 (2)  0.0630, 0.1977
(3)  0.1614, 0.4102 (4)  0.3750, 0.6151
(5)  0.0790, 0.1322 (6)  0.1255, 0.2328
(7)  0.2288, 0.4578 (8)  0.4719, 0.6728
(9)  0.1334, 0.2161 (10)  0.1832, 0.2793
(11)  0.2918, 0.4870 (12)  0.4965, 0.7379
(13)  0.2093, 0.3463 (14)  0.2886, 0.4100
(15)  0.3639, 0.5994 (16)  0.5921, 0.8405.

A

(1)
(2)
(3)
(4)

(2)
(5)
(6)
(7)
(8)

(3)
(9)
(10)
(11)
(12)

(20)

A Fig. 4 ilustra amostras de medições reais de um
sistema de nível. O processo possui uma entrada de
comando (u) que opera com nível de tensão de 0 a 5
V. Essa informação aciona o atuador de uma bomba
motorizada que controla o fluxo de entrada do fluído
(água) para um reservatório. O nível do processo é
medido por um transdutor capacitivo que fornece
uma informação de tensão (y) na faixa de 4 a 10 V
correspondente ao nível do processo.

Tabela 9. Representação tabular das regras relativas ao Exemplo
6.

(1)
(1)
(2)
(3)
(4)

dh(t )
 K h(t )  qi (t )
dt

(4)
(13)
(14)
(15)
(16)

5
4
3

u

Para estimar valores intermediários deste modelo
pode-se usar a formula de interpolação (13), ou a
generalização (14) para n  2. A Fig. 3 ilustra dados
computados do modelo aproximado em questão (gráfico em cor vermelha) em relação  resposta do modelo_não-linear original (em cor azul), utilizando outro vetor de informação de entrada (u) com valores
aleatórios. A média da somatória dos erros quadráticos entre os valores do modelo original e do aproximado resultou em um valor em torno de 0,025.
Faixas de erros similares foram obtidas com modelo
fuzzy funcional e com modelo de rede_neural artificial multicamada gerados com toolboxes do MatLab.
Comparando o tempo de processamento entre o modelo aproximado e um modelo fuzzy correspondente,
verificou-se que o do primeiro foi 35 menor.

2
1
0

50
60
Tempo s

70

80

90

100

0

10

20

30

40

50
60
Tempo s

70

80

90

100

y

1
0.8

c

0.6
0.4
0.2
0

140

160

180

200

0

20

40

60

80

100
120
Amostras

140

160

180

200

Neste exemplo será obtido o modelo aproximado do
processo em questão. O procedimento utilizado será
o mesmo do exemplo anterior. Com os dados das
medições é definido um SI com as informações
x1  u(t-1), x2  y(t-1) e y  y(t). Utilizando a ferramenta Rosetta com quatro níveis de discretização nos
dados e o reduto x1, x2, obtém as regras de decisão
representadas na forma da Tabela 9 com os parâmetros (1)  0.1, 1.25 (2)  1.25, 2.45 (3)  2.45,
3.85 (4)  3.85, 5
(1)  5.0648, 6.9402
(2)
  6.9402, 7.7882 (3)  7.7882, 8.8646
(4)  8.8646, 10.2834 (1)  5.0648, 6.9565
(2)  5.8149, 7.0217 (3)  7.0217, 7.9024
(4)  6.9239, 7.8698 (5)  6.9239, 7.7719
(6)  6.9239, 7.7063
(7)  6.4020, 6.9239
(8)
  6.3042, 6.9565
(9)  7.9350, 8.9787
(10)
(11)
  9.0113, 9.5006   9.0766, 10.1855
(12)  9.3375, 10.2834 (13)  8.7505, 9.7615
(14)  7.7393, 8.7504 (15)  7.7393, 8.3264
(16)  7.8698, 8.2286.
A estimação de valores do modelo baseado em regras
obtido é realizada conforme procedimento descrito
nos exemplos anteriores. A Fig. 5 traz uma comparação entre os dados reais medidos (em cor azul) do

u

40

100
120
Amostras

Figura 4. Gráfico com dados referentes ao Exemplo 7.

0.2
30

80

8

4

0.4

20

60

6

0.6

10

40

10

1

0

20

12

0.8

0

0

Figura 3. Gráfico referente ao modelo aproximado do Exemplo 6.

Exemplo 7
Este exemplo trata de um sistema de nível real. A
equação (20) exemplifica um modelo_não-linear continuo típico para sistemas de nível. A variável qi(t)
3187

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

tiplas entradas e saídas. A extensão dos conceitos
apresentados, objetivando aplicações em malhas de
sistemas_de_controle, também será abordada.

sistema e os gerados pelo modelo aproximado (em
cor vermelha). Para verificar a capacidade de generalização das regras obtidas, outro conjunto de medições foi empregado (Fig. 6). A média da somatória
dos erros quadráticos entre os valores do modelo
original e do aproximado, resultou em um valor em
torno de 0,189.

Agradecimentos
Agradecimentos a FAPEMIG pelo auxilio concedido
ao primeiro autor para a participação no CBA 2010.

5
4

Referências Bibliográficas

u

3
2
1
0

0

20

40

60

80

100
Tempo

120

140

160

180

200

0

20

40

60

80

100
Tempo

120

140

160

180

200

Huang, B., Guo, L. and Zhou, X (2007). Approximation Reduction Based on Similarity Relation.
IEEE Fourth International Conf. on Fuzzy Systems and Knowledge Discovery, pp. 124- 128.
Kusiak, A. and Shah, A (2006). Data-Mining-Based
System for Prediction of Water Chemistry
Faults. IEEE Transactions on Industrial Electronics, No. 2, pp. 593- 596.
hrn, A. and Komorowski, J (1997). ROSETTA A
Rough Set Toolkit for Analysis of Data. Third
International Joint Conference on Information
Sciences, pp. 403- 407.
Pawlak, Z (1982). Rough sets. International Journal
of Computer and Inf. Sciences, pp. 341- 356.
Pawlak, Z (1991). Rough Sets Theoretical Aspects
of Reasoning about Data. Kluwer Academic
Publishers, Dordrecht.
Pawlak, Z. and Skowron, A (2007). Rudiments of
rough_sets. Information Sciences, 177 pp. 3-27.
Pedrycz, W. and Gomide, F (2007). Fuzzy Systems
Engineering Toward Human Centric Computing. Wiley InterscienceIEEE, Hoboken.
Pinheiro, C., Gomide, F., Carpinteiro, O. and Lopez,
B (2009). Granular Synthesis of Rule-Based
Models and Function Approximation using
Rough Sets. Chapter in the book Novel Developments in Granular Computing, ed. JingTao
Yao, Information Science Publishing.
Pinheiro, C (2009). Projeto de controladores_fuzzy
via rough_sets. IX Congresso Brasileiro de Automação Inteligente  SBAI09, em CD.
Skowron, A. and Son, N. H (1995). Quantization of
Real value Attributes Rough Set and Boolean
reasoning approach. International Joint Conf. on
Information Sciences, pp. 34- 37.
Ziarko, W. and Katzberg, J. D (1993). Rough sets
approach to system modeling and control algorithm acquisition. IEEE Conference Communications, Computers and Power in the Modern
Environment, pp. 154- 164.

12
10

y

8
6
4

Figura 5. Gráfico referente ao modelo aproximado do Exemplo 7.

5
4

u

3
2
1
0
200

210

220

230

240

250
Tempo

260

270

280

290

300

210

220

230

240

250
Tempo

260

270

280

290

300

12

y

10
8
6
4
200

Figura 6. Gráfico com outro conjunto de medidas para validação.

Os resultados obtidos indicam que os modelos aproximados apresentam um bom potencial para modelagem baseada em regras de sistemas_complexos em
geral (não-lineares, com parâmetros variáveis, etc.).
Outros exemplos serão abordados em artigos futuros.
5 Conclusão
Neste trabalho foi proposta uma nova forma de modelagem baseada em regras. A metodologia em questão possibilita a geração de regras de modelagem de
forma sistemática e simples. As estimativas de valores dos modelos resultantes são realizadas por intermédio de formulas de interpolações convencionais.
Os resultados obtidos apresentaram precisões adequadas a aplicações praticas e comprovaram a validade da metodologia proposta.
Em trabalhos futuros serão mostrados resultados de
outros experimentos com sistemas_dinâmicos práticos
mais complexos, e aplicações em sistemas com múl-

3188