XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

DESENVOLVIMENTO DE UMA ARQUITETURA DE NAVEGACAO DELIBERATIVA
PARA ROBOS MOVEIS UTILIZANDO A TEORIA DE CONTROLE SUPERVISORIO
Lucas Molina, Joao C. Basilio, Eduardo O. Freire, Marcos V. Moreira


Programa de Engenharia Eletrica da Universidade Federal do Rio de Janeiro - PEECOPPEUFRJ,
Rio de Janeiro-RJ, Brasil.


Departamento de Engenharia Eletrica da Universidade Federal de Sergipe - DELUFS,
Sao Cristovao-SE, Brasil.

Emails lmolina@ufs.br, basilio@dee.ufrj.br, eofreire@ufs.br, moreira@dee.ufrj.br
Abstract This paper presents a development and implementation of a navigation architecture predominantly
deliberative using behavior coordination by using automata and a planning criterion based on a measure of
language (). The trajectory planning system models all robot possible moves and is basically formed of a
planner automaton that models the navigation environment and the robot actions in this environment. By
taking into account all possible robot trajectories from an initial to a final point as the sub-language of the
language generated by the planner automaton, it is possible to use parameter  as a measure of performance
for these trajectories so as to choose the best trajectory according to the adopted criterion. Simulation exercises
carried out using MobileSim software, made available by P3-DX robot manufacturer, demonstrate the efficiency
of the proposed navigation architecture.
Keywords

Mobile robot navigation, supervisory control, path planning.

Resumo Nesse artigo e apresentado o desenvolvimento e a implementacao de uma arquitetura de navegacao
predominantemente deliberativa, utilizando coordenacao de comportamentos modelados utilizando-se automatos
e um criterio de planejamento baseado em uma medida de linguagem (). O sistema de planejamento_de_trajetoria
modela todos os possveis movimentos do robo, sendo formado, basicamente, por um automato de planejamento,
que modela o ambiente de navegacao e as acoes do robo nesse ambiente. Considerando as trajetorias que levam
o robo de um ponto inicial a um ponto de destino como sendo sublinguagens da linguagem gerada pelo automato
de planejamento, e possvel utilizar o parametro  como medida de desempenho dessas trajetorias para escolher
a melhor trajetoria segundo o criterio adotado. Exerccios de simulacao realizados utilizando-se o software
MobileSim, disponibilizado pela fabricante do robo P3-DX, comprovam a eficacia da arquitetura de navegacao
proposta nesse trabalho.
Palavras-chave

.

Introducao

lar a interacao entre os diversos comportamentos
de um sistema de forma simples, permitindo ainda
a inclusao de novos comportamentos no sistema,
sem que para isso seja necessaria qualquer alteracao nos demais comportamentos ja modelados.
Em Kosecka e Bajcsy (1993) foi utilizada formalmente a teoria de automatos para demonstrar a
viabilidade da utilizacao dessa teoria na modelagem, sntese e coordenacao de diferentes comportamentos. Apos a comprovacao da viabilidade da
aplicacao de SED para tarefas de navegacao, foi
apresentado em Kosecka e Bogoni (1994) um estudo mais detalhado a respeito da controlabilidade
e observabilidade de comportamentos de navegacao baseados em automatos. Em Kosecka (1996),
a teoria_de_controle_supervisorio (Ramadge e Wonham, 1987) foi considerada na construcao e composicao de diferentes comportamentos de navegacao.

Robos moveis sao utilizados, atualmente, na execucao de diversas tarefas em que e necessario algum tipo de locomocao como por exemplo em missoes de resgate e exploracao. A complexidade das
tarefas as quais um robo e submetido tem aumentado muito e com ela, cresceu a demanda por sistemas_de_navegacao mais complexos, onde a preocupacao nao e simplesmente concluir uma tarefa
e sim conclu-la atendendo diversas especificacoes
(comportamentos). Para atender a esses objetivos
ao mesmo tempo, surgiram as teorias de composicao de comportamentos, nas quais sistemas de
controle independentes sao desenvolvidos para alcancar diferentes objetivos (comportamentos).
A elaboracao de um sistema de composicao
de comportamentos cooperativos nem sempre e
uma tarefa facil. Assim sendo, diversos pesquisadores buscaram em areas afins, tecnicas e formalismos que possibilitassem a realizacao da composicao de comportamentos de forma mais simples
e bem fundamentada. Nesse contexto, a modelagem de comportamentos atraves da teoria de sistemas_a_eventos_discretos (SED) (Cassandras e Lafortune, 2006), mais especificamente automatos,
surge como uma ferramenta que possibilita mode-

Com a evolucao da teoria_de_controle_supervisorio surgiram diferentes metodos de desenvolvimento de um controlador e, com eles, cresceu a
busca pela otimalidade dos sistemas controlados.
Em Ray e Phoha (2003) e Ray et al. (2005) foi formalizada uma medida de linguagem quantitativa
(), capaz de avaliar o desempenho de sistemas
controlados. Essa medida foi utilizada em Wang

3231

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

Figura 2 Diagrama de blocos da arquitetura de
navegacao proposta.

Figura 1 Ambiente de navegacao considerado.
et al. (2004) para definir uma maneira de selecionar os diferentes comportamentos de um sistema
de navegacao. Em Wang et al. (2005), a medida
de linguagem  foi utilizada juntamente com a
teoria de sistemas supervisores para o desenvolvimento de um sistema_de_navegacao otimo para
robos_moveis, segundo o criterio .
Esse artigo apresenta o desenvolvimento e a
implementacao de uma arquitetura de navegacao
predominantemente deliberativa, utilizando coordenacao de comportamentos modelados por automatos e um criterio de planejamento baseado em
uma medida de linguagem (). No sistema aqui
proposto, a medida de linguagem  e modificada
para funcionar como um criterio de planejamento
de trajetoria, possibilitando a escolha de uma trajetoria otima segundo esse criterio.
Este trabalho esta estruturado da seguinte
forma. Na secao 2 e apresentado o problema a
ser abordado. Na secao 3, os automatos que modelam o robo e os comportamentos admissveis no
ambiente de navegacao sao construdos e utilizados para compor um unico modelo que representa
todo o sistema. Na secao 4 e apresentada a construcao do automato de planejamento e a sua utilizacao para a determinacao da melhor trajetoria.
Na secao 5 sao apresentados os resultados obtidos, em simulacao. Finalmente, na secao 6 sao
apresentadas as conclusoes.
2

Figura 3 Distancias de translacao necessarias ao
robo para navegar no ambiente considerado.
pervisor e o responsavel por garantir a execucao
da sequencia planejada, utilizando para isso uma
composicao de comportamentos.
3

O supervisor

Para navegar no ambiente ilustrado na figura 1
um robo precisa apenas de movimentos desacoplados de translacao e rotacao, sendo que as rotacoes
devem ocorrer apenas em alguns pontos de interesse (interseccao dos corredores). Esses pontos
sao chamados de pontos de transicao. Analisando
o mapa da figura 3, e possvel observar 12 diferentes valores de distancias de translacao necessarias
ao robo para navegar neste ambiente, dos quais 8
sao fixos (que indicam as distancias entre os pontos de transicao) e os demais variaveis, que indicam ou a distancia entre a posicao atual do robo
(R) e o ultimo ponto de transicao valido (T), ou a
distancia necessaria para ir do ponto de transicao
atual (P) ao destino (D).
As distancias ilustradas na figura 3 estao associadas a eventos de acordo com a tabela 1. No
que diz respeito a rotacao, devido a simplicidade
do mapa escolhido, e necessario apenas tres valores de rotacao para o robo, quais sejam (i) 90
graus em sentido anti-horario (ii ) 90 graus em
sentido horario e (iii) 180 graus. Essas rotacoes
estao associadas a eventos de acordo com a tabela

Ambiente e arquitetura de navegacao
proposta

Para definir os movimentos necessarios ao robo na
tarefa de navegacao, e preciso definir inicialmente
o ambiente onde o robo ira navegar. O ambiente
considerado nesse trabalho esta representado na
figura 1, no qual a tarefa do sistema_de_navegacao
e levar o robo da posicao atual a uma posicao de
destino especificada, para a retirada de um item
do deposito.
O arquitetura de navegacao proposta (figura
2) e formado por dois grandes blocos o sistema
supervisor e o sistema de planejamento. O planejador e o responsavel por escolher a melhor trajetoria que leva o robo de um estado (posicao inicial) a outro (posicao de destino), enquanto o su-

3232

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

Tabela 1 Eventos que indicam os comandos de
acao do robo.
Evento
v1
v2
v3
v4
v5
vf
vr
h1
h2
h3
hf
hr
r1
r2
r3

Tabela 2 Eventos que indicam o termino de uma
tarefa de translacao, rotacao ou da navegacao.

Descricao
efetuar translacao de 1 m (v)
efetuar translacao de 2,5 m (v)
efetuar translacao de 5 m (v)
efetuar translacao de 3,5 m (v)
efetuar translacao de 6 m (v)
efetuar translacao para o destino (v)
efetuar translacao de retorno (v)
efetuar translacao de 3 m (h)
efetuar translacao de 6 m (h)
efetuar translacao de 9 m (h)
efetuar translacao para o destino (h)
efetuar translacao de retorno (h)
efetuar rotacao de 90 graus
efetuar rotacao de -90 graus
efetuar rotacao de 180 graus

Evento
v0
w0
tr



2


6

w0





v0

Et


?

1



Figura 4 Diagrama de transicao de estados de
G1 .
um supervisor. Na tabela 2 sao apresentados esses eventos, juntamente com o evento tr (tambem
nao controlavel) que indica que o robo terminou
a navegacao, ou seja, alcancou o ponto de destino
especificado. Para fins de simplificacao de notacao, sera utilizado o conjunto de eventos

v1 , v2 , v3 , v4 , v5 , vf , vr , h1 , h2 , h3 , hf , hr ,
r1 , r2 , r3 ,
 t,
Er E

em que Et e o conjunto dos eventos de translacao,
Er e o conjunto dos eventos de rotacao e E e o
conjunto de todos os eventos de movimento.
Para a obtencao do automato de navegacao, e
necessario construir o modelo a eventos_discretos
G do robo e seus movimentos admissveis no ambiente. O automato de navegacao G sera obtido
a partir da composicao de tres comportamentos
mais simples, G1 , G2 e G3 , quais sejam (i) translacao e rotacao desacoplados (G1 ) (ii ) replanejar
ao detectar um obstaculo (G2 ) e (iii) interface
operacao-planejamento-execucao (G3 ).
3.1

Er


? )

- 0
tr


6

1. Todos esses eventos sao controlaveis, uma vez
que, em sua essencia, sao comandos de acao dados ao robo para que este os execute. Para fins de
simplificacao de notacao, serao utilizados os conjuntos de eventos
Et
Er
E

Descricao
indica velocidade linear nula
indica velocidade_angular nula
tarefa realizada com sucesso

Ef  v0 , w0 , tr
para denotar o conjunto de todos os eventos que
indicam o termino de um movimento, seja de rotacao, translacao ou da tarefa como um todo. O
diagrama de transicao de estados do automato G1 ,
que modela esse comportamento, e apresentado na
figura 4.
3.2

Comportamento G2

Mesmo em um sistema_de_navegacao prioritariamente deliberativo, e necessario incluir na arquitetura de navegacao a capacidade de evitar colisoes, fazendo com que o robo, ao observar um
obstaculo em seu caminho, possa interromper a
sua acao e replanejar a execucao da tarefa. O
objetivo do automato G2 e modelar esse comportamento. Para fazer isso e necessario fazer com
que, sempre que o robo detectar a presenca de
um obstaculo em seu caminho, ele execute uma
sequencia de eventos capaz de leva-lo ao ultimo
ponto de transicao valido, onde a execucao da tarefa sera replanejada. Para realizar a modelagem
desse comportamento, sao necessarios os eventos
definidos na tabela 3. Para fins de simplificacao
de notacao, sera utilizado o conjunto de eventos

Comportamento G1

Para navegar no ambiente de navegacao proposto,
o robo precisa apenas de movimentos de translacao e rotacao desacoplados, ou seja, nao ha necessidade de movimentos em arco, por exemplo.
Alem disso, e necessario garantir que uma nova
ordem de movimento so podera ser dada ao robo
caso o robo nao esteja executando algum outro
movimento. O objetivo do automato G1 e modelar esse comportamento. Para isso, e necessario
utilizar dois eventos, quais sejam (i ) w0 , que indica que a velocidade de rotacao do robo e zero e
(ii) v0 , que indica que a velocidade de translacao
do robo e zero. Esses eventos sao nao controlaveis,
pois sua ocorrencia nao pode ser desabilitada por

Eo  od, pr, rp, rpe.
O diagrama de transicao de estados do automato
G2 que modela a deteccao_de_obstaculos e o planejamento esta representado na figura 5.

3233

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.


- 0  tr


Tabela 3 Eventos relacionados a deteccao_de_obstaculos e replanejamento.
Evento
od
pr
rp
rpe

p



)

3

E  Ei  v0 , w0 



6

an

dn

?



?
- 2
1
pe



Descricao
obstaculo detectado pelo robo
ordem para parar o robo
ordem para replanejar a tarefa
replanejamento executado

Figura 6 Diagrama de transicao de estados de
G3 .


9


6

   
vr , hr
rp
v0
8 
7 
6 
5
   
6

an

 dn

rpe

?


)
- 0
E  Ef



7


an

w0


- 0

k

od

?
  

prv0r3 1
2
3
4
   

p


?

rpe
3 
> 

6

an
dn

2


 dn

5


an

an

dn

 
?
w

Er

w0

24

23

 
6 pr

an

dn

an

dn

an

dn


v0
20 

6

an

dn


?

21



?


hr , vr
18 
16


6
6

an

dn

an


?

19



dn


?

17







?
?
R
 an
26
25
- 4
- 27
 
dn 

od


 
w
 an
pr28
30
- 31
 
dn 
6

an

dn


?

29



Figura 7 Diagrama de transicao de estados de G.
sorio que, a partir de especificacoes associadas ao
modelo do robo, produzira um sistema controlado,
cuja linguagem representa exatamente o comportamento desejado para o sistema_de_navegacao,
eliminando, assim, as sequencias indesejadas.

Automato de navegacao G

O automato de navegacao G e obtido atraves
da composicao paralela dos tres comportamentos
(G1 , G2 e G3 ) que modelam a navegacao do robo,
ou seja
G  G1 kG2 kG3 .
(1)

3.5

Especificacao de controle E1

No modelo do sistema_de_navegacao G, a capacidade de detectar obstaculos esta ativa independente da acao que o robo esteja executando. Isso e
desnecessario, uma vez que o robo, parado ou executando uma rotacao, nao precisa detectar obstaculo (para o caso de obstaculos estaticos, como os
considerados nesse trabalho). Esse fato nao representa problema algum para o comportamento do
sistema_de_navegacao G, mas aumenta a complexidade desse modelo significativamente. Para fazer
com que a capacidade de detectar obstaculos do
robo esteja ativa somente quando este estiver realizando uma translacao foi criada a especificacao
de controle E1 , cujo diagrama de transicao de estados esta representado na figura 8.

O diagrama de transicao de estados do automato
G esta representado na figura 7. Note que os estados foram renomeados com o intuito de simplificar
a notacao. Analisando esse automato e possvel
observar que existem sequencias de eventos indesejadas no sistema, como aquelas que terminam
na deteccao de um obstaculo enquanto o robo esta
parado (evento od do estado 3 para o estado 24),
por exemplo. Uma das maneiras de se corrigir esse
problema e utilizando a teoria_de_controle supervi-

Tabela 4 Eventos relacionados a interface
operacao-planejamento-execucao.
Evento
p
pe
an
dn


rp
22 

6

od

?




3.4

15


6

v0

pe

O comportamento G3 tem como objetivo modelar a sequencia de etapas necessarias ao robo, antes que este inicie a navegacao propriamente dita
e estabelecer a relacao entre o operador (pessoa
responsavel por informar o ponto de destino ao
robo e pela ativacaodesativacao da navegacao) e
o sistema. O diagrama de transicao de estados do
automato G3 , que modela esse comportamento, e
apresentado na figura 6 e os eventos associados a
esse modelo sao apresentados na tabela 4.

dn



13


6

w0



Comportamento G3

an



tr
1

3.3

dn

11


6





?
?
?
?
- 8
- 10
- 12
- 14
pr
v0
r3





- 6
 od
6

Et

?


Figura 5 Diagrama de transicao de estados de
G2 .





Descricao
ordem para planejar a tarefa
planejamento executado
ordem para ativar a navegacao
ordem para desativar a navegacao

3.6

Automato de navegacao controlado SG

Uma vez definido o automato de navegacao G e a
especificacao de controle E1 , e preciso construir o
automato SG que representa a especificacao de
controle e o comportamento do robo em um unico

3234

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.



)
- 0
Er


6

v0

Et


? )


1

od




Figura 8 Diagrama de transicao de estados de
E1 .


9


6

an

 dn

dn



11


6

an

dn



13


6

an

dn



15


6

an

dn





?
?
?
?
- 8
- 10
- 12
- 14
7
- 6
pr
r3
v0
od 





an
6

- 0

k

p



Et

v0

Figura 10 Representacao dos estado de P no
mapa.

w0

tr

?



?

rpe
3 
> 

6

1



an

pe


rp
22 

6

an

?



dn

2



5


?

Er


 dn

an

dn

w0

23




v0
20 

6

an

dn


?

21



?


hr , vr
18 
16


6
6

an

dn


?

19



an

dn


?

17




?

- 4


4

Figura 9 Diagrama de transicao de estados de
SG.

O planejador

O planejamento_de_trajetoria proposto leva em
consideracao os eventos de movimento admissveis do robo E e o mapa do ambiente de navegacao (figura 1) para possibilitar a construcao de
um automato que modele todas as possveis trajetorias que podem ser executadas pelo robo nesse
ambiente. Esse automato e denominado automato
de planejamento. Um vez construdo o automato
de planejamento, a estrategia utilizada para escolher a melhor trajetoria (sequencia de eventos)
consiste em separar as trajetorias que levam o robo
do ponto atual ao ponto de destino e, em seguida,
escolher a melhor trajetoria, segundo o criterio de
planejamento .

modelo. Para tanto, torna-se necessario obter o
seguinte resultado.
Teorema 1 A linguagem gerada por E1 (L(E1 )
e controlavel em relacao a a linguagem L(G) e
ao conjunto dos eventos nao controlaveis de G,
Euc  v0 , w0 , tr, rpe, pe.
Demonstracao.
A linguagem L(E1 ) sera
controlavel em relacao a L(G) e Euc 
v0 , w0 , tr, rpe, pe, se, e somente se, a seguinte
relacao for ser verdadeira
L(E1 )Euc  L(G)  L(E1 ),

rotacao e solicitando um replanejamento da trajetoria sempre que encontrar um obstaculo durante
uma translacao. Alem disso, sao permitidas intervencoes do operador, habilitando ou desabilitando
a navegacao, sempre que julgar necessario.

(2)

4.1

Automato de planejamento P

O automato P e um automato que modela todas
as possveis trajetorias que podem ser executadas
pelo robo no ambiente proposto. Para construir
esse automato, e preciso discretizar as posicoes do
robo no ambiente e associar cada posicao a um
estado do automato P . Existem dois tipos de estados no automato P  os estados de transicao e
os estados finais. Os estados de transicao sao os
estados associados as posicoes de intersecao dos
corredores e os estados finais sao os estados associados aos corredores. Todos esses estados estao
representados na figura 10.
Definidos os estados do automato P , as transicoes entre estes estados e determinada pelos eventos em E de forma direta, utilizando os valores de
distancia apresentados na figura 3. Por exemplo,
para o robo sair do estado 1 e ir para o estado
5 e preciso uma translacao de 1 metro na vertical

em que L(E1 )  L(E1 ), isto e, toda continuacao
nao controlavel da linguagem L(E1 ) presente na
linguagem L(G) deve tambem pertencer a L(E1 ).
O unico evento nao controlavel de E1 e o evento
v0 . Uma vez que toda transicao associada a esse
evento em L(G) tambem aparece em L(E1 ), a relacao apresentada na equacao (2) e verdadeira,
logo, a linguagem L(E1 ) e controlavel.
2
De acordo com o teorema 1 pode-se concluir,
entao, que o supervisor SG e realizavel, podendo
o seu modelo ser obtido atraves da composicao paralela entre G e E1 . O automato SG que modela
o sistema_de_navegacao controlado e apresentado
na figura 9.
Com o modelo do automato SG, o robo e
capaz de executar a sequencia de eventos definida
pelo planejador (figura 2) de forma segura, realizando movimentos de translacao, movimentos de

3235

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

(evento v1 ), para sair do estado 5 e ir para o estado
3 e preciso uma rotacao de -90 graus (evento r2 )
e assim por diante. Associando todos os possveis
movimentos do robo, em cada um dos estados do
automato P , aos eventos de movimento E, obtemse o diagrama de transicao de estados de P , que
possui 118 estados, 15 eventos (eventos em E) e
219 transicoes.
4.2

(i) se pelo menos uma das condicoes CP1,
CP2 ou CP3 for verdadeira, elimine o
no xa e atribua a ele o status de inativo.
(ii) se a condicao CP4 for verdadeira, entao,
o no xa e uma folha. Atribua a ele o
status de inativo.
(iii) se nenhuma das condicoes CP1, CP2,
CP3 ou CP4 for verdadeira, entao, crie
os descendentes do no ativo xa da seguinte forma suponha que (xa ) 
v3 , v4 , v5 , h2 , h3   na . Crie, entao, na descendentes de xa e rotuleos como x0  f (xa , ),   (xa ) 
v3 , v4 , v5 , h2 , h3 . Atribua aos nos criados o status de ativo e ao no xa o status
de inativo.

Possveis trajetorias

Utilizando o automato de planejamento descrito
na secao 4.1, e possvel definir uma trajetoria
como uma sequencia de eventos que leva o robo
de um estado para outro. No entanto existem infinitas trajetorias que levam o robo de um estado
inicial xi a um estado de destino xr . Isso ocorre
porque a estrutura do ambiente permite ao robo
revisitar o mesmo ponto de transicao (intersecao
de corredores) infinitas vezes antes de chegar ao
seu destino, criando assim lacos de repeticao infinitos. Para contornar esse problema, foi utilizado
um algoritmo de planejamento para realizar uma
busca pelas trajetorias candidatas, criando uma
arvore com todas as sequencias desde o estado
atual do robo ate o estado de destino especificado.
Essa busca possui quatro criterios de parada que
indicam o fim de um dos ramos da arvore de busca,
quais sejam
1) CP1 A trajetoria chegou a um estado pertencente a um ponto de transicao ja visitado
2) CP2 A trajetoria chegou a um estado final
diferente daquele associado ao ponto de destino
do robo
3) CP3 A trajetoria contem duas rotacoes seguidas
4) CP4 A trajetoria chegou ao estado final associado ao ponto de destino do robo.
Os ramos da arvore que forem interrompidos com
os criterios de parada CP1, CP2 e CP3 serao excludos da busca, enquanto que os ramos que terminarem com o criterio CP4 serao as possveis trajetorias selecionadas. O algoritmo de busca baseado na construcao de uma arvore, e apresentado
a seguir.

Passo 4 Se existir algum no ativo na arvore volte
para o Passo 3. Caso contrario, va para o
Passo 5.
Passo 5 As possveis trajetorias sao as menores
sequencias de eventos que partem da raiz ate
as folhas. O numero de possveis trajetorias
e igual ao numero de folhas.
O resultado do algoritmo 1 e um conjunto nao
ordenado de sequencias de eventos que levam o
robo do estado atual ao estado de destino.
4.3

Criterio de planejamento utilizando 

Definidas as possveis trajetorias para alcancar um
ponto de destino, e preciso, agora, ordenar essas
trajetorias, sob algum criterio, possibilitando a escolha da melhor trajetoria e finalizando, assim, a
etapa de planejamento. Seja XP o espaco_de_estados do automato P , L(Pi ) a linguagem gerada
pelo automato P a partir do estado i, ou seja,
L(Pi )  s  E   f (i, s)  XP ,

(3)

Lj  sj , j  1, 2, ..., t ,

(4)

e
em que sj e a j-esima possvel trajetoria que leva
o robo do estado atual i ao seu destino, Lj e a
linguagem definida pelo fecho do prefixo da trajetoria sj e t e o numero de possveis trajetorias
encontradas pelo algoritmo 1. Assim sendo, as
linguagens Lj sao sublinguagens de L(Pi ), isto e

Algoritmo 1
Passo 1 Defina como a raiz da arvore o estado
atual do robo no automato P .

Lj  L(Pi ), j  1, 2, ..., t.

Passo 2 Crie os descendentes da raiz da seguinte
forma
Suponha que (xi )  v3 , v4 , v5 , h2 , h3  
ni . Crie, entao, ni descendentes de xi e
rotule-os como x0  f (xi , ),   (xi ) 
v3 , v4 , v5 , h2 , h3 . Atribua aos nos criados
o status de ativo e a raiz o status de inativo.

(5)

Analisando sob essa perspectiva, e possvel transformar um conjunto nao ordenado ou parcialmente ordenado de sublinguagens de L(Pi ), em
um conjunto de sublinguagens totalmente ordenado, utilizando o parametro de avaliacao_de_desempenho_de_controladores, ou sublinguagens, .
Para tanto, e preciso definir dois parametros do
automato P  o vetor caracterstico, X , e a matriz de transicao de estados , a partir dos quais

Passo 3 Para cada um dos nos ativos xa da arvore faca

3236

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

e possvel calcular o vetor  atraves da seguinte
equacao
(6)
  (I  )1 X .
4.3.1

Vetor caracterstico (X )

Considerando a lei de formacao do vetor caracterstico apresentada em Ray et al. (2005), deve-se
associar um valor Xi , diferente de zero, a cada estado i do automato P , de acordo com o impacto
desse estado no sistema modelado. No caso do
automato de planejamento desenvolvido, a construcao do vetor caracterstico X segue a seguinte
lei de formacao

se i  xr 
 0,
1,
se i  xf 
Xi 
(7)

 < 0, do contrario.

Figura 11 Ponto inicial I e ponto de destino F
para os experimentos 1 e 2 e o obstaculo do experimento 2.
Tabela 5 Resultado do planejamento para alcancar o destino F , partindo do ponto I.
Sequencia
s1
s2
s3
s4
s5

em que xr e o estado do robo no automato P no
momento da solicitacao do planejamento, xf e o
estado do automato P que corresponde ao destino especificado para o robo e  e um valor negativo, para indicar os estados marcados indesejaveis. Para o sistema de planejamento proposto
adotou-se   1  104 . Esse valor foi alterado
em diversos experimentos, para valores menores
que zero e maiores que 1102 , sem, no entanto,
apresentar alteracoes na trajetoria escolhida pelo
planejamento.
4.3.2

5

Eventos
v5 r1 h1 hf
v1 r1 h1 r2 v3 r1 hf
v4 r1 h1 r2 v2 r1 hf
v1 r1 h2 r2 v3 r2 hf
v4 r1 h2 r2 v2 r2 hf

1
1,0000
0,2500
0,2500
0,1249
0,1249

Resultados obtidos em simulacao

Para ilustrar o funcionamento do sistema_de_navegacao proposto foi utilizado um exemplo de seu
funcionamento, em que o robo parte do ponto I
com destino ao ponto F com um obstaculo na posicao indicada na figura 11.
Nesse experimento, a posicao x  5, 5 e y 
0, 5 (ponto F ) foi definida como destino para o
robo e em seguida o planejamento foi ativado. As
cinco melhores trajetorias encontradas pelo planejamento sao apresentadas na tabela 5, em que a
sequencia s1 representa a trajetoria escolhida pelo
planejamento.
O robo inicializa a execucao da trajetoria planejada normalmente ate o momento em que um
obstaculo e detectado (figura 12), quando ocorre
o evento od. Nesse momento, em virtude do comportamento modelado pelo automato G2 , o robo
recebe o comando para interromper a execucao da
tarefa (evento pr) e, apos parar completamente
(evento v0 ), ele retorna ao ultimo ponto de transicao valido (sequencia r3 w0 hr v0 ). Apos a ocorrencia desses eventos o sistema de planejamento
e acionado novamente para replanejar a trajetoria, definindo, desta vez, a sequencia de eventos
que levara o robo da posicao atual ate o ponto
de destino especificado F . Para evitar que, no
replanejamento, o robo seja mandado novamente
na direcao do obstaculo, o evento r3 (rotacao de
180 graus) e desabilitado, garantindo que, no caminho replanejado, o robo nao passara pelo corredor onde se encontra o obstaculo. Na tabela 6 sao
apresentadas as cinco melhores trajetorias escolhidas pelo sistema de planejamento, ordenadas se-

Matriz de transicao de estados ()

Para definir os elementos da matriz , segundo os
resultados apresentados em Wang e Ray (2004) e
Ray et al. (2005), e preciso conhecer a probabilidade  de ocorrencia dos evento em P . No caso
deste trabalho, como o automato P nao representa
uma planta fsica, a probabilidade de ocorrencia
de um evento depende da posicao inicial do robo
e do ponto de destino do mesmo, que nao podem
ser determinados a priori. Para contornar esse
problema foi considerado que a probabilidade do
robo, estando em um estado qualquer x, executar um evento qualquer e1 e a mesma de executar
um outro evento e2 , desde que e1 , e2   (x), e
que a probabilidade do robo executar um evento
e3 e zero se e3 6 (x). Dessa forma, foi definida a
seguinte lei de formacao para os elementos 

, se et  (xi )
it 
(8)
0, se et 6 (xi ),
para qualquer et  E e qualquer xi  XP . O valor
de  utilizado nesse trabalho foi 0,2 para respeitar
a formalizacao da medida de linguagem  (Wang
e Ray, 2004 Ray et al., 2005), que diz que
X
it < 1, xi  Xp e et  E.
(9)
j

Dessa forma, os elementos ij da matriz  podem
ser definidos em funcao de it como sendo
P
ij 
(10)
et E it , se f (xi , et )  xj .

3237

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

para representar todos os possveis movimentos do
robo. A linguagem L(Pi ) do automato P foi utilizada na obtencao do vetor caracterstico (X ) e
da matriz de transicao de estados (), necessarios para a construcao da medida de linguagem
. Considerando as trajetorias que levam o robo
de um ponto inicial I a um ponto de destino F
como sendo sublinguagens de L(Pi ), foi possvel
utilizar o parametro  como medida de desempenho dessas trajetorias e, dessa forma, escolher a
melhor trajetoria segundo o criterio adotado. O
sistema supervisor final funcionou conforme esperado, garantindo a correta execucao da sequencia
de eventos planejada.

Figura 12 Trajetoria executada pelo robo no experimento 2, ate a deteccao de um obstaculo.
Tabela 6 Resultado do replanejamento para alcancar o destino F .
Sequencia
s1
s2
s3
s4
s5

Eventos
r2 v2 r2 h1 r2 v2 r1 hf
r2 v2 r2 h2 r2 v2 r2 hf
r2 v3 r2 h1 r2 v3 r1 hf
r2 v2 r2 h3 r2 v2 r2 h1 hf
r2 v3 r2 h2 r2 v3 r2 hf

Agradecimentos

14
1,0000
0,4999
0,2498
0,1248
0,1248

Os autores gostariam de agradecer a CAPES e ao
CNPq pelo apoio financeiro que tornou possvel a
realizacao desse trabalho.
Referencias
Cassandras, C. G. e Lafortune, S. (2006). Introduction
to Discrete Event Systems, Springer-Verlag New
York, Inc.

gundo o criterio de planejamento 14 (o ndice 14
e determinado pelo estado atual do robo no automato de planejamento P , estado 14). A trajetoria
escolhida para ser executada pelo robo e aquela
definida pela sequencia s1 da tabela 6, cujo resultado obtido e ilustrada na figura 13. Como na
nova trajetoria nao existem obstaculos no caminho
do robo, a execucao da tarefa ocorre normalmente,
com o robo alcancando o destino especificado.
6

Kosecka, J. (1996). Supervisory control theory for
autonomous mobile agents.
Kosecka, J. e Bajcsy, R. (1993). Discrete event systems for autonomous mobile agents, Robotics and
Autonomous Systems 12 187198.
Kosecka, J. e Bogoni, L. (1994). Application of discrete events systems for modeling and controlling robotic agents, Proceedings of IEEE International Conference on Robotics and Automation,
pp. 22572262.

Conclusao

Nesse trabalho foi apresentado o desenvolvimento
e a implementacao de uma arquitetura de navegacao predominantemente deliberativa utilizando
coordenacao de comportamentos modelados por
automatos e um criterio de planejamento baseado
na medida de linguagem .
O sistema de planejamento_de_trajetoria, utilizou um modelo em sistemas_a_eventos_discretos (automato de planejamento P ) do ambiente
de navegacao e das acoes do robo nesse ambiente

Ramadge, P. J. G. e Wonham, W. M. (1987). Supervisory control of a class of discrete event process,
SIAM Journal of Control Optim. 25(1) 206 
230.
Ray, A. e Phoha, S. (2003). Signed real measure of regular languages for discrete-event automata, International Journal of Control 76 1800  1808.
Ray, A., Phoha, V. V. e Phoha, S. (2005). Quantitative
Measure for Discrete Event Supervisory Control,
1 edn, Springer Science + Business Media.
Wang, X., Fu, J., Lee, P. e Ray, A. (2004). Robot behavioral selection using discrete event language measure, Proceedings of the 2004 American Control Conference.
Wang, X. e Ray, A. (2004). A language measure for
performance evaluation of discrete-event supervisory control systems, Applied Mathematical Modeling 28 817  833.
Wang, X., Ray, A., Lee, P. e Fu, J. (2005). Optimal control of robot behavior using language measure, Quantitative Measure for Discrete Event
Supervisory Control pp. 157  182.

Figura 13 Trajetoria completa executada pelo
robo no experimento 2.

3238