Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

UM ESTUDO COMPARATIVO ENTRE ARQUITETURAS NEURAIS APLICADAS A
UM ROBO AUTONOMO EM TRAJETORIA ORIENTADA
Hugo V. D. Silva, Wylliam S. Gongora, Alessandro Goedtel, Marcos B. R. Vallim
Universidade Tecnologica Federal do Parana - UTFPR
Programa de Pos-Graduacao em Engenharia Eletrica
Av. Alberto Carazzai, 1640, Cornelio Procopio, Parana, Brasil
E-mails a1218735@pos.utfpr.edu.br, a1035258@pos.utfpr.edu.br, agoedtel@utfpr.edu.br,
mvallim@utfpr.edu.br
Abstract This article has the objective to contribute to the study of artificial neural networks by comparing
the different architectures applied to control navigation of a line follower robot. This autonomous navigation
device is built with Lego Mindstorms NXT R kit, and its goal is to shift on a specific track the trajectory to be
followed. Two different paths are constructed where the networks are trained and validated. This paper presents
comparison between the data and the evolution of the robot for each neural network topology.
Keywords

Robot line follower, navegation control, artificial neural network, recurrent networks.

Resumo Este artigo tem o objetivo de contribuir para os estudos da redes_neurais_artificias comparando
as diferentes arquiteturas aplicadas ao controle_de_navegacao de um robo_seguidor_de_linha. Este dispositivo de
navegacao_autonoma e construdo com o kit Lego Mindstorms NXT R , e seu objetivo e o deslocamento sobre
uma faixa que especfica a trajetoria a ser seguida. Sao construdos dois percursos diferentes onde as redes sao
treinadas e validadas. O artigo apresenta a comparacao entre os dados e a evolucao do robo para cada topologia
de rede_neural.
Palavras-chave

.

Introducao

No incio dos anos 60 os primeiros robos foram desenvolvidos com o principal objetivo de substituir
os humanos nas realizacoes de tarefas consideradas perigosas ou em casos de extremo esforco fsico, podendo destacar a manipulacao e armazenamento de pecas utilizadas no ambiente industrial
(Pazos, 2002).
Atualmente os robos estao presentes nas mais
diversas areas, sendo que em algumas aplicacoes,
e necessario que o robo seja capaz de definir uma
trajetoria de deslocamento.
O problema de controle_de_robos_moveis exibe
dois subproblemas principais sendo a navegacao,
a qual designa a determinacao de posicao e orientacao do veculo em um dado instante de tempo, e
a guiagem referente ao controle da trajetoria (Lora
et al., 1998 Chen et al., 2011).
Nos ultimos anos, com a capacidade computacional aumentada e a minimizacao dos hardwares,
tornou-se possvel a entrada dos sistema inteligentes aplicados a navegacao de robos_moveis, criando
o conceito de navegacao_autonoma e automatica
(Steels, 1995 Oliveira, 2010).
Segundo Steels (1995), um agente autonomo e
definido por um elemento que alem de agir por si
so, consegue se auto-regular gerando suas proprias
regras de controle. Assim, pode-se diferenciar um
agente autonomo de um automatico. Este, por sua
vez, visando realizar as tarefas ja estabelicidas,
interage com o ambiente a que esta inserido.
Os sistemas_inteligentes tem sido utilizados na
resolucao dos problemas relativos a trajetoria de
robos. Tais sistemas sao baseados na Logica Nebulosa (LN), Algoritmos Geneticos (AG) e Redes

ISBN 978-85-8001-069-5

Neurais Artificias (RNAs).
Neste contexto, a LN e empregada para determinar a trajetoria a ser seguida, onde suas regras
de implicacao definem a maneira em que sera executado o percurso (Gartner e Astolfi, 1996 Lee
et al., 2003 Dongshu et al., 2011).
O AG e empregado para determinar as possveis trajetorias que o robo pode percorrer. Uma
vez determinado o conjunto de solucoes, este metodo tem por objetivo encontrar a resposta otima
ao problema de trajetoria (Siciliano, 2006).
As RNAs, tambem se mostram eficazes na
sntese de arquiteturas de controle em navegacao de robos. Estas se caracterizam por modelos_de_aprendizagem que apresentam um grande
poder de representacao de conhecimento, possuindo ainda as caractersticas de generalizacao
(Cazangi, 2004).
A proposta deste trabalho e apresentar um estudo comparativo entre as estruturas neurais aplicadas no controle_de_trajetoria do robo seguidor
de linha, construdo com o kit Lego Mindstorm
NXT R . Os sinais dos sensores de luminosidade
do robo sao as entradas da rede, e as sadas da
RNA sao diretamente repassadas aos motores, garantindo a permanencia do robo em sua trajetoria
sobre uma linha. As caractersticas de cada topologia, os parametros de treinamento e a organizacao dos dados sao relatadas neste trabalho.
O artigo esta estruturado da seguinte forma
a Secao 2 descreve os modelos das RNAs utilizadas. Na Secao 3, as caractersticas construtivas
do robo e os percursos utilizados sao detalhados.
A Secao 4 apresenta um estudo comparativo entre as aplicacoes das arquiteturas. Finalizando, na
Secao 5 as conclusoes sao apresentadas.

3445

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

2

Modelos das Redes Neurais Artificiais

As RNAs sao sistemas_computacionais para processamento de informacoes paralelas tendo uma
composicao simples de unidades de processamento
interligadas entre si (Haykin, 2001). As RNAs
sao modelos computacionais inspirados no sistema
nervoso de seres vivos as quais sao interligadas por
um grande numero de conexoes conhecidas como
sinapses artificiais.
Utilizando como base a Figura 1, onde e proposto o modelo do neuronio artificial, tem-se que o
processamento das informacoes ocorre por calculos matriciais matematicos onde cada unidade de
processamento () imputa um peso ao dado de entrada (x) e este, por sua vez, apos um somatorio
das entradas ponderadas e o bias (), e processado por uma funcao de ativacao (f (u)). Assim
obtem-se uma resposta (y) a qual a rede foi treinada (Rosenblatt, 1958).

Assim pode-se dizer que as RNAs sao empregadas para classificar padroes, analisar series
temporais, minerar dados, agrupar resultados e
como aproximador universal de funcoes baseadas no conhecimento previamente adquirido e sua
capacidade de generalizacao das situacoes (Silva
et al., 2010).
Quando aplicadas ao controle_de_trajetoria,
estas redes utilizam-se da capacidade de generalizacao para processar os dados nao apresentados
em seu treinamento na finalidade de manter a orientacao ao objetivo definido.

2.1

Redes Perceptron Multiplas Camadas

As redes Perceptrons Multiplas Camadas (PMC)
tem por base a estrutura apresentada por Rosenblatt (1958). A diferenca consiste na arquitetura a
qual apresenta uma ou mais camadas intermediarias, onde podem estar contidos desde um simples
neuronio a inumeros, como visto na Figura 2.

Figura 1. Neuronio Artificial
Os modelos_matematicos destas unidades tendem a imitar o processamento de informacoes de
um neuronio cerebral humano (Hebb, 1949), e
desta forma adquirem a capacidade de aprendizagem e generalizacao do conhecimento.
As equacoes 1 e 2 expressam a relacao da sada
(y) com as entradas (xi ) dos neuronios. Sendo
o processamento, um somatorio do produto das
entradas por seus respectivos pesos e considerando
n o numero total de neuronios, tem-se
u

n
X

Figura 2. Modelo de uma PMC
Considerando que as entradas de cada camada
sao os valores da multiplicacao matricial de todos
os elementos da camada anterior pelo seus respectivos pesos, pode-se descreve esta operacao pelas
equacoes 3 e 4 (Haykin, 2001 Silva et al., 2010).

I1j 

1ji xi  j  1...N1

(3)

2ji y1i  j  1...N2

(4)

i0

(i xi )  

(1)

i1

y  f (u)

(2)

Haykin (2001), descreve que uma rede_neural
extrai seu poder computacional maximo atraves
de sua estrutura e sua habilidade de aprender e
generalizar. As sadas da RNA representam o sistema em questao mesmo recebendo entradas que
nao estavam no processo de treinamento sem alterar resultados.
De acordo com Wasserman e Schwartz (1988),
o conhecimento se trata de uma informacao ou
mesmo um modelo que e utilizado por pessoas ou
maquinas a fim de interpretar, prever e responder
apropriadamente aos estmulos do mundo exterior.

ISBN 978-85-8001-069-5

n
X

I2j 

n
X
i0

Sendo que j e o numero de entradas da camada, e N1 e N2 sao os numeros de neuronios
presentes nas respectivas camadas.
A funcao de ativacao de cada neuronio deve
ser derivavel em todo o seu intervalo. Como exemplo pode-se utilizar a funcao logstica apresentada
na equacao 5, onde o termo a determina a evolucao da reta. Em alguns casos, utiliza-se a variacao
da sada da funcao de ativacao entre 1 e 1, caracterstica da funcao tangente_hiperbolica, mostrada
na equacao 6.

3446

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

f (u) 

f (u)  tgh

1
1 + eax

(5)

x
1  ex

2
1 + ex

(6)

Logo, aplicando o conjunto de sada de cada
camada (n) a equacao 2, obtem-se os vetores mostrados nas equacoes 7 e 8.
Figura 3. Modelo de uma TDNN
y1j  f (I1j ) j  1..N1

(7)

y2j  f (I2j ) j  1..N2

(8)

Tambem se define que seu treinamento e realizado de forma supervisionada, fazendo com que
a rede ajuste adequadamente seus pesos para melhor atender os objetivos determinados. As variacoes dos pesos sao obtidas pelo somatorio das diferencas entre os valores calculados e os desejados,
multiplicados por um coeficiente de aprendizado
(). Onde p, e o numero de amostras utilizadas
no treinamento, definido pela equacao 9.
  .

p
X

(dj (k)  yj (k))x(k)

(9)

k1

Assumindo que a diferenca entre o valor desejado (dj ) e a sada (yj ) da RNA diminui a cada
epoca de treinamento, utiliza-se a funcao do erro
quadratico medio para mensurar o desvio das respostas produzidas pelos neuronios, conforme mostrada na equacao 10.
p

EM 

2.3

PMC com sadas recorrentes as entradas

Esta estrutura PMC, conhecida como Nonlinear
Auto-Regressive with Exogenous Inputs (NARX),
possui uma lembranca das sadas anteriores. Suas
respostas sao atrasadas de uma unidade de tempo
e posteriormente reapresentadas as entradas, produzindo uma melhor resposta de generalizacao da
rede (Leontaritis e Billings, 1985).
Seus dados sao organizados considerando um
atraso de (p) amostras para as entradas, que sao
deslocadas dentro do vetor de entrada. Da mesma
forma, as sada recorrentes sao atrasadas de (q)
amostras, e realocadas no sentido decrescente. A
topologia desta RNA e mostrada na Figura 4.

N

2
1 XX
2
(dj (k)  yj (k))
2p
j1

(10)

k1

Desta forma e possvel acompanhar o desempenho do treinamento da rede e determinar um
valor mnimo de EM para convergencia dos resultados na busca dos melhores pesos.
2.2

PMC com entradas atrasadas no tempo

Uma rede_neural normalmente utilizada para realizar processamento temporal e a Time Delay
Neural Network (TDNN), que utiliza a arquiterura PMC e possui a caracterstica de predizer os
valores posteriores utilizando as entradas anteriores apresentadas a rede (Lang e Hinton, 1988).
As redes TDNN possuem um atraso em suas
entradas de p amostras, como apresentado na Figura 3.
O processo de aprendizado de uma PMC com
entradas atrasadas e semelhante a PMC convencional (Silva et al., 2010). Sendo assim, sua principal diferenca esta nos conjuntos de dados, onde as
amostras sao organizadas considerando o atraso
entre elas.

ISBN 978-85-8001-069-5

Figura 4. Modelo da rede NARX

Assim, pode-se dizer que esta topologia apresenta uma memoria, pois utiliza-se dos valores
passados que sao atualizados a cada passo de calculo, sendo capaz de produzir respostas atuais e
tambem futuras.
Estas estruturas, quando aplicadas ao controle_de_trajetoria do robo, demonstram a capacidade de generalizacao e melhoram a dinamica do
agente em sua trajetoria.

3447

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

3

O robo e os percursos utilizados

O robo_seguidor_de_linha possui como caracterstica a movimentacao por uma superfcie buscando
manter-se sobre uma trajetoria referencial. Esta
trajetoria especfica ao robo o caminho que deve
ser seguido, sendo determinada por uma linha fixa
na superfcie.

3.1

Sensores e Atuadores

O kit Lego Mindstorms NXT R possui varios tipos de sensores, tais como sensor de toque, som,
luminosidade, distancia, entre outros.
Neste trabalho sao utilizados dois sensores de
luminosidade para determinar a trajetoria a seguir, como pode ser observado na Figura 6.

Levin e Mioduser (1996), propuseram a montagem de um robo utilizando um sensor de luminosidade e dois motores. Nesta estrutura, a rotina
de controle busca encontrar o limite da linha de
referencia, alternando o acionamento dos motores
responsaveis pelo deslocamento. Assim, pode-se
dizer que e realizado um controle_por_histerese,
mantendo o sinal do sensor de luminosidade dentro de uma faixa de operacao determinada.
Neste trabalho, opta-se pela substituicao da
tecnica de controle_por_histerese por uma proposta
de controle_inteligente, onde uma RNA e responsavel pelo processamento dos sinais do robo. Tendo
assim um deslocamento contnuo sem realizar paradas alternadas dos motores.
O robo_seguidor_de_linha utilizado nesta proposta possui dois sensores de luminosidade, com
a funcao de perceber o ambiente, e dois motores de corrente contnua para o seu deslocamento.
Com base na plataforma do kit Lego Mindstorm
NXT R , o robo tem sua estrutura mostrada na Figura 5.

Figura 6. Esquematico do robo_seguidor_de_linha

Os sensores de luminosidade operam com um
par de emissor e receptor, medindo o grau de reflexao da luz vermelha emitida sobre a superfcie.
O sinal adquirido pelos sensores (S1 e S2), variam
entre 0 a 100, e estes valores sao ponderados e
repassados como entradas da rede (x1 e x2 ). Os
sinais de controle (y1 e y2 ) sao gerados pela RNA e
repassados diretamente aos atuadores (Motor A e
Motor B), que sao responsaveis pelo deslocamento
no percurso e correcao da trajetoria.
3.2

Figura 5. Robo Lego

O kit Lego Mindstorm NXT R possui um
bloco programavel NXT (brick ) que dispoe de
quatro entradas para sensores e tres sadas para
motores. Um processador ARM 7TM e responsavel pela execucao do algoritmo, gerenciamento dos
drivers de acionamento dos motores e comunicacao com os sensores externos. O dispositivo e alimentado por uma bateria interna, o que dispensa
a utilizacao de fontes de energia conectadas ao experimento.

ISBN 978-85-8001-069-5

Processamento e comunicacao

O processo de aprendizagem para todas as topologias propostas e realizado de modo off-line. Assim
o treinamento da rede e realizado fora do ambiente
de operacao.
Os dados coletados sao repassados ao computador utilizando uma conexao Bluetooth. O sinal
do controlador e processado e entao devolvido ao
agente, garantindo assim a total liberdade de movimento ao robo desenvolvido.
Um dado considerado na velocidade de comunicacao e o tempo de envio e retorno dos pacotes, sendo para estes equipamentos de aproximadamente 150 ms.
3.3

Percursos utilizados

Para demonstrar a aplicabilidade e desempenho
das RNAs em problemas de navegacao_autonoma
com trajetoria orientada, foram utilizados dois
percursos para testes. O primeiro percurso e um
circuito elptico, composto de curvas de 12 cm de
raio, com um permetro reduzido. Com este percurso busca-se visualizar as tendencias dos movimentos do robo.

3448

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

Ja no percurso avancado, procura-se explorar
o desempenho na execucao de caminhos sinuosos.
Este percurso possui curvas para ambos os lados e,
alem das curvas abertas, algumas acentuadas que
formam angulos de 90o . Na Figura 7 sao apresentados os dois circuitos utilizados para os testes.

Figura 7. Circuito elptico e circuito avancado

4

Comparativo entre arquiteturas neurais

As redes_neurais tem sido aplicadas em problemas associados a navegacao_autonoma (Cazangi,
2004), tendo em vista sua capacidade de aprendizado, adaptacao e generalizacao (Haykin, 2001).
Assim, a proposta deste artigo e apresentar um estudo comparativo entre tres arquiteturas neurais
aplicadas a um robo_seguidor_de_linha. A Figura
8 apresenta a metodologia proposta neste artigo.

Figura 8. Esquematico controle_de_trajetoria
As entradas das RNAs sao os sinais ponderados dos sensores de luminosidades do robo (x1 e
x2 ) e as suas sadas (y1 e y2 ) sao os sinais aplicados aos motores. Para a coleta dos dados de
treinamento, o robo e deslocado manualmente pelos circuitos e os valores obtidos dos sensores de
entradas juntamente com a leitura dos sinais de
sadas dos atuadores sao transmitidos e armazenados em uma matriz de dados no computador
pessoal. Utilizando a matriz coletada, esta e reorganizada considerando a topologia da construcao
da RNA.

4.1

Caracterizacao das estruturas neurais

Tres arquiteturas de RNAs foram abordadas neste
estudo a PMC, a TDNN e a NARX. A Tabela 1
apresenta um resumo dos parametros das RNAs
utilizadas neste artigo.

ISBN 978-85-8001-069-5

Tabela 1. Caractersticas das RNAs
Tipo
Arquitetura
Treinamento
No Camada
intermediaria
Neuronios
1 camada
Neuronios
sada
Algoritmo de
Treinamento
Funcao de
ativacao
1 camada
Funcao de
ativacao
sada
Entradas
atrasadas
Sadas
recorrentes

Rede 1
PMC
PS
1

Rede 2
TDNN
PS
1

Rede 3
NARX
PS
1

10

3

3

2

2

2

BP

BP

BP

Funcao
Logstica

Tangente
Hiperbolica

Tangente
Hiperbolica

Funcao
Logstica

Funcao
Linear

Funcao
Linear

-

10

10

-

-

10

(BP) Backpropagation
(PS) Supervisionada

Tais parametros foram obtidos atraves do treinamento supervisionado das redes, aplicando o
metodo de validacao cruzada. A organizacao dos
dados e sua apresentacao as redes sao descritas na
Tabela 2.

Tabela 2. Organizacao
Entradas Rede1
1
x1 (t)
2
x2 (t)
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
-

das entradas das RNAs
Rede 2
Rede 3
x1 (t)
x1 (t)
x2 (t)
x2 (t)
x1 (t  1) x1 (t  1)
x2 (t  1) x2 (t  1)
x1 (t  2) x1 (t  2)
x2 (t  2) x2 (t  2)
x1 (t  3) x1 (t  3)
x2 (t  3) x2 (t  3)
x1 (t  4) x1 (t  4)
x2 (t  4) x2 (t  4)
x1 (t  5) x1 (t  5)
x2 (t  5) x2 (t  5)
y1 (t  5)
y2 (t  5)
y1 (t  4)
y2 (t  4)
y1 (t  3)
y2 (t  3)
y1 (t  2)
y2 (t  2)
y1 (t  1)
y2 (t  1)

Os parametros referentes ao treinamento das
redes, tais como o Erro Quadratico Medio (EQM),
coeficiente de aprendizado e numero de epocas de
treinamento sao especficos para cada topologia,
conforme pode ser visto na Tabela 3.

3449

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

Tabela 3. Parametros de treinamento das RNA
Tipo
Rede 1 Rede 2 Rede 3
EQM
106
109
107
Coef. Aprendizado
0,1
0,01
0,001
Epocas
500
300
1000

nado, ja para o sentido contrario apresenta erros
na execucao das curvas.

A Rede 1 foi treinada com um EQM objetivo
de   106 e um coeficiente de aprendizado de
  0, 1, sendo necessarias 135 epocas de treinamento para convergencia.
Na Rede 2, a RNA foi treinada com um EQM
objetivo de   109 e um coeficiente de aprendizado de   0, 01, onde a convergencia e alcancada
com 60 epocas.
A Rede 3 foi treinada com um EQM objetivo
de   107 e um coeficiente de aprendizado de
  0, 001. A convergencia desta estrutura foi
alcancada com 350 epocas.
4.2

Teste e validacao das estruturas neurais

Concludo o treinamento da Rede 1 inicia-se a
etapa de teste que consiste na implementacao da
RNA no robo_seguidor_de_linha. O robo mostrouse eficiente realizando corretamente os dois percursos em que foi treinado, nos sentidos horario e
anti-horario, mas em baixa velocidade.
Apos o mesmo treinamento, mas aplicado
a Rede 2, o robo apresentou uma melhora significativa principalmente nas sadas das curvas.
Quando comparada com a Rede 1, o robo corrige
mais rapidamente sua posicao realizando movimentos mais suaves, mas ainda apresentando uma
evolucao lenta, como pode ser observado na Figura 9. O robo tambem realizou os dois percursos
nos dois sentidos sem apresentar erros.

Figura 10. Sinal atuador circuto elptico Rede 2
e Rede 3
Tendo em vista as limitacoes observadas na
validacao da rede no circuito avancado, um novo
treinamento da Rede 3 foi realizado, onde sao
apresentados somente os dados do percurso elptico. Em um novo teste, o robo completou o
percurso somente no sentido treinando diferentemente das Rede 1 e Rede 2.

5

Conclusoes

Este trabalho apresenta um estudo comparativo
entre as topologias de RNAs aplicadas ao controle
de trajetoria de um robo_autonomo. Nesta proposta, as redes com atraso ou recorrencia mostraram um melhor desempenho.

Figura 9. Sinal atuador Rede 1 e Rede 2
Apos a fase de treinamento do percurso avancado, a Rede 3 foi submetida ao teste.
O
robo apresentou as mesma caractersticas da Rede
2, porem com uma velocidade aproximadamente
30 maior, como pode ser observado na Figura
10. No entanto, a evolucao teve os movimentos
menos suaves. Um fato a ser considerado nesta
topologia, e que o robo realiza corretamente o percurso avancando apenas no sentido que foi o trei-

ISBN 978-85-8001-069-5

A Rede 2 mostrou uma maior aplicabilidade
do que a Rede 1 principalmente quando se compara o reincio dos trechos de reta. Devido a sua
caracterstica de gravar a tendencia do percurso,
esta retoma a direcao do robo aplicando sinais menos oscilatorios.
Ja para a Rede 3, e possvel a execucao do
percurso com uma velocidade 30 maior do que
a Rede 2, mas com sinais de controle mais oscilatorios. Vale ressaltar que a Rede 3 executou com
perfeicao apenas os percursos no sentido em que
foi treinada, nao generalizando de forma correta
as informacoes no sentido contrario.

3450

Anais do XIX Congresso Brasileiro de Automática, CBA 2012.

Agradecimentos
Este trabalho e financiado pela FINEP - Financiadora de Estudos e Projetos (Processo No
49712006). O mesmo conta com o apoio da Fundacao de Apoio a Educacao, Pesquisa e Desenvolvimento Cientfico e Tecnologico da UTFPR
(FUNTEF), da Fundacao Araucaria de Apoio ao
Desenvolvimento Cientfico e Tecnologico do Parana, do Conselho Nacional de Desenvolvimento
Cientfico e Tecnologico - CNPq Brasil (Processo
No 4742902008-5, 5522692011-5, 47357620112) e bolsas Capes-DS.
Referencias
Cazangi, R. R. (2004). Uma Proposta Evolutiva para Controle Inteligente em Navegacao Autonoma de Robos, Tese de Doutorado,
Universidade Estadual de Campinas, Campinas.
Chen, F., Ma, C., Ma, W., Zhu, H., Zhu, J. e Yi,
L. (2011). Study on mobile robot navigation
based on strategy of blind man finding way,
Mechatronics and Automation (ICMA), 2011
International Conference on, pp. 10451049.
Dongshu, W., Yusheng, Z. e Wenjie, S. (2011).
Behavior-based hierarchical fuzzy control for
mobile robot navigation in dynamic environment, Control and Decision Conference
(CCDC), 2011 Chinese, pp. 2419 2424.

Levin, I. e Mioduser, D. (1996). A multipleconstructs framework for teaching control
concepts, Education, IEEE Transactions on
39(4) 488496.
Lora, F. A. S., Hemerly, E. M. e Lages, W. F.
(1998). Sistema para navegacao e guiagem
de robos_moveis autonomos, SBA Controle
 Automacao 9 107118.
Oliveira, J. R. (2010). Um sistema integrado para
navegacao_autonoma de robos_moveis, Dissertacao de Mestrado, Instituto de Ciencias Matematicas e de Computacao, Universidade de
Sao Paulo, Sao Carlos.
Pazos, F. (2002). Automacao de sistemas e robotica, Editora Axcel Books do Brasil, Rio de
Janeiro.
Rosenblatt, F. (1958). The perceptron A probabilistic model for information storage and
organization in the brain, Phisicological Review 65(3) 386408.
Siciliano, A. V. (2006). Determinacao de trajetoria otima em navegacao robotica_movel, utilizando algoritmo_genetico, Tese de Doutorado, Universidade Federal do Rio de Janeiro,
COPPE, Rio de Janeiro.
Silva, I. N., Spatti, D. H. e Flauzino, R. A. (2010).
Redes Neurais Artificiais para engenharia e
ciencias aplicadas, 1 edicao, Sao Paulo  Artliber.

Gartner, H. e Astolfi, A. (1996). Stability study
of a fuzzy controlled mobile robot, Decision
and Control, 1996., Proceedings of the 35th
IEEE, Vol. 2, pp. 11211126.

Steels, L. (1995). When are robots intelligent autonomous agents?, Robotics and Autonomous
Systems 15 39.

Haykin, S. (2001). Redes Neurais Princpios e
Praticas, 2 edicao, Porto Alegre  Bookman.

Wasserman, P. e Schwartz, T. (1988). Neural
networks Part.II. what are they and why is
everybody so interested in them now?, IEEE
Expert 3(1) 1015.

Hebb, D. (1949). The organization of behavior
a neuropsychological theory, Wiley book in
clinical psychology, Wiley.
Lang, K. J. e Hinton, G. E. (1988). The development of the time-delay neural network architecture for speech recognition, Tech. report CMU-CS-88-152, Carnegie-Mellon University, Pittsburgh, PA .
Lee, T., Lam, H., Leung, F. e Tam, P. (2003). A
practical fuzzy logic controller for the path
tracking of wheeledmobile robots, Control
Systems, IEEE 23(2) 6065.
Leontaritis, I. J. e Billings, S. A. (1985). Inputoutput parametric models for non-linear systems part i deterministic non-linear systems,
International Journal of Control 41(2) 303
328.

ISBN 978-85-8001-069-5

3451