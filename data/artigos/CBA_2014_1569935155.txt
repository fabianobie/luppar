Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

ESPECIFICACAO E VALIDACAO DE AMBIENTES DE MANUFATURA COM
RECURSOS DISTRIBUIDOS USANDO REDES DE PETRI EM UMA
ARQUITETURA MEDIADA POR ROS
Matheus Machado dos Santos, Italo Wieczorek, Samuel Troina, Eder Mateus
Goncalves


Centro de Ciencias Computacionais - C3
Universidade Federal do Rio Grande - FURG
Rio Grande - RS - Brasil
Emails matheusbg8@gmail.com, italoaw@gmail.com, samuel.troina@gmail.com,
edergoncalves@furg.br
Abstract This paper describes a mechanism to integrate process that can verify and validate production
system based on Petri Nets in a manufacturing environment with distributed resources. This mechanism can
map manufature resources in a production environment, specify a logic with a subset of theses components,
syntacticly evaluate this logic, simulate and monitor this system working. Using ROS as a integrator mechanism
can guarantee interoperability between manufacture resources of different nature and sources.
Keywords

distributed manufacturing, petri nets, ros, validation

Resumo Este artigo descreve a integracao de um mecanismo de verificacao e validacao de sistemas de
producao, baseado em um modelo especfico de Rede de Petri, a um ambiente de manufatura_distribuda. Este
mecanismo e capaz de mapear os recursos de manufatura de um ambiente de producao, especificar uma logica entre
um subconjunto destes componentes, avaliar sintaticamente esta logica, simular e monitorar o seu funcionamento.
A utilizacao de ROS como mecanismo integrador garante a interoperabilidade entre recursos de manufatura de
diferentes naturezas e origens.
Palavras-chave

. Esses modulos devem ser definidos
com o objetivo de maximizar sua reutilizacao
em diferentes sistemas de producao.

Introducao

Diagnosticos da recente crise economica mundial
apontam como uma das causas a preponderancia
de modelos de desenvolvimento baseado na especulacao financeira sobre polticas de desenvolvimento industrial e de servicos. Este ultimo baseiase essencialmente na realizacao e transformacao
do trabalho como agregador de valor aquilo que e
produzido. Os Estados Unidos, hoje, encabecam
a lista de pases que percebeu a necessidade de
retomada de fortes investimentos no setor manufatureiro (Website, 2011).
Os requisitos de sistemas de manufatura modernos, como flexibilidade, escalabilidade, reducao
de prazos de entrega, ciclos de vida de produtos
mais curtos, rapida prototipacao, impoem a necessidade de uma maior integracao de recursos de
producao. Deste modo, limitacoes de composicao
logica, ou mesmo aspectos geograficos de distribuicao destes recursos devem ser vencidos por solucoes em nvel computacional, sem perda da capacidade de automatizacao de processos fsicos e
dos sistemas de informacao envolvidos. Convergencia organizacional e tecnologica sao palavras
de ordem nesse cenario (Brooks, 2013).
Sistemas de producao que visam atender os
requisitos acima baseiam-se principalmente em
duas caractersticas principais (Zhang et al., 2010)
(Xu, 2012)

 adocao de solucoes baseadas em modelos e
protocolos abertos, de modo a garantir a integracao entre os diferentes componentes do
sistema.
Na medida em que integracao_de_sistemas
passa a ser uma sada para o atendimento destes requisitos, interoperabilidade entre os sistemas
existentes eou novos a serem integrados deve ser
garantida. Nao obstante, as rapidas mudancas
de mercado, impoem ainda uma necessidade premente de uma rapida reconfiguracao desses ambientes de manufatura, de modo a incorporarem
rapidamente novos produtos em sua linha de producao. Desse modo, esses sistemas devem estar
aptos a uma rapida reconfiguracao de seus componentes de producao.
Este artigo apresenta duas contribuicoes principais (i) uma arquitetura baseada no Sistema
Operacional para Robos (do ingles Robot Operating System)(ROS) (Quigley et al., 2009) que integra diferentes recursos de manufatura, de modo
aberto, garantindo interoperabilidade e flexibilidade dos ambientes criados (ii) e um mecanismo
para a especificacao e validacao destes ambientes
de manufatura baseado em Redes de Petri.
Este artigo foi assim estruturado. Na proxima

 a decomposicao em modulos cujas as funcoes

3527

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

secao sao discutidos os trabalhos relacionados a
esta proposta. A secao 3 descreve a arquitetura
do sistema que visa garantir interoperabilidade entre recursos de manufatura usando ROS. A secao
4 descreve o mecanismo que ajuda na especificacao de ambientes especficos de producao a partir
de recursos dinamicos de manufatura, alem de garantir algumas propriedades a estes ambientes. A
secao 5 apresenta os primeiros resultados obtidos
com esta proposta e uma sntese do que existe na
literatura comparado a nossa abordagem. Finalmente, a secao 6 descreve as conclusoes iniciais
deste trabalho.
2

Em (Cabasino et al., 2011) e proposto um metodo de diagnosticar um sistema_a_eventos_discretos utilizando Redes de Petri, voltado para sistemas de manufatura. O metodo pode ser utilizado
para diagnosticar tanto redes limitadas quanto redes ilimitadas e evita a utilizacao do grafo de cobertura e a exploracao exaustiva de todos estados
alcancaveis da rede.
Em (Wu and Zhou, 2011) e proposto um novo
modelo de Rede de Petri, chamado Intelligent Token Petri Net (ITPN) que permite o controle de
sistemas de manufatura dinamicamente modificados. O modelo armazena as informacoes do estado
do sistema na ficha inteligente. Quando o sistema
sofre uma alteracao a ficha inteligente e atualizada com o novo estado do sistema. Dispensando
a reconfiguracao do sistema_de_controle a cada alteracao.
De um modo geral e possvel perceber na literatura que o uso de Redes de Petri para a especificacao de aplicacoes de manufatura nao e novidade.
No entanto, o diferencial esta na forma como esta
ferramenta de especificacao, analise e validacao e
inserida dentro de um rede de recursos de manufatura, visando garantir atributos como flexibilidade
e modularidade do sistema de producao.

Trabalhos Relacionados

Os diferentes componentes desta proposta podem
ser analisados a partir do conjunto de trabalhos
relacionados abaixo descritos.
O software Petri Net Plan (Ziparo et al., 2011)
utiliza Redes de Petri para definicao de planos
para robos. Permite a especificacao de um sistema
multi-agente e utiliza o ROS para comunicacao
com os robos usando biblioteca actionLib. Esta
biblioteca define um padrao de comunicacao para
execucao e monitoramento de tarefas por robos.
Embora o software funcione de uma forma muito
semelhante ao proposto neste trabalho, existe uma
diferenca no foco das aplicacoes. O Petri Net Plan
e utilizado para a especificacao de sistemas_multiagente, enquanto este trabalho propoe a especificacao de um sistema_de_manufatura. Alem disso,
os dois softwares tambem apresentam diferencas
quanto a interpretacao da rede.
O ROSLink (Dalla Libera and Ishiguro, 2013)
e um sistema desenvolvido para oferecer o acesso
as funcionalidades do ROS para aplicacoes que
nao podem ter acesso a ele. O objetivo deste sistema e o mesmo do Rosbridge, porem o foco dos
dois trabalhos sao diferentes. Enquanto o Rosbrdige foca em oferecer as funcionalidades do ROS
para aplicacoes web, principalmente aquelas em
Javascript e HTML5, o ROSLink foca em oferecer
as funcionalidades do ROS para softwares legados,
desenvolvido em linguagens antigas, ou em softwares que funcionam em plataformas diferentes das
suportada pelo ROS.
Em (Xu, 2012) e proposto um sistema_de_controle de manufatura utilizando uma nuvem computacional chamada de nuvem de manufatura.
Todos os recursos de um sistema_de_manufatura
sao encapsulados em servicos oferecidos pela nuvem, e sao disponibilizados para os clientes utilizarem conforme a sua necessidade.
Em (Hu et al., 2011) e proposto um metodo
otimizado para supervisao de um sistema_de_controle de manufatura utilizando Redes de Petri, e
em (Hu et al., 2013) e proposto um metodo otimizado para supervisao de sistemas de manufatura
utilizando Redes de Petri com rotas flexveis.

3 Arquitetura para Integracao de
Recursos Distribudos de Manufatura
De modo a garantir interoperabilidade entre os sistemas eou recursos de manufatura a serem abrangidos, a arquitetura proposta baseia-se na mediacao de comunicacao por middleware aberto, neste
caso o ROS, integrando uma serie de componentes
de modo que estes oferecam servicos a esta estrutura.
No contexto deste trabalho, um sistema de
manufatura com recursos distribudos e viabilizado pela existencia de um conjunto de recursos de
manufatura integrados por algum tipo de artefato
de comunicacao. Esta arquitetura deve permitir
a entrada e sada de recursos de forma aberta e
em tempo de execucao. Aberta quer dizer que a
entrada e sada destes recursos deve ser feita de
forma totalmente transparente a todos os agentes
do sistema.
Ainda do ponto de vista da arquitetura, nao
ha nenhum tipo de hierarquia. Neste nvel de especificacao, o objetivo e estabelecer conexao logica
entre todos os recursos existentes na rede. Uma
hierarquia pode ser imposta ao sistema a partir
desta composicao logica.
Uma aplicacao de manufatura e constituda
quando se define um arranjo logico entre um subconjunto dos recursos existentes na rede. Esta
aplicacao deve ser vista como a constituicao dos
processos envolvidos em algum tipo de empreendimento de producao eou de servico. Uma aplicacao esta sujeita a uma etapa de especificacao,

3528

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

validacao e execucao.
No contexto desta arquitetura, recursos de
manufatura sao artefatos constituintes de sistemas
de manufatura que podem ser disponibilizados na
forma de servicos, e que podem assumir diferentes graus de abstracao e encapsulamento. Desta
forma, sensores, motores, robos, CNCs, AGVs,
esteiras, celulas de manufatura, programas para
projeto e simulacao de produtos, ou mesmo todo
um sistema de producao pode ser enquadrado dentro da concepcao de um recurso, desde que seus
servicos sejam devidamente especificados para a
rede.
O ROS (Robot Operating System ) e um framework que tem por objetivo prover uma estrutura de comunicacao que facilita a reutilizacao de componentes de software para dispositivos normalmente utilizado em sistemas roboticos,
como cameras, infravermelhos, motores, etc. Nao
obstante, a comunidade de desenvolvedores para
ROS ja oferece componentes para robos completos, como os diferentes modelos de Pioneer(Zaman
et al., 2011).
O ROS opera baseado em um grafo computacional, onde os nos correspondem a processos.
A comunicacao entre processos pode acontecer na
forma de topicos (multicast), ou por comunicacao
direta entre processos, neste caso por meio de servicos.
Cada no pode publicar em uma serie de topicos, que podem ser consultados livremente por
qualquer outro no, desde que seja assinante do referido topico. No caso de uso de servicos, qualquer
no pode consultar ou oferecer servicos, porem sob
comunicacao direta com um outro no.
Um no central, denominado Master, coordena
a comunicacao entre nosprocessos. Ele e responsavel por registrar os nos conectados e tratar da
resolucao de nomes para os demais nos do grafo.
O Master contem informacoes como a lista de todos os topicos criados, a lista dos nos conectados,
a lista de todos os servicos disponibilizados, e oferece servicos que permitem que qualquer no tenha
acesso a essas listas. O Master tambem disponibiliza um servico de parametros, onde cada no pode
definir um conjunto de parametros que sao armazenados pelo no Master e podem ser acessados por
qualquer no da rede.
Contudo, e importante perceber que o ROS foi
desenvolvido especialmente para integrar dispositivos que fazem parte do barramento interno de
um sistema robotico. Deste modo, a existencia de
um no central que gerencia a troca de mensagens
dentro do sistema computacional que comanda o
robo otimiza o fluxo de informacao e o processamento.
No entanto, pensando em uma estrutura de
comunicacao em que escalabilidade e um requisito, alem da distribuicao geografica dos recursos
a serem utilizados, a centralizacao da coordena-

cao de mensagens de servicos pode ser um limitante da arquitetura. Deste modo, e importante
incluir uma sistematica que permita modularizar
o sistema em componentes que encapsulem alguns
poucos recursos, nesse caso ja numa dimensao de
manufatura, bem como garanta a comunicacao entre estes componentes, sem prejuzo para o sistema
no caso de falta de alguns destes.
Por este motivo, a arquitetura de integracao
de recursos de manufatura proposta preve a distribuicao de uma serie de nos Master ROS por intermedio do uso do ROSBridge (Crick et al., 2011).
O Rosbridge e uma biblioteca do ROS que
permite com que programas que nao possuem
acesso ao ROS, possam ter acesso as suas funcionalidades atraves de um protocolo de comunicacao que utiliza Javascript Object Notation (JSON)
atraves de conexoes Web Socket.
No ambito da arquitetura aqui descrita, o
ROSBridge permite a comunicacao entre diferentes nos Master ROS, que podem estar sob diferentes enderecos de rede. Para cada noprocesso
conectado a um no Master, um no a ser buscado
na rede pode estar sob o mesmo nos Master, ou
em sob algum Master presente na mesma rede.
Esta arquitetura pode ser observada na figura
1.

Figura 1 Arquitetura para Integracao de Recursos de Manufatura usando ROS

De fato, esta arquitetura propoe uma extensao da aplicabilidade do ROS a dispositivos de
manufatura, como CNCs, celulas de manufatura,
e eventualmente, todo um sistema de automacao
sobre estas estruturas. Nao obstante, os componentes de robos industriais ja existentes dentro do ROS podem ser reutilizados. Alem disso,
nos podem ser dedicados a componentes de projeto e simulacao de produto, CAM, planejamento
e acompanhamento da producao. O desenvolvimento destes componentes pode ser reaproveitado
dada a sua insercao dentro das bibliotecas ROS.

3529

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

4

Especificacao e Validacao de Ambiente
de Manufatura Distribuda com Redes
de Petri

sistemas_complexos como simuladores ou softwares controladores de robos.
As variaveis do Ambiente sao consultadas
atraves das perguntas, que sao condicoes logicas
envolvendo uma ou mais variaveis do ambiente,
que podem ser criadas por quem desenvolve o sistema, ou pelos proprios dispositivos conectados,
retornando sempre um valor logico, verdadeiro ou
falso. As variaveis do Ambiente sao modificadas
atraves das acoes, que podem ser expressoes matematicas ou logicas que alteram diretamente uma
variavel, ou podem ser comandos que sao enviados para os dispositivos, alterando indiretamente
as variaveis.
O Jogador da Rede associa uma transicao da
Rede de Petri Ordinaria a um conjunto de perguntas e acoes do Ambiente. A cada interacao do
Jogador da Rede todas as transicoes sensibilizadas
sao verificadas. Para cada uma dessas transicoes
e verificado se todas as suas perguntas associadas
sao verdadeiras caso afirmativo, todas as acoes
associadas sao executadas, alterando o Ambiente
e atuando no mundo real a transicao e disparada
na Rede de Petri Ordinaria, gerando o movimento
das fichas alterando a marcacao e as transicoes
sensibilizadas.
A figura 2 mostra como o sistema e representado graficamente. Na Rede de Petri Ordinaria
a esquerda, os lugares sao os crculos, as transicoes sao os retangulos e os arcos sao as setas.
No Jogador da Rede a direita, as variaveis sao representadas por crculos azuis, as perguntas por
crculos verdes, as acoes por crculos amarelos as
transicoes por retangulos e as associacoes sao especificadas em forma de grafo por setas.

A partir da arquitetura descrita na secao anterior, percebe-se a necessidade de um mecanismo
que vise a especificacao logica de aplicacoes. Estas
aplicacoes podem ser entendidas como um projeto
de producao eou do controle de producao. Alem
da especificacao destes ambientes de manufatura
especficos, e necessaria garantias quanto a estruturacao logica destes componentes, quanto a nao
existencias de travamentos e redundancia de processos.
Para a especificacao e validacao de um ambiente de manufatura foi utilizado o modelo de Rede
de Petri Ordinaria (Murata, 1989) principalmente
pelas suas vantagens de possuir um modelo_matematico que permite analise de propriedades e
validacao dos sistemas desenvolvidos, por ter uma
representacao grafica intuitiva, e por permitir associar uma linguagem ao modelo.
Uma rede de Petri Ordinaria pode ser representada por um grafo com dois tipos de vertices,
os lugares e as transicoes. Os lugares possuem um
numero inteiro e positivo de fichas que representa
o estado do sistema chamado marcacao e as transicoes representam os possveis eventos do sistema.
Os arcos realizam associacoes entre uma transicao e um lugar, ou um lugar a uma transicao, e o
seu peso indica o custo em numero de fichas desta
associacao.
Em uma Rede de Petri Ordinaria, um transicao e disparada quando um evento ocorre. Para
isto, a transicao precisa estar sensibilizada, isto
e, todos os lugares que chegam a transicao, lugares precedentes, precisam possuir um numero
de fichas maior ou igual ao peso de seus respectivos arcos. Quando o disparo de uma transicao
ocorre, fichas dos lugares precedentes a transicao
sao removidas e fichas sao inseridas aos lugares de
destino da transicao, lugares posteriores, a quantidade de fichas envolvidas sempre depende do peso
do arco que estabelece a relacao.
Com este modelo ja e possvel simular o comportamento de um sistema discreto distribudo.
Porem, para controlar de fato um sistema real
como em um ambiente de manufatura_distribuda
e preciso dar um significado as transicoes do modelo. Para isso adotou-se o modelo de Redes
de Petri Interpretada, onde existe um mecanismo
de inferencia da rede chamado Jogador da Rede
(Cardoso and Valette, 1997).
Uma entidade chamada Ambiente, definida
por um conjunto de variaveis, acoes e perguntas, foi criada para representar o estado do mundo
(World Model). A sua principal funcionalidade e
relacionar e manter atualizada as suas variaveis
com todos os dispositivos conectados ao sistema,
que podem ser desde sensores e atuadores a outros

Figura 2 Tela do software_de_controle
Uma vez especificado o sistema, a ferramenta
permite uma analise quanto as propriedades do
modelo. Assim, e possvel obter garantias quanto
a nao existencia de travamentos nem de redundancias.
Este sistema foi desenvolvido a partir de dois
componentes de software principais. Primeiro, o
editor de Rede de Petri, que permite a especificacao e analise de uma rede, a partir de um conjunto
de variaveis oriundas do ambiente de manufatura.
O segundo componente, o jogador, conecta-se a
arquitetura por meio de um no ROS atraves do
ROSBridge. Esta interface le todos os servicos
existentes no ambiente atraves dos topicos anun-

3530

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

ciados no ROS, pergunta para o desenvolverdor
quais topicos serao monitorados. Cada topico monitorado e transformado em uma variavel do ambiente e disponibiliza-os para o editor da rede.
Os ambientes especificados neste no devem
possuir restricoes temporais brandas, uma vez que
a estrutura de comunicacao esta sustentada sobre
protocolo TCPIP, ou mesmo algum protocolo de
Ethernet Industrial. Mesmo neste ultimo caso, as
especificacoes de tempo do barramento devem ser
consultadas de modo a nao por em risco aplicacoes
crticas.
Nesta versao deste no, a aplicacao desenvolvida na Rede de Petri mantem-se continuamente
na rede controlando o sistema, de modo centralizado. Futuramente, o objetivo e transformar esta
especificacao em planos que devem ser lidos pelos
demais nos da rede, de modo que a aplicacao seja
executada independente da Rede de Petri.
5

pedindo a entrada de dois bracos, ou de dois corpos ao mesmo tempo, para isso o sistema precisa
ler as informacoes dos sensores de presenca SensorBraco e SensorCorpo1.
No momento em que ocorre a conexao do software_de_controle com o simulador, as variaveis, as
perguntas e as acoes sao criadas automaticamente
pelo simulador no ambiente do software_de_controle. Logo apos a conexao, a Rede de Petri Ordinaria para controlar o sistema deve ser desenvolvida e as relacoes das transicoes com as perguntas
e as acoes devem ser estabelecidas.
Na Rede de Petri Ordinaria desenvolvida da
figura 2 a transicao t5 e responsavel por ligar o
sistema. Ela nao possui nenhuma pergunta associada e depende apenas da sua sensibilizacao para
ser disparada, e esta associada as acoes de ligar
as maquinas MB e MC e as esteiras EsteiraB e
EsteiraCP1.
As transicoes t3 e t4 sao responsaveis por controlar a esteira que transporta os bracos, dependendo da leitura do sensor de presenca SensorBraco. As transicoes t0 e t1 controlam a esteira
que transporta os corpos atraves das informacoes
do sensor de presenca SensorCorpo1.
A transicao t2 nao depende de nenhuma pergunta, e nao possui nenhuma acao, ela e disparada
quando um corpo e um braco entra na maquina
MBC, o numero de fichas do lugar p2 representa
o numero de unioes realizadas pelo sistema.

Resultados Iniciais

Os primeiros resultados foram obtidos atraves de
um simulador desenvolvido apenas para testar o
software_de_controle. O simulador se comunica
com o Ambiente atraves de uma conexao TCPIP
e utiliza um protocolo de comunicacao simples em
modo texto, que e abstrado por uma pequena biblioteca desenvolvida para ser utilizada por aplicacoes simples que precisem ser controladas.
O simulador pode ser visto na figura 3. Tratase de uma etapa de producao de uma fabrica de
bonecos, em um cenario onde existem dois sensores de presenca SensorBraco e SensorCorpo1,
duas esteiras EsteiraB e EsteiraCP1 e tres maquinas MC, MB e a maquina que une os corpos
aos bracos (MBC).
Na figura 3, as maquinas sao representadas
por quadrados na cor verde, quando estao trabalhando, ou na cor laranja, quando estao paradas.
A maquina MC produz corpos, a maquina MB
produz bracos e a maquina restante une os corpos
ao bracos (MBC).
As esteiras sao representadas pela cor azul ciano quando estao funcionando, ou pela cor cinza
quando estao paradas. A esteira EsteiraB transporta os bracos da maquina MB ate a maquina
MBC, a esteira EsteiraCP1 transporta o corpo da
maquina MC ate a maquina MBC.
Os sensores de presenca estao posicionados
nas entradas da maquina MBC, e sao representados por retangulos amarelo quando ativados pela
presenca de algum objeto, ou por retangulos azul
quando nao existe objetos presente.
Para controlar esse sistema, desenvolveu-se
uma Rede de Petri Ordinaria interpretada por um
Jogador da Rede, conforme explicado na secao 4,
que podem ser vistos na figura 2. O sistema deve
ser capaz de ligardesligar as esteiras conforme os
bracos e os corpos chegam na maquina MCB im-

Figura 3 Tela do simulador TCPIP desenvolvido
Apesar do simulador apresentado nao utilizar
o ROS para comunicacao, as etapas de especificacao do sistema e a forma como ele funciona sao as
mesmas1 .
6

Conclusoes

O objetivo deste trabalho foi integrar um modulo
de especificacao e validacao de ambientes de manufatura a uma arquitetura mediada por ROS e
ROSBridge. Dentro desta arquitetura, este modulo e capaz de varrer o ambiente reconhecendo
1 Uma
demonstracao pode
httpyoutu.beMG6zSg-UYeo

3531

ser

observada

em

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

os servicos disponveis e definir uma estrutura logica de especificacao e valida-la por meio de Redes
de Petri.
Nesta proposta, um ambiente de manufatura
pode ser constitudo por uma serie de recursos
de diferentes nveis, onde cada recurso pode ser
encapsulado por um no ROS. Nesta estrutura, o
ROS e estendido para abranger servicos de manufatura, como robos industriais, CNCs, ou mesmo
celulas inteiras de manufatura.
Apesar do trabalho nao apresentar resultados
com dispositivos de manufatura reais, os resultados apresentados utilizando simulador e os resultados utilizando o sistema ROS, comprovam que a
aplicacao e capaz de especificar e analisar sistemas
de controle de manufatura simulados utilizando o
ROS como mediador de comunicacao.
E importante perceber que neste nvel de
especificacao, as restricoes temporais devem ser
brandas, uma vez que a estrutura de comunicacao
pode ser uma conexao TCPIP. Mesmo sobre uma
rede com protocolo no padrao Ethernet Industrial,
as restricoes de tempo devem ser observadas de
modo a nao por em risco aplicacoes crticas.
A aplicacao apresentada neste trabalho abre
um vasto campo de possibilidades de desenvolvimentos futuros. A aplicacao pode ser estendida para trabalhar com outros modelos de dados, como automatos, modelos de Redes de Petri
de alto nvel como Redes de Petri Coloridas, Redes
de Petri Temporizadas e Redes de Petri Hierarquicas. O modulo de interpretacao das Redes de Petri
pode ser facilmente adaptado para interpretar os
novos modelos desenvolvidos.
Finalmente, e possvel perceber que este modulo tem papel crtico quanto a distribuicao do
controle da rede. Neste sentido, um trabalho futuro esta na estruturacao de planos multiagente
por meio da Rede de Petri que devem ser reconhecidos pelo nos, que assumiram a condicao de
agentes do sistema. Estes, por sua vez, devem
possuir algum nvel de autonomia de modo a reconhecer seu papel no ambiente e atuar no sentido
de atender suas metas em consonancia com os objetivos do sistema.

Cabasino, M. P., Giua, A., Pocci, M. and Seatzu,
C. (2011). Discrete event diagnosis using labeled petri nets. an application to manufacturing systems, Control Engineering Practice
19(9) 9891001.
Cardoso, J. and Valette, R. (1997). Redes de Petri,
Editora da UFSC.
Crick, C., Jay, G., Osentoski, S., Pitzer, B. and
Jenkins, O. C. (2011). Rosbridge Ros for
non-ros users, Proceedings of the 15th International Symposium on Robotics Research.
Dalla Libera, F. and Ishiguro, H. (2013). Roslink
Interfacing legacy systems with ros, Robotics
and Automation (ICRA), 2013 IEEE International Conference on, IEEE, pp. 475481.
Hu, H., Zhou, M. and Li, Z. (2011). Supervisor optimization for deadlock resolution in automated manufacturing systems with petri nets,
Automation Science and Engineering, IEEE
Transactions on 8(4) 794804.
Hu, H., Zhou, M., Li, Z. and Tang, Y. (2013).
Deadlock-free control of automated manufacturing systems with flexible routes and
assembly operations using petri nets, Industrial Informatics, IEEE Transactions on
9(1) 109121.
Murata, T. (1989). Petri nets Properties, analysis
and applications, IEEE 77(4) 481497.
Quigley, M., Conley, K., Gerkey, B., Faust, J., Foote, T., Leibs, J., Wheeler, R. and Ng, A. Y.
(2009). Ros an open-source robot operating
system, ICRA workshop on open source software, Vol. 3.
Website, A. W. (2011).
Obama administration supports advanced manufacturing,
httpwww.automationworld.comoperationsobamaadministration-supports-advancedmanufacturing.
Wu, N. and Zhou, M. (2011). Intelligent token
petri nets for modelling and control of reconfigurable automated manufacturing systems with dynamical changes, Transactions
of the Institute of Measurement and Control
33(1) 929.

Agradecimentos
Este trabalho contou com o apoio financeiro do
CNPq e FAPERGS.

Xu, X. (2012).
From cloud computing to
cloud manufacturing, Robotics and computerintegrated manufacturing 28(1) 7586.

Referencias

Zaman, S., Slany, W. and Steinbauer, G. (2011).
Ros-based mapping, localization and autonomous navigation using a pioneer 3-dx robot and their relevant issues, Electronics,
Communications and Photonics Conference
(SIECPC), 2011 Saudi International, IEEE,
pp. 15.

Brooks, P. (2013).
The manufacturing convergence model, httpwww.industrialip.orgindustrial-ipconvergencethemanufacturing-convergence-model. Acessado
em Fevereiro de 2014.

3532

Anais do XX Congresso Brasileiro de Automática
Belo Horizonte, MG, 20 a 24 de Setembro de 2014

Zhang, L., Guo, H., Tao, F., Luo, Y. and Si,
N. (2010). Flexible management of resource
service composition in cloud manufacturing,
Industrial Engineering and Engineering Management (IEEM), 2010 IEEE International
Conference on, IEEE, pp. 22782282.
Ziparo, V. A., Iocchi, L., Lima, P. U., Nardi,
D. and Palamara, P. F. (2011). Petri net
plans, Autonomous Agents and Multi-Agent
Systems 23(3) 344383.

3533