XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

IMPLEMENTAÇÃO DE UM PREDITOR NEURAL NO AMBIENTE INDUSTRIAL FOUNDATION FIELDBUS
ALEXANDRE M. P. P. FILHO*, KENNEDY R. LOPES*, VICTOR L. C. M. DA SILVA*, DANIEL L. MARTINS*, ADRIÃO D. D.
NETO*, JORGE D. DE MELO*, LUIZ A. GUEDES*
*Laboratório de Sistemas Inteligentes
Departamento de Engenharia de Computação e Automação
Universidade Federal do Rio Grande do Norte
E-mails amppf, kenreurison, victor1706, danlartin, adriao, jdmelo,
affonso@dca.ufrn.br
Abstract
 This work presents the study and implementation of intelligent algorithms for estimation of values in the natural gas
measurement proccess, with the intention of detect possible failures in the sensors involved in these product custody transfer
proccess. In the creation of these intelligent algorithms, were tested some recurrent neural networks architectures, due to some
characteristics, like learning, adaptation and the capacity of capturing and dealing with a system dynamics. The neural networks
were created to implement a predictor with the objective of reproduce the output dynamic behaviour of the sensor, in such a way
that the output of the network be compared to the output of the sensor, working as a basis for the detection and classification of
failures that may occur in the device. Finnally, this recurrent network was embedded in network of intelligent devices, called
Foundation Fieldbus industrial network, obtaining then intelligent algorithms implemented in Field, noting that there are no reports of the implementation of recurrent neural networks in Foundation Fieldbus networks. It will be presented the prediction algorithms, how the neural networks were embedded in the Foundation Fieldbus Network and the results obtained in the tests.
Keywords
 Foundation Fieldbus, Fault Detection, Recurrent Neural Networks

Resumo
 Este trabalho apresenta o estudo e implementação de algoritmos inteligentes para estimação de valores no processo de
medição de gás_natural, com a finalidade de detectar possíveis falhas_nos_sensores envolvidos nos processos de transferência de custódia do
produto. Na criação destes algoritmos inteligentes, foram testadas algumas arquiteturas de redes_neurais artificiais recorrentes, devido a
algumas características, tais como aprendizado, adaptação e a capacidade de capturar e lidar com a dinâmica de um sistema. As redes_neurais foram criadas para implementar um preditor com a finalidade de reproduzir o comportamento dinâmico da saída do sensor, o qual é
comparado com o comportamento real do instrumento, formando assim a base para a detecção e classificação de falhas que possam ocorrer
no dispositivo. Finalmente, essa rede recorrente foi embarcada em uma rede de dispositivos inteligentes, chamada rede industrial Foundation Fieldbus, obtendo assim algoritmos inteligentes implementados em campo, ressaltando que não existem relatos da implementação de
redes_neurais_recorrentes em redes Foundation Fieldbus. Serão apresentados os algoritmos de predição, o modo como as redes_neurais foram
embarcadas na rede Foundation Fieldbus e os resultados obtidos com os testes.
Palavras-chave
 

1

produto entre as empresas, por meio de um processo
chamado transferência de custódia. Essa transferência
de custódia é realizada em entroncamentos de gasodutos ou em citygates, que possuem estações de controle e medição específicas.
Em cada estação, mede-se o volume de gás_natural, que é medido através de sua vazão e calculado
nas condições de base de pressão e temperatura, 1
atm e 20C respectivamente.
Os instrumentos_de_medição são chamados de
sensores ou medidores. Um sensor possui a função de
transdutor, recebendo como entrada uma grandeza
física, como por exemplo vazão, pressão e temperatura, e disponibiliza como saída um sinal elétrico,
com valor proporcional ao da grandeza medida.
É importante que as medições feitas por cada
instrumento sejam precisas, já que o custo do gás
natural recebido estará de acordo com o volume fornecido. A existência de erros de medição gera cálculos de preços incompatíveis com o volume real do
produto, acarretando em perdas econômicas. Como o
gás_natural é transportado em grandes quantidades,
pequenos erros de medição podem levar a prejuízos
elevados.
Os erros de medição nos sensores podem ter origem no próprio instrumento, quando ocorre descali-

Introdução

Gás natural é a denominação utilizada para designar
os hidrocarbonetos leves encontrados armazenados
em formações porosas no subsolo que podem ser
encontrados associados ao petróleo. Rodrigues,
2004
Desde a etapa de produção até a sua distribuição,
o gás_natural é constantemente monitorado através de
instrumentos_de_medição, que são utilizados para
medir diversas variáveis, tais como vazão, temperatura e pressão.de Medeiros, 2009
Uma das formas de distribuição do gás_natural é
através de gasodutos, que são tubulações com a função de conduzir o gás sob pressão, através de compressores. Como o atrito causa uma perda de energia
e queda gradativa da pressão ao longo da tubulação,
são necessárias estações de compressão ao longo do
percurso para aumentar a pressão e permitir a continuidade do fluxo do produto.
Durante a sua distribuição, o gás_natural passa a
ser responsabilidade de várias empresas diferentes, já
que há a necessidade de transportar o gás_natural do
produtor ao cliente final. Logo, existe o repasse do
2600

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

nais, deixando transparente para o usuário os detalhes
internos de implementação. Esse encapsulamento
possibilita o desenvolvimento descentralizado e independente de novos blocos funcionais, o que torna
simples a tarefa de suprir a rede com novas funcionalidades. Outra vantagem dessa arquitetura é a possibilidade de se interligarem os blocos para que possam
ser realizadas funções mais complexas, como a rede
neural recorrente vista neste trabalho.

bração ou falhas mecânicas e elétricas, ou por influências externas, como quando ocorre o ruído. O ideal
é que as medidas dos sensores sejam corrigidas
quando o erro ultrapassar um limite aceitável.
As técnicas de detecção_de_falhas mais convencionais são baseadas em redundância física, que pode
gerar um aumento significativo de custos, ou na modelagem_matemática do processo em questão, que
requer um profundo conhecimento do processo que
se está analisando.
Esse trabalho tem como objetivo realizar a predição do valor de saída de um sensor de temperatura,
gerando informação suficiente para que seja possível
a detecção e classificação de falhas, sem que seja
necessário um conhecimento matemático avançado
sobre o comportamento do sistema, nem seja necessária a presença de redundância física.
Essa predição será realizada por meio da utilização de redes_neurais_recorrentes, que permitem realizar a predição utilizando apenas valores da série
temporal que se deseja simular, sem a necessidade de
equações que descrevam o problema.
Essas redes_neurais serão distribuídas e embarcadas em uma rede_de_sensores e atuadores com capacidade de processamento chamada rede Foundation
Fieldbus, que pode ser instalada em campo e diminui
a necessidade de um elemento supervisor, podendo
tomar decisões de forma local, com base nos valores
medidos. Uma das contribuições deste trabalho é que
até o momento não existem relatos na literatura mostrando a implementação de redes_neurais_recorrentes
em redes Foundation Fieldbus utilizando somente
blocos funcionais padrão.
2

3

Redes Neurais Recorrentes

Uma rede_neural artificial, ou simplesmente rede_neural, é um modelo_matemático que visa simular o
comportamento do cérebro humano, sendo o seu estudo impulsionado pelo fato de que o cérebro trabalha de forma diferente de um computador digital. O
cérebro pode ser visto como um computador extremamente complexo, não-linear e paralelo, tendo a
capacidade de organizar os seus neurônios de modo a
realizar certas tarefas de maneira muito mais rápida
que os melhores computadores atuais, tais como reconhecimento_de_padrões, percepção e controle motor Haykin, 2005.
Uma rede_neural dinâmica recorrente, ou simplesmente rede recorrente, é uma rede_neural com um
ou mais laços de realimentação. A realimentação
pode ser feita entre neurônios de camadas diferentes,
entre neurônios da mesma camada ou de um neurônio
para ele mesmo Júnior, 2006.
Existem dois tipos principais de conexões conexão de alimentação direta e conexão de realimentação. A conexão de alimentação direta ocorre quando
um sinal tem orientação no sentido da entrada para a
saída, já a conexão de realimentação ocorre quando o
sinal tem sentido contrário, ou seja, da saída para a
entrada. Dessa forma, as conexões realimentam uma
dada camada com sinais de ativação ou de saída.
Um modo de classificar as redes_recorrentes é
verificar a extensão das conexões de realimentação
existentes, ou seja, se a mesma envolve neurônios de
camadas diferentes ou apenas neurônios da mesma
camada. Dessa maneira, é possível classificar as redes_neurais_recorrentes em três grupos
1  Conexão Recorrente Local. Neste tipo de conexão, a saída de um neurônio funciona como realimentação apenas para ele mesmo.
2  Conexão Recorrente Global. Este tipo de conexão acontece entre um neurônio e outro de uma
camada anterior, ou seja, o sinal de saída de um neurônio é realimentado para a entrada de outro neurônio
em uma camada anterior.
3  Conexão Recorrente Não-Local. Este é um
tipo particular de conexão recorrente global, em que
a saída do neurônio está conectada  entrada de outro
neurônio localizado na mesma camada.

Redes Foundation Fieldbus

A Fieldbus Foundation Lima, 2005 é uma organização independente sem fins lucrativos com o propósito de desenvolver e manter um padrão internacional
de redes de campo para automação de processos, o
Foundation Fieldbus.
A rede Foundation Fieldbus é um sistema de
comunicação digital, serial e bidirecional que funciona como uma rede_local para instrumentos usados em
processos e automação_industrial, com capacidade
para distribuir o controle da aplicação entre os dispositivos, já que os mesmos possuem microprocessadores e memória com várias funções, como operadores
aritméticos e até mesmo controladores PID. Ela também pode ser interligada a redes Ethernet através de
uma bridge, que faz o controle do fluxo de informações e dados entre as duas redes, com o intuito de
configuração remota dos dispositivos. Uma de suas
principais características é a organização da camada
de aplicação em blocos, que por ser aberta e completamente especificada permite atingir um dos principais objetivos da fundação, a interoperabilidade.
Cada bloco funcional pode ser visto como um
bloco de software que exerce processamento de si-

2601

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

jetivo de mapear a tangente sigmóide no intervalo
requerido de modo bastante aproximado. Para melhor
sintonizar os blocos caracterizadores, foi utilizada
uma técnica de inteligência_artificial chamada algoritmos_genéticos.
Para implementar o neurônio artificial, foram
utilizados blocos aritméticos para aplicar os pesos e
bias aos valores de entrada, definindo o parâmetro
"algorithm type" como somador tradicional, que multiplica cada entrada por um peso e faz a soma desses
produtos com um valor de bias. As saídas dos blocos
aritméticos são então ligados s entradas dos blocos
SCHAR para calcular a função de ativação. O esquema de um neurônio está mostrado na figura 5.1

3.1 Arquiteturas de Redes Neurais Recorrentes
Existem diferentes arquiteturas de redes_neurais_recorrentes, sendo elas caracterizadas pelo tipo de conexão de realimentação apresentada. Algumas arquiteturas de redes_neurais_recorrentes são
1  Rede Recorrente de Elman. Esta é uma arquitetura obtida a partir da rede perceptron_de_múltiplas_camadas, através da redefinição da camada de
entrada, que passa a ser dividida em duas partes. A
primeira corresponde ao vetor de entrada propriamente dito, já a segunda parte, chamada de unidade
de contexto, consiste na cópia das saídas dos neurônios da camada oculta no instante anterior.
Se uma rede perceptron_de_múltiplas_camadas
tem duas camadas ocultas, é possível escolher de
qual camada oculta será feita a realimentação, podendo inclusive serem utilizadas ambas as camadas.
2  Rede Recorrente de Jordan. Assim como a
rede de Elman, a rede de Jordan também não possui
recorrência entre neurônios da mesma camada, sendo
por isso classificada como uma rede globalmente
recorrente.
Diferentemente da rede de Elman, que utiliza as
conexões das camadas ocultas para fazer a realimentação, a rede de Jordan utiliza os sinais de saída da
rede_neural para realizar essa tarefa. Além disso, essa
rede recorrente possui auto-realimentações, nas quais
a saída de uma unidade de contexto é realimentada
para a sua entrada.
3  Rede Dinâmica NARX. Uma importante
classe de sistemas_não-lineares de tempo_discreto, é
matematicamente representada pelo modelo NARX
(Nonlinear AutoRegressive model with eXogenous
inputs), cuja função é uma função não-linear, geralmente desconhecida. Quando esta função é aproximada por uma rede perceptron_de_múltiplas_camadas,
a topologia resultante é chamada de rede recorrente
NARX.
4

Figura 4.1  Esquema de um neurônio na rede FF

4.2 Criação de Bancos Atrasadores
Por meio de alguns testes e do estudo do funcionamento da rede Foundation Fieldbus, foi observado
que a rede realiza primeiro o processamento de todos
os blocos funcionais de um determinado instrumento,
para só depois realizar o processamento dos blocos
de outro instrumento. Desse modo, é possível gerar
atrasadores alocando blocos funcionais em instrumentos diferentes, configurando a estratégia de controle de forma que cada vez que um dado é transmitido de um instrumento para outro, esse dado chega um
instante de tempo atrasado em relação a um dado
transmitido entre blocos alocados em um mesmo instrumento. Um exemplo de teste será descrito a seguir.

Redes Neurais Recorrentes em Ambiente
Foundation Fieldbus

4.1 Construção de um Neurônio Artificial
Para a construção de uma rede_neural, são necessários vários neurônios artificiais interligados, formando a arquitetura desejada, que nesse trabalho é uma
rede_neural recorrente NARX. Como não existe um
bloco funcional padrão com a finalidade de implementar um neurônio no ambiente Foundation Fieldbus, foi necessário desenvolver a rede_neural utilizando apenas blocos funcionais padrões existentes
Silva, 2005.
Para implementar a rede_neural no ambiente FF,
foram utilizados dois tipos de blocos funcionais blocos aritméticos e blocos caracterizadores de sinal
(SCHAR), necessários para implementar a função
tangente sigmóide. Desse modo, o bloco SCHAR foi
configurado com 20 pares de pontos x e y com o ob-

Figura 4.2  Exemplo de teste para ilustrar o comportamento do
atraso

No teste reste realizado, foram utilizados quatro
blocos funcionais, sendo eles IF1-ARTH1 e IF2ARTH2 localizados no instrumento IF1, o IF2ARTH1 localizado no instrumento IF2 e o bloco IF3ARTH1 localizado no instrumento IF3.
O bloco IF1-ARTH1 tem valor inicial de saída
igual a zero, tendo esse valor incrementado com o
passar do tempo, por meio de realimentação. Esse
valor de saída é repassado para os blocos IF1ARTH2 e IF2-ARTH1. Feito isso, outro bloco fun-

2602

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

rede NARX com as entradas x, x-1 e x-2, e as saídas
y-3, y-4 e y-5.
Um esquema de um neurônio da rede_neural embarcada na rede Foundation Fieldbus será mostrado
na figura 4.4.

cional, o IF3-ARTH1 (alocado no instrumento IF3),
recebe os valores de saída dos blocos IF1-ARTH2 e
IF2-ARTH1 e subtrai o valor do primeiro pelo do
segundo. A figura 4.3 ilustra uma linha do tempo
com o valor de saída dos blocos funcionais utilizados.

Figura 4.4  Esquema de um neurônio da rede NARX implementada na rede FF

Figura 4.3  Saída dos blocos funcionais

Na qual os blocos cor de laranja possuem os valores de entrada_e_saída da rede e os blocos azuis
implementam o segundo neurônio da rede recorrente.
Pode-se ver que no esquema que o bloco funcional IF-2-N2-ARTH1 é responsável por gerar um atraso na camada de entrada e os blocos funcionais IF-2N1-ARTH2 e IF-1-N1-ARTH2 em conjunto geram
dois atrasos nessa camada.

Como o resultado dessa subtração é sempre igual
a 1, conclui-se que a saída do bloco IF1-ARTH1
chega ao bloco IF2-ARTH1 um instante de tempo
depois do bloco IF1-ARTH2. Esse teste foi repetido
gerando-se vários atrasadores, com dados sendo repassados a diferentes blocos funcionais, gerando atrasos cada vez maiores, sempre obtendo o resultado
esperado.
De posse do resultado dos testes, pode-se perceber que é possível projetar os bancos atrasadores de
modo a obter os atrasos desejados, sendo necessário
apenas aumentar o número de blocos funcionais, alocando-os em diferentes instrumentos, de acordo com
a necessidade.

5 Resultados Experimentais
5.1 Organização da Arquitetura e da Comunicação
Para a realização dos experimentos, dispõe-se de um
laboratório didático composto por um computador,
funcionando como estação de configuração e supervisão, uma rede Ethernet, uma ponte (DFI-302), que
faz a interligação entre as redes Ethernet e Foundation Fieldbus e desempenha o papel de mestre da rede
FF, e oito dispositivos de campo, onde três deles foram utilizados para a implementação da rede_neural
recorrente.
Para fazer a comunicação entre o Matlab e o
Syscon (programa responsável pela configuração da
rede FF), a fim de transmitir os dados da série temporal para os instrumentos e avaliar a resposta dos
mesmos, foi utilizado um toolbox do Matlab, o opctool, capaz de fazer a comunicação entre os dois
softwares via OPC Carvalho, 2009.

4.3 Implementação da Rede Recorrente
Tendo visto como implementar um neurônio artificial
e os bancos atrasadores, foi possível implementar a
rede recorrente NARX, com 2 atrasos na entrada e 3
na saída, além de 1 camada oculta com 3 neurônios e
função de ativação tangente sigmóide, e 1 neurônio
na camada de saída. De posse desses dados, pode-se
observar que a mesma é equivalente a uma rede perceptron_de_múltiplas_camadas com arquitetura 6-3-1,
sendo os 6 neurônios de entrada referentes  entrada
e aos atrasos previamente definidos. Deve-se considerar também que como a rede está distribuída por
vários instrumentos diferentes, a informação demora
um certo tempo para ser recebida na entrada, processada e disponibilizada na saída, a rede deve ser treinada levando em conta esse atraso adicional. Fazendo um teste similar ao teste para verificar os atrasos
em instrumentos diferentes, modificando os blocos
funcionais de modo a simplesmente passar o valor
recebido adiante, foi constatado que a saída referente
a uma entrada disponibilizada no tempo t só vai ser
retornada no instante t+2, com isso, foi treinada a

5.2 Treinamento e Avaliação das Redes Neurais no
Matlab
O primeiro passo dos procedimentos experimentais
foi treinar algumas redes_neurais, variando a quantidade de passos adiante a serem previstos, utilizando
redes_neurais cujas arquiteturas contavam com três
neurônios na camada oculta e um neurônio na cama-

2603

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

da de saída. Essa arquitetura foi escolhida, pois ela
foi utilizada no trabalho escrito por de Medeiros,
2009. As redes tinham como função de ativação a
tangente sigmóide.
Para realizar o treinamento das redes_neurais, foi
utilizado um toolbox para Matlab que faz o treinamento de redes_neurais do tipo perceptron_de_múltiplas_camadas (mlp) utilizando o filtro de Kalman
estendido. Como esse toolbox não foi feito para treinar redes_neurais_recorrentes, foi criada uma rede
perceptron_de_múltiplas_camadas adaptada para ser
treinada da mesma forma que uma rede NARX no
modo série-paralelo. Tal adaptação consistiu em replicar a forma como a rede_neural foi embarcada na
rede Foundation Fieldbus, criando uma mlp com 6
neurônios na camada de entrada, sendo os 3 primeiros correspondentes s entradas atrasadas vindas do
sensor e os 3 últimos correspondentes aos valores
retornados da realimentação. Para fazer o treinamento, os conjuntos de entrada_e_saída eram compostos
por um vetor de 6 números como entrada e 1 valor de
saída correspondente a esse vetor.
Foi realizado o treinamento de redes_neurais para
a previsão de 1 até 10 passos na série temporal, com
o sinal sem falhas, sendo utilizados 499 pontos para o
treinamento e 168 pontos para validação, totalizando
então 667 pontos. Depois de terminados os treinamentos, foram feitas simulações com as redes treinadas. Pode-se ver o resultado das simulações nas figuras 6.1, 6.2 e 6.3. Como critério de avaliação, foi
feito um cálculo de correlação_cruzada entre os valores de saída do sensor e do preditor. Os resultados
serão expostos a seguir.

Figura 5.1  predição de 3 passos

Pode-se ver pela tabela e pela imagem que a rede
neural é capaz de realizar a predição com uma forte
correlação com a saída desejada para até 5 passos
adiante na série temporal. O segundo passo foi fazer
a simulação das redes_neurais com falhas simuladas.
Foram simulados quatro tipos de falhas, definidas
como

ak

.

Falha 4 Deriva de Offset. Yf(n)  Y(n)  ak.
Definidos os tipos de falhas a serem simuladas,
foram feitos testes com cada tipo de falha, fazendo a
predição de 1 e 2 passos adiante na série temporal. O
resultado de um dos testes pode ser visto na figura
5.2.

Tabela 5.1  Correlações
Passos adiante utilizados na
predição

1
2
3
4
5
6
7
8
9
10

Falha 1 Valor zero. Yf(n)  0.
Falha 2 Valor de Fundo de escala. Yf(n)  60.
Falha 3 Deriva de fator de escala. Yf(n)  Y(n)e-

Correlação com o valor real

0.9826
0.9621
0.9314
0.8875
0.8387
0.7848
0.7091
0.6374
0.5872
0.4930

Figura 5.2  Preditor de 2 passos para uma série com a Falha 3

5.3 Embarcar a Rede Neural na Rede Industrial
Depois feitos os testes, foi escolhida a rede_neural
com predição de 1 passo adiante, já que a mesma é
mais estável e também apresenta um valor de saída

2604

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

usada para detecção_de_falhas, a diferença entre os
valores de saída do preditor e do sensor pode ser
utilizada para a classificação de falhas, já que as diferentes falhas geram comportamentos diferentes no
sensor e no preditor.
Além de ser implementada no computador, a rede_neural recorrente foi embarcada em uma rede industrial Foundation Fieldbus, que é uma rede de instrumentos com capacidade de processamento instalados em campo, que funcionam de modo paralelo e
não necessitam de um elemento centralizador para
que a tomada de decisões seja feita. Deve-se ressaltar
a importância desse trabalho, já que não existem na
literatura implementações de redes_neurais_recorrentes em redes_industriais Foundation Fieldbus utilizando somente blocos funcionais padrão.
Foram feitos testes com algumas estratégias diferentes de predição e diversas falhas simuladas, onde
foram obtidos resultados satisfatórios, que demonstraram que a rede_neural pode realizar a função de
preditor de séries_temporais, assim como foi visto
que é possível embarcar redes_neurais_recorrentes no
ambiente industrial Foundation Fieldbus.
Algumas sugestões para trabalhos futuros são o
estudo mais aprofundado e melhoria do processo de
simulação de falhas, gerando mais tipos de falhas
simuladas e a aplicação aplicar desse trabalho na
criação de sensores de software aplicados  produção
de derivados de petróleo, utilizando o software Hysys
para simular os processos estudados e a rede FF para
realizar as operações com instrumentos reais.

diferente da saída do sensor quando o mesmo apresenta falhas.
Para que a rede_neural previamente treinada seja
embarcada no ambiente industrial, a rede Fieldbus foi
configurada com os blocos funcionais de acordo com
o esquema da figura 4.3. É importante notar que essa
mesma configuração pode ser utilizada para a predição de qualquer quantidade de passos adiante na série
temporal, já que apenas os valores dos pesos são modificados. Depois que os instrumentos foram configurados, os pesos da rede_neural foram exportados para
a rede industrial ara que os testes pudessem ser realizados. Os resultados de dois dos testes podem ser
vistos nas figuras 5.3 e 5.4.

Figura 5.3  Predição de 1 passo de uma série sem falhas, na rede
FF

Agradecimentos
Os autores gostariam de agradecer  ANP que através
do PRH-14 apoiou a realização deste projeto, bem
como a Petrobrás, a Redic e a Finep pelos recursos
disponibilizados para o projeto.
Referências Bibliográficas
Carvalho, A. S., Silva, R. C. and Nascimento, D. B
(2009). Sistema de Comunicação OPC para uma
Coluna de Destilação Piloto, Simpósio de
Excelência em Gestão e Tecnologia, Resende,
RJ.

Figura 5.4  Predição de 1 passo de uma série com falhas dos
tipos 3 e 1, na rede FF

Haykin, S (2005), Neural
Comprehensive Foundation.

6 Conclusões

Networks.

A

Júnior, J. M. P. M (2006), Redes Neurais Dinâmicas
para Predição e Modelagem não-linear de séries
temporais,
Dissertação
de
mestrado,
Universidade Federal do Ceará.

Neste trabalho, foram desenvolvidos algoritmos inteligentes, baseados em redes_neurais_recorrentes, capazes de fazer a predição dos valores de saída de um
sensor de temperatura. O valor retornado por esse
preditor pode ser comparado com a saída real do
sensor, de modo que, caso a diferença entre os dois
sinais de saída seja significativa, existe a possibilidade de ocorrência de uma falha no sensor. Além de ser

Lima, F. S, Guedes, L. A., Salazar, A. O, Maitelli, A.
L (2004), Hybrid Environment for Tests and

2605

XVIII Congresso Brasileiro de Automática  12 a 16 Setembro 2010, Bonito-MS.

Training in Fieldbuses, VI Induscon 2004,
Joinvile, SC.
de Medeiros, J. P (2009), Estudo e Implementação
de Algoritmos Inteligentes para Detecção e
Classificação de Falhas na Medição de Gás
Natural, Dissertação de mestrado, Universidade
Federal do Rio Grande do Norte.
Rodrigues, B (2004), Gasoduto Virtual. Uma
Alternativa para Expansão do Uso do Gás
Natural, monografia de conclusão de curso de
Administração de Empresas, Universidade
Paulista.
Silva, D. R. C (2005), Redes Neurais Artificiais no
Ambiente de Redes Industriais Foundation
Fieldbus Usando Blocos Funcionais Padrões,
Dissertação de mestrado, Universidade Federal
do Rio Grande do Norte.

2606